# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.automation import AutomationClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAutomationPackageOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AutomationClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_package_delete(self, resource_group):
        response = self.client.package.delete(
            resource_group_name=resource_group.name,
            automation_account_name="str",
            runtime_environment_name="str",
            package_name="str",
            api_version="2024-10-23",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_package_get(self, resource_group):
        response = self.client.package.get(
            resource_group_name=resource_group.name,
            automation_account_name="str",
            runtime_environment_name="str",
            package_name="str",
            api_version="2024-10-23",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_package_create_or_update(self, resource_group):
        response = self.client.package.create_or_update(
            resource_group_name=resource_group.name,
            automation_account_name="str",
            runtime_environment_name="str",
            package_name="str",
            parameters={
                "contentLink": {"contentHash": {"algorithm": "str", "value": "str"}, "uri": "str", "version": "str"},
                "allOf": {
                    "location": "str",
                    "id": "str",
                    "name": "str",
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",
                        "createdBy": "str",
                        "createdByType": "str",
                        "lastModifiedAt": "2020-02-20 00:00:00",
                        "lastModifiedBy": "str",
                        "lastModifiedByType": "str",
                    },
                    "tags": {"str": "str"},
                    "type": "str",
                },
            },
            api_version="2024-10-23",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_package_update(self, resource_group):
        response = self.client.package.update(
            resource_group_name=resource_group.name,
            automation_account_name="str",
            runtime_environment_name="str",
            package_name="str",
            parameters={
                "allOf": {
                    "location": "str",
                    "id": "str",
                    "name": "str",
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",
                        "createdBy": "str",
                        "createdByType": "str",
                        "lastModifiedAt": "2020-02-20 00:00:00",
                        "lastModifiedBy": "str",
                        "lastModifiedByType": "str",
                    },
                    "tags": {"str": "str"},
                    "type": "str",
                },
                "contentLink": {"contentHash": {"algorithm": "str", "value": "str"}, "uri": "str", "version": "str"},
            },
            api_version="2024-10-23",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_package_list_by_runtime_environment(self, resource_group):
        response = self.client.package.list_by_runtime_environment(
            resource_group_name=resource_group.name,
            automation_account_name="str",
            runtime_environment_name="str",
            api_version="2024-10-23",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...
