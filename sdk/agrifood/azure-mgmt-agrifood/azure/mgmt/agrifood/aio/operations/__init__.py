# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._check_name_availability_operations import CheckNameAvailabilityOperations  # type: ignore
from ._data_connectors_operations import DataConnectorsOperations  # type: ignore
from ._data_manager_for_agriculture_extensions_operations import DataManagerForAgricultureExtensionsOperations  # type: ignore
from ._data_manager_for_agriculture_resources_operations import DataManagerForAgricultureResourcesOperations  # type: ignore
from ._operation_results_operations import OperationResultsOperations  # type: ignore
from ._extensions_operations import ExtensionsOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._private_endpoint_connections_operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._private_link_resources_operations import PrivateLinkResourcesOperations  # type: ignore
from ._solutions_operations import SolutionsOperations  # type: ignore
from ._solutions_discoverability_operations import SolutionsDiscoverabilityOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "CheckNameAvailabilityOperations",
    "DataConnectorsOperations",
    "DataManagerForAgricultureExtensionsOperations",
    "DataManagerForAgricultureResourcesOperations",
    "OperationResultsOperations",
    "ExtensionsOperations",
    "Operations",
    "PrivateEndpointConnectionsOperations",
    "PrivateLinkResourcesOperations",
    "SolutionsOperations",
    "SolutionsDiscoverabilityOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
