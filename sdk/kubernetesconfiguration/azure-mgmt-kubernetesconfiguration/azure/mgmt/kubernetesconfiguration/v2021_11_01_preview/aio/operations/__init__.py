# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._extensions_operations import ExtensionsOperations  # type: ignore
from ._operation_status_operations import OperationStatusOperations  # type: ignore
from ._cluster_extension_type_operations import ClusterExtensionTypeOperations  # type: ignore
from ._cluster_extension_types_operations import ClusterExtensionTypesOperations  # type: ignore
from ._extension_type_versions_operations import ExtensionTypeVersionsOperations  # type: ignore
from ._location_extension_types_operations import LocationExtensionTypesOperations  # type: ignore
from ._source_control_configurations_operations import SourceControlConfigurationsOperations  # type: ignore
from ._flux_configurations_operations import FluxConfigurationsOperations  # type: ignore
from ._flux_config_operation_status_operations import FluxConfigOperationStatusOperations  # type: ignore
from ._operations import Operations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ExtensionsOperations",
    "OperationStatusOperations",
    "ClusterExtensionTypeOperations",
    "ClusterExtensionTypesOperations",
    "ExtensionTypeVersionsOperations",
    "LocationExtensionTypesOperations",
    "SourceControlConfigurationsOperations",
    "FluxConfigurationsOperations",
    "FluxConfigOperationStatusOperations",
    "Operations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
