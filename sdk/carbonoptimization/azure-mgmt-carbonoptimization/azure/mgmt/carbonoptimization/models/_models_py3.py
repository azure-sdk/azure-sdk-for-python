# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CarbonEmissionData(_serialization.Model):
    """Response for given query parameters.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    CarbonEmissionItemDetailData, CarbonEmissionMonthlySummaryData,
    CarbonEmissionOverallSummaryData, ResourceGroupCarbonEmissionItemDetailData,
    ResourceGroupCarbonEmissionTopItemMonthlySummaryData,
    ResourceGroupCarbonEmissionTopItemsSummaryData, ResourceCarbonEmissionItemDetailData,
    ResourceCarbonEmissionTopItemMonthlySummaryData, ResourceCarbonEmissionTopItemsSummaryData,
    ResourceTypeCarbonEmissionItemDetailData, CarbonEmissionTopItemMonthlySummaryData,
    CarbonEmissionTopItemsSummaryData

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
    }

    _subtype_map = {
        "data_type": {
            "ItemDetailsData": "CarbonEmissionItemDetailData",
            "MonthlySummaryData": "CarbonEmissionMonthlySummaryData",
            "OverallSummaryData": "CarbonEmissionOverallSummaryData",
            "ResourceGroupItemDetailsData": "ResourceGroupCarbonEmissionItemDetailData",
            "ResourceGroupTopItemsMonthlySummaryData": "ResourceGroupCarbonEmissionTopItemMonthlySummaryData",
            "ResourceGroupTopItemsSummaryData": "ResourceGroupCarbonEmissionTopItemsSummaryData",
            "ResourceItemDetailsData": "ResourceCarbonEmissionItemDetailData",
            "ResourceTopItemsMonthlySummaryData": "ResourceCarbonEmissionTopItemMonthlySummaryData",
            "ResourceTopItemsSummaryData": "ResourceCarbonEmissionTopItemsSummaryData",
            "ResourceTypeItemDetailsData": "ResourceTypeCarbonEmissionItemDetailData",
            "TopItemsMonthlySummaryData": "CarbonEmissionTopItemMonthlySummaryData",
            "TopItemsSummaryData": "CarbonEmissionTopItemsSummaryData",
        }
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        """
        super().__init__(**kwargs)
        self.data_type: Optional[str] = None
        self.total_carbon_emission = total_carbon_emission
        self.total_carbon_emission_last_month = total_carbon_emission_last_month
        self.change_ratio_for_last_month = change_ratio_for_last_month
        self.total_carbon_emission12_months_ago = total_carbon_emission12_months_ago
        self.change_ratio_for12_months = change_ratio_for12_months
        self.change_value_month_over_month = change_value_month_over_month


class CarbonEmissionDataAvailableDateRange(_serialization.Model):
    """Response for available date range of carbon emission data.

    All required parameters must be populated in order to send to server.

    :ivar start_date: Start date parameter, format is yyyy-MM-dd. Required.
    :vartype start_date: str
    :ivar end_date: End date parameter, format is yyyy-MM-dd. Required.
    :vartype end_date: str
    """

    _validation = {
        "start_date": {"required": True},
        "end_date": {"required": True},
    }

    _attribute_map = {
        "start_date": {"key": "startDate", "type": "str"},
        "end_date": {"key": "endDate", "type": "str"},
    }

    def __init__(self, *, start_date: str, end_date: str, **kwargs: Any) -> None:
        """
        :keyword start_date: Start date parameter, format is yyyy-MM-dd. Required.
        :paramtype start_date: str
        :keyword end_date: End date parameter, format is yyyy-MM-dd. Required.
        :paramtype end_date: str
        """
        super().__init__(**kwargs)
        self.start_date = start_date
        self.end_date = end_date


class CarbonEmissionDataListResult(_serialization.Model):
    """List of carbon emission results.

    All required parameters must be populated in order to send to server.

    :ivar value: The CarbonEmissionData items on this page. Required.
    :vartype value: list[~azure.mgmt.carbonoptimization.models.CarbonEmissionData]
    :ivar skip_token: The number of result items to skip for next page.
    :vartype skip_token: str
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    :ivar subscription_access_decision_list: The access decision list for each input subscription.
    :vartype subscription_access_decision_list:
     list[~azure.mgmt.carbonoptimization.models.SubscriptionAccessDecision]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CarbonEmissionData]"},
        "skip_token": {"key": "skipToken", "type": "str"},
        "next_link": {"key": "nextLink", "type": "str"},
        "subscription_access_decision_list": {
            "key": "subscriptionAccessDecisionList",
            "type": "[SubscriptionAccessDecision]",
        },
    }

    def __init__(
        self,
        *,
        value: List["_models.CarbonEmissionData"],
        skip_token: Optional[str] = None,
        next_link: Optional[str] = None,
        subscription_access_decision_list: Optional[List["_models.SubscriptionAccessDecision"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: The CarbonEmissionData items on this page. Required.
        :paramtype value: list[~azure.mgmt.carbonoptimization.models.CarbonEmissionData]
        :keyword skip_token: The number of result items to skip for next page.
        :paramtype skip_token: str
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        :keyword subscription_access_decision_list: The access decision list for each input
         subscription.
        :paramtype subscription_access_decision_list:
         list[~azure.mgmt.carbonoptimization.models.SubscriptionAccessDecision]
        """
        super().__init__(**kwargs)
        self.value = value
        self.skip_token = skip_token
        self.next_link = next_link
        self.subscription_access_decision_list = subscription_access_decision_list


class CarbonEmissionItemDetailData(CarbonEmissionData):
    """Response for detailed carbon emissions.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar group_name: Item group name. Required.
    :vartype group_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "group_name": {"required": True},
        "category_type": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "group_name": {"key": "groupName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        group_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword group_name: Item group name. Required.
        :paramtype group_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ItemDetailsData"
        self.item_name = item_name
        self.group_name = group_name
        self.category_type = category_type


class CarbonEmissionMonthlySummaryData(CarbonEmissionData):
    """Response for Monthly Carbon Emissions Summary.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar date: Monthly date string. Required.
    :vartype date: str
    :ivar carbon_intensity: Carbon Intensity. Required.
    :vartype carbon_intensity: float
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "date": {"required": True},
        "carbon_intensity": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "date": {"key": "date", "type": "str"},
        "carbon_intensity": {"key": "carbonIntensity", "type": "float"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        date: str,
        carbon_intensity: float,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword date: Monthly date string. Required.
        :paramtype date: str
        :keyword carbon_intensity: Carbon Intensity. Required.
        :paramtype carbon_intensity: float
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "MonthlySummaryData"
        self.date = date
        self.carbon_intensity = carbon_intensity


class CarbonEmissionOverallSummaryData(CarbonEmissionData):
    """Response for Overall Carbon Emissions Summary.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "OverallSummaryData"


class CarbonEmissionTopItemMonthlySummaryData(CarbonEmissionData):
    """Response for Top Items Carbon Emissions by Month.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar date: Month date. Required.
    :vartype date: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "category_type": {"required": True},
        "date": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "date": {"key": "date", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        date: str,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword date: Month date. Required.
        :paramtype date: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "TopItemsMonthlySummaryData"
        self.item_name = item_name
        self.category_type = category_type
        self.date = date


class CarbonEmissionTopItemsSummaryData(CarbonEmissionData):
    """Response for Top Items by Category Type.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "category_type": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "TopItemsSummaryData"
        self.item_name = item_name
        self.category_type = category_type


class DateRange(_serialization.Model):
    """Date range to be used with QueryParameter.

    All required parameters must be populated in order to send to server.

    :ivar start: Start date parameter, format is yyyy-MM-dd. Required.
    :vartype start: ~datetime.date
    :ivar end: End date parameter, format is yyyy-MM-dd. Required.
    :vartype end: ~datetime.date
    """

    _validation = {
        "start": {"required": True},
        "end": {"required": True},
    }

    _attribute_map = {
        "start": {"key": "start", "type": "date"},
        "end": {"key": "end", "type": "date"},
    }

    def __init__(self, *, start: datetime.date, end: datetime.date, **kwargs: Any) -> None:
        """
        :keyword start: Start date parameter, format is yyyy-MM-dd. Required.
        :paramtype start: ~datetime.date
        :keyword end: End date parameter, format is yyyy-MM-dd. Required.
        :paramtype end: ~datetime.date
        """
        super().__init__(**kwargs)
        self.start = start
        self.end = end


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.carbonoptimization.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.carbonoptimization.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.carbonoptimization.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.carbonoptimization.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class QueryFilter(_serialization.Model):
    """Query filter parameter specified by users.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ItemDetailsQueryFilter, MonthlySummaryReportQueryFilter, OverallSummaryReportQueryFilter,
    TopItemsMonthlySummaryReportQueryFilter, TopItemsSummaryReportQueryFilter

    All required parameters must be populated in order to send to server.

    :ivar report_type: Report type. Required.
    :vartype report_type: str
    :ivar date_range: The start date and end date for carbon emissions data. Required.
    :vartype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
    :ivar subscription_list: SubscriptionId list for carbon emissions data. Required.
    :vartype subscription_list: list[str]
    :ivar resource_group_url_list: resourceGroupUrl list for carbon emissions data.
    :vartype resource_group_url_list: list[str]
    :ivar resource_type_list: resource type list for carbon emissions data.
    :vartype resource_type_list: list[str]
    :ivar location_list: Location list for carbon emissions data.
    :vartype location_list: list[str]
    :ivar carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
    :vartype carbon_scope_list: list[str or
     ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
    """

    _validation = {
        "report_type": {"required": True},
        "date_range": {"required": True},
        "subscription_list": {"required": True},
        "carbon_scope_list": {"required": True},
    }

    _attribute_map = {
        "report_type": {"key": "reportType", "type": "str"},
        "date_range": {"key": "dateRange", "type": "DateRange"},
        "subscription_list": {"key": "subscriptionList", "type": "[str]"},
        "resource_group_url_list": {"key": "resourceGroupUrlList", "type": "[str]"},
        "resource_type_list": {"key": "resourceTypeList", "type": "[str]"},
        "location_list": {"key": "locationList", "type": "[str]"},
        "carbon_scope_list": {"key": "carbonScopeList", "type": "[str]"},
    }

    _subtype_map = {
        "report_type": {
            "ItemDetailsReport": "ItemDetailsQueryFilter",
            "MonthlySummaryReport": "MonthlySummaryReportQueryFilter",
            "OverallSummaryReport": "OverallSummaryReportQueryFilter",
            "TopItemsMonthlySummaryReport": "TopItemsMonthlySummaryReportQueryFilter",
            "TopItemsSummaryReport": "TopItemsSummaryReportQueryFilter",
        }
    }

    def __init__(
        self,
        *,
        date_range: "_models.DateRange",
        subscription_list: List[str],
        carbon_scope_list: List[Union[str, "_models.EmissionScopeEnum"]],
        resource_group_url_list: Optional[List[str]] = None,
        resource_type_list: Optional[List[str]] = None,
        location_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword date_range: The start date and end date for carbon emissions data. Required.
        :paramtype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
        :keyword subscription_list: SubscriptionId list for carbon emissions data. Required.
        :paramtype subscription_list: list[str]
        :keyword resource_group_url_list: resourceGroupUrl list for carbon emissions data.
        :paramtype resource_group_url_list: list[str]
        :keyword resource_type_list: resource type list for carbon emissions data.
        :paramtype resource_type_list: list[str]
        :keyword location_list: Location list for carbon emissions data.
        :paramtype location_list: list[str]
        :keyword carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
        :paramtype carbon_scope_list: list[str or
         ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
        """
        super().__init__(**kwargs)
        self.report_type: Optional[str] = None
        self.date_range = date_range
        self.subscription_list = subscription_list
        self.resource_group_url_list = resource_group_url_list
        self.resource_type_list = resource_type_list
        self.location_list = location_list
        self.carbon_scope_list = carbon_scope_list


class ItemDetailsQueryFilter(QueryFilter):  # pylint: disable=too-many-instance-attributes
    """Query Parameters for Detailed carbon emissions by pageSize.

    All required parameters must be populated in order to send to server.

    :ivar report_type: Report type. Required.
    :vartype report_type: str
    :ivar date_range: The start date and end date for carbon emissions data. Required.
    :vartype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
    :ivar subscription_list: SubscriptionId list for carbon emissions data. Required.
    :vartype subscription_list: list[str]
    :ivar resource_group_url_list: resourceGroupUrl list for carbon emissions data.
    :vartype resource_group_url_list: list[str]
    :ivar resource_type_list: resource type list for carbon emissions data.
    :vartype resource_type_list: list[str]
    :ivar location_list: Location list for carbon emissions data.
    :vartype location_list: list[str]
    :ivar carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
    :vartype carbon_scope_list: list[str or
     ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
    :ivar category_type: Item Category type. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar order_by: Order by column name. Required.
    :vartype order_by: str
    :ivar sort_direction: Direction for sorting. Required.
    :vartype sort_direction: str
    :ivar group_category: Group category name. Required.
    :vartype group_category: str
    :ivar page_size: Number of items to return. Required.
    :vartype page_size: int
    :ivar skip_token: The number of result items to skip.
    :vartype skip_token: str
    """

    _validation = {
        "report_type": {"required": True},
        "date_range": {"required": True},
        "subscription_list": {"required": True},
        "carbon_scope_list": {"required": True},
        "category_type": {"required": True},
        "order_by": {"required": True},
        "sort_direction": {"required": True},
        "group_category": {"required": True},
        "page_size": {"required": True},
    }

    _attribute_map = {
        "report_type": {"key": "reportType", "type": "str"},
        "date_range": {"key": "dateRange", "type": "DateRange"},
        "subscription_list": {"key": "subscriptionList", "type": "[str]"},
        "resource_group_url_list": {"key": "resourceGroupUrlList", "type": "[str]"},
        "resource_type_list": {"key": "resourceTypeList", "type": "[str]"},
        "location_list": {"key": "locationList", "type": "[str]"},
        "carbon_scope_list": {"key": "carbonScopeList", "type": "[str]"},
        "category_type": {"key": "categoryType", "type": "str"},
        "order_by": {"key": "orderBy", "type": "str"},
        "sort_direction": {"key": "sortDirection", "type": "str"},
        "group_category": {"key": "groupCategory", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "skip_token": {"key": "skipToken", "type": "str"},
    }

    def __init__(
        self,
        *,
        date_range: "_models.DateRange",
        subscription_list: List[str],
        carbon_scope_list: List[Union[str, "_models.EmissionScopeEnum"]],
        category_type: Union[str, "_models.CategoryTypeEnum"],
        order_by: str,
        sort_direction: str,
        group_category: str,
        page_size: int,
        resource_group_url_list: Optional[List[str]] = None,
        resource_type_list: Optional[List[str]] = None,
        location_list: Optional[List[str]] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword date_range: The start date and end date for carbon emissions data. Required.
        :paramtype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
        :keyword subscription_list: SubscriptionId list for carbon emissions data. Required.
        :paramtype subscription_list: list[str]
        :keyword resource_group_url_list: resourceGroupUrl list for carbon emissions data.
        :paramtype resource_group_url_list: list[str]
        :keyword resource_type_list: resource type list for carbon emissions data.
        :paramtype resource_type_list: list[str]
        :keyword location_list: Location list for carbon emissions data.
        :paramtype location_list: list[str]
        :keyword carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
        :paramtype carbon_scope_list: list[str or
         ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
        :keyword category_type: Item Category type. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword order_by: Order by column name. Required.
        :paramtype order_by: str
        :keyword sort_direction: Direction for sorting. Required.
        :paramtype sort_direction: str
        :keyword group_category: Group category name. Required.
        :paramtype group_category: str
        :keyword page_size: Number of items to return. Required.
        :paramtype page_size: int
        :keyword skip_token: The number of result items to skip.
        :paramtype skip_token: str
        """
        super().__init__(
            date_range=date_range,
            subscription_list=subscription_list,
            resource_group_url_list=resource_group_url_list,
            resource_type_list=resource_type_list,
            location_list=location_list,
            carbon_scope_list=carbon_scope_list,
            **kwargs
        )
        self.report_type: str = "ItemDetailsReport"
        self.category_type = category_type
        self.order_by = order_by
        self.sort_direction = sort_direction
        self.group_category = group_category
        self.page_size = page_size
        self.skip_token = skip_token


class MonthlySummaryReportQueryFilter(QueryFilter):
    """Query Parameters for Monthly Carbon Emissions Summary.

    All required parameters must be populated in order to send to server.

    :ivar report_type: Report type. Required.
    :vartype report_type: str
    :ivar date_range: The start date and end date for carbon emissions data. Required.
    :vartype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
    :ivar subscription_list: SubscriptionId list for carbon emissions data. Required.
    :vartype subscription_list: list[str]
    :ivar resource_group_url_list: resourceGroupUrl list for carbon emissions data.
    :vartype resource_group_url_list: list[str]
    :ivar resource_type_list: resource type list for carbon emissions data.
    :vartype resource_type_list: list[str]
    :ivar location_list: Location list for carbon emissions data.
    :vartype location_list: list[str]
    :ivar carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
    :vartype carbon_scope_list: list[str or
     ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
    """

    _validation = {
        "report_type": {"required": True},
        "date_range": {"required": True},
        "subscription_list": {"required": True},
        "carbon_scope_list": {"required": True},
    }

    _attribute_map = {
        "report_type": {"key": "reportType", "type": "str"},
        "date_range": {"key": "dateRange", "type": "DateRange"},
        "subscription_list": {"key": "subscriptionList", "type": "[str]"},
        "resource_group_url_list": {"key": "resourceGroupUrlList", "type": "[str]"},
        "resource_type_list": {"key": "resourceTypeList", "type": "[str]"},
        "location_list": {"key": "locationList", "type": "[str]"},
        "carbon_scope_list": {"key": "carbonScopeList", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        date_range: "_models.DateRange",
        subscription_list: List[str],
        carbon_scope_list: List[Union[str, "_models.EmissionScopeEnum"]],
        resource_group_url_list: Optional[List[str]] = None,
        resource_type_list: Optional[List[str]] = None,
        location_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword date_range: The start date and end date for carbon emissions data. Required.
        :paramtype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
        :keyword subscription_list: SubscriptionId list for carbon emissions data. Required.
        :paramtype subscription_list: list[str]
        :keyword resource_group_url_list: resourceGroupUrl list for carbon emissions data.
        :paramtype resource_group_url_list: list[str]
        :keyword resource_type_list: resource type list for carbon emissions data.
        :paramtype resource_type_list: list[str]
        :keyword location_list: Location list for carbon emissions data.
        :paramtype location_list: list[str]
        :keyword carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
        :paramtype carbon_scope_list: list[str or
         ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
        """
        super().__init__(
            date_range=date_range,
            subscription_list=subscription_list,
            resource_group_url_list=resource_group_url_list,
            resource_type_list=resource_type_list,
            location_list=location_list,
            carbon_scope_list=carbon_scope_list,
            **kwargs
        )
        self.report_type: str = "MonthlySummaryReport"


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.carbonoptimization.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.carbonoptimization.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.carbonoptimization.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.carbonoptimization.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.carbonoptimization.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class OverallSummaryReportQueryFilter(QueryFilter):
    """Query Parameters for Overall Carbon Emissions Summary.

    All required parameters must be populated in order to send to server.

    :ivar report_type: Report type. Required.
    :vartype report_type: str
    :ivar date_range: The start date and end date for carbon emissions data. Required.
    :vartype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
    :ivar subscription_list: SubscriptionId list for carbon emissions data. Required.
    :vartype subscription_list: list[str]
    :ivar resource_group_url_list: resourceGroupUrl list for carbon emissions data.
    :vartype resource_group_url_list: list[str]
    :ivar resource_type_list: resource type list for carbon emissions data.
    :vartype resource_type_list: list[str]
    :ivar location_list: Location list for carbon emissions data.
    :vartype location_list: list[str]
    :ivar carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
    :vartype carbon_scope_list: list[str or
     ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
    """

    _validation = {
        "report_type": {"required": True},
        "date_range": {"required": True},
        "subscription_list": {"required": True},
        "carbon_scope_list": {"required": True},
    }

    _attribute_map = {
        "report_type": {"key": "reportType", "type": "str"},
        "date_range": {"key": "dateRange", "type": "DateRange"},
        "subscription_list": {"key": "subscriptionList", "type": "[str]"},
        "resource_group_url_list": {"key": "resourceGroupUrlList", "type": "[str]"},
        "resource_type_list": {"key": "resourceTypeList", "type": "[str]"},
        "location_list": {"key": "locationList", "type": "[str]"},
        "carbon_scope_list": {"key": "carbonScopeList", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        date_range: "_models.DateRange",
        subscription_list: List[str],
        carbon_scope_list: List[Union[str, "_models.EmissionScopeEnum"]],
        resource_group_url_list: Optional[List[str]] = None,
        resource_type_list: Optional[List[str]] = None,
        location_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword date_range: The start date and end date for carbon emissions data. Required.
        :paramtype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
        :keyword subscription_list: SubscriptionId list for carbon emissions data. Required.
        :paramtype subscription_list: list[str]
        :keyword resource_group_url_list: resourceGroupUrl list for carbon emissions data.
        :paramtype resource_group_url_list: list[str]
        :keyword resource_type_list: resource type list for carbon emissions data.
        :paramtype resource_type_list: list[str]
        :keyword location_list: Location list for carbon emissions data.
        :paramtype location_list: list[str]
        :keyword carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
        :paramtype carbon_scope_list: list[str or
         ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
        """
        super().__init__(
            date_range=date_range,
            subscription_list=subscription_list,
            resource_group_url_list=resource_group_url_list,
            resource_type_list=resource_type_list,
            location_list=location_list,
            carbon_scope_list=carbon_scope_list,
            **kwargs
        )
        self.report_type: str = "OverallSummaryReport"


class ResourceCarbonEmissionItemDetailData(CarbonEmissionData):  # pylint: disable=too-many-instance-attributes
    """Response for Resource detailed carbon emissions.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar group_name: Item group name. Required.
    :vartype group_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar subscription_id: Subscription Id. Required.
    :vartype subscription_id: str
    :ivar resource_group: Resource Group. Required.
    :vartype resource_group: str
    :ivar resource_id: Resource Id Url.
    :vartype resource_id: str
    :ivar location: Resource Location.
    :vartype location: str
    :ivar resource_type: Resource Type.
    :vartype resource_type: str
    :ivar resource_type_friendly_name: Friendly name of Resource Type.
    :vartype resource_type_friendly_name: str
    :ivar resource_provider: Resource Provider.
    :vartype resource_provider: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "group_name": {"required": True},
        "category_type": {"required": True},
        "subscription_id": {"required": True},
        "resource_group": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "group_name": {"key": "groupName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
        "resource_id": {"key": "resourceId", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "resource_type": {"key": "resourceType", "type": "str"},
        "resource_type_friendly_name": {"key": "resourceTypeFriendlyName", "type": "str"},
        "resource_provider": {"key": "resourceProvider", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        group_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        subscription_id: str,
        resource_group: str,
        change_value_month_over_month: Optional[float] = None,
        resource_id: Optional[str] = None,
        location: Optional[str] = None,
        resource_type: Optional[str] = None,
        resource_type_friendly_name: Optional[str] = None,
        resource_provider: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword group_name: Item group name. Required.
        :paramtype group_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword subscription_id: Subscription Id. Required.
        :paramtype subscription_id: str
        :keyword resource_group: Resource Group. Required.
        :paramtype resource_group: str
        :keyword resource_id: Resource Id Url.
        :paramtype resource_id: str
        :keyword location: Resource Location.
        :paramtype location: str
        :keyword resource_type: Resource Type.
        :paramtype resource_type: str
        :keyword resource_type_friendly_name: Friendly name of Resource Type.
        :paramtype resource_type_friendly_name: str
        :keyword resource_provider: Resource Provider.
        :paramtype resource_provider: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceItemDetailsData"
        self.item_name = item_name
        self.group_name = group_name
        self.category_type = category_type
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.resource_id = resource_id
        self.location = location
        self.resource_type = resource_type
        self.resource_type_friendly_name = resource_type_friendly_name
        self.resource_provider = resource_provider


class ResourceCarbonEmissionTopItemMonthlySummaryData(
    CarbonEmissionData
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """Response for Top Items Carbon Emissions by Month for ResourceType.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar date: Month date. Required.
    :vartype date: str
    :ivar subscription_id: Subscription Id. Required.
    :vartype subscription_id: str
    :ivar resource_group: Resource Group. Required.
    :vartype resource_group: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "category_type": {"required": True},
        "date": {"required": True},
        "subscription_id": {"required": True},
        "resource_group": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "date": {"key": "date", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        date: str,
        subscription_id: str,
        resource_group: str,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword date: Month date. Required.
        :paramtype date: str
        :keyword subscription_id: Subscription Id. Required.
        :paramtype subscription_id: str
        :keyword resource_group: Resource Group. Required.
        :paramtype resource_group: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceTopItemsMonthlySummaryData"
        self.item_name = item_name
        self.category_type = category_type
        self.date = date
        self.subscription_id = subscription_id
        self.resource_group = resource_group


class ResourceCarbonEmissionTopItemsSummaryData(
    CarbonEmissionData
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """Response for Top Items For Resource.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar subscription_id: Subscription Id. Required.
    :vartype subscription_id: str
    :ivar resource_group: Resource Group. Required.
    :vartype resource_group: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "category_type": {"required": True},
        "subscription_id": {"required": True},
        "resource_group": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        subscription_id: str,
        resource_group: str,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword subscription_id: Subscription Id. Required.
        :paramtype subscription_id: str
        :keyword resource_group: Resource Group. Required.
        :paramtype resource_group: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceTopItemsSummaryData"
        self.item_name = item_name
        self.category_type = category_type
        self.subscription_id = subscription_id
        self.resource_group = resource_group


class ResourceGroupCarbonEmissionItemDetailData(
    CarbonEmissionData
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """Response for Resource Group detailed carbon emissions.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar group_name: Item group name. Required.
    :vartype group_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar subscription_id: Subscription Id. Required.
    :vartype subscription_id: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "group_name": {"required": True},
        "category_type": {"required": True},
        "subscription_id": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "group_name": {"key": "groupName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        group_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        subscription_id: str,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword group_name: Item group name. Required.
        :paramtype group_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword subscription_id: Subscription Id. Required.
        :paramtype subscription_id: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceGroupItemDetailsData"
        self.item_name = item_name
        self.group_name = group_name
        self.category_type = category_type
        self.subscription_id = subscription_id


class ResourceGroupCarbonEmissionTopItemMonthlySummaryData(
    CarbonEmissionData
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """Response for Top Items Carbon Emissions by Month for ResourceGroupType.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar date: Month date. Required.
    :vartype date: str
    :ivar subscription_id: Subscription Id. Required.
    :vartype subscription_id: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "category_type": {"required": True},
        "date": {"required": True},
        "subscription_id": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "date": {"key": "date", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        date: str,
        subscription_id: str,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword date: Month date. Required.
        :paramtype date: str
        :keyword subscription_id: Subscription Id. Required.
        :paramtype subscription_id: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceGroupTopItemsMonthlySummaryData"
        self.item_name = item_name
        self.category_type = category_type
        self.date = date
        self.subscription_id = subscription_id


class ResourceGroupCarbonEmissionTopItemsSummaryData(CarbonEmissionData):  # pylint: disable=name-too-long
    """Response for Top Items For ResourceGroup.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name. Required.
    :vartype item_name: str
    :ivar category_type: Item category. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar subscription_id: Subscription Id. Required.
    :vartype subscription_id: str
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "category_type": {"required": True},
        "subscription_id": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        subscription_id: str,
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name. Required.
        :paramtype item_name: str
        :keyword category_type: Item category. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword subscription_id: Subscription Id. Required.
        :paramtype subscription_id: str
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceGroupTopItemsSummaryData"
        self.item_name = item_name
        self.category_type = category_type
        self.subscription_id = subscription_id


class ResourceTypeCarbonEmissionItemDetailData(CarbonEmissionData):
    """Response for detailed carbon emissions.

    All required parameters must be populated in order to send to server.

    :ivar data_type: Query result data type name. Required.
    :vartype data_type: str
    :ivar total_carbon_emission: Total carbon emissions for given query parameters. Required.
    :vartype total_carbon_emission: float
    :ivar total_carbon_emission_last_month: Total carbon emission for last month for given query
     parameters. Required.
    :vartype total_carbon_emission_last_month: float
    :ivar change_ratio_for_last_month: Change ratio between totalCarbonEmission and
     totalCarbonEmissionLastMonth. Required.
    :vartype change_ratio_for_last_month: float
    :ivar total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
     query parameters. Required.
    :vartype total_carbon_emission12_months_ago: float
    :ivar change_ratio_for12_months: Change ratio between totalCarbonEmission and
     totalCarbonEmission12MonthsAgo. Required.
    :vartype change_ratio_for12_months: float
    :ivar change_value_month_over_month: Change Value between totalCarbonEmission and
     totalCarbonEmissionLastMonth.
    :vartype change_value_month_over_month: float
    :ivar item_name: Item name, resource type name. Required.
    :vartype item_name: str
    :ivar resource_type_friendly_name: Item group name. Required.
    :vartype resource_type_friendly_name: str
    :ivar category_type: Item category, which is ResourceType. Required. Known values are:
     "Subscription", "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    """

    _validation = {
        "data_type": {"required": True},
        "total_carbon_emission": {"required": True},
        "total_carbon_emission_last_month": {"required": True},
        "change_ratio_for_last_month": {"required": True},
        "total_carbon_emission12_months_ago": {"required": True},
        "change_ratio_for12_months": {"required": True},
        "item_name": {"required": True},
        "resource_type_friendly_name": {"required": True},
        "category_type": {"required": True},
    }

    _attribute_map = {
        "data_type": {"key": "dataType", "type": "str"},
        "total_carbon_emission": {"key": "totalCarbonEmission", "type": "float"},
        "total_carbon_emission_last_month": {"key": "totalCarbonEmissionLastMonth", "type": "float"},
        "change_ratio_for_last_month": {"key": "changeRatioForLastMonth", "type": "float"},
        "total_carbon_emission12_months_ago": {"key": "totalCarbonEmission12MonthsAgo", "type": "float"},
        "change_ratio_for12_months": {"key": "changeRatioFor12Months", "type": "float"},
        "change_value_month_over_month": {"key": "changeValueMonthOverMonth", "type": "float"},
        "item_name": {"key": "itemName", "type": "str"},
        "resource_type_friendly_name": {"key": "resourceTypeFriendlyName", "type": "str"},
        "category_type": {"key": "categoryType", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_carbon_emission: float,
        total_carbon_emission_last_month: float,
        change_ratio_for_last_month: float,
        total_carbon_emission12_months_ago: float,
        change_ratio_for12_months: float,
        item_name: str,
        resource_type_friendly_name: str,
        category_type: Union[str, "_models.CategoryTypeEnum"],
        change_value_month_over_month: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_carbon_emission: Total carbon emissions for given query parameters. Required.
        :paramtype total_carbon_emission: float
        :keyword total_carbon_emission_last_month: Total carbon emission for last month for given query
         parameters. Required.
        :paramtype total_carbon_emission_last_month: float
        :keyword change_ratio_for_last_month: Change ratio between totalCarbonEmission and
         totalCarbonEmissionLastMonth. Required.
        :paramtype change_ratio_for_last_month: float
        :keyword total_carbon_emission12_months_ago: Total carbon emissions for 12 months ago for given
         query parameters. Required.
        :paramtype total_carbon_emission12_months_ago: float
        :keyword change_ratio_for12_months: Change ratio between totalCarbonEmission and
         totalCarbonEmission12MonthsAgo. Required.
        :paramtype change_ratio_for12_months: float
        :keyword change_value_month_over_month: Change Value between totalCarbonEmission and
         totalCarbonEmissionLastMonth.
        :paramtype change_value_month_over_month: float
        :keyword item_name: Item name, resource type name. Required.
        :paramtype item_name: str
        :keyword resource_type_friendly_name: Item group name. Required.
        :paramtype resource_type_friendly_name: str
        :keyword category_type: Item category, which is ResourceType. Required. Known values are:
         "Subscription", "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        """
        super().__init__(
            total_carbon_emission=total_carbon_emission,
            total_carbon_emission_last_month=total_carbon_emission_last_month,
            change_ratio_for_last_month=change_ratio_for_last_month,
            total_carbon_emission12_months_ago=total_carbon_emission12_months_ago,
            change_ratio_for12_months=change_ratio_for12_months,
            change_value_month_over_month=change_value_month_over_month,
            **kwargs
        )
        self.data_type: str = "ResourceTypeItemDetailsData"
        self.item_name = item_name
        self.resource_type_friendly_name = resource_type_friendly_name
        self.category_type = category_type


class SubscriptionAccessDecision(_serialization.Model):
    """Access Decision for each Subscription.

    All required parameters must be populated in order to send to server.

    :ivar subscription_id: Id of Subscription. Required.
    :vartype subscription_id: str
    :ivar decision: Access decision to subscription. Required. Known values are: "Allowed" and
     "Denied".
    :vartype decision: str or ~azure.mgmt.carbonoptimization.models.AccessDecisionEnum
    """

    _validation = {
        "subscription_id": {"required": True},
        "decision": {"required": True},
    }

    _attribute_map = {
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "decision": {"key": "decision", "type": "str"},
    }

    def __init__(
        self, *, subscription_id: str, decision: Union[str, "_models.AccessDecisionEnum"], **kwargs: Any
    ) -> None:
        """
        :keyword subscription_id: Id of Subscription. Required.
        :paramtype subscription_id: str
        :keyword decision: Access decision to subscription. Required. Known values are: "Allowed" and
         "Denied".
        :paramtype decision: str or ~azure.mgmt.carbonoptimization.models.AccessDecisionEnum
        """
        super().__init__(**kwargs)
        self.subscription_id = subscription_id
        self.decision = decision


class TopItemsMonthlySummaryReportQueryFilter(QueryFilter):
    """Query Parameters for Top Items Carbon Emissions by Month.

    All required parameters must be populated in order to send to server.

    :ivar report_type: Report type. Required.
    :vartype report_type: str
    :ivar date_range: The start date and end date for carbon emissions data. Required.
    :vartype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
    :ivar subscription_list: SubscriptionId list for carbon emissions data. Required.
    :vartype subscription_list: list[str]
    :ivar resource_group_url_list: resourceGroupUrl list for carbon emissions data.
    :vartype resource_group_url_list: list[str]
    :ivar resource_type_list: resource type list for carbon emissions data.
    :vartype resource_type_list: list[str]
    :ivar location_list: Location list for carbon emissions data.
    :vartype location_list: list[str]
    :ivar carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
    :vartype carbon_scope_list: list[str or
     ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
    :ivar category_type: Item Category type. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar top_items: Number of top items to return. The value should be between 5 and 100.
     Required.
    :vartype top_items: int
    """

    _validation = {
        "report_type": {"required": True},
        "date_range": {"required": True},
        "subscription_list": {"required": True},
        "carbon_scope_list": {"required": True},
        "category_type": {"required": True},
        "top_items": {"required": True, "maximum": 100, "minimum": 5},
    }

    _attribute_map = {
        "report_type": {"key": "reportType", "type": "str"},
        "date_range": {"key": "dateRange", "type": "DateRange"},
        "subscription_list": {"key": "subscriptionList", "type": "[str]"},
        "resource_group_url_list": {"key": "resourceGroupUrlList", "type": "[str]"},
        "resource_type_list": {"key": "resourceTypeList", "type": "[str]"},
        "location_list": {"key": "locationList", "type": "[str]"},
        "carbon_scope_list": {"key": "carbonScopeList", "type": "[str]"},
        "category_type": {"key": "categoryType", "type": "str"},
        "top_items": {"key": "topItems", "type": "int"},
    }

    def __init__(
        self,
        *,
        date_range: "_models.DateRange",
        subscription_list: List[str],
        carbon_scope_list: List[Union[str, "_models.EmissionScopeEnum"]],
        category_type: Union[str, "_models.CategoryTypeEnum"],
        top_items: int,
        resource_group_url_list: Optional[List[str]] = None,
        resource_type_list: Optional[List[str]] = None,
        location_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword date_range: The start date and end date for carbon emissions data. Required.
        :paramtype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
        :keyword subscription_list: SubscriptionId list for carbon emissions data. Required.
        :paramtype subscription_list: list[str]
        :keyword resource_group_url_list: resourceGroupUrl list for carbon emissions data.
        :paramtype resource_group_url_list: list[str]
        :keyword resource_type_list: resource type list for carbon emissions data.
        :paramtype resource_type_list: list[str]
        :keyword location_list: Location list for carbon emissions data.
        :paramtype location_list: list[str]
        :keyword carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
        :paramtype carbon_scope_list: list[str or
         ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
        :keyword category_type: Item Category type. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword top_items: Number of top items to return. The value should be between 5 and 100.
         Required.
        :paramtype top_items: int
        """
        super().__init__(
            date_range=date_range,
            subscription_list=subscription_list,
            resource_group_url_list=resource_group_url_list,
            resource_type_list=resource_type_list,
            location_list=location_list,
            carbon_scope_list=carbon_scope_list,
            **kwargs
        )
        self.report_type: str = "TopItemsMonthlySummaryReport"
        self.category_type = category_type
        self.top_items = top_items


class TopItemsSummaryReportQueryFilter(QueryFilter):
    """Query Parameters for Top Items Carbon Emission by Category Type.

    All required parameters must be populated in order to send to server.

    :ivar report_type: Report type. Required.
    :vartype report_type: str
    :ivar date_range: The start date and end date for carbon emissions data. Required.
    :vartype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
    :ivar subscription_list: SubscriptionId list for carbon emissions data. Required.
    :vartype subscription_list: list[str]
    :ivar resource_group_url_list: resourceGroupUrl list for carbon emissions data.
    :vartype resource_group_url_list: list[str]
    :ivar resource_type_list: resource type list for carbon emissions data.
    :vartype resource_type_list: list[str]
    :ivar location_list: Location list for carbon emissions data.
    :vartype location_list: list[str]
    :ivar carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
    :vartype carbon_scope_list: list[str or
     ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
    :ivar category_type: Item Category type. Required. Known values are: "Subscription",
     "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
    :vartype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
    :ivar top_items: Number of top items to return. The value should be between 5 and 100.
     Required.
    :vartype top_items: int
    """

    _validation = {
        "report_type": {"required": True},
        "date_range": {"required": True},
        "subscription_list": {"required": True},
        "carbon_scope_list": {"required": True},
        "category_type": {"required": True},
        "top_items": {"required": True, "maximum": 100, "minimum": 5},
    }

    _attribute_map = {
        "report_type": {"key": "reportType", "type": "str"},
        "date_range": {"key": "dateRange", "type": "DateRange"},
        "subscription_list": {"key": "subscriptionList", "type": "[str]"},
        "resource_group_url_list": {"key": "resourceGroupUrlList", "type": "[str]"},
        "resource_type_list": {"key": "resourceTypeList", "type": "[str]"},
        "location_list": {"key": "locationList", "type": "[str]"},
        "carbon_scope_list": {"key": "carbonScopeList", "type": "[str]"},
        "category_type": {"key": "categoryType", "type": "str"},
        "top_items": {"key": "topItems", "type": "int"},
    }

    def __init__(
        self,
        *,
        date_range: "_models.DateRange",
        subscription_list: List[str],
        carbon_scope_list: List[Union[str, "_models.EmissionScopeEnum"]],
        category_type: Union[str, "_models.CategoryTypeEnum"],
        top_items: int,
        resource_group_url_list: Optional[List[str]] = None,
        resource_type_list: Optional[List[str]] = None,
        location_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword date_range: The start date and end date for carbon emissions data. Required.
        :paramtype date_range: ~azure.mgmt.carbonoptimization.models.DateRange
        :keyword subscription_list: SubscriptionId list for carbon emissions data. Required.
        :paramtype subscription_list: list[str]
        :keyword resource_group_url_list: resourceGroupUrl list for carbon emissions data.
        :paramtype resource_group_url_list: list[str]
        :keyword resource_type_list: resource type list for carbon emissions data.
        :paramtype resource_type_list: list[str]
        :keyword location_list: Location list for carbon emissions data.
        :paramtype location_list: list[str]
        :keyword carbon_scope_list: Carbon emission scope for carbon emissions data. Required.
        :paramtype carbon_scope_list: list[str or
         ~azure.mgmt.carbonoptimization.models.EmissionScopeEnum]
        :keyword category_type: Item Category type. Required. Known values are: "Subscription",
         "ResourceGroup", "Location", "ServiceType", "Resource", and "ResourceType".
        :paramtype category_type: str or ~azure.mgmt.carbonoptimization.models.CategoryTypeEnum
        :keyword top_items: Number of top items to return. The value should be between 5 and 100.
         Required.
        :paramtype top_items: int
        """
        super().__init__(
            date_range=date_range,
            subscription_list=subscription_list,
            resource_group_url_list=resource_group_url_list,
            resource_type_list=resource_type_list,
            location_list=location_list,
            carbon_scope_list=carbon_scope_list,
            **kwargs
        )
        self.report_type: str = "TopItemsSummaryReport"
        self.category_type = category_type
        self.top_items = top_items
