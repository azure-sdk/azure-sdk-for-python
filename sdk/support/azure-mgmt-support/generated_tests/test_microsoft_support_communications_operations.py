# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.support import MicrosoftSupport

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestMicrosoftSupportCommunicationsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(MicrosoftSupport)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_communications_check_name_availability(self, resource_group):
        response = self.client.communications.check_name_availability(
            support_ticket_name="str",
            check_name_availability_input={"name": "str", "type": "str"},
            api_version="2023-06-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_communications_list(self, resource_group):
        response = self.client.communications.list(
            support_ticket_name="str",
            api_version="2023-06-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_communications_get(self, resource_group):
        response = self.client.communications.get(
            support_ticket_name="str",
            communication_name="str",
            api_version="2023-06-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_communications_begin_create(self, resource_group):
        response = self.client.communications.begin_create(
            support_ticket_name="str",
            communication_name="str",
            create_communication_parameters={
                "body": "str",
                "communicationDirection": "str",
                "communicationType": "str",
                "createdDate": "2020-02-20 00:00:00",
                "id": "str",
                "name": "str",
                "sender": "str",
                "subject": "str",
                "type": "str",
            },
            api_version="2023-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
