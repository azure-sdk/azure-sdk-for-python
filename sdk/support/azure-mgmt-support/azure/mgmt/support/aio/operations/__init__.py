# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._services_operations import ServicesOperations  # type: ignore
from ._service_classifications_no_subscription_operations import ServiceClassificationsNoSubscriptionOperations  # type: ignore
from ._service_classifications_operations import ServiceClassificationsOperations  # type: ignore
from ._problem_classifications_no_subscription_operations import ProblemClassificationsNoSubscriptionOperations  # type: ignore
from ._problem_classifications_operations import ProblemClassificationsOperations  # type: ignore
from ._support_tickets_operations import SupportTicketsOperations  # type: ignore
from ._support_tickets_no_subscription_operations import SupportTicketsNoSubscriptionOperations  # type: ignore
from ._communications_operations import CommunicationsOperations  # type: ignore
from ._communications_no_subscription_operations import CommunicationsNoSubscriptionOperations  # type: ignore
from ._chat_transcripts_operations import ChatTranscriptsOperations  # type: ignore
from ._chat_transcripts_no_subscription_operations import ChatTranscriptsNoSubscriptionOperations  # type: ignore
from ._file_workspaces_operations import FileWorkspacesOperations  # type: ignore
from ._file_workspaces_no_subscription_operations import FileWorkspacesNoSubscriptionOperations  # type: ignore
from ._files_operations import FilesOperations  # type: ignore
from ._files_no_subscription_operations import FilesNoSubscriptionOperations  # type: ignore
from ._look_up_resource_id_operations import LookUpResourceIdOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "ServicesOperations",
    "ServiceClassificationsNoSubscriptionOperations",
    "ServiceClassificationsOperations",
    "ProblemClassificationsNoSubscriptionOperations",
    "ProblemClassificationsOperations",
    "SupportTicketsOperations",
    "SupportTicketsNoSubscriptionOperations",
    "CommunicationsOperations",
    "CommunicationsNoSubscriptionOperations",
    "ChatTranscriptsOperations",
    "ChatTranscriptsNoSubscriptionOperations",
    "FileWorkspacesOperations",
    "FileWorkspacesNoSubscriptionOperations",
    "FilesOperations",
    "FilesNoSubscriptionOperations",
    "LookUpResourceIdOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
