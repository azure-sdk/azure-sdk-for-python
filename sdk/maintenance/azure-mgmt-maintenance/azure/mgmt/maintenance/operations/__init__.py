# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._operations import MaintenanceConfigurationOpsOperations  # type: ignore
from ._operations import MaintenanceConfigurationsOperations  # type: ignore
from ._operations import MaintenanceConfigurationOperationGroupOpsOperations  # type: ignore
from ._operations import MaintenanceConfigurationOperationGroupOperations  # type: ignore
from ._operations import ApplyUpdateOpsOperations  # type: ignore
from ._operations import ApplyUpdatesOperations  # type: ignore
from ._operations import ApplyUpdateOperationGroupOpsOperations  # type: ignore
from ._operations import ApplyUpdateOperationGroupOperations  # type: ignore
from ._operations import ConfigurationAssignmentOpsOperations  # type: ignore
from ._operations import ConfigurationAssignmentsOperations  # type: ignore
from ._operations import ConfigurationAssignmentOperationGroupOpsOperations  # type: ignore
from ._operations import ConfigurationAssignmentOperationGroupOperations  # type: ignore
from ._operations import ConfigurationAssignmentsForSubscriptionOpsOperations  # type: ignore
from ._operations import ConfigurationAssignmentsForSubscriptionsOperations  # type: ignore
from ._operations import ConfigurationAssignmentsForResourceGroupOpsOperations  # type: ignore
from ._operations import ConfigurationAssignmentsForResourceGroupOperations  # type: ignore
from ._operations import ScheduledEventOperationGroupOperations  # type: ignore
from ._operations import ApplyUpdatesOperationGroupOperations  # type: ignore
from ._operations import ApplyUpdateForResourceGroupOperationGroupOperations  # type: ignore
from ._operations import ConfigurationAssignmentForResourceGroupOperationGroupOperations  # type: ignore
from ._operations import UpdatesOperationGroupOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "MaintenanceConfigurationOpsOperations",
    "MaintenanceConfigurationsOperations",
    "MaintenanceConfigurationOperationGroupOpsOperations",
    "MaintenanceConfigurationOperationGroupOperations",
    "ApplyUpdateOpsOperations",
    "ApplyUpdatesOperations",
    "ApplyUpdateOperationGroupOpsOperations",
    "ApplyUpdateOperationGroupOperations",
    "ConfigurationAssignmentOpsOperations",
    "ConfigurationAssignmentsOperations",
    "ConfigurationAssignmentOperationGroupOpsOperations",
    "ConfigurationAssignmentOperationGroupOperations",
    "ConfigurationAssignmentsForSubscriptionOpsOperations",
    "ConfigurationAssignmentsForSubscriptionsOperations",
    "ConfigurationAssignmentsForResourceGroupOpsOperations",
    "ConfigurationAssignmentsForResourceGroupOperations",
    "ScheduledEventOperationGroupOperations",
    "ApplyUpdatesOperationGroupOperations",
    "ApplyUpdateForResourceGroupOperationGroupOperations",
    "ConfigurationAssignmentForResourceGroupOperationGroupOperations",
    "UpdatesOperationGroupOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
