# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import Datastore
from ._models import ErrorAdditionalInfo
from ._models import ErrorDetail
from ._models import ErrorResponse
from ._models import ManagedServiceIdentity
from ._models import Operation
from ._models import OperationDisplay
from ._models import PagedOperation
from ._models import ProxyResource
from ._models import Resource
from ._models import SharedPrivateLinkResource
from ._models import SharedPrivateLinkResourceListResult
from ._models import SharedPrivateLinkResourceProperties
from ._models import SqlDbElasticPoolTargetProperties
from ._models import SqlDbSingleDatabaseTargetProperties
from ._models import SqlMiTargetProperties
from ._models import SqlVmTargetProperties
from ._models import SystemData
from ._models import Target
from ._models import TargetListResult
from ._models import TargetProperties
from ._models import TrackedResource
from ._models import UserAssignedIdentities
from ._models import UserAssignedIdentity
from ._models import VaultSecret
from ._models import Watcher
from ._models import WatcherListResult
from ._models import WatcherProperties
from ._models import WatcherUpdate
from ._models import WatcherUpdateProperties

from ._enums import ActionType
from ._enums import CreatedByType
from ._enums import DatabaseWatcherProvisioningState
from ._enums import KustoOfferingType
from ._enums import ManagedServiceIdentityType
from ._enums import Origin
from ._enums import ResourceProvisioningState
from ._enums import SharedPrivateLinkResourceStatus
from ._enums import TargetAuthenticationType
from ._enums import WatcherStatus
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Datastore",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ManagedServiceIdentity",
    "Operation",
    "OperationDisplay",
    "PagedOperation",
    "ProxyResource",
    "Resource",
    "SharedPrivateLinkResource",
    "SharedPrivateLinkResourceListResult",
    "SharedPrivateLinkResourceProperties",
    "SqlDbElasticPoolTargetProperties",
    "SqlDbSingleDatabaseTargetProperties",
    "SqlMiTargetProperties",
    "SqlVmTargetProperties",
    "SystemData",
    "Target",
    "TargetListResult",
    "TargetProperties",
    "TrackedResource",
    "UserAssignedIdentities",
    "UserAssignedIdentity",
    "VaultSecret",
    "Watcher",
    "WatcherListResult",
    "WatcherProperties",
    "WatcherUpdate",
    "WatcherUpdateProperties",
    "ActionType",
    "CreatedByType",
    "DatabaseWatcherProvisioningState",
    "KustoOfferingType",
    "ManagedServiceIdentityType",
    "Origin",
    "ResourceProvisioningState",
    "SharedPrivateLinkResourceStatus",
    "TargetAuthenticationType",
    "WatcherStatus",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
