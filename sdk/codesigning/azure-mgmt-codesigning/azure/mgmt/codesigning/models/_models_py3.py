# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Certificate(_serialization.Model):
    """Properties of the certificate.

    :ivar serial_number: Serial number of the certificate.
    :vartype serial_number: str
    :ivar subject_name: Subject name of the certificate.
    :vartype subject_name: str
    :ivar thumbprint: Thumbprint of the certificate.
    :vartype thumbprint: str
    :ivar created_date: Certificate created date.
    :vartype created_date: str
    :ivar expiry_date: Certificate expiry date.
    :vartype expiry_date: str
    :ivar status: Status of the certificate. Known values are: "Active", "Expired", "Revoked",
     "RevocationInitiated", "RevocationInProgress", and "RevocationFailed".
    :vartype status: str or ~azure.mgmt.codesigning.models.CertificateStatus
    :ivar revocations:
    :vartype revocations: list[~azure.mgmt.codesigning.models.Revocation]
    """

    _attribute_map = {
        "serial_number": {"key": "serialNumber", "type": "str"},
        "subject_name": {"key": "subjectName", "type": "str"},
        "thumbprint": {"key": "thumbprint", "type": "str"},
        "created_date": {"key": "createdDate", "type": "str"},
        "expiry_date": {"key": "expiryDate", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "revocations": {"key": "revocations", "type": "[Revocation]"},
    }

    def __init__(
        self,
        *,
        serial_number: Optional[str] = None,
        subject_name: Optional[str] = None,
        thumbprint: Optional[str] = None,
        created_date: Optional[str] = None,
        expiry_date: Optional[str] = None,
        status: Optional[Union[str, "_models.CertificateStatus"]] = None,
        revocations: Optional[List["_models.Revocation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword serial_number: Serial number of the certificate.
        :paramtype serial_number: str
        :keyword subject_name: Subject name of the certificate.
        :paramtype subject_name: str
        :keyword thumbprint: Thumbprint of the certificate.
        :paramtype thumbprint: str
        :keyword created_date: Certificate created date.
        :paramtype created_date: str
        :keyword expiry_date: Certificate expiry date.
        :paramtype expiry_date: str
        :keyword status: Status of the certificate. Known values are: "Active", "Expired", "Revoked",
         "RevocationInitiated", "RevocationInProgress", and "RevocationFailed".
        :paramtype status: str or ~azure.mgmt.codesigning.models.CertificateStatus
        :keyword revocations:
        :paramtype revocations: list[~azure.mgmt.codesigning.models.Revocation]
        """
        super().__init__(**kwargs)
        self.serial_number = serial_number
        self.subject_name = subject_name
        self.thumbprint = thumbprint
        self.created_date = created_date
        self.expiry_date = expiry_date
        self.status = status
        self.revocations = revocations


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.codesigning.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.codesigning.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class CertificateProfile(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Certificate profile resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.codesigning.models.SystemData
    :ivar profile_type: Profile type of the certificate. Required. Known values are: "PublicTrust",
     "PrivateTrust", "PrivateTrustCIPolicy", "VBSEnclave", and "PublicTrustTest".
    :vartype profile_type: str or ~azure.mgmt.codesigning.models.ProfileType
    :ivar rotation_policy: Rotation policy of the certificate. Known values are: "3 Days" and "30
     Days".
    :vartype rotation_policy: str or ~azure.mgmt.codesigning.models.RotationPolicy
    :ivar common_name: Used as CN in the subject name of the certificate. Required.
    :vartype common_name: str
    :ivar organization: Used as O in the subject name of the certificate. Required.
    :vartype organization: str
    :ivar organization_unit: Used as OU in the subject name of the private trust certificate.
    :vartype organization_unit: str
    :ivar street_address:
    :vartype street_address: str
    :ivar include_street_address: Whether to include in the public trust certificate subject name.
    :vartype include_street_address: bool
    :ivar state:
    :vartype state: str
    :ivar include_state: Whether to include in the public trust or private trust certificate
     subject name.
    :vartype include_state: bool
    :ivar city:
    :vartype city: str
    :ivar include_city: Whether to include in the public trust or private trust certificate subject
     name.
    :vartype include_city: bool
    :ivar postal_code:
    :vartype postal_code: str
    :ivar include_postal_code: Whether to include in the public trust certificate subject name.
    :vartype include_postal_code: bool
    :ivar country:
    :vartype country: str
    :ivar include_country: Whether to include in the public trust or private trust certificate
     subject name.
    :vartype include_country: bool
    :ivar enhanced_key_usage: Enhanced key usage of the certificate.
    :vartype enhanced_key_usage: str
    :ivar identity_validation_id:
    :vartype identity_validation_id: str
    :ivar provisioning_state: Provisioning state of the code signing account. Known values are:
     "Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.codesigning.models.ProvisioningState
    :ivar status: Status of the certificate profiles. Known values are: "Active", "Disabled", and
     "Suspended".
    :vartype status: str or ~azure.mgmt.codesigning.models.CertificateProfileStatus
    :ivar certificates:
    :vartype certificates: list[~azure.mgmt.codesigning.models.Certificate]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "profile_type": {"required": True},
        "rotation_policy": {"required": True},
        "common_name": {"required": True},
        "organization": {"required": True},
        "street_address": {"readonly": True},
        "state": {"readonly": True},
        "city": {"readonly": True},
        "postal_code": {"readonly": True},
        "country": {"readonly": True},
        "enhanced_key_usage": {"readonly": True},
        "identity_validation_id": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
        "certificates": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "profile_type": {"key": "properties.profileType", "type": "str"},
        "rotation_policy": {"key": "properties.rotationPolicy", "type": "str"},
        "common_name": {"key": "properties.commonName", "type": "str"},
        "organization": {"key": "properties.organization", "type": "str"},
        "organization_unit": {"key": "properties.organizationUnit", "type": "str"},
        "street_address": {"key": "properties.streetAddress", "type": "str"},
        "include_street_address": {"key": "properties.includeStreetAddress", "type": "bool"},
        "state": {"key": "properties.state", "type": "str"},
        "include_state": {"key": "properties.includeState", "type": "bool"},
        "city": {"key": "properties.city", "type": "str"},
        "include_city": {"key": "properties.includeCity", "type": "bool"},
        "postal_code": {"key": "properties.postalCode", "type": "str"},
        "include_postal_code": {"key": "properties.includePostalCode", "type": "bool"},
        "country": {"key": "properties.country", "type": "str"},
        "include_country": {"key": "properties.includeCountry", "type": "bool"},
        "enhanced_key_usage": {"key": "properties.enhancedKeyUsage", "type": "str"},
        "identity_validation_id": {"key": "properties.identityValidationId", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "certificates": {"key": "properties.certificates", "type": "[Certificate]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        profile_type: Union[str, "_models.ProfileType"],
        rotation_policy: Union[str, "_models.RotationPolicy"] = "3 Days",
        common_name: str,
        organization: str,
        organization_unit: Optional[str] = None,
        include_street_address: bool = False,
        include_state: bool = False,
        include_city: bool = False,
        include_postal_code: bool = False,
        include_country: bool = False,
        **kwargs: Any
    ) -> None:
        """
        :keyword profile_type: Profile type of the certificate. Required. Known values are:
         "PublicTrust", "PrivateTrust", "PrivateTrustCIPolicy", "VBSEnclave", and "PublicTrustTest".
        :paramtype profile_type: str or ~azure.mgmt.codesigning.models.ProfileType
        :keyword rotation_policy: Rotation policy of the certificate. Known values are: "3 Days" and
         "30 Days".
        :paramtype rotation_policy: str or ~azure.mgmt.codesigning.models.RotationPolicy
        :keyword common_name: Used as CN in the subject name of the certificate. Required.
        :paramtype common_name: str
        :keyword organization: Used as O in the subject name of the certificate. Required.
        :paramtype organization: str
        :keyword organization_unit: Used as OU in the subject name of the private trust certificate.
        :paramtype organization_unit: str
        :keyword include_street_address: Whether to include in the public trust certificate subject
         name.
        :paramtype include_street_address: bool
        :keyword include_state: Whether to include in the public trust or private trust certificate
         subject name.
        :paramtype include_state: bool
        :keyword include_city: Whether to include in the public trust or private trust certificate
         subject name.
        :paramtype include_city: bool
        :keyword include_postal_code: Whether to include in the public trust certificate subject name.
        :paramtype include_postal_code: bool
        :keyword include_country: Whether to include in the public trust or private trust certificate
         subject name.
        :paramtype include_country: bool
        """
        super().__init__(**kwargs)
        self.profile_type = profile_type
        self.rotation_policy = rotation_policy
        self.common_name = common_name
        self.organization = organization
        self.organization_unit = organization_unit
        self.street_address = None
        self.include_street_address = include_street_address
        self.state = None
        self.include_state = include_state
        self.city = None
        self.include_city = include_city
        self.postal_code = None
        self.include_postal_code = include_postal_code
        self.country = None
        self.include_country = include_country
        self.enhanced_key_usage = None
        self.identity_validation_id = None
        self.provisioning_state = None
        self.status = None
        self.certificates = None


class CertificateProfilePatch(_serialization.Model):
    """Certificate Profile Patch Properties.

    :ivar certificates:
    :vartype certificates: list[~azure.mgmt.codesigning.models.Certificate]
    """

    _attribute_map = {
        "certificates": {"key": "properties.certificates", "type": "[Certificate]"},
    }

    def __init__(self, *, certificates: Optional[List["_models.Certificate"]] = None, **kwargs: Any) -> None:
        """
        :keyword certificates:
        :paramtype certificates: list[~azure.mgmt.codesigning.models.Certificate]
        """
        super().__init__(**kwargs)
        self.certificates = certificates


class CertificateProfiles(_serialization.Model):
    """The paginated list of certificate profiles.

    :ivar value: The list of certificate profiles.
    :vartype value: list[~azure.mgmt.codesigning.models.CertificateProfile]
    :ivar next_link: The link to fetch the next page of certificate profile.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[CertificateProfile]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.CertificateProfile"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: The list of certificate profiles.
        :paramtype value: list[~azure.mgmt.codesigning.models.CertificateProfile]
        :keyword next_link: The link to fetch the next page of certificate profile.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CheckNameAvailability(_serialization.Model):
    """The parameters used to check the availability of the code signing account name.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Code signing account name. Required.
    :vartype name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: str, **kwargs: Any) -> None:
        """
        :keyword name: Code signing account name. Required.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.name = name


class CheckNameAvailabilityResult(_serialization.Model):
    """The CheckNameAvailability operation response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name_available: A boolean value that indicates whether the name is available for you to
     use. If true, the name is available. If false, the name has already been taken or is invalid
     and cannot be used.
    :vartype name_available: bool
    :ivar reason: The reason that a code signing account name could not be used. The Reason element
     is only returned if nameAvailable is false. Known values are: "AccountNameInvalid" and
     "AlreadyExists".
    :vartype reason: str or ~azure.mgmt.codesigning.models.Reason
    :ivar message: An error message explaining the Reason value in more detail.
    :vartype message: str
    """

    _validation = {
        "name_available": {"readonly": True},
        "reason": {"readonly": True},
        "message": {"readonly": True},
    }

    _attribute_map = {
        "name_available": {"key": "nameAvailable", "type": "bool"},
        "reason": {"key": "reason", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name_available = None
        self.reason = None
        self.message = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.codesigning.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class CodeSigningAccount(TrackedResource):
    """Code signing account resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.codesigning.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar account_uri: The URI of the code signing account for performing operations on certificate
     profiles. This property is readonly.
    :vartype account_uri: str
    :ivar provisioning_state: Provisioning state of the code signing account. Known values are:
     "Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.codesigning.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "account_uri": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "account_uri": {"key": "properties.accountUri", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.account_uri = None
        self.provisioning_state = None


class CodeSigningAccountPatch(_serialization.Model):
    """Parameters for creating or updating a code signing account.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar account_uri: Account Uri of the code signing account.
    :vartype account_uri: str
    """

    _validation = {
        "account_uri": {"readonly": True},
    }

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "account_uri": {"key": "properties.accountUri", "type": "str"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.account_uri = None


class CodeSigningAccounts(_serialization.Model):
    """The paginated list of code signing accounts.

    :ivar value: List of code signing accounts.
    :vartype value: list[~azure.mgmt.codesigning.models.CodeSigningAccount]
    :ivar next_link: The link to fetch the next page of code signing account.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[CodeSigningAccount]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.CodeSigningAccount"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: List of code signing accounts.
        :paramtype value: list[~azure.mgmt.codesigning.models.CodeSigningAccount]
        :keyword next_link: The link to fetch the next page of code signing account.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.codesigning.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.codesigning.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.codesigning.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.codesigning.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.codesigning.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.codesigning.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.codesigning.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.codesigning.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.codesigning.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Revocation(_serialization.Model):
    """Revocations history of a certificate.

    :ivar requested_at: The requested timestamp of the revocation.
    :vartype requested_at: str
    :ivar revoked_at: Revocation timestamp.
    :vartype revoked_at: str
    :ivar reason: Reason for revocation.
    :vartype reason: str
    :ivar remarks: Remarks for the revocation.
    :vartype remarks: str
    """

    _attribute_map = {
        "requested_at": {"key": "requestedAt", "type": "str"},
        "revoked_at": {"key": "revokedAt", "type": "str"},
        "reason": {"key": "reason", "type": "str"},
        "remarks": {"key": "remarks", "type": "str"},
    }

    def __init__(
        self,
        *,
        requested_at: Optional[str] = None,
        revoked_at: Optional[str] = None,
        reason: Optional[str] = None,
        remarks: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword requested_at: The requested timestamp of the revocation.
        :paramtype requested_at: str
        :keyword revoked_at: Revocation timestamp.
        :paramtype revoked_at: str
        :keyword reason: Reason for revocation.
        :paramtype reason: str
        :keyword remarks: Remarks for the revocation.
        :paramtype remarks: str
        """
        super().__init__(**kwargs)
        self.requested_at = requested_at
        self.revoked_at = revoked_at
        self.reason = reason
        self.remarks = remarks


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.codesigning.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.codesigning.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.codesigning.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.codesigning.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
