# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.botservice import AzureBotService

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAzureBotServiceBotConnectionOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AzureBotService)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_service_providers(self, resource_group):
        response = self.client.bot_connection.list_service_providers(
            api_version="2023-09-15-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_with_secrets(self, resource_group):
        response = self.client.bot_connection.list_with_secrets(
            resource_group_name=resource_group.name,
            resource_name="str",
            connection_name="str",
            api_version="2023-09-15-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_create(self, resource_group):
        response = self.client.bot_connection.create(
            resource_group_name=resource_group.name,
            resource_name="str",
            connection_name="str",
            parameters={
                "etag": "str",
                "id": "str",
                "kind": "str",
                "location": "str",
                "name": "str",
                "properties": {
                    "clientId": "str",
                    "clientSecret": "str",
                    "id": "str",
                    "name": "str",
                    "parameters": [{"key": "str", "value": "str"}],
                    "provisioningState": "str",
                    "scopes": "",
                    "serviceProviderDisplayName": "str",
                    "serviceProviderId": "str",
                    "settingId": "str",
                },
                "sku": {"name": "str", "tier": "str"},
                "tags": {"str": "str"},
                "type": "str",
                "zones": ["str"],
            },
            api_version="2023-09-15-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_update(self, resource_group):
        response = self.client.bot_connection.update(
            resource_group_name=resource_group.name,
            resource_name="str",
            connection_name="str",
            parameters={
                "etag": "str",
                "id": "str",
                "kind": "str",
                "location": "str",
                "name": "str",
                "properties": {
                    "clientId": "str",
                    "clientSecret": "str",
                    "id": "str",
                    "name": "str",
                    "parameters": [{"key": "str", "value": "str"}],
                    "provisioningState": "str",
                    "scopes": "",
                    "serviceProviderDisplayName": "str",
                    "serviceProviderId": "str",
                    "settingId": "str",
                },
                "sku": {"name": "str", "tier": "str"},
                "tags": {"str": "str"},
                "type": "str",
                "zones": ["str"],
            },
            api_version="2023-09-15-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get(self, resource_group):
        response = self.client.bot_connection.get(
            resource_group_name=resource_group.name,
            resource_name="str",
            connection_name="str",
            api_version="2023-09-15-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_delete(self, resource_group):
        response = self.client.bot_connection.delete(
            resource_group_name=resource_group.name,
            resource_name="str",
            connection_name="str",
            api_version="2023-09-15-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_by_bot_service(self, resource_group):
        response = self.client.bot_connection.list_by_bot_service(
            resource_group_name=resource_group.name,
            resource_name="str",
            api_version="2023-09-15-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...
