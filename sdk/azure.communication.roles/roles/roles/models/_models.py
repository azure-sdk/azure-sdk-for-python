# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Mapping, TYPE_CHECKING, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CallingPermissions(_model_base.Model):  # pylint: disable=too-many-instance-attributes
    """Calling permissions.

    All required parameters must be populated in order to send to server.

    :ivar add_participants: Add participants. Required.
    :vartype add_participants: bool
    :ivar add_pstn_participants: Add pstn participants. Required.
    :vartype add_pstn_participants: bool
    :ivar remove_self: Leave a call. Required.
    :vartype remove_self: bool
    :ivar leave_call: Leave a call. Required.
    :vartype leave_call: bool
    :ivar remove_participants: Remove any participant. Required.
    :vartype remove_participants: bool
    :ivar remove_pstn_participant: Remove any pstn participant. Required.
    :vartype remove_pstn_participant: bool
    :ivar list_participants: List participants. Required.
    :vartype list_participants: bool
    :ivar get_own_data: Get own data. Required.
    :vartype get_own_data: bool
    :ivar get_others_data: Get others data. Required.
    :vartype get_others_data: bool
    :ivar update_own_data: Update own data. Required.
    :vartype update_own_data: bool
    :ivar update_others_data: Update others data. Required.
    :vartype update_others_data: bool
    :ivar get_call_properties: Get call poperties. Required.
    :vartype get_call_properties: bool
    :ivar update_call_properties: Update call poperties. Required.
    :vartype update_call_properties: bool
    :ivar admit_lobby_participants: Admit participants from the lobby. Required.
    :vartype admit_lobby_participants: bool
    :ivar deny_lobby_participants: Deny participants from the lobby. Required.
    :vartype deny_lobby_participants: bool
    :ivar bypass_lobby: Get the call directly without waiting in the lobby. Required.
    :vartype bypass_lobby: bool
    :ivar delete_call: Delete a scheduled call. Required.
    :vartype delete_call: bool
    :ivar join_meeting: Join a meeting. Required.
    :vartype join_meeting: bool
    :ivar turn_on_video: Turn on own video. Required.
    :vartype turn_on_video: bool
    :ivar share_video: Turn on own video. Required.
    :vartype share_video: bool
    :ivar send_video: Turn on own video. Required.
    :vartype send_video: bool
    :ivar restrict_others_video: Disable video sharing functionality for other participants.
     Required.
    :vartype restrict_others_video: bool
    :ivar unrestrict_others_video: Enable video sharing functionality for other participants.
     Required.
    :vartype unrestrict_others_video: bool
    :ivar turn_on_audio: Turn on own audio in a call. Required.
    :vartype turn_on_audio: bool
    :ivar share_audio: Turn on own audio in a call. Required.
    :vartype share_audio: bool
    :ivar send_audio: Turn on own audio in a call. Required.
    :vartype send_audio: bool
    :ivar restrict_others_audio: Disable audio sharing functionality for others. Required.
    :vartype restrict_others_audio: bool
    :ivar unrestrict_others_audio: Enable audio sharing functionality for others. Required.
    :vartype unrestrict_others_audio: bool
    :ivar share_screen: Share own screen. Required.
    :vartype share_screen: bool
    :ivar share_content: Share own screen. Required.
    :vartype share_content: bool
    :ivar mute_self: Mute self in a call. Required.
    :vartype mute_self: bool
    :ivar unmute_self: Unmute self in a call. Required.
    :vartype unmute_self: bool
    :ivar mute_others: Mute others in a call. Required.
    :vartype mute_others: bool
    :ivar spotlight_participants: Highlight video feeds for everyone in the call. Required.
    :vartype spotlight_participants: bool
    :ivar remove_spotlights: Remove highlighted video feeds for everyone in the call. Required.
    :vartype remove_spotlights: bool
    :ivar remove_participants_spotlight: Remove highlighted video feeds for everyone in the call.
     Required.
    :vartype remove_participants_spotlight: bool
    :ivar start_recording: Start recording in the call. Required.
    :vartype start_recording: bool
    :ivar stop_recording: Stop recording in the call. Required.
    :vartype stop_recording: bool
    :ivar start_live_captions: Start live captions. Required.
    :vartype start_live_captions: bool
    :ivar stop_live_captions: Stop live captions. Required.
    :vartype stop_live_captions: bool
    :ivar raise_hand: Raise a hand during the call. Required.
    :vartype raise_hand: bool
    :ivar send_reaction: Send reactions during the call. Required.
    :vartype send_reaction: bool
    :ivar hang_up_for_every_one: End the call for everyone. Required.
    :vartype hang_up_for_every_one: bool
    :ivar end_call_for_all: End the call for everyone. Required.
    :vartype end_call_for_all: bool
    """

    add_participants: bool = rest_field(name="addParticipants")
    """Add participants. Required."""
    add_pstn_participants: bool = rest_field(name="addPstnParticipants")
    """Add pstn participants. Required."""
    remove_self: bool = rest_field(name="removeSelf")
    """Leave a call. Required."""
    leave_call: bool = rest_field(name="leaveCall")
    """Leave a call. Required."""
    remove_participants: bool = rest_field(name="removeParticipants")
    """Remove any participant. Required."""
    remove_pstn_participant: bool = rest_field(name="removePstnParticipant")
    """Remove any pstn participant. Required."""
    list_participants: bool = rest_field(name="listParticipants")
    """List participants. Required."""
    get_own_data: bool = rest_field(name="getOwnData")
    """Get own data. Required."""
    get_others_data: bool = rest_field(name="getOthersData")
    """Get others data. Required."""
    update_own_data: bool = rest_field(name="updateOwnData")
    """Update own data. Required."""
    update_others_data: bool = rest_field(name="updateOthersData")
    """Update others data. Required."""
    get_call_properties: bool = rest_field(name="getCallProperties")
    """Get call poperties. Required."""
    update_call_properties: bool = rest_field(name="updateCallProperties")
    """Update call poperties. Required."""
    admit_lobby_participants: bool = rest_field(name="admitLobbyParticipants")
    """Admit participants from the lobby. Required."""
    deny_lobby_participants: bool = rest_field(name="denyLobbyParticipants")
    """Deny participants from the lobby. Required."""
    bypass_lobby: bool = rest_field(name="bypassLobby")
    """Get the call directly without waiting in the lobby. Required."""
    delete_call: bool = rest_field(name="deleteCall")
    """Delete a scheduled call. Required."""
    join_meeting: bool = rest_field(name="joinMeeting")
    """Join a meeting. Required."""
    turn_on_video: bool = rest_field(name="turnOnVideo")
    """Turn on own video. Required."""
    share_video: bool = rest_field(name="shareVideo")
    """Turn on own video. Required."""
    send_video: bool = rest_field(name="sendVideo")
    """Turn on own video. Required."""
    restrict_others_video: bool = rest_field(name="restrictOthersVideo")
    """Disable video sharing functionality for other participants. Required."""
    unrestrict_others_video: bool = rest_field(name="unrestrictOthersVideo")
    """Enable video sharing functionality for other participants. Required."""
    turn_on_audio: bool = rest_field(name="turnOnAudio")
    """Turn on own audio in a call. Required."""
    share_audio: bool = rest_field(name="shareAudio")
    """Turn on own audio in a call. Required."""
    send_audio: bool = rest_field(name="sendAudio")
    """Turn on own audio in a call. Required."""
    restrict_others_audio: bool = rest_field(name="restrictOthersAudio")
    """Disable audio sharing functionality for others. Required."""
    unrestrict_others_audio: bool = rest_field(name="unrestrictOthersAudio")
    """Enable audio sharing functionality for others. Required."""
    share_screen: bool = rest_field(name="shareScreen")
    """Share own screen. Required."""
    share_content: bool = rest_field(name="shareContent")
    """Share own screen. Required."""
    mute_self: bool = rest_field(name="muteSelf")
    """Mute self in a call. Required."""
    unmute_self: bool = rest_field(name="unmuteSelf")
    """Unmute self in a call. Required."""
    mute_others: bool = rest_field(name="muteOthers")
    """Mute others in a call. Required."""
    spotlight_participants: bool = rest_field(name="spotlightParticipants")
    """Highlight video feeds for everyone in the call. Required."""
    remove_spotlights: bool = rest_field(name="removeSpotlights")
    """Remove highlighted video feeds for everyone in the call. Required."""
    remove_participants_spotlight: bool = rest_field(name="removeParticipantsSpotlight")
    """Remove highlighted video feeds for everyone in the call. Required."""
    start_recording: bool = rest_field(name="startRecording")
    """Start recording in the call. Required."""
    stop_recording: bool = rest_field(name="stopRecording")
    """Stop recording in the call. Required."""
    start_live_captions: bool = rest_field(name="startLiveCaptions")
    """Start live captions. Required."""
    stop_live_captions: bool = rest_field(name="stopLiveCaptions")
    """Stop live captions. Required."""
    raise_hand: bool = rest_field(name="raiseHand")
    """Raise a hand during the call. Required."""
    send_reaction: bool = rest_field(name="sendReaction")
    """Send reactions during the call. Required."""
    hang_up_for_every_one: bool = rest_field(name="hangUpForEveryOne")
    """End the call for everyone. Required."""
    end_call_for_all: bool = rest_field(name="endCallForAll")
    """End the call for everyone. Required."""

    @overload
    def __init__(
        self,
        *,
        add_participants: bool,
        add_pstn_participants: bool,
        remove_self: bool,
        leave_call: bool,
        remove_participants: bool,
        remove_pstn_participant: bool,
        list_participants: bool,
        get_own_data: bool,
        get_others_data: bool,
        update_own_data: bool,
        update_others_data: bool,
        get_call_properties: bool,
        update_call_properties: bool,
        admit_lobby_participants: bool,
        deny_lobby_participants: bool,
        bypass_lobby: bool,
        delete_call: bool,
        join_meeting: bool,
        turn_on_video: bool,
        share_video: bool,
        send_video: bool,
        restrict_others_video: bool,
        unrestrict_others_video: bool,
        turn_on_audio: bool,
        share_audio: bool,
        send_audio: bool,
        restrict_others_audio: bool,
        unrestrict_others_audio: bool,
        share_screen: bool,
        share_content: bool,
        mute_self: bool,
        unmute_self: bool,
        mute_others: bool,
        spotlight_participants: bool,
        remove_spotlights: bool,
        remove_participants_spotlight: bool,
        start_recording: bool,
        stop_recording: bool,
        start_live_captions: bool,
        stop_live_captions: bool,
        raise_hand: bool,
        send_reaction: bool,
        hang_up_for_every_one: bool,
        end_call_for_all: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ChatPermissions(_model_base.Model):  # pylint: disable=too-many-instance-attributes
    """Chat permissions.

    All required parameters must be populated in order to send to server.

    :ivar add_participants: Add participants. Required.
    :vartype add_participants: bool
    :ivar remove_self: Remove self. Required.
    :vartype remove_self: bool
    :ivar leave_chat_thread: Leave chat thread. Required.
    :vartype leave_chat_thread: bool
    :ivar remove_participants: Remove participants. Required.
    :vartype remove_participants: bool
    :ivar list_participants: Get list of participants. Required.
    :vartype list_participants: bool
    :ivar get_own_data: Get own data. Required.
    :vartype get_own_data: bool
    :ivar get_others_data: Get others data. Required.
    :vartype get_others_data: bool
    :ivar update_own_data: Update own data. Required.
    :vartype update_own_data: bool
    :ivar update_others_data: Update others data. Required.
    :vartype update_others_data: bool
    :ivar share_history: Share history of chat thread with others participants. Required.
    :vartype share_history: bool
    :ivar get_chat_thread_properties: Get properties of chat thread. Required.
    :vartype get_chat_thread_properties: bool
    :ivar update_chat_thread_properties: Update chat thread properties. Required.
    :vartype update_chat_thread_properties: bool
    :ivar delete_chat_thread: Delete chat thread. Required.
    :vartype delete_chat_thread: bool
    :ivar send_message: Send message. Required.
    :vartype send_message: bool
    :ivar get_messages: Get messages. Required.
    :vartype get_messages: bool
    :ivar read_messages: Get messages. Required.
    :vartype read_messages: bool
    :ivar edit_own_message: Edit own message. Required.
    :vartype edit_own_message: bool
    :ivar edit_others_message: Edit any message. Required.
    :vartype edit_others_message: bool
    :ivar edit_any_message: Edit any message. Required.
    :vartype edit_any_message: bool
    :ivar annotate_own_message: Reply to own message. Required.
    :vartype annotate_own_message: bool
    :ivar reply_own_message: Reply to own message. Required.
    :vartype reply_own_message: bool
    :ivar annotate_others_message: Reply to others message. Required.
    :vartype annotate_others_message: bool
    :ivar reply_others_message: Reply to others message. Required.
    :vartype reply_others_message: bool
    :ivar delete_own_message: Delete own message. Required.
    :vartype delete_own_message: bool
    :ivar delete_others_message: Delete others message. Required.
    :vartype delete_others_message: bool
    :ivar delete_any_message: Delete others message. Required.
    :vartype delete_any_message: bool
    :ivar recover_own_message: Recover own message. Required.
    :vartype recover_own_message: bool
    :ivar recover_others_message: Recover others message. Required.
    :vartype recover_others_message: bool
    :ivar recover_any_message: Recover others message. Required.
    :vartype recover_any_message: bool
    :ivar get_read_receipts: Get read recepits. Required.
    :vartype get_read_receipts: bool
    :ivar send_read_receipt: Send read recepits. Required.
    :vartype send_read_receipt: bool
    :ivar send_typing_notification: Send typing notification. Required.
    :vartype send_typing_notification: bool
    """

    add_participants: bool = rest_field(name="addParticipants")
    """Add participants. Required."""
    remove_self: bool = rest_field(name="removeSelf")
    """Remove self. Required."""
    leave_chat_thread: bool = rest_field(name="leaveChatThread")
    """Leave chat thread. Required."""
    remove_participants: bool = rest_field(name="removeParticipants")
    """Remove participants. Required."""
    list_participants: bool = rest_field(name="listParticipants")
    """Get list of participants. Required."""
    get_own_data: bool = rest_field(name="getOwnData")
    """Get own data. Required."""
    get_others_data: bool = rest_field(name="getOthersData")
    """Get others data. Required."""
    update_own_data: bool = rest_field(name="updateOwnData")
    """Update own data. Required."""
    update_others_data: bool = rest_field(name="updateOthersData")
    """Update others data. Required."""
    share_history: bool = rest_field(name="shareHistory")
    """Share history of chat thread with others participants. Required."""
    get_chat_thread_properties: bool = rest_field(name="getChatThreadProperties")
    """Get properties of chat thread. Required."""
    update_chat_thread_properties: bool = rest_field(name="updateChatThreadProperties")
    """Update chat thread properties. Required."""
    delete_chat_thread: bool = rest_field(name="deleteChatThread")
    """Delete chat thread. Required."""
    send_message: bool = rest_field(name="sendMessage")
    """Send message. Required."""
    get_messages: bool = rest_field(name="getMessages")
    """Get messages. Required."""
    read_messages: bool = rest_field(name="readMessages")
    """Get messages. Required."""
    edit_own_message: bool = rest_field(name="editOwnMessage")
    """Edit own message. Required."""
    edit_others_message: bool = rest_field(name="editOthersMessage")
    """Edit any message. Required."""
    edit_any_message: bool = rest_field(name="editAnyMessage")
    """Edit any message. Required."""
    annotate_own_message: bool = rest_field(name="annotateOwnMessage")
    """Reply to own message. Required."""
    reply_own_message: bool = rest_field(name="replyOwnMessage")
    """Reply to own message. Required."""
    annotate_others_message: bool = rest_field(name="annotateOthersMessage")
    """Reply to others message. Required."""
    reply_others_message: bool = rest_field(name="replyOthersMessage")
    """Reply to others message. Required."""
    delete_own_message: bool = rest_field(name="deleteOwnMessage")
    """Delete own message. Required."""
    delete_others_message: bool = rest_field(name="deleteOthersMessage")
    """Delete others message. Required."""
    delete_any_message: bool = rest_field(name="deleteAnyMessage")
    """Delete others message. Required."""
    recover_own_message: bool = rest_field(name="recoverOwnMessage")
    """Recover own message. Required."""
    recover_others_message: bool = rest_field(name="recoverOthersMessage")
    """Recover others message. Required."""
    recover_any_message: bool = rest_field(name="recoverAnyMessage")
    """Recover others message. Required."""
    get_read_receipts: bool = rest_field(name="getReadReceipts")
    """Get read recepits. Required."""
    send_read_receipt: bool = rest_field(name="sendReadReceipt")
    """Send read recepits. Required."""
    send_typing_notification: bool = rest_field(name="sendTypingNotification")
    """Send typing notification. Required."""

    @overload
    def __init__(
        self,
        *,
        add_participants: bool,
        remove_self: bool,
        leave_chat_thread: bool,
        remove_participants: bool,
        list_participants: bool,
        get_own_data: bool,
        get_others_data: bool,
        update_own_data: bool,
        update_others_data: bool,
        share_history: bool,
        get_chat_thread_properties: bool,
        update_chat_thread_properties: bool,
        delete_chat_thread: bool,
        send_message: bool,
        get_messages: bool,
        read_messages: bool,
        edit_own_message: bool,
        edit_others_message: bool,
        edit_any_message: bool,
        annotate_own_message: bool,
        reply_own_message: bool,
        annotate_others_message: bool,
        reply_others_message: bool,
        delete_own_message: bool,
        delete_others_message: bool,
        delete_any_message: bool,
        recover_own_message: bool,
        recover_others_message: bool,
        recover_any_message: bool,
        get_read_receipts: bool,
        send_read_receipt: bool,
        send_typing_notification: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Permissions(_model_base.Model):
    """Permissions.

    All required parameters must be populated in order to send to server.

    :ivar chat: Chat permissions. Required.
    :vartype chat: ~roles.models.ChatPermissions
    :ivar calling: Calling permissions. Required.
    :vartype calling: ~roles.models.CallingPermissions
    """

    chat: "_models.ChatPermissions" = rest_field()
    """Chat permissions. Required."""
    calling: "_models.CallingPermissions" = rest_field()
    """Calling permissions. Required."""

    @overload
    def __init__(
        self,
        *,
        chat: "_models.ChatPermissions",
        calling: "_models.CallingPermissions",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Role(_model_base.Model):
    """A role.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The Role id. Required.
    :vartype id: str
    :ivar name: The role name. Required.
    :vartype name: str
    :ivar is_enabled: Set to false to prevent new assignments but keep existing assignments intact.
     Required.
    :vartype is_enabled: bool
    :ivar created_at: The date and time when the request was created. Required.
    :vartype created_at: ~datetime.datetime
    :ivar updated_at: The date and time when the request was updated. Required.
    :vartype updated_at: ~datetime.datetime
    :ivar permissions: Permissions. Required.
    :vartype permissions: ~roles.models.Permissions
    """

    id: str = rest_field(visibility=["read"])
    """The Role id. Required."""
    name: str = rest_field()
    """The role name. Required."""
    is_enabled: bool = rest_field(name="isEnabled")
    """Set to false to prevent new assignments but keep existing assignments intact. Required."""
    created_at: datetime.datetime = rest_field(name="createdAt", visibility=["read"], format="rfc3339")
    """The date and time when the request was created. Required."""
    updated_at: datetime.datetime = rest_field(name="updatedAt", visibility=["read"], format="rfc3339")
    """The date and time when the request was updated. Required."""
    permissions: "_models.Permissions" = rest_field()
    """Permissions. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        is_enabled: bool,
        permissions: "_models.Permissions",
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
