# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.azureintegrationspaces import IntegrationSpacesMgmtClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestIntegrationSpacesMgmtApplicationsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(IntegrationSpacesMgmtClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_list_by_space(self, resource_group):
        response = self.client.applications.list_by_space(
            resource_group_name=resource_group.name,
            space_name="str",
            api_version="2023-11-14-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_get(self, resource_group):
        response = self.client.applications.get(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_create_or_update(self, resource_group):
        response = self.client.applications.create_or_update(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            resource={
                "location": "str",
                "description": "str",
                "id": "str",
                "name": "str",
                "provisioningState": "str",
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "tags": {"str": "str"},
                "trackingDataStores": {
                    "str": {
                        "dataStoreIngestionUri": "str",
                        "dataStoreResourceId": "str",
                        "dataStoreUri": "str",
                        "databaseName": "str",
                    }
                },
                "type": "str",
            },
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_patch(self, resource_group):
        response = self.client.applications.patch(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            properties={
                "description": "str",
                "tags": {"str": "str"},
                "trackingDataStores": {
                    "str": {
                        "dataStoreIngestionUri": "str",
                        "dataStoreResourceId": "str",
                        "dataStoreUri": "str",
                        "databaseName": "str",
                    }
                },
            },
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_delete(self, resource_group):
        response = self.client.applications.delete(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_delete_business_process_development_artifact(self, resource_group):
        response = self.client.applications.delete_business_process_development_artifact(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            body={"name": "str"},
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_get_business_process_development_artifact(self, resource_group):
        response = self.client.applications.get_business_process_development_artifact(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            body={"name": "str"},
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_list_business_process_development_artifacts(self, resource_group):
        response = self.client.applications.list_business_process_development_artifacts(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_save_business_process_development_artifact(self, resource_group):
        response = self.client.applications.save_business_process_development_artifact(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            body={
                "name": "str",
                "properties": {
                    "businessProcessMapping": {
                        "str": {
                            "logicAppResourceId": "str",
                            "operationName": "str",
                            "operationType": "str",
                            "workflowName": "str",
                        }
                    },
                    "businessProcessStages": {
                        "str": {"description": "str", "properties": {"str": "str"}, "stagesBefore": ["str"]}
                    },
                    "description": "str",
                    "identifier": {"propertyName": "str", "propertyType": "str"},
                    "trackingProfiles": {
                        "str": {
                            "$schema": "str",
                            "businessProcess": {"name": "str", "version": "str"},
                            "trackingDefinitions": {
                                "str": {
                                    "correlationContext": {
                                        "operationName": "str",
                                        "operationType": "str",
                                        "propertyName": "str",
                                        "value": "str",
                                    },
                                    "events": {
                                        "str": {
                                            "operationName": "str",
                                            "operationType": "str",
                                            "properties": {"str": {}},
                                        }
                                    },
                                }
                            },
                        }
                    },
                },
            },
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_applications_validate_business_process_development_artifact(self, resource_group):
        response = self.client.applications.validate_business_process_development_artifact(
            resource_group_name=resource_group.name,
            space_name="str",
            application_name="str",
            body={
                "name": "str",
                "properties": {
                    "businessProcessMapping": {
                        "str": {
                            "logicAppResourceId": "str",
                            "operationName": "str",
                            "operationType": "str",
                            "workflowName": "str",
                        }
                    },
                    "businessProcessStages": {
                        "str": {"description": "str", "properties": {"str": "str"}, "stagesBefore": ["str"]}
                    },
                    "description": "str",
                    "identifier": {"propertyName": "str", "propertyType": "str"},
                    "trackingProfiles": {
                        "str": {
                            "$schema": "str",
                            "businessProcess": {"name": "str", "version": "str"},
                            "trackingDefinitions": {
                                "str": {
                                    "correlationContext": {
                                        "operationName": "str",
                                        "operationType": "str",
                                        "propertyName": "str",
                                        "value": "str",
                                    },
                                    "events": {
                                        "str": {
                                            "operationName": "str",
                                            "operationType": "str",
                                            "properties": {"str": {}},
                                        }
                                    },
                                }
                            },
                        }
                    },
                },
            },
            api_version="2023-11-14-preview",
        )

        # please add some check logic here by yourself
        # ...
