# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import AlignPolicy
from ._models import AnomalyDetectorError
from ._models import AnomalyInterpretation
from ._models import AnomalyState
from ._models import CorrelationChanges
from ._models import DataPointDetails
from ._models import Error
from ._models import ErrorResponse
from ._models import InnerError
from ._models import MultivariateBatchDetectionResultSummary
from ._models import MultivariateBatchDetectionSettings
from ._models import MultivariateDetectionResult
from ._models import MultivariateDiagnosticDetails
from ._models import MultivariateLastDetectionResult
from ._models import MultivariateLastDetectionSettings
from ._models import MultivariateModel
from ._models import MultivariateModelDetails
from ._models import MultivariateModelState
from ._models import MultivariateVariableState
from ._models import MultivariateVariableValue
from ._models import UnivariateChangePointDetectionOptions
from ._models import UnivariateChangePointDetectionResult
from ._models import UnivariateDetectionOptions
from ._models import UnivariateEntireDetectionResult
from ._models import UnivariateLastDetectionResult
from ._models import UnivariateTimeSeriesPoint

from ._enums import APIVersions
from ._enums import AnomalyDetectorErrorCodes
from ._enums import ImputeMode
from ._enums import MultivariateAlignMode
from ._enums import MultivariateBatchDetectionStatus
from ._enums import MultivariateDataSchema
from ._enums import MultivariateFillNaMethod
from ._enums import MultivariateModelStatus
from ._enums import UnivariateTimeGranularity
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AlignPolicy",
    "AnomalyDetectorError",
    "AnomalyInterpretation",
    "AnomalyState",
    "CorrelationChanges",
    "DataPointDetails",
    "Error",
    "ErrorResponse",
    "InnerError",
    "MultivariateBatchDetectionResultSummary",
    "MultivariateBatchDetectionSettings",
    "MultivariateDetectionResult",
    "MultivariateDiagnosticDetails",
    "MultivariateLastDetectionResult",
    "MultivariateLastDetectionSettings",
    "MultivariateModel",
    "MultivariateModelDetails",
    "MultivariateModelState",
    "MultivariateVariableState",
    "MultivariateVariableValue",
    "UnivariateChangePointDetectionOptions",
    "UnivariateChangePointDetectionResult",
    "UnivariateDetectionOptions",
    "UnivariateEntireDetectionResult",
    "UnivariateLastDetectionResult",
    "UnivariateTimeSeriesPoint",
    "APIVersions",
    "AnomalyDetectorErrorCodes",
    "ImputeMode",
    "MultivariateAlignMode",
    "MultivariateBatchDetectionStatus",
    "MultivariateDataSchema",
    "MultivariateFillNaMethod",
    "MultivariateModelStatus",
    "UnivariateTimeGranularity",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
