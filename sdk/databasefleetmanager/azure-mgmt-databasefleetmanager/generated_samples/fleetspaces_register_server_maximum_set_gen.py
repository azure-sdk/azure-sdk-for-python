# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.databasefleetmanager import DatabaseFleetManagerClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-databasefleetmanager
# USAGE
    python fleetspaces_register_server_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = DatabaseFleetManagerClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    client.fleetspaces.begin_register_server(
        resource_group_name="rg-database-fleet-manager",
        fleet_name="production-fleet",
        fleetspace_name="primary-space",
        body={
            "destinationTierOverrides": [
                {"resourceName": "source-db-prod", "resourceType": "Database", "tierName": "bronze"}
            ],
            "sourceResourceGroupName": "rg-source-database",
            "sourceServerName": "source-db-server-prod",
            "sourceSubscriptionId": "c76e2b32-46c7-4325-8f4f-476828a5b207",
            "tierName": "Standard",
        },
    ).result()


# x-ms-original-file: 2025-02-01-preview/Fleetspaces_RegisterServer_MaximumSet_Gen.json
if __name__ == "__main__":
    main()
