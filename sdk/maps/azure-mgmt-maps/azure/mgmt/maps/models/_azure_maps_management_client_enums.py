# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class EncryptionCustomerManagedKeyEncryptionKeyIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or
    delegatedResourceIdentity.
    """

    SYSTEM_ASSIGNED_IDENTITY = "systemAssignedIdentity"
    USER_ASSIGNED_IDENTITY = "userAssignedIdentity"
    DELEGATED_RESOURCE_IDENTITY = "delegatedResourceIdentity"


class InfrastructureEncryption(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """(Optional) Discouraged to include in resource definition. Only needed where it is possible to
    disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values
    are enabled and disabled.
    """

    ENABLED = "enabled"
    DISABLED = "disabled"


class KeyType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Whether the operation refers to the primary or secondary key."""

    PRIMARY = "primary"
    SECONDARY = "secondary"


class Kind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The Kind of the Maps Account."""

    GEN2 = "Gen2"


class ManagedServiceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class Name(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The name of the SKU, in standard format (such as G2)."""

    G2 = "G2"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class SigningKey(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The Maps account key to use for signing. Picking ``primaryKey`` or ``secondaryKey`` will use
    the Maps account Shared Keys, and using ``managedIdentity`` will use the auto-renewed private
    key to sign the SAS.
    """

    PRIMARY_KEY = "primaryKey"
    SECONDARY_KEY = "secondaryKey"
    MANAGED_IDENTITY = "managedIdentity"
