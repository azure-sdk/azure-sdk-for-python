# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class AadAppDetails(_serialization.Model):
    """AadAppDetails.

    :ivar tenant_id:
    :vartype tenant_id: str
    :ivar application_id:
    :vartype application_id: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "application_id": {"key": "applicationId", "type": "str"},
    }

    def __init__(self, *, tenant_id: Optional[str] = None, application_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword tenant_id:
        :paramtype tenant_id: str
        :keyword application_id:
        :paramtype application_id: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.application_id = application_id


class ApplyClause(_serialization.Model):
    """Apply transformations clause.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar transformations:
    :vartype transformations: list[~azure.mgmt.migrationhub.models.TransformationNode]
    """

    _validation = {
        "transformations": {"readonly": True},
    }

    _attribute_map = {
        "transformations": {"key": "transformations", "type": "[TransformationNode]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.transformations = None


class AssessmentDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Assessment properties that can be shared by various publishers.

    :ivar id: Gets the relative URL to get to this AssessmentDetails resource.
    :vartype id: str
    :ivar assessment_id: Gets or sets the id of the assessment done on the machine.
    :vartype assessment_id: str
    :ivar target_vm_size: Gets or sets the target VM size.
    :vartype target_vm_size: str
    :ivar target_vm_location: Gets or sets the target VM location.
    :vartype target_vm_location: str
    :ivar target_storage_type: Gets or sets the target storage type.
    :vartype target_storage_type: dict[str, str]
    :ivar enqueue_time: Gets or sets the time the message was enqueued.
    :vartype enqueue_time: str
    :ivar solution_name: Gets or sets the name of the solution that sent the data.
    :vartype solution_name: str
    :ivar machine_id: Gets or sets the unique identifier of the machine.
    :vartype machine_id: str
    :ivar machine_manager_id: Gets or sets the unique identifier of the virtual machine
     manager(vCenter/VMM).
    :vartype machine_manager_id: str
    :ivar fabric_type: Gets or sets the fabric type.
    :vartype fabric_type: str
    :ivar last_updated_time: Gets or sets the time of the last modification of the machine details.
    :vartype last_updated_time: ~datetime.datetime
    :ivar machine_name: Gets or sets the name of the machine.
    :vartype machine_name: str
    :ivar ip_addresses: Gets or sets the list of IP addresses of the machine. IP addresses could be
     IP V4 or IP V6.
    :vartype ip_addresses: list[str]
    :ivar fqdn: Gets or sets the FQDN of the machine.
    :vartype fqdn: str
    :ivar bios_id: Gets or sets the BIOS ID of the machine.
    :vartype bios_id: str
    :ivar mac_addresses: Gets or sets the list of MAC addresses of the machine.
    :vartype mac_addresses: list[str]
    :ivar extended_info: Gets or sets the ISV specific extended information.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "assessment_id": {"key": "assessmentId", "type": "str"},
        "target_vm_size": {"key": "targetVMSize", "type": "str"},
        "target_vm_location": {"key": "targetVMLocation", "type": "str"},
        "target_storage_type": {"key": "targetStorageType", "type": "{str}"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "machine_id": {"key": "machineId", "type": "str"},
        "machine_manager_id": {"key": "machineManagerId", "type": "str"},
        "fabric_type": {"key": "fabricType", "type": "str"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "machine_name": {"key": "machineName", "type": "str"},
        "ip_addresses": {"key": "ipAddresses", "type": "[str]"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "bios_id": {"key": "biosId", "type": "str"},
        "mac_addresses": {"key": "macAddresses", "type": "[str]"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        assessment_id: Optional[str] = None,
        target_vm_size: Optional[str] = None,
        target_vm_location: Optional[str] = None,
        target_storage_type: Optional[Dict[str, str]] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        machine_id: Optional[str] = None,
        machine_manager_id: Optional[str] = None,
        fabric_type: Optional[str] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        machine_name: Optional[str] = None,
        ip_addresses: Optional[List[str]] = None,
        fqdn: Optional[str] = None,
        bios_id: Optional[str] = None,
        mac_addresses: Optional[List[str]] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets the relative URL to get to this AssessmentDetails resource.
        :paramtype id: str
        :keyword assessment_id: Gets or sets the id of the assessment done on the machine.
        :paramtype assessment_id: str
        :keyword target_vm_size: Gets or sets the target VM size.
        :paramtype target_vm_size: str
        :keyword target_vm_location: Gets or sets the target VM location.
        :paramtype target_vm_location: str
        :keyword target_storage_type: Gets or sets the target storage type.
        :paramtype target_storage_type: dict[str, str]
        :keyword enqueue_time: Gets or sets the time the message was enqueued.
        :paramtype enqueue_time: str
        :keyword solution_name: Gets or sets the name of the solution that sent the data.
        :paramtype solution_name: str
        :keyword machine_id: Gets or sets the unique identifier of the machine.
        :paramtype machine_id: str
        :keyword machine_manager_id: Gets or sets the unique identifier of the virtual machine
         manager(vCenter/VMM).
        :paramtype machine_manager_id: str
        :keyword fabric_type: Gets or sets the fabric type.
        :paramtype fabric_type: str
        :keyword last_updated_time: Gets or sets the time of the last modification of the machine
         details.
        :paramtype last_updated_time: ~datetime.datetime
        :keyword machine_name: Gets or sets the name of the machine.
        :paramtype machine_name: str
        :keyword ip_addresses: Gets or sets the list of IP addresses of the machine. IP addresses could
         be IP V4 or IP V6.
        :paramtype ip_addresses: list[str]
        :keyword fqdn: Gets or sets the FQDN of the machine.
        :paramtype fqdn: str
        :keyword bios_id: Gets or sets the BIOS ID of the machine.
        :paramtype bios_id: str
        :keyword mac_addresses: Gets or sets the list of MAC addresses of the machine.
        :paramtype mac_addresses: list[str]
        :keyword extended_info: Gets or sets the ISV specific extended information.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = id
        self.assessment_id = assessment_id
        self.target_vm_size = target_vm_size
        self.target_vm_location = target_vm_location
        self.target_storage_type = target_storage_type
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.machine_id = machine_id
        self.machine_manager_id = machine_manager_id
        self.fabric_type = fabric_type
        self.last_updated_time = last_updated_time
        self.machine_name = machine_name
        self.ip_addresses = ip_addresses
        self.fqdn = fqdn
        self.bios_id = bios_id
        self.mac_addresses = mac_addresses
        self.extended_info = extended_info


class Database(_serialization.Model):
    """Database REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the relative URL to get to this REST resource.
    :vartype id: str
    :ivar name: Gets or sets the name of this REST resource.
    :vartype name: str
    :ivar type: Gets the type of this REST resource.
    :vartype type: str
    :ivar properties: Gets or sets the properties of the database.
    :vartype properties: ~azure.mgmt.migrationhub.models.DatabaseProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "DatabaseProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.DatabaseProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets the relative URL to get to this REST resource.
        :paramtype id: str
        :keyword name: Gets or sets the name of this REST resource.
        :paramtype name: str
        :keyword properties: Gets or sets the properties of the database.
        :paramtype properties: ~azure.mgmt.migrationhub.models.DatabaseProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class DatabaseAssessmentDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Assessment properties that can be shared by various publishers.

    :ivar assessment_id: Gets or sets the database assessment scope/Id.
    :vartype assessment_id: str
    :ivar id: Gets the relative URL to get to this DatabaseAssessmentDetails resource.
    :vartype id: str
    :ivar migration_blockers_count: Gets or sets the number of blocking changes found.
    :vartype migration_blockers_count: int
    :ivar breaking_changes_count: Gets or sets the number of breaking changes found.
    :vartype breaking_changes_count: int
    :ivar is_ready_for_migration: Gets or sets a value indicating whether the database is ready for
     migration.
    :vartype is_ready_for_migration: bool
    :ivar assessment_target_type: Gets or sets the assessed target database type.
    :vartype assessment_target_type: str
    :ivar last_assessed_time: Gets or sets the time when the database was last assessed.
    :vartype last_assessed_time: ~datetime.datetime
    :ivar compatibility_level: Gets or sets the compatibility level of the database.
    :vartype compatibility_level: str
    :ivar database_size_in_mb: Gets or sets the database size.
    :vartype database_size_in_mb: str
    :ivar last_updated_time: Gets or sets the time of the last modification of the database
     details.
    :vartype last_updated_time: ~datetime.datetime
    :ivar enqueue_time: Gets or sets the time the message was enqueued.
    :vartype enqueue_time: str
    :ivar solution_name: Gets or sets the name of the solution that sent the data.
    :vartype solution_name: str
    :ivar instance_id: Gets or sets the database server instance Id.
    :vartype instance_id: str
    :ivar database_name: Gets or sets the database name.
    :vartype database_name: str
    :ivar extended_info: Gets or sets the extended properties of the database.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "assessment_id": {"key": "assessmentId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "migration_blockers_count": {"key": "migrationBlockersCount", "type": "int"},
        "breaking_changes_count": {"key": "breakingChangesCount", "type": "int"},
        "is_ready_for_migration": {"key": "isReadyForMigration", "type": "bool"},
        "assessment_target_type": {"key": "assessmentTargetType", "type": "str"},
        "last_assessed_time": {"key": "lastAssessedTime", "type": "iso-8601"},
        "compatibility_level": {"key": "compatibilityLevel", "type": "str"},
        "database_size_in_mb": {"key": "databaseSizeInMB", "type": "str"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "instance_id": {"key": "instanceId", "type": "str"},
        "database_name": {"key": "databaseName", "type": "str"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        assessment_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        migration_blockers_count: Optional[int] = None,
        breaking_changes_count: Optional[int] = None,
        is_ready_for_migration: Optional[bool] = None,
        assessment_target_type: Optional[str] = None,
        last_assessed_time: Optional[datetime.datetime] = None,
        compatibility_level: Optional[str] = None,
        database_size_in_mb: Optional[str] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        instance_id: Optional[str] = None,
        database_name: Optional[str] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword assessment_id: Gets or sets the database assessment scope/Id.
        :paramtype assessment_id: str
        :keyword id: Gets the relative URL to get to this DatabaseAssessmentDetails resource.
        :paramtype id: str
        :keyword migration_blockers_count: Gets or sets the number of blocking changes found.
        :paramtype migration_blockers_count: int
        :keyword breaking_changes_count: Gets or sets the number of breaking changes found.
        :paramtype breaking_changes_count: int
        :keyword is_ready_for_migration: Gets or sets a value indicating whether the database is ready
         for migration.
        :paramtype is_ready_for_migration: bool
        :keyword assessment_target_type: Gets or sets the assessed target database type.
        :paramtype assessment_target_type: str
        :keyword last_assessed_time: Gets or sets the time when the database was last assessed.
        :paramtype last_assessed_time: ~datetime.datetime
        :keyword compatibility_level: Gets or sets the compatibility level of the database.
        :paramtype compatibility_level: str
        :keyword database_size_in_mb: Gets or sets the database size.
        :paramtype database_size_in_mb: str
        :keyword last_updated_time: Gets or sets the time of the last modification of the database
         details.
        :paramtype last_updated_time: ~datetime.datetime
        :keyword enqueue_time: Gets or sets the time the message was enqueued.
        :paramtype enqueue_time: str
        :keyword solution_name: Gets or sets the name of the solution that sent the data.
        :paramtype solution_name: str
        :keyword instance_id: Gets or sets the database server instance Id.
        :paramtype instance_id: str
        :keyword database_name: Gets or sets the database name.
        :paramtype database_name: str
        :keyword extended_info: Gets or sets the extended properties of the database.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.assessment_id = assessment_id
        self.id = id
        self.migration_blockers_count = migration_blockers_count
        self.breaking_changes_count = breaking_changes_count
        self.is_ready_for_migration = is_ready_for_migration
        self.assessment_target_type = assessment_target_type
        self.last_assessed_time = last_assessed_time
        self.compatibility_level = compatibility_level
        self.database_size_in_mb = database_size_in_mb
        self.last_updated_time = last_updated_time
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.instance_id = instance_id
        self.database_name = database_name
        self.extended_info = extended_info


class DatabaseCollection(_serialization.Model):
    """Collection of databases.

    :ivar value: Gets or sets the databases.
    :vartype value: list[~azure.mgmt.migrationhub.models.Database]
    :ivar next_link: Gets or sets the value of nextLink.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[Database]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.Database"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the databases.
        :paramtype value: list[~azure.mgmt.migrationhub.models.Database]
        :keyword next_link: Gets or sets the value of nextLink.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DatabaseInstance(_serialization.Model):
    """DatabaseInstance REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the relative URL to get to this REST resource.
    :vartype id: str
    :ivar name: Gets or sets the name of this REST resource.
    :vartype name: str
    :ivar type: Gets the type of this REST resource.
    :vartype type: str
    :ivar properties: Gets or sets the properties of the machine.
    :vartype properties: ~azure.mgmt.migrationhub.models.DatabaseInstanceProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "DatabaseInstanceProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.DatabaseInstanceProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets the relative URL to get to this REST resource.
        :paramtype id: str
        :keyword name: Gets or sets the name of this REST resource.
        :paramtype name: str
        :keyword properties: Gets or sets the properties of the machine.
        :paramtype properties: ~azure.mgmt.migrationhub.models.DatabaseInstanceProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class DatabaseInstanceCollection(_serialization.Model):
    """Collection of database instances.

    :ivar value: Gets or sets the database instances.
    :vartype value: list[~azure.mgmt.migrationhub.models.DatabaseInstance]
    :ivar next_link: Gets or sets the value of nextLink.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[DatabaseInstance]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.DatabaseInstance"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the database instances.
        :paramtype value: list[~azure.mgmt.migrationhub.models.DatabaseInstance]
        :keyword next_link: Gets or sets the value of nextLink.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DatabaseInstanceDiscoveryDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Discovery properties that can be shared by various publishers.

    :ivar last_updated_time: Gets or sets the time of the last modification of the database
     instance details.
    :vartype last_updated_time: ~datetime.datetime
    :ivar id: Gets the relative URL to get to this DatabaseInstanceDiscoveryDetails resource.
    :vartype id: str
    :ivar instance_id: Gets or sets the database instance Id.
    :vartype instance_id: str
    :ivar enqueue_time: Gets or sets the time the message was enqueued.
    :vartype enqueue_time: str
    :ivar solution_name: Gets or sets the name of the solution that sent the data.
    :vartype solution_name: str
    :ivar instance_name: Gets or sets the database instance name.
    :vartype instance_name: str
    :ivar instance_version: Gets or sets the database instance version.
    :vartype instance_version: str
    :ivar instance_type: Gets or sets the database instance type.
    :vartype instance_type: str
    :ivar host_name: Gets or sets the host name of the database server.
    :vartype host_name: str
    :ivar ip_address: Gets or sets the IP addresses of the database server. IP addresses could be
     IP V4 or IP V6.
    :vartype ip_address: str
    :ivar port_number: Gets or sets the port number of the database server.
    :vartype port_number: int
    :ivar extended_info: Gets or sets the extended properties of the database server.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "id": {"key": "id", "type": "str"},
        "instance_id": {"key": "instanceId", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "instance_name": {"key": "instanceName", "type": "str"},
        "instance_version": {"key": "instanceVersion", "type": "str"},
        "instance_type": {"key": "instanceType", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "ip_address": {"key": "ipAddress", "type": "str"},
        "port_number": {"key": "portNumber", "type": "int"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        last_updated_time: Optional[datetime.datetime] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        instance_id: Optional[str] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        instance_name: Optional[str] = None,
        instance_version: Optional[str] = None,
        instance_type: Optional[str] = None,
        host_name: Optional[str] = None,
        ip_address: Optional[str] = None,
        port_number: Optional[int] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword last_updated_time: Gets or sets the time of the last modification of the database
         instance details.
        :paramtype last_updated_time: ~datetime.datetime
        :keyword id: Gets the relative URL to get to this DatabaseInstanceDiscoveryDetails resource.
        :paramtype id: str
        :keyword instance_id: Gets or sets the database instance Id.
        :paramtype instance_id: str
        :keyword enqueue_time: Gets or sets the time the message was enqueued.
        :paramtype enqueue_time: str
        :keyword solution_name: Gets or sets the name of the solution that sent the data.
        :paramtype solution_name: str
        :keyword instance_name: Gets or sets the database instance name.
        :paramtype instance_name: str
        :keyword instance_version: Gets or sets the database instance version.
        :paramtype instance_version: str
        :keyword instance_type: Gets or sets the database instance type.
        :paramtype instance_type: str
        :keyword host_name: Gets or sets the host name of the database server.
        :paramtype host_name: str
        :keyword ip_address: Gets or sets the IP addresses of the database server. IP addresses could
         be IP V4 or IP V6.
        :paramtype ip_address: str
        :keyword port_number: Gets or sets the port number of the database server.
        :paramtype port_number: int
        :keyword extended_info: Gets or sets the extended properties of the database server.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.last_updated_time = last_updated_time
        self.id = id
        self.instance_id = instance_id
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.instance_name = instance_name
        self.instance_version = instance_version
        self.instance_type = instance_type
        self.host_name = host_name
        self.ip_address = ip_address
        self.port_number = port_number
        self.extended_info = extended_info


class DatabaseInstanceProperties(_serialization.Model):
    """Properties of the database instance resource.

    :ivar discovery_data: Gets or sets the assessment details of the database instance published by
     various sources.
    :vartype discovery_data: list[~azure.mgmt.migrationhub.models.DatabaseInstanceDiscoveryDetails]
    :ivar summary: Gets or sets the database instances summary per solution. The key of dictionary
     is the solution name and value is the corresponding database instance summary object.
    :vartype summary: dict[str, ~azure.mgmt.migrationhub.models.DatabaseInstanceSummary]
    :ivar last_updated_time: Gets or sets the time of the last modification of the database.
    :vartype last_updated_time: ~datetime.datetime
    """

    _attribute_map = {
        "discovery_data": {"key": "discoveryData", "type": "[DatabaseInstanceDiscoveryDetails]"},
        "summary": {"key": "summary", "type": "{DatabaseInstanceSummary}"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        discovery_data: Optional[List["_models.DatabaseInstanceDiscoveryDetails"]] = None,
        summary: Optional[Dict[str, "_models.DatabaseInstanceSummary"]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword discovery_data: Gets or sets the assessment details of the database instance published
         by various sources.
        :paramtype discovery_data:
         list[~azure.mgmt.migrationhub.models.DatabaseInstanceDiscoveryDetails]
        :keyword summary: Gets or sets the database instances summary per solution. The key of
         dictionary is the solution name and value is the corresponding database instance summary
         object.
        :paramtype summary: dict[str, ~azure.mgmt.migrationhub.models.DatabaseInstanceSummary]
        :keyword last_updated_time: Gets or sets the time of the last modification of the database.
        :paramtype last_updated_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.discovery_data = discovery_data
        self.summary = summary
        self.last_updated_time = last_updated_time


class DatabaseInstanceSummary(_serialization.Model):
    """Class representing the database instance summary object.

    :ivar databases_assessed_count: Gets or sets the count of databases assessed.
    :vartype databases_assessed_count: int
    :ivar migration_ready_count: Gets or sets the count of databases ready for migration.
    :vartype migration_ready_count: int
    """

    _attribute_map = {
        "databases_assessed_count": {"key": "databasesAssessedCount", "type": "int"},
        "migration_ready_count": {"key": "migrationReadyCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        databases_assessed_count: Optional[int] = None,
        migration_ready_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword databases_assessed_count: Gets or sets the count of databases assessed.
        :paramtype databases_assessed_count: int
        :keyword migration_ready_count: Gets or sets the count of databases ready for migration.
        :paramtype migration_ready_count: int
        """
        super().__init__(**kwargs)
        self.databases_assessed_count = databases_assessed_count
        self.migration_ready_count = migration_ready_count


class MigrateEventProperties(_serialization.Model):
    """Properties of the error resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Gets the Instance type.
    :vartype instance_type: str
    :ivar error_code: Gets or sets the error code.
    :vartype error_code: str
    :ivar error_message: Gets or sets the error message.
    :vartype error_message: str
    :ivar recommendation: Gets or sets the recommendation for the error.
    :vartype recommendation: str
    :ivar possible_causes: Gets or sets the possible causes for the error.
    :vartype possible_causes: str
    :ivar solution: Gets or sets the solution for which the error is being reported.
    :vartype solution: str
    :ivar client_request_id: Gets or sets the client request Id of the payload for which the event
     is being reported.
    :vartype client_request_id: str
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "solution": {"key": "solution", "type": "str"},
        "client_request_id": {"key": "clientRequestId", "type": "str"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        recommendation: Optional[str] = None,
        possible_causes: Optional[str] = None,
        solution: Optional[str] = None,
        client_request_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: Gets or sets the error code.
        :paramtype error_code: str
        :keyword error_message: Gets or sets the error message.
        :paramtype error_message: str
        :keyword recommendation: Gets or sets the recommendation for the error.
        :paramtype recommendation: str
        :keyword possible_causes: Gets or sets the possible causes for the error.
        :paramtype possible_causes: str
        :keyword solution: Gets or sets the solution for which the error is being reported.
        :paramtype solution: str
        :keyword client_request_id: Gets or sets the client request Id of the payload for which the
         event is being reported.
        :paramtype client_request_id: str
        """
        super().__init__(**kwargs)
        self.instance_type = None
        self.error_code = error_code
        self.error_message = error_message
        self.recommendation = recommendation
        self.possible_causes = possible_causes
        self.solution = solution
        self.client_request_id = client_request_id


class DatabaseMigrateEventProperties(MigrateEventProperties):
    """Properties of the database error resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Gets the Instance type.
    :vartype instance_type: str
    :ivar error_code: Gets or sets the error code.
    :vartype error_code: str
    :ivar error_message: Gets or sets the error message.
    :vartype error_message: str
    :ivar recommendation: Gets or sets the recommendation for the error.
    :vartype recommendation: str
    :ivar possible_causes: Gets or sets the possible causes for the error.
    :vartype possible_causes: str
    :ivar solution: Gets or sets the solution for which the error is being reported.
    :vartype solution: str
    :ivar client_request_id: Gets or sets the client request Id of the payload for which the event
     is being reported.
    :vartype client_request_id: str
    :ivar database: Gets or sets the database for which the error is being reported.
    :vartype database: str
    :ivar database_instance_id: Gets or sets the database instance for which the error is being
     reported.
    :vartype database_instance_id: str
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "solution": {"key": "solution", "type": "str"},
        "client_request_id": {"key": "clientRequestId", "type": "str"},
        "database": {"key": "database", "type": "str"},
        "database_instance_id": {"key": "databaseInstanceId", "type": "str"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        recommendation: Optional[str] = None,
        possible_causes: Optional[str] = None,
        solution: Optional[str] = None,
        client_request_id: Optional[str] = None,
        database: Optional[str] = None,
        database_instance_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: Gets or sets the error code.
        :paramtype error_code: str
        :keyword error_message: Gets or sets the error message.
        :paramtype error_message: str
        :keyword recommendation: Gets or sets the recommendation for the error.
        :paramtype recommendation: str
        :keyword possible_causes: Gets or sets the possible causes for the error.
        :paramtype possible_causes: str
        :keyword solution: Gets or sets the solution for which the error is being reported.
        :paramtype solution: str
        :keyword client_request_id: Gets or sets the client request Id of the payload for which the
         event is being reported.
        :paramtype client_request_id: str
        :keyword database: Gets or sets the database for which the error is being reported.
        :paramtype database: str
        :keyword database_instance_id: Gets or sets the database instance for which the error is being
         reported.
        :paramtype database_instance_id: str
        """
        super().__init__(
            error_code=error_code,
            error_message=error_message,
            recommendation=recommendation,
            possible_causes=possible_causes,
            solution=solution,
            client_request_id=client_request_id,
            **kwargs
        )
        self.database = database
        self.database_instance_id = database_instance_id


class ProjectSummary(_serialization.Model):
    """Project summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Instance type.
    :vartype instance_type: str
    :ivar refresh_summary_state: Refresh summary state. Known values are: "Started", "InProgress",
     "Completed", and "Failed".
    :vartype refresh_summary_state: str or ~azure.mgmt.migrationhub.models.RefreshSummaryState
    :ivar last_summary_refreshed_time: Last summary refresh time.
    :vartype last_summary_refreshed_time: ~datetime.datetime
    :ivar extended_summary: Extended summary.
    :vartype extended_summary: dict[str, str]
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "refresh_summary_state": {"key": "refreshSummaryState", "type": "str"},
        "last_summary_refreshed_time": {"key": "lastSummaryRefreshedTime", "type": "iso-8601"},
        "extended_summary": {"key": "extendedSummary", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        refresh_summary_state: Optional[Union[str, "_models.RefreshSummaryState"]] = None,
        last_summary_refreshed_time: Optional[datetime.datetime] = None,
        extended_summary: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword refresh_summary_state: Refresh summary state. Known values are: "Started",
         "InProgress", "Completed", and "Failed".
        :paramtype refresh_summary_state: str or ~azure.mgmt.migrationhub.models.RefreshSummaryState
        :keyword last_summary_refreshed_time: Last summary refresh time.
        :paramtype last_summary_refreshed_time: ~datetime.datetime
        :keyword extended_summary: Extended summary.
        :paramtype extended_summary: dict[str, str]
        """
        super().__init__(**kwargs)
        self.instance_type = None
        self.refresh_summary_state = refresh_summary_state
        self.last_summary_refreshed_time = last_summary_refreshed_time
        self.extended_summary = extended_summary


class DatabaseProjectSummary(ProjectSummary):
    """The database project summary class.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Instance type.
    :vartype instance_type: str
    :ivar refresh_summary_state: Refresh summary state. Known values are: "Started", "InProgress",
     "Completed", and "Failed".
    :vartype refresh_summary_state: str or ~azure.mgmt.migrationhub.models.RefreshSummaryState
    :ivar last_summary_refreshed_time: Last summary refresh time.
    :vartype last_summary_refreshed_time: ~datetime.datetime
    :ivar extended_summary: Extended summary.
    :vartype extended_summary: dict[str, str]
    """


class DatabaseProperties(_serialization.Model):
    """Properties of the database resource.

    :ivar assessment_data: Gets or sets the assessment details of the database published by various
     sources.
    :vartype assessment_data: list[~azure.mgmt.migrationhub.models.DatabaseAssessmentDetails]
    :ivar last_updated_time: Gets or sets the time of the last modification of the database.
    :vartype last_updated_time: ~datetime.datetime
    """

    _attribute_map = {
        "assessment_data": {"key": "assessmentData", "type": "[DatabaseAssessmentDetails]"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        assessment_data: Optional[List["_models.DatabaseAssessmentDetails"]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword assessment_data: Gets or sets the assessment details of the database published by
         various sources.
        :paramtype assessment_data: list[~azure.mgmt.migrationhub.models.DatabaseAssessmentDetails]
        :keyword last_updated_time: Gets or sets the time of the last modification of the database.
        :paramtype last_updated_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.assessment_data = assessment_data
        self.last_updated_time = last_updated_time


class SolutionSummary(_serialization.Model):
    """The solution summary class.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Gets the Instance type.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type = None


class DatabasesSolutionSummary(SolutionSummary):
    """Class representing the databases solution summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Gets the Instance type.
    :vartype instance_type: str
    :ivar databases_assessed_count: Gets or sets the count of databases assessed.
    :vartype databases_assessed_count: int
    :ivar database_instances_assessed_count: Gets or sets the count of database instances assessed.
    :vartype database_instances_assessed_count: int
    :ivar migration_ready_count: Gets or sets the count of databases ready for migration.
    :vartype migration_ready_count: int
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "databases_assessed_count": {"key": "databasesAssessedCount", "type": "int"},
        "database_instances_assessed_count": {"key": "databaseInstancesAssessedCount", "type": "int"},
        "migration_ready_count": {"key": "migrationReadyCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        databases_assessed_count: Optional[int] = None,
        database_instances_assessed_count: Optional[int] = None,
        migration_ready_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword databases_assessed_count: Gets or sets the count of databases assessed.
        :paramtype databases_assessed_count: int
        :keyword database_instances_assessed_count: Gets or sets the count of database instances
         assessed.
        :paramtype database_instances_assessed_count: int
        :keyword migration_ready_count: Gets or sets the count of databases ready for migration.
        :paramtype migration_ready_count: int
        """
        super().__init__(**kwargs)
        self.databases_assessed_count = databases_assessed_count
        self.database_instances_assessed_count = database_instances_assessed_count
        self.migration_ready_count = migration_ready_count


class DefaultQuerySettings(_serialization.Model):
    """Provides default query settings.

    :ivar enable_expand:
    :vartype enable_expand: bool
    :ivar enable_select:
    :vartype enable_select: bool
    :ivar enable_count:
    :vartype enable_count: bool
    :ivar enable_order_by:
    :vartype enable_order_by: bool
    :ivar enable_filter:
    :vartype enable_filter: bool
    :ivar max_top:
    :vartype max_top: int
    """

    _attribute_map = {
        "enable_expand": {"key": "enableExpand", "type": "bool"},
        "enable_select": {"key": "enableSelect", "type": "bool"},
        "enable_count": {"key": "enableCount", "type": "bool"},
        "enable_order_by": {"key": "enableOrderBy", "type": "bool"},
        "enable_filter": {"key": "enableFilter", "type": "bool"},
        "max_top": {"key": "maxTop", "type": "int"},
    }

    def __init__(
        self,
        *,
        enable_expand: Optional[bool] = None,
        enable_select: Optional[bool] = None,
        enable_count: Optional[bool] = None,
        enable_order_by: Optional[bool] = None,
        enable_filter: Optional[bool] = None,
        max_top: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enable_expand:
        :paramtype enable_expand: bool
        :keyword enable_select:
        :paramtype enable_select: bool
        :keyword enable_count:
        :paramtype enable_count: bool
        :keyword enable_order_by:
        :paramtype enable_order_by: bool
        :keyword enable_filter:
        :paramtype enable_filter: bool
        :keyword max_top:
        :paramtype max_top: int
        """
        super().__init__(**kwargs)
        self.enable_expand = enable_expand
        self.enable_select = enable_select
        self.enable_count = enable_count
        self.enable_order_by = enable_order_by
        self.enable_filter = enable_filter
        self.max_top = max_top


class DiscoveryDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Discovery properties that can be published by various ISVs.

    :ivar id: Gets the relative URL to get to this DiscoveryDetails resource.
    :vartype id: str
    :ivar os_type: Gets or sets the OS type.
    :vartype os_type: str
    :ivar os_name: Gets or sets the OS name.
    :vartype os_name: str
    :ivar os_version: Gets or sets the OS version.
    :vartype os_version: str
    :ivar enqueue_time: Gets or sets the time the message was enqueued.
    :vartype enqueue_time: str
    :ivar solution_name: Gets or sets the name of the solution that sent the data.
    :vartype solution_name: str
    :ivar machine_id: Gets or sets the unique identifier of the machine.
    :vartype machine_id: str
    :ivar machine_manager_id: Gets or sets the unique identifier of the virtual machine
     manager(vCenter/VMM).
    :vartype machine_manager_id: str
    :ivar fabric_type: Gets or sets the fabric type.
    :vartype fabric_type: str
    :ivar last_updated_time: Gets or sets the time of the last modification of the machine details.
    :vartype last_updated_time: ~datetime.datetime
    :ivar machine_name: Gets or sets the name of the machine.
    :vartype machine_name: str
    :ivar ip_addresses: Gets or sets the list of IP addresses of the machine. IP addresses could be
     IP V4 or IP V6.
    :vartype ip_addresses: list[str]
    :ivar fqdn: Gets or sets the FQDN of the machine.
    :vartype fqdn: str
    :ivar bios_id: Gets or sets the BIOS ID of the machine.
    :vartype bios_id: str
    :ivar mac_addresses: Gets or sets the list of MAC addresses of the machine.
    :vartype mac_addresses: list[str]
    :ivar extended_info: Gets or sets the ISV specific extended information.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "os_type": {"key": "osType", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "machine_id": {"key": "machineId", "type": "str"},
        "machine_manager_id": {"key": "machineManagerId", "type": "str"},
        "fabric_type": {"key": "fabricType", "type": "str"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "machine_name": {"key": "machineName", "type": "str"},
        "ip_addresses": {"key": "ipAddresses", "type": "[str]"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "bios_id": {"key": "biosId", "type": "str"},
        "mac_addresses": {"key": "macAddresses", "type": "[str]"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        os_type: Optional[str] = None,
        os_name: Optional[str] = None,
        os_version: Optional[str] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        machine_id: Optional[str] = None,
        machine_manager_id: Optional[str] = None,
        fabric_type: Optional[str] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        machine_name: Optional[str] = None,
        ip_addresses: Optional[List[str]] = None,
        fqdn: Optional[str] = None,
        bios_id: Optional[str] = None,
        mac_addresses: Optional[List[str]] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets the relative URL to get to this DiscoveryDetails resource.
        :paramtype id: str
        :keyword os_type: Gets or sets the OS type.
        :paramtype os_type: str
        :keyword os_name: Gets or sets the OS name.
        :paramtype os_name: str
        :keyword os_version: Gets or sets the OS version.
        :paramtype os_version: str
        :keyword enqueue_time: Gets or sets the time the message was enqueued.
        :paramtype enqueue_time: str
        :keyword solution_name: Gets or sets the name of the solution that sent the data.
        :paramtype solution_name: str
        :keyword machine_id: Gets or sets the unique identifier of the machine.
        :paramtype machine_id: str
        :keyword machine_manager_id: Gets or sets the unique identifier of the virtual machine
         manager(vCenter/VMM).
        :paramtype machine_manager_id: str
        :keyword fabric_type: Gets or sets the fabric type.
        :paramtype fabric_type: str
        :keyword last_updated_time: Gets or sets the time of the last modification of the machine
         details.
        :paramtype last_updated_time: ~datetime.datetime
        :keyword machine_name: Gets or sets the name of the machine.
        :paramtype machine_name: str
        :keyword ip_addresses: Gets or sets the list of IP addresses of the machine. IP addresses could
         be IP V4 or IP V6.
        :paramtype ip_addresses: list[str]
        :keyword fqdn: Gets or sets the FQDN of the machine.
        :paramtype fqdn: str
        :keyword bios_id: Gets or sets the BIOS ID of the machine.
        :paramtype bios_id: str
        :keyword mac_addresses: Gets or sets the list of MAC addresses of the machine.
        :paramtype mac_addresses: list[str]
        :keyword extended_info: Gets or sets the ISV specific extended information.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = id
        self.os_type = os_type
        self.os_name = os_name
        self.os_version = os_version
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.machine_id = machine_id
        self.machine_manager_id = machine_manager_id
        self.fabric_type = fabric_type
        self.last_updated_time = last_updated_time
        self.machine_name = machine_name
        self.ip_addresses = ip_addresses
        self.fqdn = fqdn
        self.bios_id = bios_id
        self.mac_addresses = mac_addresses
        self.extended_info = extended_info


class EdmReferentialConstraintPropertyPair(_serialization.Model):
    """EDM property constraint pair.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar dependent_property: EDM structural property.
    :vartype dependent_property: ~azure.mgmt.migrationhub.models.IEdmStructuralProperty
    :ivar principal_property: EDM structural property.
    :vartype principal_property: ~azure.mgmt.migrationhub.models.IEdmStructuralProperty
    """

    _validation = {
        "dependent_property": {"readonly": True},
        "principal_property": {"readonly": True},
    }

    _attribute_map = {
        "dependent_property": {"key": "dependentProperty", "type": "IEdmStructuralProperty"},
        "principal_property": {"key": "principalProperty", "type": "IEdmStructuralProperty"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.dependent_property = None
        self.principal_property = None


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.migrationhub.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.migrationhub.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.migrationhub.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.migrationhub.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class EventCollection(_serialization.Model):
    """Collection of events.

    :ivar value: Gets or sets the machines.
    :vartype value: list[~azure.mgmt.migrationhub.models.MigrateEvent]
    :ivar next_link: Gets or sets the value of nextLink.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[MigrateEvent]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.MigrateEvent"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the machines.
        :paramtype value: list[~azure.mgmt.migrationhub.models.MigrateEvent]
        :keyword next_link: Gets or sets the value of nextLink.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class FilterClause(_serialization.Model):
    """Filter clause expression.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar expression: Single value node type.
    :vartype expression: ~azure.mgmt.migrationhub.models.SingleValueNode
    :ivar range_variable: Defines variable of kind range.
    :vartype range_variable: ~azure.mgmt.migrationhub.models.RangeVariable
    :ivar item_type: EDM type reference.
    :vartype item_type: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    """

    _validation = {
        "expression": {"readonly": True},
        "range_variable": {"readonly": True},
        "item_type": {"readonly": True},
    }

    _attribute_map = {
        "expression": {"key": "expression", "type": "SingleValueNode"},
        "range_variable": {"key": "rangeVariable", "type": "RangeVariable"},
        "item_type": {"key": "itemType", "type": "IEdmTypeReference"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.expression = None
        self.range_variable = None
        self.item_type = None


class FilterQueryOption(_serialization.Model):
    """Filter query option providing validator and filterClause.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar context: Query options context.
    :vartype context: ~azure.mgmt.migrationhub.models.ODataQueryContext
    :ivar validator: Filter query validator.
    :vartype validator: JSON
    :ivar filter_clause: Filter clause expression.
    :vartype filter_clause: ~azure.mgmt.migrationhub.models.FilterClause
    :ivar raw_value:
    :vartype raw_value: str
    """

    _validation = {
        "context": {"readonly": True},
        "filter_clause": {"readonly": True},
        "raw_value": {"readonly": True},
    }

    _attribute_map = {
        "context": {"key": "context", "type": "ODataQueryContext"},
        "validator": {"key": "validator", "type": "object"},
        "filter_clause": {"key": "filterClause", "type": "FilterClause"},
        "raw_value": {"key": "rawValue", "type": "str"},
    }

    def __init__(self, *, validator: Optional[JSON] = None, **kwargs: Any) -> None:
        """
        :keyword validator: Filter query validator.
        :paramtype validator: JSON
        """
        super().__init__(**kwargs)
        self.context = None
        self.validator = validator
        self.filter_clause = None
        self.raw_value = None


class GroupConnectivityInformation(_serialization.Model):
    """Defines Private link service group connectivity.

    :ivar id:
    :vartype id: str
    :ivar group_id:
    :vartype group_id: str
    :ivar member_name:
    :vartype member_name: str
    :ivar customer_visible_fqdns:
    :vartype customer_visible_fqdns: list[str]
    :ivar internal_fqdn:
    :vartype internal_fqdn: str
    :ivar redirect_map_id:
    :vartype redirect_map_id: str
    :ivar private_link_service_arm_region:
    :vartype private_link_service_arm_region: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "group_id": {"key": "groupId", "type": "str"},
        "member_name": {"key": "memberName", "type": "str"},
        "customer_visible_fqdns": {"key": "customerVisibleFqdns", "type": "[str]"},
        "internal_fqdn": {"key": "internalFqdn", "type": "str"},
        "redirect_map_id": {"key": "redirectMapId", "type": "str"},
        "private_link_service_arm_region": {"key": "privateLinkServiceArmRegion", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        group_id: Optional[str] = None,
        member_name: Optional[str] = None,
        customer_visible_fqdns: Optional[List[str]] = None,
        internal_fqdn: Optional[str] = None,
        redirect_map_id: Optional[str] = None,
        private_link_service_arm_region: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword group_id:
        :paramtype group_id: str
        :keyword member_name:
        :paramtype member_name: str
        :keyword customer_visible_fqdns:
        :paramtype customer_visible_fqdns: list[str]
        :keyword internal_fqdn:
        :paramtype internal_fqdn: str
        :keyword redirect_map_id:
        :paramtype redirect_map_id: str
        :keyword private_link_service_arm_region:
        :paramtype private_link_service_arm_region: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.group_id = group_id
        self.member_name = member_name
        self.customer_visible_fqdns = customer_visible_fqdns
        self.internal_fqdn = internal_fqdn
        self.redirect_map_id = redirect_map_id
        self.private_link_service_arm_region = private_link_service_arm_region


class IEdmEntityContainer(_serialization.Model):
    """EDM entity elements.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar elements:
    :vartype elements: list[~azure.mgmt.migrationhub.models.IEdmEntityContainerElement]
    :ivar schema_element_kind: Known values are: "None", "TypeDefinition", "Term", "Action",
     "EntityContainer", and "Function".
    :vartype schema_element_kind: str or ~azure.mgmt.migrationhub.models.SchemaElementKind
    :ivar namespace:
    :vartype namespace: str
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "elements": {"readonly": True},
        "schema_element_kind": {"readonly": True},
        "namespace": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "elements": {"key": "elements", "type": "[IEdmEntityContainerElement]"},
        "schema_element_kind": {"key": "schemaElementKind", "type": "str"},
        "namespace": {"key": "namespace", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.elements = None
        self.schema_element_kind = None
        self.namespace = None
        self.name = None


class IEdmEntityContainerElement(_serialization.Model):
    """EDM entity container.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar container_element_kind: Known values are: "None", "EntitySet", "ActionImport",
     "FunctionImport", and "Singleton".
    :vartype container_element_kind: str or ~azure.mgmt.migrationhub.models.ContainerElementKind
    :ivar container: EDM entity elements.
    :vartype container: ~azure.mgmt.migrationhub.models.IEdmEntityContainer
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "container_element_kind": {"readonly": True},
        "container": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "container_element_kind": {"key": "containerElementKind", "type": "str"},
        "container": {"key": "container", "type": "IEdmEntityContainer"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.container_element_kind = None
        self.container = None
        self.name = None


class IEdmExpression(_serialization.Model):
    """EDM expression.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar expression_kind: Known values are: "None", "BinaryConstant", "BooleanConstant",
     "DateTimeOffsetConstant", "DecimalConstant", "FloatingConstant", "GuidConstant",
     "IntegerConstant", "StringConstant", "DurationConstant", "Null", "Record", "Collection",
     "Path", "If", "Cast", "IsType", "FunctionApplication", "LabeledExpressionReference", "Labeled",
     "PropertyPath", "NavigationPropertyPath", "DateConstant", "TimeOfDayConstant", "EnumMember",
     "AnnotationPath", and "If".
    :vartype expression_kind: str or ~azure.mgmt.migrationhub.models.ExpressionKind
    """

    _validation = {
        "expression_kind": {"readonly": True},
    }

    _attribute_map = {
        "expression_kind": {"key": "expressionKind", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.expression_kind = None


class IEdmModel(_serialization.Model):
    """Defines EDM model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar schema_elements:
    :vartype schema_elements: list[~azure.mgmt.migrationhub.models.IEdmSchemaElement]
    :ivar vocabulary_annotations:
    :vartype vocabulary_annotations: list[~azure.mgmt.migrationhub.models.IEdmVocabularyAnnotation]
    :ivar referenced_models:
    :vartype referenced_models: list[~azure.mgmt.migrationhub.models.IEdmModel]
    :ivar declared_namespaces:
    :vartype declared_namespaces: list[str]
    :ivar direct_value_annotations_manager: EDM vocabulary annotations manager.
    :vartype direct_value_annotations_manager: JSON
    :ivar entity_container: EDM entity elements.
    :vartype entity_container: ~azure.mgmt.migrationhub.models.IEdmEntityContainer
    """

    _validation = {
        "schema_elements": {"readonly": True},
        "vocabulary_annotations": {"readonly": True},
        "referenced_models": {"readonly": True},
        "declared_namespaces": {"readonly": True},
        "direct_value_annotations_manager": {"readonly": True},
        "entity_container": {"readonly": True},
    }

    _attribute_map = {
        "schema_elements": {"key": "schemaElements", "type": "[IEdmSchemaElement]"},
        "vocabulary_annotations": {"key": "vocabularyAnnotations", "type": "[IEdmVocabularyAnnotation]"},
        "referenced_models": {"key": "referencedModels", "type": "[IEdmModel]"},
        "declared_namespaces": {"key": "declaredNamespaces", "type": "[str]"},
        "direct_value_annotations_manager": {"key": "directValueAnnotationsManager", "type": "object"},
        "entity_container": {"key": "entityContainer", "type": "IEdmEntityContainer"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.schema_elements = None
        self.vocabulary_annotations = None
        self.referenced_models = None
        self.declared_namespaces = None
        self.direct_value_annotations_manager = None
        self.entity_container = None


class IEdmNavigationProperty(_serialization.Model):
    """Defines EDM navigation property.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar partner: Defines EDM navigation property.
    :vartype partner: ~azure.mgmt.migrationhub.models.IEdmNavigationProperty
    :ivar on_delete: Known values are: "None" and "Cascade".
    :vartype on_delete: str or ~azure.mgmt.migrationhub.models.OnDelete
    :ivar contains_target:
    :vartype contains_target: bool
    :ivar referential_constraint: EDM constraint.
    :vartype referential_constraint: ~azure.mgmt.migrationhub.models.IEdmReferentialConstraint
    :ivar property_kind: Known values are: "None", "Structural", and "Navigation".
    :vartype property_kind: str or ~azure.mgmt.migrationhub.models.PropertyKind
    :ivar type: EDM type reference.
    :vartype type: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    :ivar declaring_type: EDM structured type.
    :vartype declaring_type: ~azure.mgmt.migrationhub.models.IEdmStructuredType
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "partner": {"readonly": True},
        "on_delete": {"readonly": True},
        "contains_target": {"readonly": True},
        "referential_constraint": {"readonly": True},
        "property_kind": {"readonly": True},
        "type": {"readonly": True},
        "declaring_type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "partner": {"key": "partner", "type": "IEdmNavigationProperty"},
        "on_delete": {"key": "onDelete", "type": "str"},
        "contains_target": {"key": "containsTarget", "type": "bool"},
        "referential_constraint": {"key": "referentialConstraint", "type": "IEdmReferentialConstraint"},
        "property_kind": {"key": "propertyKind", "type": "str"},
        "type": {"key": "type", "type": "IEdmTypeReference"},
        "declaring_type": {"key": "declaringType", "type": "IEdmStructuredType"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.partner = None
        self.on_delete = None
        self.contains_target = None
        self.referential_constraint = None
        self.property_kind = None
        self.type = None
        self.declaring_type = None
        self.name = None


class IEdmNavigationPropertyBinding(_serialization.Model):
    """EDM navigation properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar navigation_property: Defines EDM navigation property.
    :vartype navigation_property: ~azure.mgmt.migrationhub.models.IEdmNavigationProperty
    :ivar target: Defines EDM navigation using path, type and name.
    :vartype target: ~azure.mgmt.migrationhub.models.IEdmNavigationSource
    :ivar path: EDM path expression definition.
    :vartype path: ~azure.mgmt.migrationhub.models.IEdmPathExpression
    """

    _validation = {
        "navigation_property": {"readonly": True},
        "target": {"readonly": True},
        "path": {"readonly": True},
    }

    _attribute_map = {
        "navigation_property": {"key": "navigationProperty", "type": "IEdmNavigationProperty"},
        "target": {"key": "target", "type": "IEdmNavigationSource"},
        "path": {"key": "path", "type": "IEdmPathExpression"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.navigation_property = None
        self.target = None
        self.path = None


class IEdmNavigationSource(_serialization.Model):
    """Defines EDM navigation using path, type and name.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar navigation_property_bindings:
    :vartype navigation_property_bindings:
     list[~azure.mgmt.migrationhub.models.IEdmNavigationPropertyBinding]
    :ivar path: EDM path expression definition.
    :vartype path: ~azure.mgmt.migrationhub.models.IEdmPathExpression
    :ivar type: Defines EDM type.
    :vartype type: ~azure.mgmt.migrationhub.models.IEdmType
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "navigation_property_bindings": {"readonly": True},
        "path": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "navigation_property_bindings": {
            "key": "navigationPropertyBindings",
            "type": "[IEdmNavigationPropertyBinding]",
        },
        "path": {"key": "path", "type": "IEdmPathExpression"},
        "type": {"key": "type", "type": "IEdmType"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.navigation_property_bindings = None
        self.path = None
        self.type = None
        self.name = None


class IEdmPathExpression(_serialization.Model):
    """EDM path expression definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar path_segments:
    :vartype path_segments: list[str]
    :ivar path:
    :vartype path: str
    :ivar expression_kind: Known values are: "None", "BinaryConstant", "BooleanConstant",
     "DateTimeOffsetConstant", "DecimalConstant", "FloatingConstant", "GuidConstant",
     "IntegerConstant", "StringConstant", "DurationConstant", "Null", "Record", "Collection",
     "Path", "If", "Cast", "IsType", "FunctionApplication", "LabeledExpressionReference", "Labeled",
     "PropertyPath", "NavigationPropertyPath", "DateConstant", "TimeOfDayConstant", "EnumMember",
     "AnnotationPath", and "If".
    :vartype expression_kind: str or ~azure.mgmt.migrationhub.models.ExpressionKind
    """

    _validation = {
        "path_segments": {"readonly": True},
        "path": {"readonly": True},
        "expression_kind": {"readonly": True},
    }

    _attribute_map = {
        "path_segments": {"key": "pathSegments", "type": "[str]"},
        "path": {"key": "path", "type": "str"},
        "expression_kind": {"key": "expressionKind", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.path_segments = None
        self.path = None
        self.expression_kind = None


class IEdmProperty(_serialization.Model):
    """EDM property.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar property_kind: Known values are: "None", "Structural", and "Navigation".
    :vartype property_kind: str or ~azure.mgmt.migrationhub.models.PropertyKind
    :ivar type: EDM type reference.
    :vartype type: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    :ivar declaring_type: EDM structured type.
    :vartype declaring_type: ~azure.mgmt.migrationhub.models.IEdmStructuredType
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "property_kind": {"readonly": True},
        "type": {"readonly": True},
        "declaring_type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "property_kind": {"key": "propertyKind", "type": "str"},
        "type": {"key": "type", "type": "IEdmTypeReference"},
        "declaring_type": {"key": "declaringType", "type": "IEdmStructuredType"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.property_kind = None
        self.type = None
        self.declaring_type = None
        self.name = None


class IEdmReferentialConstraint(_serialization.Model):
    """EDM constraint.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar property_pairs:
    :vartype property_pairs:
     list[~azure.mgmt.migrationhub.models.EdmReferentialConstraintPropertyPair]
    """

    _validation = {
        "property_pairs": {"readonly": True},
    }

    _attribute_map = {
        "property_pairs": {"key": "propertyPairs", "type": "[EdmReferentialConstraintPropertyPair]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.property_pairs = None


class IEdmSchemaElement(_serialization.Model):
    """EDM Schema element.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar schema_element_kind: Known values are: "None", "TypeDefinition", "Term", "Action",
     "EntityContainer", and "Function".
    :vartype schema_element_kind: str or ~azure.mgmt.migrationhub.models.SchemaElementKind
    :ivar namespace:
    :vartype namespace: str
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "schema_element_kind": {"readonly": True},
        "namespace": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "schema_element_kind": {"key": "schemaElementKind", "type": "str"},
        "namespace": {"key": "namespace", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.schema_element_kind = None
        self.namespace = None
        self.name = None


class IEdmStructuralProperty(_serialization.Model):
    """EDM structural property.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar default_value_string:
    :vartype default_value_string: str
    :ivar property_kind: Known values are: "None", "Structural", and "Navigation".
    :vartype property_kind: str or ~azure.mgmt.migrationhub.models.PropertyKind
    :ivar type: EDM type reference.
    :vartype type: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    :ivar declaring_type: EDM structured type.
    :vartype declaring_type: ~azure.mgmt.migrationhub.models.IEdmStructuredType
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "default_value_string": {"readonly": True},
        "property_kind": {"readonly": True},
        "type": {"readonly": True},
        "declaring_type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "default_value_string": {"key": "defaultValueString", "type": "str"},
        "property_kind": {"key": "propertyKind", "type": "str"},
        "type": {"key": "type", "type": "IEdmTypeReference"},
        "declaring_type": {"key": "declaringType", "type": "IEdmStructuredType"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.default_value_string = None
        self.property_kind = None
        self.type = None
        self.declaring_type = None
        self.name = None


class IEdmStructuredType(_serialization.Model):
    """EDM structured type.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_abstract:
    :vartype is_abstract: bool
    :ivar is_open:
    :vartype is_open: bool
    :ivar base_type: EDM structured type.
    :vartype base_type: ~azure.mgmt.migrationhub.models.IEdmStructuredType
    :ivar declared_properties:
    :vartype declared_properties: list[~azure.mgmt.migrationhub.models.IEdmProperty]
    :ivar type_kind: Known values are: "None", "Primitive", "Entity", "Complex", "Collection",
     "EntityReference", "Enum", "TypeDefinition", "Untyped", and "Path".
    :vartype type_kind: str or ~azure.mgmt.migrationhub.models.TypeKind
    """

    _validation = {
        "is_abstract": {"readonly": True},
        "is_open": {"readonly": True},
        "base_type": {"readonly": True},
        "declared_properties": {"readonly": True},
        "type_kind": {"readonly": True},
    }

    _attribute_map = {
        "is_abstract": {"key": "isAbstract", "type": "bool"},
        "is_open": {"key": "isOpen", "type": "bool"},
        "base_type": {"key": "baseType", "type": "IEdmStructuredType"},
        "declared_properties": {"key": "declaredProperties", "type": "[IEdmProperty]"},
        "type_kind": {"key": "typeKind", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.is_abstract = None
        self.is_open = None
        self.base_type = None
        self.declared_properties = None
        self.type_kind = None


class IEdmTerm(_serialization.Model):
    """EDM term.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: EDM type reference.
    :vartype type: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    :ivar applies_to:
    :vartype applies_to: str
    :ivar default_value:
    :vartype default_value: str
    :ivar schema_element_kind: Known values are: "None", "TypeDefinition", "Term", "Action",
     "EntityContainer", and "Function".
    :vartype schema_element_kind: str or ~azure.mgmt.migrationhub.models.SchemaElementKind
    :ivar namespace:
    :vartype namespace: str
    :ivar name:
    :vartype name: str
    """

    _validation = {
        "type": {"readonly": True},
        "applies_to": {"readonly": True},
        "default_value": {"readonly": True},
        "schema_element_kind": {"readonly": True},
        "namespace": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "IEdmTypeReference"},
        "applies_to": {"key": "appliesTo", "type": "str"},
        "default_value": {"key": "defaultValue", "type": "str"},
        "schema_element_kind": {"key": "schemaElementKind", "type": "str"},
        "namespace": {"key": "namespace", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.applies_to = None
        self.default_value = None
        self.schema_element_kind = None
        self.namespace = None
        self.name = None


class IEdmType(_serialization.Model):
    """Defines EDM type.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type_kind: Known values are: "None", "Primitive", "Entity", "Complex", "Collection",
     "EntityReference", "Enum", "TypeDefinition", "Untyped", and "Path".
    :vartype type_kind: str or ~azure.mgmt.migrationhub.models.TypeKind
    """

    _validation = {
        "type_kind": {"readonly": True},
    }

    _attribute_map = {
        "type_kind": {"key": "typeKind", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type_kind = None


class IEdmTypeReference(_serialization.Model):
    """EDM type reference.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_nullable:
    :vartype is_nullable: bool
    :ivar definition: Defines EDM type.
    :vartype definition: ~azure.mgmt.migrationhub.models.IEdmType
    """

    _validation = {
        "is_nullable": {"readonly": True},
        "definition": {"readonly": True},
    }

    _attribute_map = {
        "is_nullable": {"key": "isNullable", "type": "bool"},
        "definition": {"key": "definition", "type": "IEdmType"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.is_nullable = None
        self.definition = None


class IEdmVocabularyAnnotation(_serialization.Model):
    """EDM vocabulary annotations.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar qualifier:
    :vartype qualifier: str
    :ivar term: EDM term.
    :vartype term: ~azure.mgmt.migrationhub.models.IEdmTerm
    :ivar target: EDM vocabulary annotatable type.
    :vartype target: JSON
    :ivar value: EDM expression.
    :vartype value: ~azure.mgmt.migrationhub.models.IEdmExpression
    """

    _validation = {
        "qualifier": {"readonly": True},
        "term": {"readonly": True},
        "target": {"readonly": True},
        "value": {"readonly": True},
    }

    _attribute_map = {
        "qualifier": {"key": "qualifier", "type": "str"},
        "term": {"key": "term", "type": "IEdmTerm"},
        "target": {"key": "target", "type": "object"},
        "value": {"key": "value", "type": "IEdmExpression"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.qualifier = None
        self.term = None
        self.target = None
        self.value = None


class IpConfiguration(_serialization.Model):
    """Defines Private link IP configuration.

    :ivar id:
    :vartype id: str
    :ivar private_ip_address:
    :vartype private_ip_address: str
    :ivar link_identifier:
    :vartype link_identifier: str
    :ivar group_id:
    :vartype group_id: str
    :ivar member_name:
    :vartype member_name: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "private_ip_address": {"key": "privateIpAddress", "type": "str"},
        "link_identifier": {"key": "linkIdentifier", "type": "str"},
        "group_id": {"key": "groupId", "type": "str"},
        "member_name": {"key": "memberName", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        private_ip_address: Optional[str] = None,
        link_identifier: Optional[str] = None,
        group_id: Optional[str] = None,
        member_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword private_ip_address:
        :paramtype private_ip_address: str
        :keyword link_identifier:
        :paramtype link_identifier: str
        :keyword group_id:
        :paramtype group_id: str
        :keyword member_name:
        :paramtype member_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.private_ip_address = private_ip_address
        self.link_identifier = link_identifier
        self.group_id = group_id
        self.member_name = member_name


class Machine(_serialization.Model):
    """Machine REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the relative URL to get to this REST resource.
    :vartype id: str
    :ivar name: Gets or sets the name of this REST resource.
    :vartype name: str
    :ivar type: Gets the type of this REST resource.
    :vartype type: str
    :ivar properties: Gets or sets the properties of the machine.
    :vartype properties: ~azure.mgmt.migrationhub.models.MachineProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "MachineProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.MachineProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets the relative URL to get to this REST resource.
        :paramtype id: str
        :keyword name: Gets or sets the name of this REST resource.
        :paramtype name: str
        :keyword properties: Gets or sets the properties of the machine.
        :paramtype properties: ~azure.mgmt.migrationhub.models.MachineProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class MachineCollection(_serialization.Model):
    """Collection of machines.

    :ivar value: Gets or sets the machines.
    :vartype value: list[~azure.mgmt.migrationhub.models.Machine]
    :ivar next_link: Gets or sets the value of nextLink.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[Machine]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.Machine"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the machines.
        :paramtype value: list[~azure.mgmt.migrationhub.models.Machine]
        :keyword next_link: Gets or sets the value of nextLink.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class MachineMigrateEventProperties(MigrateEventProperties):
    """Properties of the machine error resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Gets the Instance type.
    :vartype instance_type: str
    :ivar error_code: Gets or sets the error code.
    :vartype error_code: str
    :ivar error_message: Gets or sets the error message.
    :vartype error_message: str
    :ivar recommendation: Gets or sets the recommendation for the error.
    :vartype recommendation: str
    :ivar possible_causes: Gets or sets the possible causes for the error.
    :vartype possible_causes: str
    :ivar solution: Gets or sets the solution for which the error is being reported.
    :vartype solution: str
    :ivar client_request_id: Gets or sets the client request Id of the payload for which the event
     is being reported.
    :vartype client_request_id: str
    :ivar machine: Gets or sets the machine for which the error is being reported.
    :vartype machine: str
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "solution": {"key": "solution", "type": "str"},
        "client_request_id": {"key": "clientRequestId", "type": "str"},
        "machine": {"key": "machine", "type": "str"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        recommendation: Optional[str] = None,
        possible_causes: Optional[str] = None,
        solution: Optional[str] = None,
        client_request_id: Optional[str] = None,
        machine: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: Gets or sets the error code.
        :paramtype error_code: str
        :keyword error_message: Gets or sets the error message.
        :paramtype error_message: str
        :keyword recommendation: Gets or sets the recommendation for the error.
        :paramtype recommendation: str
        :keyword possible_causes: Gets or sets the possible causes for the error.
        :paramtype possible_causes: str
        :keyword solution: Gets or sets the solution for which the error is being reported.
        :paramtype solution: str
        :keyword client_request_id: Gets or sets the client request Id of the payload for which the
         event is being reported.
        :paramtype client_request_id: str
        :keyword machine: Gets or sets the machine for which the error is being reported.
        :paramtype machine: str
        """
        super().__init__(
            error_code=error_code,
            error_message=error_message,
            recommendation=recommendation,
            possible_causes=possible_causes,
            solution=solution,
            client_request_id=client_request_id,
            **kwargs
        )
        self.machine = machine


class MachineProperties(_serialization.Model):
    """Properties of the machine resource.

    :ivar discovery_data: Gets or sets the discovery details of the machine published by various
     sources.
    :vartype discovery_data: list[~azure.mgmt.migrationhub.models.DiscoveryDetails]
    :ivar assessment_data: Gets or sets the assessment details of the machine published by various
     sources.
    :vartype assessment_data: list[~azure.mgmt.migrationhub.models.AssessmentDetails]
    :ivar migration_data: Gets or sets the migration details of the machine published by various
     sources.
    :vartype migration_data: list[~azure.mgmt.migrationhub.models.MigrationDetails]
    :ivar last_updated_time: Gets or sets the time of the last modification of the machine.
    :vartype last_updated_time: ~datetime.datetime
    """

    _attribute_map = {
        "discovery_data": {"key": "discoveryData", "type": "[DiscoveryDetails]"},
        "assessment_data": {"key": "assessmentData", "type": "[AssessmentDetails]"},
        "migration_data": {"key": "migrationData", "type": "[MigrationDetails]"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        discovery_data: Optional[List["_models.DiscoveryDetails"]] = None,
        assessment_data: Optional[List["_models.AssessmentDetails"]] = None,
        migration_data: Optional[List["_models.MigrationDetails"]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword discovery_data: Gets or sets the discovery details of the machine published by various
         sources.
        :paramtype discovery_data: list[~azure.mgmt.migrationhub.models.DiscoveryDetails]
        :keyword assessment_data: Gets or sets the assessment details of the machine published by
         various sources.
        :paramtype assessment_data: list[~azure.mgmt.migrationhub.models.AssessmentDetails]
        :keyword migration_data: Gets or sets the migration details of the machine published by various
         sources.
        :paramtype migration_data: list[~azure.mgmt.migrationhub.models.MigrationDetails]
        :keyword last_updated_time: Gets or sets the time of the last modification of the machine.
        :paramtype last_updated_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.discovery_data = discovery_data
        self.assessment_data = assessment_data
        self.migration_data = migration_data
        self.last_updated_time = last_updated_time


class MigrateEvent(_serialization.Model):
    """MigrateEvent REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the relative URL to get to this REST resource.
    :vartype id: str
    :ivar name: Gets or sets the name of this REST resource.
    :vartype name: str
    :ivar type: Gets the type of this REST resource.
    :vartype type: str
    :ivar properties: Gets or sets the properties of the event.
    :vartype properties: ~azure.mgmt.migrationhub.models.MigrateEventProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "MigrateEventProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.MigrateEventProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets the relative URL to get to this REST resource.
        :paramtype id: str
        :keyword name: Gets or sets the name of this REST resource.
        :paramtype name: str
        :keyword properties: Gets or sets the properties of the event.
        :paramtype properties: ~azure.mgmt.migrationhub.models.MigrateEventProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class MigrateProject(_serialization.Model):
    """Migrate project.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: Properties of a migrate project.
    :vartype properties: ~azure.mgmt.migrationhub.models.MigrateProjectProperties
    :ivar e_tag: For optimistic concurrency control.
    :vartype e_tag: str
    :ivar location: Azure location in which project is created.
    :vartype location: str
    :ivar id: Path reference to this project
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: Name of the project.
    :vartype name: str
    :ivar type: Type of the object = [Microsoft.Migrate/migrateProjects].
    :vartype type: str
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.migrationhub.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "MigrateProjectProperties"},
        "e_tag": {"key": "eTag", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.MigrateProjectProperties"] = None,
        e_tag: Optional[str] = None,
        location: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Properties of a migrate project.
        :paramtype properties: ~azure.mgmt.migrationhub.models.MigrateProjectProperties
        :keyword e_tag: For optimistic concurrency control.
        :paramtype e_tag: str
        :keyword location: Azure location in which project is created.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.e_tag = e_tag
        self.location = location
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class MigrateProjectProperties(_serialization.Model):
    """Properties of a migrate project.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar registered_tools: Register tools inside project.
    :vartype registered_tools: list[str or ~azure.mgmt.migrationhub.models.Items]
    :ivar service_endpoint: Service endpoint.
    :vartype service_endpoint: str
    :ivar summary: Project summary.
    :vartype summary: dict[str, ~azure.mgmt.migrationhub.models.ProjectSummary]
    :ivar last_summary_refreshed_time: Last summary refresh time.
    :vartype last_summary_refreshed_time: ~datetime.datetime
    :ivar refresh_summary_state: Refresh summary state. Known values are: "Started", "InProgress",
     "Completed", and "Failed".
    :vartype refresh_summary_state: str or ~azure.mgmt.migrationhub.models.RefreshSummaryState
    :ivar utility_storage_account_id: Utility storage account id.
    :vartype utility_storage_account_id: str
    :ivar public_network_access: Gets or sets the state of public network access. Known values are:
     "NotSpecified", "Enabled", and "Disabled".
    :vartype public_network_access: str or ~azure.mgmt.migrationhub.models.PublicNetworkAccess
    :ivar private_endpoint_connections: Gets the private endpoint connections.
    :vartype private_endpoint_connections:
     list[~azure.mgmt.migrationhub.models.PrivateEndpointConnection]
    """

    _validation = {
        "registered_tools": {"readonly": True},
        "summary": {"readonly": True},
        "last_summary_refreshed_time": {"readonly": True},
        "refresh_summary_state": {"readonly": True},
        "private_endpoint_connections": {"readonly": True},
    }

    _attribute_map = {
        "registered_tools": {"key": "registeredTools", "type": "[str]"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "summary": {"key": "summary", "type": "{ProjectSummary}"},
        "last_summary_refreshed_time": {"key": "lastSummaryRefreshedTime", "type": "iso-8601"},
        "refresh_summary_state": {"key": "refreshSummaryState", "type": "str"},
        "utility_storage_account_id": {"key": "utilityStorageAccountId", "type": "str"},
        "public_network_access": {"key": "publicNetworkAccess", "type": "str"},
        "private_endpoint_connections": {"key": "privateEndpointConnections", "type": "[PrivateEndpointConnection]"},
    }

    def __init__(
        self,
        *,
        service_endpoint: Optional[str] = None,
        utility_storage_account_id: Optional[str] = None,
        public_network_access: Optional[Union[str, "_models.PublicNetworkAccess"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_endpoint: Service endpoint.
        :paramtype service_endpoint: str
        :keyword utility_storage_account_id: Utility storage account id.
        :paramtype utility_storage_account_id: str
        :keyword public_network_access: Gets or sets the state of public network access. Known values
         are: "NotSpecified", "Enabled", and "Disabled".
        :paramtype public_network_access: str or ~azure.mgmt.migrationhub.models.PublicNetworkAccess
        """
        super().__init__(**kwargs)
        self.registered_tools = None
        self.service_endpoint = service_endpoint
        self.summary = None
        self.last_summary_refreshed_time = None
        self.refresh_summary_state = None
        self.utility_storage_account_id = utility_storage_account_id
        self.public_network_access = public_network_access
        self.private_endpoint_connections = None


class MigrationDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Migration properties that can be shared by various publishers.

    :ivar id: Gets the relative URL to get to this MigrationDetails resource.
    :vartype id: str
    :ivar migration_phase: Gets or sets the phase of migration of the machine.
    :vartype migration_phase: str
    :ivar migration_tested: Gets or sets a value indicating whether migration was tested on the
     machine.
    :vartype migration_tested: bool
    :ivar replication_progress_percentage: Gets or sets the progress percentage of migration on the
     machine.
    :vartype replication_progress_percentage: int
    :ivar target_vm_arm_id: Gets or sets the ARM id the migrated VM.
    :vartype target_vm_arm_id: str
    :ivar enqueue_time: Gets or sets the time the message was enqueued.
    :vartype enqueue_time: str
    :ivar solution_name: Gets or sets the name of the solution that sent the data.
    :vartype solution_name: str
    :ivar machine_id: Gets or sets the unique identifier of the machine.
    :vartype machine_id: str
    :ivar machine_manager_id: Gets or sets the unique identifier of the virtual machine
     manager(vCenter/VMM).
    :vartype machine_manager_id: str
    :ivar fabric_type: Gets or sets the fabric type.
    :vartype fabric_type: str
    :ivar last_updated_time: Gets or sets the time of the last modification of the machine details.
    :vartype last_updated_time: ~datetime.datetime
    :ivar machine_name: Gets or sets the name of the machine.
    :vartype machine_name: str
    :ivar ip_addresses: Gets or sets the list of IP addresses of the machine. IP addresses could be
     IP V4 or IP V6.
    :vartype ip_addresses: list[str]
    :ivar fqdn: Gets or sets the FQDN of the machine.
    :vartype fqdn: str
    :ivar bios_id: Gets or sets the BIOS ID of the machine.
    :vartype bios_id: str
    :ivar mac_addresses: Gets or sets the list of MAC addresses of the machine.
    :vartype mac_addresses: list[str]
    :ivar extended_info: Gets or sets the ISV specific extended information.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "migration_phase": {"key": "migrationPhase", "type": "str"},
        "migration_tested": {"key": "migrationTested", "type": "bool"},
        "replication_progress_percentage": {"key": "replicationProgressPercentage", "type": "int"},
        "target_vm_arm_id": {"key": "targetVMArmId", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "machine_id": {"key": "machineId", "type": "str"},
        "machine_manager_id": {"key": "machineManagerId", "type": "str"},
        "fabric_type": {"key": "fabricType", "type": "str"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "machine_name": {"key": "machineName", "type": "str"},
        "ip_addresses": {"key": "ipAddresses", "type": "[str]"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "bios_id": {"key": "biosId", "type": "str"},
        "mac_addresses": {"key": "macAddresses", "type": "[str]"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        migration_phase: Optional[str] = None,
        migration_tested: Optional[bool] = None,
        replication_progress_percentage: Optional[int] = None,
        target_vm_arm_id: Optional[str] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        machine_id: Optional[str] = None,
        machine_manager_id: Optional[str] = None,
        fabric_type: Optional[str] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        machine_name: Optional[str] = None,
        ip_addresses: Optional[List[str]] = None,
        fqdn: Optional[str] = None,
        bios_id: Optional[str] = None,
        mac_addresses: Optional[List[str]] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets the relative URL to get to this MigrationDetails resource.
        :paramtype id: str
        :keyword migration_phase: Gets or sets the phase of migration of the machine.
        :paramtype migration_phase: str
        :keyword migration_tested: Gets or sets a value indicating whether migration was tested on the
         machine.
        :paramtype migration_tested: bool
        :keyword replication_progress_percentage: Gets or sets the progress percentage of migration on
         the machine.
        :paramtype replication_progress_percentage: int
        :keyword target_vm_arm_id: Gets or sets the ARM id the migrated VM.
        :paramtype target_vm_arm_id: str
        :keyword enqueue_time: Gets or sets the time the message was enqueued.
        :paramtype enqueue_time: str
        :keyword solution_name: Gets or sets the name of the solution that sent the data.
        :paramtype solution_name: str
        :keyword machine_id: Gets or sets the unique identifier of the machine.
        :paramtype machine_id: str
        :keyword machine_manager_id: Gets or sets the unique identifier of the virtual machine
         manager(vCenter/VMM).
        :paramtype machine_manager_id: str
        :keyword fabric_type: Gets or sets the fabric type.
        :paramtype fabric_type: str
        :keyword last_updated_time: Gets or sets the time of the last modification of the machine
         details.
        :paramtype last_updated_time: ~datetime.datetime
        :keyword machine_name: Gets or sets the name of the machine.
        :paramtype machine_name: str
        :keyword ip_addresses: Gets or sets the list of IP addresses of the machine. IP addresses could
         be IP V4 or IP V6.
        :paramtype ip_addresses: list[str]
        :keyword fqdn: Gets or sets the FQDN of the machine.
        :paramtype fqdn: str
        :keyword bios_id: Gets or sets the BIOS ID of the machine.
        :paramtype bios_id: str
        :keyword mac_addresses: Gets or sets the list of MAC addresses of the machine.
        :paramtype mac_addresses: list[str]
        :keyword extended_info: Gets or sets the ISV specific extended information.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = id
        self.migration_phase = migration_phase
        self.migration_tested = migration_tested
        self.replication_progress_percentage = replication_progress_percentage
        self.target_vm_arm_id = target_vm_arm_id
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.machine_id = machine_id
        self.machine_manager_id = machine_manager_id
        self.fabric_type = fabric_type
        self.last_updated_time = last_updated_time
        self.machine_name = machine_name
        self.ip_addresses = ip_addresses
        self.fqdn = fqdn
        self.bios_id = bios_id
        self.mac_addresses = mac_addresses
        self.extended_info = extended_info


class ODataPath(_serialization.Model):
    """Defines OData path.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar edm_type: Defines EDM type.
    :vartype edm_type: ~azure.mgmt.migrationhub.models.IEdmType
    :ivar navigation_source: Defines EDM navigation using path, type and name.
    :vartype navigation_source: ~azure.mgmt.migrationhub.models.IEdmNavigationSource
    :ivar segments:
    :vartype segments: list[~azure.mgmt.migrationhub.models.ODataPathSegment]
    :ivar path_template:
    :vartype path_template: str
    :ivar path:
    :vartype path: list[~azure.mgmt.migrationhub.models.ODataPathSegment]
    """

    _validation = {
        "edm_type": {"readonly": True},
        "navigation_source": {"readonly": True},
        "segments": {"readonly": True},
        "path_template": {"readonly": True},
        "path": {"readonly": True},
    }

    _attribute_map = {
        "edm_type": {"key": "edmType", "type": "IEdmType"},
        "navigation_source": {"key": "navigationSource", "type": "IEdmNavigationSource"},
        "segments": {"key": "segments", "type": "[ODataPathSegment]"},
        "path_template": {"key": "pathTemplate", "type": "str"},
        "path": {"key": "path", "type": "[ODataPathSegment]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.edm_type = None
        self.navigation_source = None
        self.segments = None
        self.path_template = None
        self.path = None


class ODataPathSegment(_serialization.Model):
    """OData path segment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar edm_type: Defines EDM type.
    :vartype edm_type: ~azure.mgmt.migrationhub.models.IEdmType
    :ivar identifier:
    :vartype identifier: str
    """

    _validation = {
        "edm_type": {"readonly": True},
    }

    _attribute_map = {
        "edm_type": {"key": "edmType", "type": "IEdmType"},
        "identifier": {"key": "identifier", "type": "str"},
    }

    def __init__(self, *, identifier: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword identifier:
        :paramtype identifier: str
        """
        super().__init__(**kwargs)
        self.edm_type = None
        self.identifier = identifier


class ODataQueryContext(_serialization.Model):
    """Query options context.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar default_query_settings: Provides default query settings.
    :vartype default_query_settings: ~azure.mgmt.migrationhub.models.DefaultQuerySettings
    :ivar model: Defines EDM model properties.
    :vartype model: ~azure.mgmt.migrationhub.models.IEdmModel
    :ivar element_type: Defines EDM type.
    :vartype element_type: ~azure.mgmt.migrationhub.models.IEdmType
    :ivar navigation_source: Defines EDM navigation using path, type and name.
    :vartype navigation_source: ~azure.mgmt.migrationhub.models.IEdmNavigationSource
    :ivar element_clr_type:
    :vartype element_clr_type: str
    :ivar path: Defines OData path.
    :vartype path: ~azure.mgmt.migrationhub.models.ODataPath
    :ivar request_container: Service provider value.
    :vartype request_container: JSON
    """

    _validation = {
        "default_query_settings": {"readonly": True},
        "model": {"readonly": True},
        "element_type": {"readonly": True},
        "navigation_source": {"readonly": True},
        "element_clr_type": {"readonly": True},
        "path": {"readonly": True},
        "request_container": {"readonly": True},
    }

    _attribute_map = {
        "default_query_settings": {"key": "defaultQuerySettings", "type": "DefaultQuerySettings"},
        "model": {"key": "model", "type": "IEdmModel"},
        "element_type": {"key": "elementType", "type": "IEdmType"},
        "navigation_source": {"key": "navigationSource", "type": "IEdmNavigationSource"},
        "element_clr_type": {"key": "elementClrType", "type": "str"},
        "path": {"key": "path", "type": "ODataPath"},
        "request_container": {"key": "requestContainer", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.default_query_settings = None
        self.model = None
        self.element_type = None
        self.navigation_source = None
        self.element_clr_type = None
        self.path = None
        self.request_container = None


class ODataQueryOptions1(_serialization.Model):
    """OData Query options.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar filter: Filter query option providing validator and filterClause.
    :vartype filter: ~azure.mgmt.migrationhub.models.FilterQueryOption
    """

    _validation = {
        "filter": {"readonly": True},
    }

    _attribute_map = {
        "filter": {"key": "filter", "type": "FilterQueryOption"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.filter = None


class ODataRawQueryOptions(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Query options for raw queries.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar filter:
    :vartype filter: str
    :ivar apply:
    :vartype apply: str
    :ivar order_by:
    :vartype order_by: str
    :ivar top:
    :vartype top: str
    :ivar skip:
    :vartype skip: str
    :ivar select:
    :vartype select: str
    :ivar expand:
    :vartype expand: str
    :ivar count:
    :vartype count: str
    :ivar format:
    :vartype format: str
    :ivar skip_token:
    :vartype skip_token: str
    :ivar delta_token:
    :vartype delta_token: str
    """

    _validation = {
        "filter": {"readonly": True},
        "apply": {"readonly": True},
        "order_by": {"readonly": True},
        "top": {"readonly": True},
        "skip": {"readonly": True},
        "select": {"readonly": True},
        "expand": {"readonly": True},
        "count": {"readonly": True},
        "format": {"readonly": True},
        "skip_token": {"readonly": True},
        "delta_token": {"readonly": True},
    }

    _attribute_map = {
        "filter": {"key": "filter", "type": "str"},
        "apply": {"key": "apply", "type": "str"},
        "order_by": {"key": "orderBy", "type": "str"},
        "top": {"key": "top", "type": "str"},
        "skip": {"key": "skip", "type": "str"},
        "select": {"key": "select", "type": "str"},
        "expand": {"key": "expand", "type": "str"},
        "count": {"key": "count", "type": "str"},
        "format": {"key": "format", "type": "str"},
        "skip_token": {"key": "skipToken", "type": "str"},
        "delta_token": {"key": "deltaToken", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.filter = None
        self.apply = None
        self.order_by = None
        self.top = None
        self.skip = None
        self.select = None
        self.expand = None
        self.count = None
        self.format = None
        self.skip_token = None
        self.delta_token = None


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.migrationhub.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.migrationhub.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.migrationhub.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.migrationhub.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.migrationhub.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateEndpointConnection(_serialization.Model):
    """REST model used to encapsulate the user visible state of a PrivateEndpoint.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Relative URL to get this Sites.
    :vartype id: str
    :ivar name: Gets the name of the resource.
    :vartype name: str
    :ivar type: Gets the resource type.
    :vartype type: str
    :ivar e_tag: Gets the tag for optimistic concurrency control.
    :vartype e_tag: str
    :ivar properties: Gets the properties of the object.
    :vartype properties: ~azure.mgmt.migrationhub.models.PrivateEndpointConnectionProperties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.migrationhub.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "e_tag": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "e_tag": {"key": "eTag", "type": "str"},
        "properties": {"key": "properties", "type": "PrivateEndpointConnectionProperties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self, *, properties: Optional["_models.PrivateEndpointConnectionProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: Gets the properties of the object.
        :paramtype properties: ~azure.mgmt.migrationhub.models.PrivateEndpointConnectionProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.e_tag = None
        self.properties = properties
        self.system_data = None


class PrivateEndpointConnectionCollection(_serialization.Model):
    """Collection of PrivateLink resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Gets the list of machines.
    :vartype value: list[~azure.mgmt.migrationhub.models.PrivateEndpointConnection]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnection]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateEndpointConnectionProperties(_serialization.Model):
    """Properties of a private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Provisioning state. Known values are: "Accepted", "InProgress",
     "Succeeded", "Failed", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrationhub.models.ProvisioningState
    :ivar private_endpoint: Defines resource ID of a private endpoint connection.
    :vartype private_endpoint: ~azure.mgmt.migrationhub.models.ResourceId
    :ivar private_link_service_connection_state: Gets the properties of the object.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.migrationhub.models.PrivateLinkServiceConnectionState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "private_endpoint": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "private_endpoint": {"key": "privateEndpoint", "type": "ResourceId"},
        "private_link_service_connection_state": {
            "key": "privateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
    }

    def __init__(
        self,
        *,
        private_link_service_connection_state: Optional["_models.PrivateLinkServiceConnectionState"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword private_link_service_connection_state: Gets the properties of the object.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.migrationhub.models.PrivateLinkServiceConnectionState
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.private_endpoint = None
        self.private_link_service_connection_state = private_link_service_connection_state


class PrivateEndpointConnectionProxy(_serialization.Model):
    """Defines Private endpoint proxy resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :ivar e_tag:
    :vartype e_tag: str
    :ivar properties: Properties of a private endpoint connection proxy.
    :vartype properties: ~azure.mgmt.migrationhub.models.PrivateEndpointConnectionProxyProperties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.migrationhub.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "e_tag": {"key": "eTag", "type": "str"},
        "properties": {"key": "properties", "type": "PrivateEndpointConnectionProxyProperties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        properties: Optional["_models.PrivateEndpointConnectionProxyProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword e_tag:
        :paramtype e_tag: str
        :keyword properties: Properties of a private endpoint connection proxy.
        :paramtype properties: ~azure.mgmt.migrationhub.models.PrivateEndpointConnectionProxyProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.e_tag = e_tag
        self.properties = properties
        self.system_data = None


class PrivateEndpointConnectionProxyCollection(_serialization.Model):
    """Collection of PrivateLink proxy resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Gets the list of PrivateLink proxy resources.
    :vartype value: list[~azure.mgmt.migrationhub.models.PrivateEndpointConnectionProxy]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnectionProxy]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateEndpointConnectionProxyProperties(_serialization.Model):
    """Properties of a private endpoint connection proxy.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar remote_private_endpoint: Defines Private endpoint additional details.
    :vartype remote_private_endpoint: ~azure.mgmt.migrationhub.models.PrivateEndpointDetails
    :ivar status: Known values are: "Succeeded", "Failed", "Cancelled", and "Running".
    :vartype status: str or
     ~azure.mgmt.migrationhub.models.PrivateEndpointConnectionProxyPropertiesStatus
    """

    _validation = {
        "remote_private_endpoint": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "remote_private_endpoint": {"key": "remotePrivateEndpoint", "type": "PrivateEndpointDetails"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.remote_private_endpoint = None
        self.status = None


class PrivateEndpointDetails(_serialization.Model):
    """Defines Private endpoint additional details.

    :ivar id:
    :vartype id: str
    :ivar manual_private_link_service_connections:
    :vartype manual_private_link_service_connections:
     list[~azure.mgmt.migrationhub.models.PrivateLinkServiceConnection]
    :ivar private_link_service_connections:
    :vartype private_link_service_connections:
     list[~azure.mgmt.migrationhub.models.PrivateLinkServiceConnection]
    :ivar private_link_service_proxies:
    :vartype private_link_service_proxies:
     list[~azure.mgmt.migrationhub.models.PrivateLinkServiceProxy]
    :ivar connection_details:
    :vartype connection_details: list[~azure.mgmt.migrationhub.models.IpConfiguration]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "manual_private_link_service_connections": {
            "key": "manualPrivateLinkServiceConnections",
            "type": "[PrivateLinkServiceConnection]",
        },
        "private_link_service_connections": {
            "key": "privateLinkServiceConnections",
            "type": "[PrivateLinkServiceConnection]",
        },
        "private_link_service_proxies": {"key": "privateLinkServiceProxies", "type": "[PrivateLinkServiceProxy]"},
        "connection_details": {"key": "connectionDetails", "type": "[IpConfiguration]"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        manual_private_link_service_connections: Optional[List["_models.PrivateLinkServiceConnection"]] = None,
        private_link_service_connections: Optional[List["_models.PrivateLinkServiceConnection"]] = None,
        private_link_service_proxies: Optional[List["_models.PrivateLinkServiceProxy"]] = None,
        connection_details: Optional[List["_models.IpConfiguration"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword manual_private_link_service_connections:
        :paramtype manual_private_link_service_connections:
         list[~azure.mgmt.migrationhub.models.PrivateLinkServiceConnection]
        :keyword private_link_service_connections:
        :paramtype private_link_service_connections:
         list[~azure.mgmt.migrationhub.models.PrivateLinkServiceConnection]
        :keyword private_link_service_proxies:
        :paramtype private_link_service_proxies:
         list[~azure.mgmt.migrationhub.models.PrivateLinkServiceProxy]
        :keyword connection_details:
        :paramtype connection_details: list[~azure.mgmt.migrationhub.models.IpConfiguration]
        """
        super().__init__(**kwargs)
        self.id = id
        self.manual_private_link_service_connections = manual_private_link_service_connections
        self.private_link_service_connections = private_link_service_connections
        self.private_link_service_proxies = private_link_service_proxies
        self.connection_details = connection_details


class PrivateLinkResource(_serialization.Model):
    """Private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Relative URL to get this Sites.
    :vartype id: str
    :ivar name: Gets the name of the resource.
    :vartype name: str
    :ivar type: Gets the resource type.
    :vartype type: str
    :ivar properties: Gets nested properties.
    :vartype properties: ~azure.mgmt.migrationhub.models.PrivateLinkResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "properties": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "PrivateLinkResourceProperties"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.properties = None


class PrivateLinkResourceCollection(_serialization.Model):
    """Collection of private link resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of private links.
    :vartype value: list[~azure.mgmt.migrationhub.models.PrivateLinkResource]
    :ivar next_link: Value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateLinkResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateLinkResourceProperties(_serialization.Model):
    """Properties of private link resource.

    :ivar required_members: Required members.
    :vartype required_members: list[str]
    :ivar required_zone_names: Required zone names.
    :vartype required_zone_names: list[str]
    :ivar group_id: Group id.
    :vartype group_id: str
    """

    _attribute_map = {
        "required_members": {"key": "requiredMembers", "type": "[str]"},
        "required_zone_names": {"key": "requiredZoneNames", "type": "[str]"},
        "group_id": {"key": "groupId", "type": "str"},
    }

    def __init__(
        self,
        *,
        required_members: Optional[List[str]] = None,
        required_zone_names: Optional[List[str]] = None,
        group_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword required_members: Required members.
        :paramtype required_members: list[str]
        :keyword required_zone_names: Required zone names.
        :paramtype required_zone_names: list[str]
        :keyword group_id: Group id.
        :paramtype group_id: str
        """
        super().__init__(**kwargs)
        self.required_members = required_members
        self.required_zone_names = required_zone_names
        self.group_id = group_id


class PrivateLinkServiceConnection(_serialization.Model):
    """Defines Private link service connection.

    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar group_ids:
    :vartype group_ids: list[str]
    :ivar request_message:
    :vartype request_message: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "group_ids": {"key": "groupIds", "type": "[str]"},
        "request_message": {"key": "requestMessage", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        group_ids: Optional[List[str]] = None,
        request_message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword name:
        :paramtype name: str
        :keyword group_ids:
        :paramtype group_ids: list[str]
        :keyword request_message:
        :paramtype request_message: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.group_ids = group_ids
        self.request_message = request_message


class PrivateLinkServiceConnectionState(_serialization.Model):
    """Private endpoint connection state.

    :ivar status: Private link connection state. Known values are: "Approved", "Pending",
     "Rejected", and "Disconnected".
    :vartype status: str or ~azure.mgmt.migrationhub.models.PrivateLinkServiceConnectionStateStatus
    :ivar description: Description of the object.
    :vartype description: str
    :ivar actions_required: Action required.
    :vartype actions_required: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "actions_required": {"key": "actionsRequired", "type": "str"},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "_models.PrivateLinkServiceConnectionStateStatus"]] = None,
        description: Optional[str] = None,
        actions_required: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: Private link connection state. Known values are: "Approved", "Pending",
         "Rejected", and "Disconnected".
        :paramtype status: str or
         ~azure.mgmt.migrationhub.models.PrivateLinkServiceConnectionStateStatus
        :keyword description: Description of the object.
        :paramtype description: str
        :keyword actions_required: Action required.
        :paramtype actions_required: str
        """
        super().__init__(**kwargs)
        self.status = status
        self.description = description
        self.actions_required = actions_required


class PrivateLinkServiceProxy(_serialization.Model):
    """Defines Private link service proxy.

    :ivar id:
    :vartype id: str
    :ivar group_connectivity_information:
    :vartype group_connectivity_information:
     list[~azure.mgmt.migrationhub.models.GroupConnectivityInformation]
    :ivar remote_private_endpoint_connection: Defines resource ID of a private endpoint connection.
    :vartype remote_private_endpoint_connection: ~azure.mgmt.migrationhub.models.ResourceId
    :ivar remote_private_link_service_connection_state: Private endpoint connection state.
    :vartype remote_private_link_service_connection_state:
     ~azure.mgmt.migrationhub.models.PrivateLinkServiceConnectionState
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "group_connectivity_information": {
            "key": "groupConnectivityInformation",
            "type": "[GroupConnectivityInformation]",
        },
        "remote_private_endpoint_connection": {"key": "remotePrivateEndpointConnection", "type": "ResourceId"},
        "remote_private_link_service_connection_state": {
            "key": "remotePrivateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        group_connectivity_information: Optional[List["_models.GroupConnectivityInformation"]] = None,
        remote_private_endpoint_connection: Optional["_models.ResourceId"] = None,
        remote_private_link_service_connection_state: Optional["_models.PrivateLinkServiceConnectionState"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword group_connectivity_information:
        :paramtype group_connectivity_information:
         list[~azure.mgmt.migrationhub.models.GroupConnectivityInformation]
        :keyword remote_private_endpoint_connection: Defines resource ID of a private endpoint
         connection.
        :paramtype remote_private_endpoint_connection: ~azure.mgmt.migrationhub.models.ResourceId
        :keyword remote_private_link_service_connection_state: Private endpoint connection state.
        :paramtype remote_private_link_service_connection_state:
         ~azure.mgmt.migrationhub.models.PrivateLinkServiceConnectionState
        """
        super().__init__(**kwargs)
        self.id = id
        self.group_connectivity_information = group_connectivity_information
        self.remote_private_endpoint_connection = remote_private_endpoint_connection
        self.remote_private_link_service_connection_state = remote_private_link_service_connection_state


class ProjectResultList(_serialization.Model):
    """List of projects.

    :ivar value: List of projects.
    :vartype value: list[~azure.mgmt.migrationhub.models.MigrateProject]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[MigrateProject]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.MigrateProject"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: List of projects.
        :paramtype value: list[~azure.mgmt.migrationhub.models.MigrateProject]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class RangeVariable(_serialization.Model):
    """Defines variable of kind range.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name:
    :vartype name: str
    :ivar type_reference: EDM type reference.
    :vartype type_reference: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    :ivar kind:
    :vartype kind: int
    """

    _validation = {
        "name": {"readonly": True},
        "type_reference": {"readonly": True},
        "kind": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type_reference": {"key": "typeReference", "type": "IEdmTypeReference"},
        "kind": {"key": "kind", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.type_reference = None
        self.kind = None


class RefreshSummaryInput(_serialization.Model):
    """Class representing the refresh summary input.

    :ivar goal: Gets or sets the goal for which summary needs to be refreshed. Known values are:
     "Servers", "Databases", "DesktopVirtualization", "WebApplications", and "DataCenter".
    :vartype goal: str or ~azure.mgmt.migrationhub.models.Goal
    """

    _attribute_map = {
        "goal": {"key": "goal", "type": "str"},
    }

    def __init__(self, *, goal: Optional[Union[str, "_models.Goal"]] = None, **kwargs: Any) -> None:
        """
        :keyword goal: Gets or sets the goal for which summary needs to be refreshed. Known values are:
         "Servers", "Databases", "DesktopVirtualization", "WebApplications", and "DataCenter".
        :paramtype goal: str or ~azure.mgmt.migrationhub.models.Goal
        """
        super().__init__(**kwargs)
        self.goal = goal


class RefreshSummaryResult(_serialization.Model):
    """Class representing the refresh summary status of the migrate project.

    :ivar is_refreshed: Gets or sets a value indicating whether the migrate project summary is
     refreshed.
    :vartype is_refreshed: bool
    """

    _attribute_map = {
        "is_refreshed": {"key": "isRefreshed", "type": "bool"},
    }

    def __init__(self, *, is_refreshed: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword is_refreshed: Gets or sets a value indicating whether the migrate project summary is
         refreshed.
        :paramtype is_refreshed: bool
        """
        super().__init__(**kwargs)
        self.is_refreshed = is_refreshed


class RegisterToolInput(_serialization.Model):
    """Class representing the register tool input.

    :ivar tool: Gets or sets the tool to be registered. Known values are: "ServerDiscovery",
     "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech",
     "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant",
     "DatabaseMigrationService", "Device42", "JetStream", "RackWare", "UnifyCloud", "Flexera",
     "ServerDiscovery_Import", "Lakeside", "AppServiceMigrationAssistant", "Movere", "CloudSphere",
     "Modernization", "ServerMigration_DataReplication", and "Unknown".
    :vartype tool: str or ~azure.mgmt.migrationhub.models.Tool
    """

    _attribute_map = {
        "tool": {"key": "tool", "type": "str"},
    }

    def __init__(self, *, tool: Optional[Union[str, "_models.Tool"]] = None, **kwargs: Any) -> None:
        """
        :keyword tool: Gets or sets the tool to be registered. Known values are: "ServerDiscovery",
         "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech",
         "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant",
         "DatabaseMigrationService", "Device42", "JetStream", "RackWare", "UnifyCloud", "Flexera",
         "ServerDiscovery_Import", "Lakeside", "AppServiceMigrationAssistant", "Movere", "CloudSphere",
         "Modernization", "ServerMigration_DataReplication", and "Unknown".
        :paramtype tool: str or ~azure.mgmt.migrationhub.models.Tool
        """
        super().__init__(**kwargs)
        self.tool = tool


class RegistrationDetailsInput(_serialization.Model):
    """RegistrationDetailsInput.

    :ivar tool: Gets or sets the tool to be registered. Known values are: "ServerDiscovery",
     "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech",
     "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant",
     "DatabaseMigrationService", "Device42", "JetStream", "RackWare", "UnifyCloud", "Flexera",
     "ServerDiscovery_Import", "Lakeside", "AppServiceMigrationAssistant", "Movere", "CloudSphere",
     "Modernization", "ServerMigration_DataReplication", and "Unknown".
    :vartype tool: str or ~azure.mgmt.migrationhub.models.Tool
    :ivar application_details:
    :vartype application_details: ~azure.mgmt.migrationhub.models.AadAppDetails
    """

    _attribute_map = {
        "tool": {"key": "tool", "type": "str"},
        "application_details": {"key": "applicationDetails", "type": "AadAppDetails"},
    }

    def __init__(
        self,
        *,
        tool: Optional[Union[str, "_models.Tool"]] = None,
        application_details: Optional["_models.AadAppDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tool: Gets or sets the tool to be registered. Known values are: "ServerDiscovery",
         "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech",
         "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant",
         "DatabaseMigrationService", "Device42", "JetStream", "RackWare", "UnifyCloud", "Flexera",
         "ServerDiscovery_Import", "Lakeside", "AppServiceMigrationAssistant", "Movere", "CloudSphere",
         "Modernization", "ServerMigration_DataReplication", and "Unknown".
        :paramtype tool: str or ~azure.mgmt.migrationhub.models.Tool
        :keyword application_details:
        :paramtype application_details: ~azure.mgmt.migrationhub.models.AadAppDetails
        """
        super().__init__(**kwargs)
        self.tool = tool
        self.application_details = application_details


class RegistrationDetailsResponse(_serialization.Model):
    """RegistrationDetailsResponse.

    :ivar service_endpoint:
    :vartype service_endpoint: str
    :ivar one_time_key:
    :vartype one_time_key: str
    """

    _attribute_map = {
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "one_time_key": {"key": "oneTimeKey", "type": "str"},
    }

    def __init__(
        self, *, service_endpoint: Optional[str] = None, one_time_key: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword service_endpoint:
        :paramtype service_endpoint: str
        :keyword one_time_key:
        :paramtype one_time_key: str
        """
        super().__init__(**kwargs)
        self.service_endpoint = service_endpoint
        self.one_time_key = one_time_key


class RegistrationResult(_serialization.Model):
    """Class representing the registration status of a tool with the migrate project.

    :ivar is_registered: Gets or sets a value indicating whether the tool is registered or not.
    :vartype is_registered: bool
    """

    _attribute_map = {
        "is_registered": {"key": "isRegistered", "type": "bool"},
    }

    def __init__(self, *, is_registered: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword is_registered: Gets or sets a value indicating whether the tool is registered or not.
        :paramtype is_registered: bool
        """
        super().__init__(**kwargs)
        self.is_registered = is_registered


class ResourceId(_serialization.Model):
    """Defines resource ID of a private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id:
    :vartype id: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None


class SelectExpandClause(_serialization.Model):
    """Select expand clause.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar selected_items:
    :vartype selected_items: list[JSON]
    :ivar all_selected:
    :vartype all_selected: bool
    """

    _validation = {
        "selected_items": {"readonly": True},
        "all_selected": {"readonly": True},
    }

    _attribute_map = {
        "selected_items": {"key": "selectedItems", "type": "[object]"},
        "all_selected": {"key": "allSelected", "type": "bool"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.selected_items = None
        self.all_selected = None


class ServersProjectSummary(ProjectSummary):
    """Class representing the servers project summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Instance type.
    :vartype instance_type: str
    :ivar refresh_summary_state: Refresh summary state. Known values are: "Started", "InProgress",
     "Completed", and "Failed".
    :vartype refresh_summary_state: str or ~azure.mgmt.migrationhub.models.RefreshSummaryState
    :ivar last_summary_refreshed_time: Last summary refresh time.
    :vartype last_summary_refreshed_time: ~datetime.datetime
    :ivar extended_summary: Extended summary.
    :vartype extended_summary: dict[str, str]
    :ivar discovered_count: Gets or sets the count of entities discovered.
    :vartype discovered_count: int
    :ivar assessed_count: Gets or sets the count of entities assessed.
    :vartype assessed_count: int
    :ivar replicating_count: Gets or sets the count of entities being replicated.
    :vartype replicating_count: int
    :ivar test_migrated_count: Gets or sets the count of entities test migrated.
    :vartype test_migrated_count: int
    :ivar migrated_count: Gets or sets the count of entities migrated.
    :vartype migrated_count: int
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "refresh_summary_state": {"key": "refreshSummaryState", "type": "str"},
        "last_summary_refreshed_time": {"key": "lastSummaryRefreshedTime", "type": "iso-8601"},
        "extended_summary": {"key": "extendedSummary", "type": "{str}"},
        "discovered_count": {"key": "discoveredCount", "type": "int"},
        "assessed_count": {"key": "assessedCount", "type": "int"},
        "replicating_count": {"key": "replicatingCount", "type": "int"},
        "test_migrated_count": {"key": "testMigratedCount", "type": "int"},
        "migrated_count": {"key": "migratedCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        refresh_summary_state: Optional[Union[str, "_models.RefreshSummaryState"]] = None,
        last_summary_refreshed_time: Optional[datetime.datetime] = None,
        extended_summary: Optional[Dict[str, str]] = None,
        discovered_count: Optional[int] = None,
        assessed_count: Optional[int] = None,
        replicating_count: Optional[int] = None,
        test_migrated_count: Optional[int] = None,
        migrated_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword refresh_summary_state: Refresh summary state. Known values are: "Started",
         "InProgress", "Completed", and "Failed".
        :paramtype refresh_summary_state: str or ~azure.mgmt.migrationhub.models.RefreshSummaryState
        :keyword last_summary_refreshed_time: Last summary refresh time.
        :paramtype last_summary_refreshed_time: ~datetime.datetime
        :keyword extended_summary: Extended summary.
        :paramtype extended_summary: dict[str, str]
        :keyword discovered_count: Gets or sets the count of entities discovered.
        :paramtype discovered_count: int
        :keyword assessed_count: Gets or sets the count of entities assessed.
        :paramtype assessed_count: int
        :keyword replicating_count: Gets or sets the count of entities being replicated.
        :paramtype replicating_count: int
        :keyword test_migrated_count: Gets or sets the count of entities test migrated.
        :paramtype test_migrated_count: int
        :keyword migrated_count: Gets or sets the count of entities migrated.
        :paramtype migrated_count: int
        """
        super().__init__(
            refresh_summary_state=refresh_summary_state,
            last_summary_refreshed_time=last_summary_refreshed_time,
            extended_summary=extended_summary,
            **kwargs
        )
        self.discovered_count = discovered_count
        self.assessed_count = assessed_count
        self.replicating_count = replicating_count
        self.test_migrated_count = test_migrated_count
        self.migrated_count = migrated_count


class ServersSolutionSummary(SolutionSummary):
    """Class representing the servers solution summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_type: Gets the Instance type.
    :vartype instance_type: str
    :ivar discovered_count: Gets or sets the count of servers discovered.
    :vartype discovered_count: int
    :ivar assessed_count: Gets or sets the count of servers assessed.
    :vartype assessed_count: int
    :ivar replicating_count: Gets or sets the count of servers being replicated.
    :vartype replicating_count: int
    :ivar test_migrated_count: Gets or sets the count of servers test migrated.
    :vartype test_migrated_count: int
    :ivar migrated_count: Gets or sets the count of servers migrated.
    :vartype migrated_count: int
    """

    _validation = {
        "instance_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "discovered_count": {"key": "discoveredCount", "type": "int"},
        "assessed_count": {"key": "assessedCount", "type": "int"},
        "replicating_count": {"key": "replicatingCount", "type": "int"},
        "test_migrated_count": {"key": "testMigratedCount", "type": "int"},
        "migrated_count": {"key": "migratedCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        discovered_count: Optional[int] = None,
        assessed_count: Optional[int] = None,
        replicating_count: Optional[int] = None,
        test_migrated_count: Optional[int] = None,
        migrated_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword discovered_count: Gets or sets the count of servers discovered.
        :paramtype discovered_count: int
        :keyword assessed_count: Gets or sets the count of servers assessed.
        :paramtype assessed_count: int
        :keyword replicating_count: Gets or sets the count of servers being replicated.
        :paramtype replicating_count: int
        :keyword test_migrated_count: Gets or sets the count of servers test migrated.
        :paramtype test_migrated_count: int
        :keyword migrated_count: Gets or sets the count of servers migrated.
        :paramtype migrated_count: int
        """
        super().__init__(**kwargs)
        self.discovered_count = discovered_count
        self.assessed_count = assessed_count
        self.replicating_count = replicating_count
        self.test_migrated_count = test_migrated_count
        self.migrated_count = migrated_count


class SingleValueNode(_serialization.Model):
    """Single value node type.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type_reference: EDM type reference.
    :vartype type_reference: ~azure.mgmt.migrationhub.models.IEdmTypeReference
    :ivar kind: Known values are: "None", "Constant", "Convert",
     "NonResourceRangeVariableReference", "BinaryOperator", "UnaryOperator",
     "SingleValuePropertyAccess", "CollectionPropertyAccess", "SingleValueFunctionCall", "Any",
     "CollectionNavigationNode", "SingleNavigationNode", "SingleValueOpenPropertyAccess",
     "SingleResourceCast", "All", "CollectionResourceCast", "ResourceRangeVariableReference",
     "SingleResourceFunctionCall", "CollectionFunctionCall", "CollectionResourceFunctionCall",
     "NamedFunctionParameter", "ParameterAlias", "EntitySet", "KeyLookup", "SearchTerm",
     "CollectionOpenPropertyAccess", "CollectionComplexNode", "SingleComplexNode", "Count",
     "SingleValueCast", "CollectionPropertyNode", "AggregatedCollectionPropertyNode", "In",
     "CollectionConstant", and "In".
    :vartype kind: str or ~azure.mgmt.migrationhub.models.SingleValueNodeKind
    """

    _validation = {
        "type_reference": {"readonly": True},
        "kind": {"readonly": True},
    }

    _attribute_map = {
        "type_reference": {"key": "typeReference", "type": "IEdmTypeReference"},
        "kind": {"key": "kind", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type_reference = None
        self.kind = None


class Solution(_serialization.Model):
    """Solution REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the relative URL to get to this REST resource.
    :vartype id: str
    :ivar name: Gets the name of this REST resource.
    :vartype name: str
    :ivar type: Gets the type of this REST resource.
    :vartype type: str
    :ivar etag: Gets or sets the ETAG for optimistic concurrency control.
    :vartype etag: str
    :ivar properties: Gets or sets the properties of the solution.
    :vartype properties: ~azure.mgmt.migrationhub.models.SolutionProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "properties": {"key": "properties", "type": "SolutionProperties"},
    }

    def __init__(
        self, *, etag: Optional[str] = None, properties: Optional["_models.SolutionProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword etag: Gets or sets the ETAG for optimistic concurrency control.
        :paramtype etag: str
        :keyword properties: Gets or sets the properties of the solution.
        :paramtype properties: ~azure.mgmt.migrationhub.models.SolutionProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.etag = etag
        self.properties = properties


class SolutionConfig(_serialization.Model):
    """Class representing the config for the solution in the migrate project.

    :ivar publisher_sas_uri: Gets or sets the publisher sas uri for the solution.
    :vartype publisher_sas_uri: str
    """

    _attribute_map = {
        "publisher_sas_uri": {"key": "publisherSasUri", "type": "str"},
    }

    def __init__(self, *, publisher_sas_uri: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword publisher_sas_uri: Gets or sets the publisher sas uri for the solution.
        :paramtype publisher_sas_uri: str
        """
        super().__init__(**kwargs)
        self.publisher_sas_uri = publisher_sas_uri


class SolutionDetails(_serialization.Model):
    """Class representing the details of the solution.

    :ivar group_count: Gets or sets the count of groups reported by the solution.
    :vartype group_count: int
    :ivar assessment_count: Gets or sets the count of assessments reported by the solution.
    :vartype assessment_count: int
    :ivar extended_details: Gets or sets the extended details reported by the solution.
    :vartype extended_details: dict[str, str]
    """

    _attribute_map = {
        "group_count": {"key": "groupCount", "type": "int"},
        "assessment_count": {"key": "assessmentCount", "type": "int"},
        "extended_details": {"key": "extendedDetails", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        group_count: Optional[int] = None,
        assessment_count: Optional[int] = None,
        extended_details: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword group_count: Gets or sets the count of groups reported by the solution.
        :paramtype group_count: int
        :keyword assessment_count: Gets or sets the count of assessments reported by the solution.
        :paramtype assessment_count: int
        :keyword extended_details: Gets or sets the extended details reported by the solution.
        :paramtype extended_details: dict[str, str]
        """
        super().__init__(**kwargs)
        self.group_count = group_count
        self.assessment_count = assessment_count
        self.extended_details = extended_details


class SolutionProperties(_serialization.Model):
    """Class for solution properties.

    :ivar tool: Gets or sets the tool being used in the solution. Known values are:
     "ServerDiscovery", "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto",
     "CorentTech", "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite",
     "DataMigrationAssistant", "DatabaseMigrationService", "Device42", "JetStream", "RackWare",
     "UnifyCloud", "Flexera", "ServerDiscovery_Import", "Lakeside", "AppServiceMigrationAssistant",
     "Movere", "CloudSphere", "Modernization", "ServerMigration_DataReplication", and "Unknown".
    :vartype tool: str or ~azure.mgmt.migrationhub.models.Tool
    :ivar purpose: Gets or sets the purpose of the solution. Known values are: "Discovery",
     "Assessment", and "Migration".
    :vartype purpose: str or ~azure.mgmt.migrationhub.models.Purpose
    :ivar goal: Gets or sets the goal of the solution. Known values are: "Servers", "Databases",
     "DesktopVirtualization", "WebApplications", and "DataCenter".
    :vartype goal: str or ~azure.mgmt.migrationhub.models.Goal
    :ivar status: Gets or sets the current status of the solution. Known values are: "Inactive" and
     "Active".
    :vartype status: str or ~azure.mgmt.migrationhub.models.Status
    :ivar cleanup_state: Gets or sets the cleanup state of the solution. Known values are: "None",
     "Started", "InProgress", "Completed", and "Failed".
    :vartype cleanup_state: str or ~azure.mgmt.migrationhub.models.CleanupState
    :ivar summary: Gets or sets the summary of the solution.
    :vartype summary: ~azure.mgmt.migrationhub.models.SolutionSummary
    :ivar details: Gets or sets the details of the solution.
    :vartype details: ~azure.mgmt.migrationhub.models.SolutionDetails
    """

    _attribute_map = {
        "tool": {"key": "tool", "type": "str"},
        "purpose": {"key": "purpose", "type": "str"},
        "goal": {"key": "goal", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "cleanup_state": {"key": "cleanupState", "type": "str"},
        "summary": {"key": "summary", "type": "SolutionSummary"},
        "details": {"key": "details", "type": "SolutionDetails"},
    }

    def __init__(
        self,
        *,
        tool: Optional[Union[str, "_models.Tool"]] = None,
        purpose: Optional[Union[str, "_models.Purpose"]] = None,
        goal: Optional[Union[str, "_models.Goal"]] = None,
        status: Optional[Union[str, "_models.Status"]] = None,
        cleanup_state: Optional[Union[str, "_models.CleanupState"]] = None,
        summary: Optional["_models.SolutionSummary"] = None,
        details: Optional["_models.SolutionDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tool: Gets or sets the tool being used in the solution. Known values are:
         "ServerDiscovery", "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto",
         "CorentTech", "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite",
         "DataMigrationAssistant", "DatabaseMigrationService", "Device42", "JetStream", "RackWare",
         "UnifyCloud", "Flexera", "ServerDiscovery_Import", "Lakeside", "AppServiceMigrationAssistant",
         "Movere", "CloudSphere", "Modernization", "ServerMigration_DataReplication", and "Unknown".
        :paramtype tool: str or ~azure.mgmt.migrationhub.models.Tool
        :keyword purpose: Gets or sets the purpose of the solution. Known values are: "Discovery",
         "Assessment", and "Migration".
        :paramtype purpose: str or ~azure.mgmt.migrationhub.models.Purpose
        :keyword goal: Gets or sets the goal of the solution. Known values are: "Servers", "Databases",
         "DesktopVirtualization", "WebApplications", and "DataCenter".
        :paramtype goal: str or ~azure.mgmt.migrationhub.models.Goal
        :keyword status: Gets or sets the current status of the solution. Known values are: "Inactive"
         and "Active".
        :paramtype status: str or ~azure.mgmt.migrationhub.models.Status
        :keyword cleanup_state: Gets or sets the cleanup state of the solution. Known values are:
         "None", "Started", "InProgress", "Completed", and "Failed".
        :paramtype cleanup_state: str or ~azure.mgmt.migrationhub.models.CleanupState
        :keyword summary: Gets or sets the summary of the solution.
        :paramtype summary: ~azure.mgmt.migrationhub.models.SolutionSummary
        :keyword details: Gets or sets the details of the solution.
        :paramtype details: ~azure.mgmt.migrationhub.models.SolutionDetails
        """
        super().__init__(**kwargs)
        self.tool = tool
        self.purpose = purpose
        self.goal = goal
        self.status = status
        self.cleanup_state = cleanup_state
        self.summary = summary
        self.details = details


class SolutionsCollection(_serialization.Model):
    """Collection of solutions.

    :ivar value: Gets or sets the list of solutions.
    :vartype value: list[~azure.mgmt.migrationhub.models.Solution]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[Solution]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.Solution"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of solutions.
        :paramtype value: list[~azure.mgmt.migrationhub.models.Solution]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.migrationhub.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.migrationhub.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.migrationhub.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.migrationhub.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TransformationNode(_serialization.Model):
    """Transformation node type.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar kind: Known values are: "Aggregate", "GroupBy", "Filter", and "Compute".
    :vartype kind: str or ~azure.mgmt.migrationhub.models.TransformationNodeKind
    """

    _validation = {
        "kind": {"readonly": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind = None


class VirtualDesktopUser(_serialization.Model):
    """Class representing virtual desktop user.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :ivar properties: Properties of class representing virtual desktop user.
    :vartype properties: ~azure.mgmt.migrationhub.models.VirtualDesktopUserProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "VirtualDesktopUserProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.VirtualDesktopUserProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword name:
        :paramtype name: str
        :keyword properties: Properties of class representing virtual desktop user.
        :paramtype properties: ~azure.mgmt.migrationhub.models.VirtualDesktopUserProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class VirtualDesktopUserAssessmentDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Details of assessment data of virtual desktop user.

    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    :ivar user_id:
    :vartype user_id: str
    :ivar id: Gets the relative URL to get to this VirtualDesktopUserAssessmentDetails resource.
    :vartype id: str
    :ivar enqueue_time:
    :vartype enqueue_time: str
    :ivar solution_name:
    :vartype solution_name: str
    :ivar user_name:
    :vartype user_name: str
    :ivar user_account:
    :vartype user_account: str
    :ivar country:
    :vartype country: str
    :ivar state:
    :vartype state: str
    :ivar city:
    :vartype city: str
    :ivar devices_used:
    :vartype devices_used: list[str]
    :ivar virtualization:
    :vartype virtualization: str
    :ivar total_applications_count:
    :vartype total_applications_count: int
    :ivar critical_applications:
    :vartype critical_applications: list[str]
    :ivar os_used:
    :vartype os_used: list[str]
    :ivar multi_user_windows10:
    :vartype multi_user_windows10: bool
    :ivar windows7:
    :vartype windows7: bool
    :ivar persona:
    :vartype persona: str
    :ivar assessment_id:
    :vartype assessment_id: str
    :ivar target_location:
    :vartype target_location: str
    :ivar is_ready_for_migration:
    :vartype is_ready_for_migration: bool
    :ivar target_azure_vm_size:
    :vartype target_azure_vm_size: str
    :ivar target_storage_type:
    :vartype target_storage_type: str
    :ivar active_weekly_hours:
    :vartype active_weekly_hours: int
    :ivar user_experience_score:
    :vartype user_experience_score: float
    :ivar egress_bandwidth_weekly:
    :vartype egress_bandwidth_weekly: float
    :ivar extended_info: Dictionary of :code:`<string>`.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "user_id": {"key": "userId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "user_name": {"key": "userName", "type": "str"},
        "user_account": {"key": "userAccount", "type": "str"},
        "country": {"key": "country", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "city": {"key": "city", "type": "str"},
        "devices_used": {"key": "devicesUsed", "type": "[str]"},
        "virtualization": {"key": "virtualization", "type": "str"},
        "total_applications_count": {"key": "totalApplicationsCount", "type": "int"},
        "critical_applications": {"key": "criticalApplications", "type": "[str]"},
        "os_used": {"key": "osUsed", "type": "[str]"},
        "multi_user_windows10": {"key": "multiUserWindows10", "type": "bool"},
        "windows7": {"key": "windows7", "type": "bool"},
        "persona": {"key": "persona", "type": "str"},
        "assessment_id": {"key": "assessmentId", "type": "str"},
        "target_location": {"key": "targetLocation", "type": "str"},
        "is_ready_for_migration": {"key": "isReadyForMigration", "type": "bool"},
        "target_azure_vm_size": {"key": "targetAzureVmSize", "type": "str"},
        "target_storage_type": {"key": "targetStorageType", "type": "str"},
        "active_weekly_hours": {"key": "activeWeeklyHours", "type": "int"},
        "user_experience_score": {"key": "userExperienceScore", "type": "float"},
        "egress_bandwidth_weekly": {"key": "egressBandwidthWeekly", "type": "float"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        last_updated_time: Optional[datetime.datetime] = None,
        user_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        user_name: Optional[str] = None,
        user_account: Optional[str] = None,
        country: Optional[str] = None,
        state: Optional[str] = None,
        city: Optional[str] = None,
        devices_used: Optional[List[str]] = None,
        virtualization: Optional[str] = None,
        total_applications_count: Optional[int] = None,
        critical_applications: Optional[List[str]] = None,
        os_used: Optional[List[str]] = None,
        multi_user_windows10: Optional[bool] = None,
        windows7: Optional[bool] = None,
        persona: Optional[str] = None,
        assessment_id: Optional[str] = None,
        target_location: Optional[str] = None,
        is_ready_for_migration: Optional[bool] = None,
        target_azure_vm_size: Optional[str] = None,
        target_storage_type: Optional[str] = None,
        active_weekly_hours: Optional[int] = None,
        user_experience_score: Optional[float] = None,
        egress_bandwidth_weekly: Optional[float] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        :keyword user_id:
        :paramtype user_id: str
        :keyword id: Gets the relative URL to get to this VirtualDesktopUserAssessmentDetails resource.
        :paramtype id: str
        :keyword enqueue_time:
        :paramtype enqueue_time: str
        :keyword solution_name:
        :paramtype solution_name: str
        :keyword user_name:
        :paramtype user_name: str
        :keyword user_account:
        :paramtype user_account: str
        :keyword country:
        :paramtype country: str
        :keyword state:
        :paramtype state: str
        :keyword city:
        :paramtype city: str
        :keyword devices_used:
        :paramtype devices_used: list[str]
        :keyword virtualization:
        :paramtype virtualization: str
        :keyword total_applications_count:
        :paramtype total_applications_count: int
        :keyword critical_applications:
        :paramtype critical_applications: list[str]
        :keyword os_used:
        :paramtype os_used: list[str]
        :keyword multi_user_windows10:
        :paramtype multi_user_windows10: bool
        :keyword windows7:
        :paramtype windows7: bool
        :keyword persona:
        :paramtype persona: str
        :keyword assessment_id:
        :paramtype assessment_id: str
        :keyword target_location:
        :paramtype target_location: str
        :keyword is_ready_for_migration:
        :paramtype is_ready_for_migration: bool
        :keyword target_azure_vm_size:
        :paramtype target_azure_vm_size: str
        :keyword target_storage_type:
        :paramtype target_storage_type: str
        :keyword active_weekly_hours:
        :paramtype active_weekly_hours: int
        :keyword user_experience_score:
        :paramtype user_experience_score: float
        :keyword egress_bandwidth_weekly:
        :paramtype egress_bandwidth_weekly: float
        :keyword extended_info: Dictionary of :code:`<string>`.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.last_updated_time = last_updated_time
        self.user_id = user_id
        self.id = id
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.user_name = user_name
        self.user_account = user_account
        self.country = country
        self.state = state
        self.city = city
        self.devices_used = devices_used
        self.virtualization = virtualization
        self.total_applications_count = total_applications_count
        self.critical_applications = critical_applications
        self.os_used = os_used
        self.multi_user_windows10 = multi_user_windows10
        self.windows7 = windows7
        self.persona = persona
        self.assessment_id = assessment_id
        self.target_location = target_location
        self.is_ready_for_migration = is_ready_for_migration
        self.target_azure_vm_size = target_azure_vm_size
        self.target_storage_type = target_storage_type
        self.active_weekly_hours = active_weekly_hours
        self.user_experience_score = user_experience_score
        self.egress_bandwidth_weekly = egress_bandwidth_weekly
        self.extended_info = extended_info


class VirtualDesktopUserCollection(_serialization.Model):
    """Collection of virtual desktop users.

    :ivar value:
    :vartype value: list[~azure.mgmt.migrationhub.models.VirtualDesktopUser]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[VirtualDesktopUser]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.VirtualDesktopUser"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.migrationhub.models.VirtualDesktopUser]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VirtualDesktopUserProperties(_serialization.Model):
    """Properties of class representing virtual desktop user.

    :ivar assessment_data:
    :vartype assessment_data:
     list[~azure.mgmt.migrationhub.models.VirtualDesktopUserAssessmentDetails]
    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    """

    _attribute_map = {
        "assessment_data": {"key": "assessmentData", "type": "[VirtualDesktopUserAssessmentDetails]"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        assessment_data: Optional[List["_models.VirtualDesktopUserAssessmentDetails"]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword assessment_data:
        :paramtype assessment_data:
         list[~azure.mgmt.migrationhub.models.VirtualDesktopUserAssessmentDetails]
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.assessment_data = assessment_data
        self.last_updated_time = last_updated_time


class WebServer(_serialization.Model):
    """Class representing a web server.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :ivar properties: Properties of class representing web server.
    :vartype properties: ~azure.mgmt.migrationhub.models.WebServerProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "WebServerProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.WebServerProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword name:
        :paramtype name: str
        :keyword properties: Properties of class representing web server.
        :paramtype properties: ~azure.mgmt.migrationhub.models.WebServerProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class WebServerCollection(_serialization.Model):
    """Collection of web servers.

    :ivar value:
    :vartype value: list[~azure.mgmt.migrationhub.models.WebServer]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[WebServer]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.WebServer"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.migrationhub.models.WebServer]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebServerDiscoveryDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Details of discovery data of web server.

    :ivar id: Gets the relative URL to get to this WebServerDiscoveryDetails resource.
    :vartype id: str
    :ivar os_name:
    :vartype os_name: str
    :ivar os_version:
    :vartype os_version: str
    :ivar cpu_cores:
    :vartype cpu_cores: int
    :ivar memory_in_mb:
    :vartype memory_in_mb: str
    :ivar web_server_type:
    :vartype web_server_type: str
    :ivar web_server_version:
    :vartype web_server_version: str
    :ivar port_list:
    :vartype port_list: list[int]
    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    :ivar enqueue_time:
    :vartype enqueue_time: str
    :ivar solution_name:
    :vartype solution_name: str
    :ivar web_server_id:
    :vartype web_server_id: str
    :ivar web_server_name:
    :vartype web_server_name: str
    :ivar extended_info: Dictionary of :code:`<string>`.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "cpu_cores": {"key": "cpuCores", "type": "int"},
        "memory_in_mb": {"key": "memoryInMb", "type": "str"},
        "web_server_type": {"key": "webServerType", "type": "str"},
        "web_server_version": {"key": "webServerVersion", "type": "str"},
        "port_list": {"key": "portList", "type": "[int]"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_name": {"key": "webServerName", "type": "str"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        os_name: Optional[str] = None,
        os_version: Optional[str] = None,
        cpu_cores: Optional[int] = None,
        memory_in_mb: Optional[str] = None,
        web_server_type: Optional[str] = None,
        web_server_version: Optional[str] = None,
        port_list: Optional[List[int]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        web_server_id: Optional[str] = None,
        web_server_name: Optional[str] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets the relative URL to get to this WebServerDiscoveryDetails resource.
        :paramtype id: str
        :keyword os_name:
        :paramtype os_name: str
        :keyword os_version:
        :paramtype os_version: str
        :keyword cpu_cores:
        :paramtype cpu_cores: int
        :keyword memory_in_mb:
        :paramtype memory_in_mb: str
        :keyword web_server_type:
        :paramtype web_server_type: str
        :keyword web_server_version:
        :paramtype web_server_version: str
        :keyword port_list:
        :paramtype port_list: list[int]
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        :keyword enqueue_time:
        :paramtype enqueue_time: str
        :keyword solution_name:
        :paramtype solution_name: str
        :keyword web_server_id:
        :paramtype web_server_id: str
        :keyword web_server_name:
        :paramtype web_server_name: str
        :keyword extended_info: Dictionary of :code:`<string>`.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = id
        self.os_name = os_name
        self.os_version = os_version
        self.cpu_cores = cpu_cores
        self.memory_in_mb = memory_in_mb
        self.web_server_type = web_server_type
        self.web_server_version = web_server_version
        self.port_list = port_list
        self.last_updated_time = last_updated_time
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.web_server_id = web_server_id
        self.web_server_name = web_server_name
        self.extended_info = extended_info


class WebServerProperties(_serialization.Model):
    """Properties of class representing web server.

    :ivar discovery_data:
    :vartype discovery_data: list[~azure.mgmt.migrationhub.models.WebServerDiscoveryDetails]
    :ivar summary: Dictionary of :code:`<WebServerSummary>`.
    :vartype summary: dict[str, ~azure.mgmt.migrationhub.models.WebServerSummary]
    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    """

    _attribute_map = {
        "discovery_data": {"key": "discoveryData", "type": "[WebServerDiscoveryDetails]"},
        "summary": {"key": "summary", "type": "{WebServerSummary}"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        discovery_data: Optional[List["_models.WebServerDiscoveryDetails"]] = None,
        summary: Optional[Dict[str, "_models.WebServerSummary"]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword discovery_data:
        :paramtype discovery_data: list[~azure.mgmt.migrationhub.models.WebServerDiscoveryDetails]
        :keyword summary: Dictionary of :code:`<WebServerSummary>`.
        :paramtype summary: dict[str, ~azure.mgmt.migrationhub.models.WebServerSummary]
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.discovery_data = discovery_data
        self.summary = summary
        self.last_updated_time = last_updated_time


class WebServerSummary(_serialization.Model):
    """Summary of information representing web server.

    :ivar discovered_count:
    :vartype discovered_count: int
    :ivar assessed_count:
    :vartype assessed_count: int
    :ivar ready_for_migration:
    :vartype ready_for_migration: int
    :ivar migrating_count:
    :vartype migrating_count: int
    :ivar migrated_count:
    :vartype migrated_count: int
    """

    _attribute_map = {
        "discovered_count": {"key": "discoveredCount", "type": "int"},
        "assessed_count": {"key": "assessedCount", "type": "int"},
        "ready_for_migration": {"key": "readyForMigration", "type": "int"},
        "migrating_count": {"key": "migratingCount", "type": "int"},
        "migrated_count": {"key": "migratedCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        discovered_count: Optional[int] = None,
        assessed_count: Optional[int] = None,
        ready_for_migration: Optional[int] = None,
        migrating_count: Optional[int] = None,
        migrated_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword discovered_count:
        :paramtype discovered_count: int
        :keyword assessed_count:
        :paramtype assessed_count: int
        :keyword ready_for_migration:
        :paramtype ready_for_migration: int
        :keyword migrating_count:
        :paramtype migrating_count: int
        :keyword migrated_count:
        :paramtype migrated_count: int
        """
        super().__init__(**kwargs)
        self.discovered_count = discovered_count
        self.assessed_count = assessed_count
        self.ready_for_migration = ready_for_migration
        self.migrating_count = migrating_count
        self.migrated_count = migrated_count


class WebSite(_serialization.Model):
    """Class representing a web site.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :ivar properties: Properties of class representing web site.
    :vartype properties: ~azure.mgmt.migrationhub.models.WebSiteProperties
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "WebSiteProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        properties: Optional["_models.WebSiteProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id:
        :paramtype id: str
        :keyword name:
        :paramtype name: str
        :keyword properties: Properties of class representing web site.
        :paramtype properties: ~azure.mgmt.migrationhub.models.WebSiteProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.type = None
        self.properties = properties


class WebSiteAssessmentDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Details of assessment data of web site.

    :ivar assessment_id:
    :vartype assessment_id: str
    :ivar id: Gets the relative URL to get to this WebSiteAssessmentDetails resource.
    :vartype id: str
    :ivar is_ready_for_migration:
    :vartype is_ready_for_migration: bool
    :ivar assessment_target_type:
    :vartype assessment_target_type: str
    :ivar migration_blockers_count:
    :vartype migration_blockers_count: int
    :ivar success_list:
    :vartype success_list: list[str]
    :ivar warning_list:
    :vartype warning_list: list[str]
    :ivar error_list:
    :vartype error_list: list[str]
    :ivar framework:
    :vartype framework: str
    :ivar framework_version:
    :vartype framework_version: str
    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    :ivar web_server_id:
    :vartype web_server_id: str
    :ivar web_server_type:
    :vartype web_server_type: str
    :ivar web_site_name:
    :vartype web_site_name: str
    :ivar enqueue_time:
    :vartype enqueue_time: str
    :ivar solution_name:
    :vartype solution_name: str
    :ivar port:
    :vartype port: int
    :ivar extended_info: Dictionary of :code:`<string>`.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "assessment_id": {"key": "assessmentId", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "is_ready_for_migration": {"key": "isReadyForMigration", "type": "bool"},
        "assessment_target_type": {"key": "assessmentTargetType", "type": "str"},
        "migration_blockers_count": {"key": "migrationBlockersCount", "type": "int"},
        "success_list": {"key": "successList", "type": "[str]"},
        "warning_list": {"key": "warningList", "type": "[str]"},
        "error_list": {"key": "errorList", "type": "[str]"},
        "framework": {"key": "framework", "type": "str"},
        "framework_version": {"key": "frameworkVersion", "type": "str"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_type": {"key": "webServerType", "type": "str"},
        "web_site_name": {"key": "webSiteName", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "port": {"key": "port", "type": "int"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        assessment_id: Optional[str] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        is_ready_for_migration: Optional[bool] = None,
        assessment_target_type: Optional[str] = None,
        migration_blockers_count: Optional[int] = None,
        success_list: Optional[List[str]] = None,
        warning_list: Optional[List[str]] = None,
        error_list: Optional[List[str]] = None,
        framework: Optional[str] = None,
        framework_version: Optional[str] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        web_server_id: Optional[str] = None,
        web_server_type: Optional[str] = None,
        web_site_name: Optional[str] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        port: Optional[int] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword assessment_id:
        :paramtype assessment_id: str
        :keyword id: Gets the relative URL to get to this WebSiteAssessmentDetails resource.
        :paramtype id: str
        :keyword is_ready_for_migration:
        :paramtype is_ready_for_migration: bool
        :keyword assessment_target_type:
        :paramtype assessment_target_type: str
        :keyword migration_blockers_count:
        :paramtype migration_blockers_count: int
        :keyword success_list:
        :paramtype success_list: list[str]
        :keyword warning_list:
        :paramtype warning_list: list[str]
        :keyword error_list:
        :paramtype error_list: list[str]
        :keyword framework:
        :paramtype framework: str
        :keyword framework_version:
        :paramtype framework_version: str
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        :keyword web_server_id:
        :paramtype web_server_id: str
        :keyword web_server_type:
        :paramtype web_server_type: str
        :keyword web_site_name:
        :paramtype web_site_name: str
        :keyword enqueue_time:
        :paramtype enqueue_time: str
        :keyword solution_name:
        :paramtype solution_name: str
        :keyword port:
        :paramtype port: int
        :keyword extended_info: Dictionary of :code:`<string>`.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.assessment_id = assessment_id
        self.id = id
        self.is_ready_for_migration = is_ready_for_migration
        self.assessment_target_type = assessment_target_type
        self.migration_blockers_count = migration_blockers_count
        self.success_list = success_list
        self.warning_list = warning_list
        self.error_list = error_list
        self.framework = framework
        self.framework_version = framework_version
        self.last_updated_time = last_updated_time
        self.web_server_id = web_server_id
        self.web_server_type = web_server_type
        self.web_site_name = web_site_name
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.port = port
        self.extended_info = extended_info


class WebSiteCollection(_serialization.Model):
    """Collection of web sites.

    :ivar value:
    :vartype value: list[~azure.mgmt.migrationhub.models.WebSite]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[WebSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.WebSite"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.migrationhub.models.WebSite]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebSiteDiscoveryDetails(_serialization.Model):
    """Details of discovery data of web site.

    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    :ivar id: Gets the relative URL to get to this WebSiteDiscoveryDetails resource.
    :vartype id: str
    :ivar web_server_id:
    :vartype web_server_id: str
    :ivar web_server_type:
    :vartype web_server_type: str
    :ivar web_site_name:
    :vartype web_site_name: str
    :ivar enqueue_time:
    :vartype enqueue_time: str
    :ivar solution_name:
    :vartype solution_name: str
    :ivar port:
    :vartype port: int
    :ivar extended_info: Dictionary of :code:`<string>`.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "id": {"key": "id", "type": "str"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_type": {"key": "webServerType", "type": "str"},
        "web_site_name": {"key": "webSiteName", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "port": {"key": "port", "type": "int"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        last_updated_time: Optional[datetime.datetime] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        web_server_id: Optional[str] = None,
        web_server_type: Optional[str] = None,
        web_site_name: Optional[str] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        port: Optional[int] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        :keyword id: Gets the relative URL to get to this WebSiteDiscoveryDetails resource.
        :paramtype id: str
        :keyword web_server_id:
        :paramtype web_server_id: str
        :keyword web_server_type:
        :paramtype web_server_type: str
        :keyword web_site_name:
        :paramtype web_site_name: str
        :keyword enqueue_time:
        :paramtype enqueue_time: str
        :keyword solution_name:
        :paramtype solution_name: str
        :keyword port:
        :paramtype port: int
        :keyword extended_info: Dictionary of :code:`<string>`.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.last_updated_time = last_updated_time
        self.id = id
        self.web_server_id = web_server_id
        self.web_server_type = web_server_type
        self.web_site_name = web_site_name
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.port = port
        self.extended_info = extended_info


class WebSiteMigrationDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Details of migration data of web site.

    :ivar id: Gets the relative URL to get to this WebSiteMigrationDetails resource.
    :vartype id: str
    :ivar migration_phase:
    :vartype migration_phase: str
    :ivar progress_percentage:
    :vartype progress_percentage: int
    :ivar target_app_service_arm_id:
    :vartype target_app_service_arm_id: str
    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    :ivar web_server_id:
    :vartype web_server_id: str
    :ivar web_server_type:
    :vartype web_server_type: str
    :ivar web_site_name:
    :vartype web_site_name: str
    :ivar enqueue_time:
    :vartype enqueue_time: str
    :ivar solution_name:
    :vartype solution_name: str
    :ivar port:
    :vartype port: int
    :ivar extended_info: Dictionary of :code:`<string>`.
    :vartype extended_info: dict[str, str]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "migration_phase": {"key": "migrationPhase", "type": "str"},
        "progress_percentage": {"key": "progressPercentage", "type": "int"},
        "target_app_service_arm_id": {"key": "targetAppServiceArmId", "type": "str"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_type": {"key": "webServerType", "type": "str"},
        "web_site_name": {"key": "webSiteName", "type": "str"},
        "enqueue_time": {"key": "enqueueTime", "type": "str"},
        "solution_name": {"key": "solutionName", "type": "str"},
        "port": {"key": "port", "type": "int"},
        "extended_info": {"key": "extendedInfo", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        migration_phase: Optional[str] = None,
        progress_percentage: Optional[int] = None,
        target_app_service_arm_id: Optional[str] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        web_server_id: Optional[str] = None,
        web_server_type: Optional[str] = None,
        web_site_name: Optional[str] = None,
        enqueue_time: Optional[str] = None,
        solution_name: Optional[str] = None,
        port: Optional[int] = None,
        extended_info: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets the relative URL to get to this WebSiteMigrationDetails resource.
        :paramtype id: str
        :keyword migration_phase:
        :paramtype migration_phase: str
        :keyword progress_percentage:
        :paramtype progress_percentage: int
        :keyword target_app_service_arm_id:
        :paramtype target_app_service_arm_id: str
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        :keyword web_server_id:
        :paramtype web_server_id: str
        :keyword web_server_type:
        :paramtype web_server_type: str
        :keyword web_site_name:
        :paramtype web_site_name: str
        :keyword enqueue_time:
        :paramtype enqueue_time: str
        :keyword solution_name:
        :paramtype solution_name: str
        :keyword port:
        :paramtype port: int
        :keyword extended_info: Dictionary of :code:`<string>`.
        :paramtype extended_info: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = id
        self.migration_phase = migration_phase
        self.progress_percentage = progress_percentage
        self.target_app_service_arm_id = target_app_service_arm_id
        self.last_updated_time = last_updated_time
        self.web_server_id = web_server_id
        self.web_server_type = web_server_type
        self.web_site_name = web_site_name
        self.enqueue_time = enqueue_time
        self.solution_name = solution_name
        self.port = port
        self.extended_info = extended_info


class WebSiteProperties(_serialization.Model):
    """Properties of class representing web site.

    :ivar discovery_data:
    :vartype discovery_data: list[~azure.mgmt.migrationhub.models.WebSiteDiscoveryDetails]
    :ivar assessment_data:
    :vartype assessment_data: list[~azure.mgmt.migrationhub.models.WebSiteAssessmentDetails]
    :ivar migration_data:
    :vartype migration_data: list[~azure.mgmt.migrationhub.models.WebSiteMigrationDetails]
    :ivar last_updated_time:
    :vartype last_updated_time: ~datetime.datetime
    """

    _attribute_map = {
        "discovery_data": {"key": "discoveryData", "type": "[WebSiteDiscoveryDetails]"},
        "assessment_data": {"key": "assessmentData", "type": "[WebSiteAssessmentDetails]"},
        "migration_data": {"key": "migrationData", "type": "[WebSiteMigrationDetails]"},
        "last_updated_time": {"key": "lastUpdatedTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        discovery_data: Optional[List["_models.WebSiteDiscoveryDetails"]] = None,
        assessment_data: Optional[List["_models.WebSiteAssessmentDetails"]] = None,
        migration_data: Optional[List["_models.WebSiteMigrationDetails"]] = None,
        last_updated_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword discovery_data:
        :paramtype discovery_data: list[~azure.mgmt.migrationhub.models.WebSiteDiscoveryDetails]
        :keyword assessment_data:
        :paramtype assessment_data: list[~azure.mgmt.migrationhub.models.WebSiteAssessmentDetails]
        :keyword migration_data:
        :paramtype migration_data: list[~azure.mgmt.migrationhub.models.WebSiteMigrationDetails]
        :keyword last_updated_time:
        :paramtype last_updated_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.discovery_data = discovery_data
        self.assessment_data = assessment_data
        self.migration_data = migration_data
        self.last_updated_time = last_updated_time
