# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class CleanupState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the cleanup state of the solution."""

    NONE = "None"
    STARTED = "Started"
    IN_PROGRESS = "InProgress"
    COMPLETED = "Completed"
    FAILED = "Failed"


class ContainerElementKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ContainerElementKind."""

    NONE = "None"
    ENTITY_SET = "EntitySet"
    ACTION_IMPORT = "ActionImport"
    FUNCTION_IMPORT = "FunctionImport"
    SINGLETON = "Singleton"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class EnumEnum(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """EnumEnum."""

    CONTINUE = "Continue"
    SWITCHING_PROTOCOLS = "SwitchingProtocols"
    OK = "OK"
    CREATED = "Created"
    ACCEPTED = "Accepted"
    NON_AUTHORITATIVE_INFORMATION = "NonAuthoritativeInformation"
    NO_CONTENT = "NoContent"
    RESET_CONTENT = "ResetContent"
    PARTIAL_CONTENT = "PartialContent"
    MULTIPLE_CHOICES = "MultipleChoices"
    AMBIGUOUS = "Ambiguous"
    MOVED_PERMANENTLY = "MovedPermanently"
    MOVED = "Moved"
    FOUND = "Found"
    REDIRECT = "Redirect"
    SEE_OTHER = "SeeOther"
    REDIRECT_METHOD = "RedirectMethod"
    NOT_MODIFIED = "NotModified"
    USE_PROXY = "UseProxy"
    UNUSED = "Unused"
    TEMPORARY_REDIRECT = "TemporaryRedirect"
    REDIRECT_KEEP_VERB = "RedirectKeepVerb"
    BAD_REQUEST = "BadRequest"
    UNAUTHORIZED = "Unauthorized"
    PAYMENT_REQUIRED = "PaymentRequired"
    FORBIDDEN = "Forbidden"
    NOT_FOUND = "NotFound"
    METHOD_NOT_ALLOWED = "MethodNotAllowed"
    NOT_ACCEPTABLE = "NotAcceptable"
    PROXY_AUTHENTICATION_REQUIRED = "ProxyAuthenticationRequired"
    REQUEST_TIMEOUT = "RequestTimeout"
    CONFLICT = "Conflict"
    GONE = "Gone"
    LENGTH_REQUIRED = "LengthRequired"
    PRECONDITION_FAILED = "PreconditionFailed"
    REQUEST_ENTITY_TOO_LARGE = "RequestEntityTooLarge"
    REQUEST_URI_TOO_LONG = "RequestUriTooLong"
    UNSUPPORTED_MEDIA_TYPE = "UnsupportedMediaType"
    REQUESTED_RANGE_NOT_SATISFIABLE = "RequestedRangeNotSatisfiable"
    EXPECTATION_FAILED = "ExpectationFailed"
    UPGRADE_REQUIRED = "UpgradeRequired"
    INTERNAL_SERVER_ERROR = "InternalServerError"
    NOT_IMPLEMENTED = "NotImplemented"
    BAD_GATEWAY = "BadGateway"
    SERVICE_UNAVAILABLE = "ServiceUnavailable"
    GATEWAY_TIMEOUT = "GatewayTimeout"
    HTTP_VERSION_NOT_SUPPORTED = "HttpVersionNotSupported"
    CONTINUE_ENUM = "Continue"


class ExpressionKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ExpressionKind."""

    NONE = "None"
    BINARY_CONSTANT = "BinaryConstant"
    BOOLEAN_CONSTANT = "BooleanConstant"
    DATE_TIME_OFFSET_CONSTANT = "DateTimeOffsetConstant"
    DECIMAL_CONSTANT = "DecimalConstant"
    FLOATING_CONSTANT = "FloatingConstant"
    GUID_CONSTANT = "GuidConstant"
    INTEGER_CONSTANT = "IntegerConstant"
    STRING_CONSTANT = "StringConstant"
    DURATION_CONSTANT = "DurationConstant"
    NULL = "Null"
    RECORD = "Record"
    COLLECTION = "Collection"
    PATH = "Path"
    IF = "If"
    CAST = "Cast"
    IS_TYPE = "IsType"
    FUNCTION_APPLICATION = "FunctionApplication"
    LABELED_EXPRESSION_REFERENCE = "LabeledExpressionReference"
    LABELED = "Labeled"
    PROPERTY_PATH = "PropertyPath"
    NAVIGATION_PROPERTY_PATH = "NavigationPropertyPath"
    DATE_CONSTANT = "DateConstant"
    TIME_OF_DAY_CONSTANT = "TimeOfDayConstant"
    ENUM_MEMBER = "EnumMember"
    ANNOTATION_PATH = "AnnotationPath"
    IF_ENUM = "If"


class Goal(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the goal for which summary needs to be refreshed."""

    SERVERS = "Servers"
    DATABASES = "Databases"
    DESKTOP_VIRTUALIZATION = "DesktopVirtualization"
    WEB_APPLICATIONS = "WebApplications"
    DATA_CENTER = "DataCenter"


class Items(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Items."""

    SERVER_DISCOVERY = "ServerDiscovery"
    SERVER_ASSESSMENT = "ServerAssessment"
    SERVER_MIGRATION = "ServerMigration"
    CLOUDAMIZE = "Cloudamize"
    TURBONOMIC = "Turbonomic"
    ZERTO = "Zerto"
    CORENT_TECH = "CorentTech"
    SERVER_ASSESSMENT_V1 = "ServerAssessmentV1"
    SERVER_MIGRATION_REPLICATION = "ServerMigration_Replication"
    CARBONITE = "Carbonite"
    DATA_MIGRATION_ASSISTANT = "DataMigrationAssistant"
    DATABASE_MIGRATION_SERVICE = "DatabaseMigrationService"
    DEVICE42 = "Device42"
    JET_STREAM = "JetStream"
    RACK_WARE = "RackWare"
    UNIFY_CLOUD = "UnifyCloud"
    FLEXERA = "Flexera"
    SERVER_DISCOVERY_IMPORT = "ServerDiscovery_Import"
    LAKESIDE = "Lakeside"
    APP_SERVICE_MIGRATION_ASSISTANT = "AppServiceMigrationAssistant"
    MOVERE = "Movere"
    CLOUD_SPHERE = "CloudSphere"
    MODERNIZATION = "Modernization"
    SERVER_MIGRATION_DATA_REPLICATION = "ServerMigration_DataReplication"
    UNKNOWN = "Unknown"


class OnDelete(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """OnDelete."""

    NONE = "None"
    CASCADE = "Cascade"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class PrivateEndpointConnectionProxyPropertiesStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """PrivateEndpointConnectionProxyPropertiesStatus."""

    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELLED = "Cancelled"
    RUNNING = "Running"


class PrivateLinkServiceConnectionStateStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Private link connection state."""

    APPROVED = "Approved"
    PENDING = "Pending"
    REJECTED = "Rejected"
    DISCONNECTED = "Disconnected"


class PropertyKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """PropertyKind."""

    NONE = "None"
    STRUCTURAL = "Structural"
    NAVIGATION = "Navigation"


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Provisioning state."""

    ACCEPTED = "Accepted"
    IN_PROGRESS = "InProgress"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELED = "Canceled"


class PublicNetworkAccess(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the state of public network access."""

    NOT_SPECIFIED = "NotSpecified"
    ENABLED = "Enabled"
    DISABLED = "Disabled"


class Purpose(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the purpose of the solution."""

    DISCOVERY = "Discovery"
    ASSESSMENT = "Assessment"
    MIGRATION = "Migration"


class RefreshSummaryState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Refresh summary state."""

    STARTED = "Started"
    IN_PROGRESS = "InProgress"
    COMPLETED = "Completed"
    FAILED = "Failed"


class SchemaElementKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """SchemaElementKind."""

    NONE = "None"
    TYPE_DEFINITION = "TypeDefinition"
    TERM = "Term"
    ACTION = "Action"
    ENTITY_CONTAINER = "EntityContainer"
    FUNCTION = "Function"


class SingleValueNodeKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """SingleValueNodeKind."""

    NONE = "None"
    CONSTANT = "Constant"
    CONVERT = "Convert"
    NON_RESOURCE_RANGE_VARIABLE_REFERENCE = "NonResourceRangeVariableReference"
    BINARY_OPERATOR = "BinaryOperator"
    UNARY_OPERATOR = "UnaryOperator"
    SINGLE_VALUE_PROPERTY_ACCESS = "SingleValuePropertyAccess"
    COLLECTION_PROPERTY_ACCESS = "CollectionPropertyAccess"
    SINGLE_VALUE_FUNCTION_CALL = "SingleValueFunctionCall"
    ANY = "Any"
    COLLECTION_NAVIGATION_NODE = "CollectionNavigationNode"
    SINGLE_NAVIGATION_NODE = "SingleNavigationNode"
    SINGLE_VALUE_OPEN_PROPERTY_ACCESS = "SingleValueOpenPropertyAccess"
    SINGLE_RESOURCE_CAST = "SingleResourceCast"
    ALL = "All"
    COLLECTION_RESOURCE_CAST = "CollectionResourceCast"
    RESOURCE_RANGE_VARIABLE_REFERENCE = "ResourceRangeVariableReference"
    SINGLE_RESOURCE_FUNCTION_CALL = "SingleResourceFunctionCall"
    COLLECTION_FUNCTION_CALL = "CollectionFunctionCall"
    COLLECTION_RESOURCE_FUNCTION_CALL = "CollectionResourceFunctionCall"
    NAMED_FUNCTION_PARAMETER = "NamedFunctionParameter"
    PARAMETER_ALIAS = "ParameterAlias"
    ENTITY_SET = "EntitySet"
    KEY_LOOKUP = "KeyLookup"
    SEARCH_TERM = "SearchTerm"
    COLLECTION_OPEN_PROPERTY_ACCESS = "CollectionOpenPropertyAccess"
    COLLECTION_COMPLEX_NODE = "CollectionComplexNode"
    SINGLE_COMPLEX_NODE = "SingleComplexNode"
    COUNT = "Count"
    SINGLE_VALUE_CAST = "SingleValueCast"
    COLLECTION_PROPERTY_NODE = "CollectionPropertyNode"
    AGGREGATED_COLLECTION_PROPERTY_NODE = "AggregatedCollectionPropertyNode"
    IN = "In"
    COLLECTION_CONSTANT = "CollectionConstant"
    IN_ENUM = "In"


class Status(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the current status of the solution."""

    INACTIVE = "Inactive"
    ACTIVE = "Active"


class Tool(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the tool to be registered."""

    SERVER_DISCOVERY = "ServerDiscovery"
    SERVER_ASSESSMENT = "ServerAssessment"
    SERVER_MIGRATION = "ServerMigration"
    CLOUDAMIZE = "Cloudamize"
    TURBONOMIC = "Turbonomic"
    ZERTO = "Zerto"
    CORENT_TECH = "CorentTech"
    SERVER_ASSESSMENT_V1 = "ServerAssessmentV1"
    SERVER_MIGRATION_REPLICATION = "ServerMigration_Replication"
    CARBONITE = "Carbonite"
    DATA_MIGRATION_ASSISTANT = "DataMigrationAssistant"
    DATABASE_MIGRATION_SERVICE = "DatabaseMigrationService"
    DEVICE42 = "Device42"
    JET_STREAM = "JetStream"
    RACK_WARE = "RackWare"
    UNIFY_CLOUD = "UnifyCloud"
    FLEXERA = "Flexera"
    SERVER_DISCOVERY_IMPORT = "ServerDiscovery_Import"
    LAKESIDE = "Lakeside"
    APP_SERVICE_MIGRATION_ASSISTANT = "AppServiceMigrationAssistant"
    MOVERE = "Movere"
    CLOUD_SPHERE = "CloudSphere"
    MODERNIZATION = "Modernization"
    SERVER_MIGRATION_DATA_REPLICATION = "ServerMigration_DataReplication"
    UNKNOWN = "Unknown"


class TransformationNodeKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TransformationNodeKind."""

    AGGREGATE = "Aggregate"
    GROUP_BY = "GroupBy"
    FILTER = "Filter"
    COMPUTE = "Compute"


class TypeKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """TypeKind."""

    NONE = "None"
    PRIMITIVE = "Primitive"
    ENTITY = "Entity"
    COMPLEX = "Complex"
    COLLECTION = "Collection"
    ENTITY_REFERENCE = "EntityReference"
    ENUM = "Enum"
    TYPE_DEFINITION = "TypeDefinition"
    UNTYPED = "Untyped"
    PATH = "Path"
