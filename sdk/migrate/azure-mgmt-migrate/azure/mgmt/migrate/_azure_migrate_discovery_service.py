# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING

from azure.core.pipeline import policies
from azure.core.rest import HttpRequest, HttpResponse
from azure.mgmt.core import ARMPipelineClient
from azure.mgmt.core.policies import ARMAutoResourceProviderRegistrationPolicy

from . import models as _models
from ._configuration import AzureMigrateDiscoveryServiceConfiguration
from ._serialization import Deserializer, Serializer
from .operations import (
    DependencyMapControllerOperations,
    HypervClusterControllerOperations,
    HypervDependencyMapControllerOperations,
    HypervHostControllerOperations,
    HypervJobsControllerOperations,
    HypervJobsOperations,
    HypervMachinesControllerOperations,
    HypervOperationsStatusControllerOperations,
    HypervRunAsAccountsControllerOperations,
    HypervSitesControllerOperations,
    HypervSitesOperations,
    HypervSoftwareInventoriesControllerOperations,
    IisWebApplicationsControllerOperations,
    IisWebServersControllerOperations,
    ImportJobsControllerOperations,
    ImportMachinesControllerOperations,
    ImportSitesControllerOperations,
    MachinesControllerOperations,
    MasterSitesControllerOperations,
    MasterSitesOperationsStatusControllerOperations,
    Operations,
    PrivateEndpointConnectionControllerOperations,
    PrivateLinkResourcesControllerOperations,
    RunAsAccountsControllerOperations,
    ServerDependencyMapControllerOperations,
    ServerJobsControllerOperations,
    ServerOperationsStatusControllerOperations,
    ServerRunAsAccountsControllerOperations,
    ServerSitesControllerOperations,
    ServerSoftwareInventoriesControllerOperations,
    ServersControllerOperations,
    SitesControllerOperations,
    SqlAvailabilityGroupsControllerOperations,
    SqlDatabasesControllerOperations,
    SqlDiscoverySiteDataSourceControllerOperations,
    SqlJobsControllerOperations,
    SqlOperationsStatusControllerOperations,
    SqlRunAsAccountsControllerOperations,
    SqlServersControllerOperations,
    SqlSitesControllerOperations,
    TomcatWebApplicationsControllerOperations,
    TomcatWebServersControllerOperations,
    VcenterControllerOperations,
    VmwareHostControllerOperations,
    VmwareOperationsStatusOperations,
    VmwarePropertiesControllerOperations,
    VmwareSoftwareInventoriesControllerOperations,
    WebAppDiscoverySiteDataSourcesControllerOperations,
    WebAppExtendedMachinesControllerOperations,
    WebAppPropertiesControllerOperations,
    WebAppRunAsAccountsControllerOperations,
    WebAppSitesControllerOperations,
    WebApplicationsControllerOperations,
    WebServersControllerOperations,
)

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential


class AzureMigrateDiscoveryService:  # pylint: disable=client-accepts-api-version-keyword,too-many-instance-attributes
    """Azure OffAzure Resource Provider management API.

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.migrate.operations.Operations
    :ivar hyperv_sites: HypervSitesOperations operations
    :vartype hyperv_sites: azure.mgmt.migrate.operations.HypervSitesOperations
    :ivar import_sites_controller: ImportSitesControllerOperations operations
    :vartype import_sites_controller: azure.mgmt.migrate.operations.ImportSitesControllerOperations
    :ivar master_sites_controller: MasterSitesControllerOperations operations
    :vartype master_sites_controller: azure.mgmt.migrate.operations.MasterSitesControllerOperations
    :ivar server_sites_controller: ServerSitesControllerOperations operations
    :vartype server_sites_controller: azure.mgmt.migrate.operations.ServerSitesControllerOperations
    :ivar sites_controller: SitesControllerOperations operations
    :vartype sites_controller: azure.mgmt.migrate.operations.SitesControllerOperations
    :ivar hyperv_sites_controller: HypervSitesControllerOperations operations
    :vartype hyperv_sites_controller: azure.mgmt.migrate.operations.HypervSitesControllerOperations
    :ivar hyperv_dependency_map_controller: HypervDependencyMapControllerOperations operations
    :vartype hyperv_dependency_map_controller:
     azure.mgmt.migrate.operations.HypervDependencyMapControllerOperations
    :ivar hyperv_cluster_controller: HypervClusterControllerOperations operations
    :vartype hyperv_cluster_controller:
     azure.mgmt.migrate.operations.HypervClusterControllerOperations
    :ivar hyperv_host_controller: HypervHostControllerOperations operations
    :vartype hyperv_host_controller: azure.mgmt.migrate.operations.HypervHostControllerOperations
    :ivar hyperv_jobs: HypervJobsOperations operations
    :vartype hyperv_jobs: azure.mgmt.migrate.operations.HypervJobsOperations
    :ivar hyperv_machines_controller: HypervMachinesControllerOperations operations
    :vartype hyperv_machines_controller:
     azure.mgmt.migrate.operations.HypervMachinesControllerOperations
    :ivar hyperv_software_inventories_controller: HypervSoftwareInventoriesControllerOperations
     operations
    :vartype hyperv_software_inventories_controller:
     azure.mgmt.migrate.operations.HypervSoftwareInventoriesControllerOperations
    :ivar hyperv_operations_status_controller: HypervOperationsStatusControllerOperations
     operations
    :vartype hyperv_operations_status_controller:
     azure.mgmt.migrate.operations.HypervOperationsStatusControllerOperations
    :ivar hyperv_run_as_accounts_controller: HypervRunAsAccountsControllerOperations operations
    :vartype hyperv_run_as_accounts_controller:
     azure.mgmt.migrate.operations.HypervRunAsAccountsControllerOperations
    :ivar import_jobs_controller: ImportJobsControllerOperations operations
    :vartype import_jobs_controller: azure.mgmt.migrate.operations.ImportJobsControllerOperations
    :ivar import_machines_controller: ImportMachinesControllerOperations operations
    :vartype import_machines_controller:
     azure.mgmt.migrate.operations.ImportMachinesControllerOperations
    :ivar master_sites_operations_status_controller:
     MasterSitesOperationsStatusControllerOperations operations
    :vartype master_sites_operations_status_controller:
     azure.mgmt.migrate.operations.MasterSitesOperationsStatusControllerOperations
    :ivar private_endpoint_connection_controller: PrivateEndpointConnectionControllerOperations
     operations
    :vartype private_endpoint_connection_controller:
     azure.mgmt.migrate.operations.PrivateEndpointConnectionControllerOperations
    :ivar private_link_resources_controller: PrivateLinkResourcesControllerOperations operations
    :vartype private_link_resources_controller:
     azure.mgmt.migrate.operations.PrivateLinkResourcesControllerOperations
    :ivar sql_sites_controller: SqlSitesControllerOperations operations
    :vartype sql_sites_controller: azure.mgmt.migrate.operations.SqlSitesControllerOperations
    :ivar sql_discovery_site_data_source_controller: SqlDiscoverySiteDataSourceControllerOperations
     operations
    :vartype sql_discovery_site_data_source_controller:
     azure.mgmt.migrate.operations.SqlDiscoverySiteDataSourceControllerOperations
    :ivar sql_jobs_controller: SqlJobsControllerOperations operations
    :vartype sql_jobs_controller: azure.mgmt.migrate.operations.SqlJobsControllerOperations
    :ivar sql_operations_status_controller: SqlOperationsStatusControllerOperations operations
    :vartype sql_operations_status_controller:
     azure.mgmt.migrate.operations.SqlOperationsStatusControllerOperations
    :ivar sql_run_as_accounts_controller: SqlRunAsAccountsControllerOperations operations
    :vartype sql_run_as_accounts_controller:
     azure.mgmt.migrate.operations.SqlRunAsAccountsControllerOperations
    :ivar sql_availability_groups_controller: SqlAvailabilityGroupsControllerOperations operations
    :vartype sql_availability_groups_controller:
     azure.mgmt.migrate.operations.SqlAvailabilityGroupsControllerOperations
    :ivar sql_databases_controller: SqlDatabasesControllerOperations operations
    :vartype sql_databases_controller:
     azure.mgmt.migrate.operations.SqlDatabasesControllerOperations
    :ivar sql_servers_controller: SqlServersControllerOperations operations
    :vartype sql_servers_controller: azure.mgmt.migrate.operations.SqlServersControllerOperations
    :ivar web_app_sites_controller: WebAppSitesControllerOperations operations
    :vartype web_app_sites_controller:
     azure.mgmt.migrate.operations.WebAppSitesControllerOperations
    :ivar web_app_discovery_site_data_sources_controller:
     WebAppDiscoverySiteDataSourcesControllerOperations operations
    :vartype web_app_discovery_site_data_sources_controller:
     azure.mgmt.migrate.operations.WebAppDiscoverySiteDataSourcesControllerOperations
    :ivar web_app_extended_machines_controller: WebAppExtendedMachinesControllerOperations
     operations
    :vartype web_app_extended_machines_controller:
     azure.mgmt.migrate.operations.WebAppExtendedMachinesControllerOperations
    :ivar iis_web_applications_controller: IisWebApplicationsControllerOperations operations
    :vartype iis_web_applications_controller:
     azure.mgmt.migrate.operations.IisWebApplicationsControllerOperations
    :ivar iis_web_servers_controller: IisWebServersControllerOperations operations
    :vartype iis_web_servers_controller:
     azure.mgmt.migrate.operations.IisWebServersControllerOperations
    :ivar web_app_run_as_accounts_controller: WebAppRunAsAccountsControllerOperations operations
    :vartype web_app_run_as_accounts_controller:
     azure.mgmt.migrate.operations.WebAppRunAsAccountsControllerOperations
    :ivar tomcat_web_applications_controller: TomcatWebApplicationsControllerOperations operations
    :vartype tomcat_web_applications_controller:
     azure.mgmt.migrate.operations.TomcatWebApplicationsControllerOperations
    :ivar tomcat_web_servers_controller: TomcatWebServersControllerOperations operations
    :vartype tomcat_web_servers_controller:
     azure.mgmt.migrate.operations.TomcatWebServersControllerOperations
    :ivar web_app_properties_controller: WebAppPropertiesControllerOperations operations
    :vartype web_app_properties_controller:
     azure.mgmt.migrate.operations.WebAppPropertiesControllerOperations
    :ivar web_applications_controller: WebApplicationsControllerOperations operations
    :vartype web_applications_controller:
     azure.mgmt.migrate.operations.WebApplicationsControllerOperations
    :ivar web_servers_controller: WebServersControllerOperations operations
    :vartype web_servers_controller: azure.mgmt.migrate.operations.WebServersControllerOperations
    :ivar server_dependency_map_controller: ServerDependencyMapControllerOperations operations
    :vartype server_dependency_map_controller:
     azure.mgmt.migrate.operations.ServerDependencyMapControllerOperations
    :ivar server_jobs_controller: ServerJobsControllerOperations operations
    :vartype server_jobs_controller: azure.mgmt.migrate.operations.ServerJobsControllerOperations
    :ivar servers_controller: ServersControllerOperations operations
    :vartype servers_controller: azure.mgmt.migrate.operations.ServersControllerOperations
    :ivar server_software_inventories_controller: ServerSoftwareInventoriesControllerOperations
     operations
    :vartype server_software_inventories_controller:
     azure.mgmt.migrate.operations.ServerSoftwareInventoriesControllerOperations
    :ivar server_operations_status_controller: ServerOperationsStatusControllerOperations
     operations
    :vartype server_operations_status_controller:
     azure.mgmt.migrate.operations.ServerOperationsStatusControllerOperations
    :ivar server_run_as_accounts_controller: ServerRunAsAccountsControllerOperations operations
    :vartype server_run_as_accounts_controller:
     azure.mgmt.migrate.operations.ServerRunAsAccountsControllerOperations
    :ivar dependency_map_controller: DependencyMapControllerOperations operations
    :vartype dependency_map_controller:
     azure.mgmt.migrate.operations.DependencyMapControllerOperations
    :ivar vmware_host_controller: VmwareHostControllerOperations operations
    :vartype vmware_host_controller: azure.mgmt.migrate.operations.VmwareHostControllerOperations
    :ivar hyperv_jobs_controller: HypervJobsControllerOperations operations
    :vartype hyperv_jobs_controller: azure.mgmt.migrate.operations.HypervJobsControllerOperations
    :ivar machines_controller: MachinesControllerOperations operations
    :vartype machines_controller: azure.mgmt.migrate.operations.MachinesControllerOperations
    :ivar vmware_software_inventories_controller: VmwareSoftwareInventoriesControllerOperations
     operations
    :vartype vmware_software_inventories_controller:
     azure.mgmt.migrate.operations.VmwareSoftwareInventoriesControllerOperations
    :ivar vmware_operations_status: VmwareOperationsStatusOperations operations
    :vartype vmware_operations_status:
     azure.mgmt.migrate.operations.VmwareOperationsStatusOperations
    :ivar run_as_accounts_controller: RunAsAccountsControllerOperations operations
    :vartype run_as_accounts_controller:
     azure.mgmt.migrate.operations.RunAsAccountsControllerOperations
    :ivar vmware_properties_controller: VmwarePropertiesControllerOperations operations
    :vartype vmware_properties_controller:
     azure.mgmt.migrate.operations.VmwarePropertiesControllerOperations
    :ivar vcenter_controller: VcenterControllerOperations operations
    :vartype vcenter_controller: azure.mgmt.migrate.operations.VcenterControllerOperations
    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The ID of the target subscription. The value must be an UUID. Required.
    :type subscription_id: str
    :param base_url: Service URL. Default value is "https://management.azure.com".
    :type base_url: str
    :keyword api_version: Api Version. Default value is "2024-05-01-preview". Note that overriding
     this default value may result in unsupported behavior.
    :paramtype api_version: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(
        self,
        credential: "TokenCredential",
        subscription_id: str,
        base_url: str = "https://management.azure.com",
        **kwargs: Any
    ) -> None:
        self._config = AzureMigrateDiscoveryServiceConfiguration(
            credential=credential, subscription_id=subscription_id, **kwargs
        )
        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                ARMAutoResourceProviderRegistrationPolicy(),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.DistributedTracingPolicy(**kwargs),
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: ARMPipelineClient = ARMPipelineClient(base_url=base_url, policies=_policies, **kwargs)

        client_models = {k: v for k, v in _models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.hyperv_sites = HypervSitesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.import_sites_controller = ImportSitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.master_sites_controller = MasterSitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_sites_controller = ServerSitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sites_controller = SitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_sites_controller = HypervSitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_dependency_map_controller = HypervDependencyMapControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_cluster_controller = HypervClusterControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_host_controller = HypervHostControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_jobs = HypervJobsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.hyperv_machines_controller = HypervMachinesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_software_inventories_controller = HypervSoftwareInventoriesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_operations_status_controller = HypervOperationsStatusControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_run_as_accounts_controller = HypervRunAsAccountsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.import_jobs_controller = ImportJobsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.import_machines_controller = ImportMachinesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.master_sites_operations_status_controller = MasterSitesOperationsStatusControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.private_endpoint_connection_controller = PrivateEndpointConnectionControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.private_link_resources_controller = PrivateLinkResourcesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_sites_controller = SqlSitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_discovery_site_data_source_controller = SqlDiscoverySiteDataSourceControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_jobs_controller = SqlJobsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_operations_status_controller = SqlOperationsStatusControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_run_as_accounts_controller = SqlRunAsAccountsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_availability_groups_controller = SqlAvailabilityGroupsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_databases_controller = SqlDatabasesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.sql_servers_controller = SqlServersControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_app_sites_controller = WebAppSitesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_app_discovery_site_data_sources_controller = WebAppDiscoverySiteDataSourcesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_app_extended_machines_controller = WebAppExtendedMachinesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.iis_web_applications_controller = IisWebApplicationsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.iis_web_servers_controller = IisWebServersControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_app_run_as_accounts_controller = WebAppRunAsAccountsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.tomcat_web_applications_controller = TomcatWebApplicationsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.tomcat_web_servers_controller = TomcatWebServersControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_app_properties_controller = WebAppPropertiesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_applications_controller = WebApplicationsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.web_servers_controller = WebServersControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_dependency_map_controller = ServerDependencyMapControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_jobs_controller = ServerJobsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.servers_controller = ServersControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_software_inventories_controller = ServerSoftwareInventoriesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_operations_status_controller = ServerOperationsStatusControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_run_as_accounts_controller = ServerRunAsAccountsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.dependency_map_controller = DependencyMapControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.vmware_host_controller = VmwareHostControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.hyperv_jobs_controller = HypervJobsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.machines_controller = MachinesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.vmware_software_inventories_controller = VmwareSoftwareInventoriesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.vmware_operations_status = VmwareOperationsStatusOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.run_as_accounts_controller = RunAsAccountsControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.vmware_properties_controller = VmwarePropertiesControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.vcenter_controller = VcenterControllerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )

    def _send_request(self, request: HttpRequest, *, stream: bool = False, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client._send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> "AzureMigrateDiscoveryService":
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
