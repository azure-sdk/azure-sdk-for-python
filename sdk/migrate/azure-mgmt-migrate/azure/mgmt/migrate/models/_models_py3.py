# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class Application(_serialization.Model):
    """Application in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Gets or sets Name of the Application.
    :vartype name: str
    :ivar version: Gets or sets Version of the Application.
    :vartype version: str
    :ivar provider: Gets or sets Provider of the Application.
    :vartype provider: str
    """

    _validation = {
        "name": {"readonly": True},
        "version": {"readonly": True},
        "provider": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "provider": {"key": "provider", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.version = None
        self.provider = None


class ApplicationDiscovery(_serialization.Model):
    """Contains data related application and roles discovery scope.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar discovery_scope_status: Gets discovery scope status. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or
     ~azure.mgmt.migrate.models.ApplicationDiscoveryScopeStatus
    :ivar errors: Gets errors for discovery scope.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar hydrated_run_as_account_id: Gets the run as account ID with which feature worked
     successfully.

     It is discovered by the agent from the list of credentials.
    :vartype hydrated_run_as_account_id: str
    """

    _validation = {
        "discovery_scope_status": {"readonly": True},
        "errors": {"readonly": True},
        "hydrated_run_as_account_id": {"readonly": True},
    }

    _attribute_map = {
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "hydrated_run_as_account_id": {"key": "hydratedRunAsAccountId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.discovery_scope_status = None
        self.errors = None
        self.hydrated_run_as_account_id = None


class AppsAndRoles(_serialization.Model):
    """AppsAndRoles in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar applications: Gets or sets Applications of the AppsAndRoles.
    :vartype applications: list[~azure.mgmt.migrate.models.Application]
    :ivar web_applications: Gets or sets WebApplications of the AppsAndRoles.
    :vartype web_applications: list[~azure.mgmt.migrate.models.WebApplicationAppsAndRolesModel]
    :ivar features: Gets or sets Features of the AppsAndRoles.
    :vartype features: list[~azure.mgmt.migrate.models.Feature]
    :ivar sql_servers: Gets or sets SQLServers of the AppsAndRoles.
    :vartype sql_servers: list[~azure.mgmt.migrate.models.SqlServerApplication]
    :ivar share_point_servers: Gets or sets SharePointServers of the AppsAndRoles.
    :vartype share_point_servers: list[~azure.mgmt.migrate.models.SharePointServer]
    :ivar system_centers: Gets or sets SystemCenters of the AppsAndRoles.
    :vartype system_centers: list[~azure.mgmt.migrate.models.SystemCenter]
    :ivar biz_talk_servers: Gets or sets BizTalkServers of the AppsAndRoles.
    :vartype biz_talk_servers: list[~azure.mgmt.migrate.models.BizTalkServer]
    :ivar exchange_servers: Gets or sets ExchangeServers of the AppsAndRoles.
    :vartype exchange_servers: list[~azure.mgmt.migrate.models.ExchangeServer]
    :ivar other_databases: Gets or sets OtherDatabaseServers of the AppsAndRoles.
    :vartype other_databases: list[~azure.mgmt.migrate.models.OtherDatabase]
    """

    _validation = {
        "applications": {"readonly": True},
        "web_applications": {"readonly": True},
        "features": {"readonly": True},
        "sql_servers": {"readonly": True},
        "share_point_servers": {"readonly": True},
        "system_centers": {"readonly": True},
        "biz_talk_servers": {"readonly": True},
        "exchange_servers": {"readonly": True},
        "other_databases": {"readonly": True},
    }

    _attribute_map = {
        "applications": {"key": "applications", "type": "[Application]"},
        "web_applications": {"key": "webApplications", "type": "[WebApplicationAppsAndRolesModel]"},
        "features": {"key": "features", "type": "[Feature]"},
        "sql_servers": {"key": "sqlServers", "type": "[SqlServerApplication]"},
        "share_point_servers": {"key": "sharePointServers", "type": "[SharePointServer]"},
        "system_centers": {"key": "systemCenters", "type": "[SystemCenter]"},
        "biz_talk_servers": {"key": "bizTalkServers", "type": "[BizTalkServer]"},
        "exchange_servers": {"key": "exchangeServers", "type": "[ExchangeServer]"},
        "other_databases": {"key": "otherDatabases", "type": "[OtherDatabase]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.applications = None
        self.web_applications = None
        self.features = None
        self.sql_servers = None
        self.share_point_servers = None
        self.system_centers = None
        self.biz_talk_servers = None
        self.exchange_servers = None
        self.other_databases = None


class ArcDiscovery(_serialization.Model):
    """Contains data related to Azure arc discovery.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar status: AzureArc status indicates whether arc discovery has successfully completed or
     not. Required. Known values are: "Unknown", "NotEnabled", and "Enabled".
    :vartype status: str or ~azure.mgmt.migrate.models.AzureArcStatus
    :ivar machine_resource_id: Machine Resource Id. Required.
    :vartype machine_resource_id: str
    """

    _validation = {
        "status": {"required": True, "readonly": True},
        "machine_resource_id": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "machine_resource_id": {"key": "machineResourceId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.status = None
        self.machine_resource_id = None


class BizTalkServer(_serialization.Model):
    """BizTalkServer in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar product_name: Gets or sets ProductName of the BizTalkServer.
    :vartype product_name: str
    :ivar status: Gets or sets Status of the BizTalkServer.
    :vartype status: str
    """

    _validation = {
        "product_name": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "product_name": {"key": "productName", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.product_name = None
        self.status = None


class ConnectorUnit(_serialization.Model):
    """The connectors of the web server.

    :ivar bindings: Gets or sets the bindings for the connector.
    :vartype bindings: list[~azure.mgmt.migrate.models.FrontEndBinding]
    """

    _attribute_map = {
        "bindings": {"key": "bindings", "type": "[FrontEndBinding]"},
    }

    def __init__(self, *, bindings: Optional[List["_models.FrontEndBinding"]] = None, **kwargs: Any) -> None:
        """
        :keyword bindings: Gets or sets the bindings for the connector.
        :paramtype bindings: list[~azure.mgmt.migrate.models.FrontEndBinding]
        """
        super().__init__(**kwargs)
        self.bindings = bindings


class DeleteImportedMachinesJobProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Delete Imported Machines Job Properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar blob_name: blob name.
    :vartype blob_name: str
    :ivar error_sas_uri: error Sas Uri.
    :vartype error_sas_uri: str
    :ivar job_state: job State. Known values are: "Unknown", "Verified", "VerifiedWithErrors",
     "Completed", and "Failed".
    :vartype job_state: str or
     ~azure.mgmt.migrate.models.DeleteImportedMachinesJobPropertiesJobState
    :ivar number_of_machines_deleted: number Of Machines Deleted.
    :vartype number_of_machines_deleted: int
    :ivar deletion_confirmation: deletion Confirmation.
    :vartype deletion_confirmation: bool
    :ivar errors: errors list.
    :vartype errors: list[str]
    :ivar status: Gets or sets the Job status.
    :vartype status: str
    :ivar start_time: Gets or sets the Job start time.
    :vartype start_time: str
    :ivar end_time: Gets or sets the Job end time.
    :vartype end_time: str
    :ivar display_name: Gets or sets the Display name.
    :vartype display_name: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "blob_name": {"key": "blobName", "type": "str"},
        "error_sas_uri": {"key": "errorSasUri", "type": "str"},
        "job_state": {"key": "jobState", "type": "str"},
        "number_of_machines_deleted": {"key": "numberOfMachinesDeleted", "type": "int"},
        "deletion_confirmation": {"key": "deletionConfirmation", "type": "bool"},
        "errors": {"key": "errors", "type": "[str]"},
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        blob_name: Optional[str] = None,
        error_sas_uri: Optional[str] = None,
        job_state: Optional[Union[str, "_models.DeleteImportedMachinesJobPropertiesJobState"]] = None,
        number_of_machines_deleted: Optional[int] = None,
        deletion_confirmation: Optional[bool] = None,
        status: Optional[str] = None,
        start_time: Optional[str] = None,
        end_time: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword blob_name: blob name.
        :paramtype blob_name: str
        :keyword error_sas_uri: error Sas Uri.
        :paramtype error_sas_uri: str
        :keyword job_state: job State. Known values are: "Unknown", "Verified", "VerifiedWithErrors",
         "Completed", and "Failed".
        :paramtype job_state: str or
         ~azure.mgmt.migrate.models.DeleteImportedMachinesJobPropertiesJobState
        :keyword number_of_machines_deleted: number Of Machines Deleted.
        :paramtype number_of_machines_deleted: int
        :keyword deletion_confirmation: deletion Confirmation.
        :paramtype deletion_confirmation: bool
        :keyword status: Gets or sets the Job status.
        :paramtype status: str
        :keyword start_time: Gets or sets the Job start time.
        :paramtype start_time: str
        :keyword end_time: Gets or sets the Job end time.
        :paramtype end_time: str
        :keyword display_name: Gets or sets the Display name.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.blob_name = blob_name
        self.error_sas_uri = error_sas_uri
        self.job_state = job_state
        self.number_of_machines_deleted = number_of_machines_deleted
        self.deletion_confirmation = deletion_confirmation
        self.errors = None
        self.status = status
        self.start_time = start_time
        self.end_time = end_time
        self.display_name = display_name
        self.provisioning_state = None


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    """


class DeleteImportMachinesJob(ProxyResource):
    """A host resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.DeleteImportedMachinesJobProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DeleteImportedMachinesJobProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.DeleteImportedMachinesJobProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.DeleteImportedMachinesJobProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DeleteImportMachinesJobCollection(_serialization.Model):
    """Delete import machines job collection.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Gets the list of jobs. Required.
    :vartype value: list[~azure.mgmt.migrate.models.DeleteImportMachinesJob]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DeleteImportMachinesJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.DeleteImportMachinesJob"], **kwargs: Any) -> None:
        """
        :keyword value: Gets the list of jobs. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.DeleteImportMachinesJob]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class DependencyMapDiscovery(_serialization.Model):
    """Contains data related dependency map discovery scope.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar discovery_scope_status: Gets discovery scope status. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or
     ~azure.mgmt.migrate.models.DependencyMapDiscoveryScopeStatus
    :ivar errors: Gets errors for discovery scope.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar hydrated_run_as_account_id: Gets the run as account ID with which feature worked
     successfully.

     It is discovered by the agent from the list of credentials.
    :vartype hydrated_run_as_account_id: str
    """

    _validation = {
        "discovery_scope_status": {"readonly": True},
        "errors": {"readonly": True},
        "hydrated_run_as_account_id": {"readonly": True},
    }

    _attribute_map = {
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "hydrated_run_as_account_id": {"key": "hydratedRunAsAccountId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.discovery_scope_status = None
        self.errors = None
        self.hydrated_run_as_account_id = None


class DependencyMapMachineInput(_serialization.Model):
    """Machine class.

    :ivar machine_id: Gets or sets the ARM id of the machine.
    :vartype machine_id: str
    :ivar is_dependency_map_to_be_enabled: Gets or sets a value indicating whether
                 dependency mapping is to
     be enabled or not.
    :vartype is_dependency_map_to_be_enabled: bool
    """

    _attribute_map = {
        "machine_id": {"key": "machineId", "type": "str"},
        "is_dependency_map_to_be_enabled": {"key": "isDependencyMapToBeEnabled", "type": "bool"},
    }

    def __init__(
        self, *, machine_id: Optional[str] = None, is_dependency_map_to_be_enabled: Optional[bool] = None, **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: Gets or sets the ARM id of the machine.
        :paramtype machine_id: str
        :keyword is_dependency_map_to_be_enabled: Gets or sets a value indicating whether
                     dependency mapping is to
         be enabled or not.
        :paramtype is_dependency_map_to_be_enabled: bool
        """
        super().__init__(**kwargs)
        self.machine_id = machine_id
        self.is_dependency_map_to_be_enabled = is_dependency_map_to_be_enabled


class DependencyMapServiceMapextensionsClientGroupMembersRequest(_serialization.Model):  # pylint: disable=name-too-long
    """DependencyMap ServiceMap extensions Client GroupMembers Request.

    :ivar machine_id: id of machine.
    :vartype machine_id: str
    :ivar process_group_name: process group name.
    :vartype process_group_name: str
    :ivar process_name: name of process.
    :vartype process_name: str
    :ivar start_time: start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: end time.
    :vartype end_time: ~datetime.datetime
    :ivar filters: optional filters.
    :vartype filters:
     ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
    """

    _attribute_map = {
        "machine_id": {"key": "machineId", "type": "str"},
        "process_group_name": {"key": "processGroupName", "type": "str"},
        "process_name": {"key": "processName", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "filters": {"key": "filters", "type": "DependencyMapServiceMapextensionsDependencyMapRequestFilters"},
    }

    def __init__(
        self,
        *,
        machine_id: Optional[str] = None,
        process_group_name: Optional[str] = None,
        process_name: Optional[str] = None,
        start_time: Optional[datetime.datetime] = None,
        end_time: Optional[datetime.datetime] = None,
        filters: Optional["_models.DependencyMapServiceMapextensionsDependencyMapRequestFilters"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: id of machine.
        :paramtype machine_id: str
        :keyword process_group_name: process group name.
        :paramtype process_group_name: str
        :keyword process_name: name of process.
        :paramtype process_name: str
        :keyword start_time: start time.
        :paramtype start_time: ~datetime.datetime
        :keyword end_time: end time.
        :paramtype end_time: ~datetime.datetime
        :keyword filters: optional filters.
        :paramtype filters:
         ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
        """
        super().__init__(**kwargs)
        self.machine_id = machine_id
        self.process_group_name = process_group_name
        self.process_name = process_name
        self.start_time = start_time
        self.end_time = end_time
        self.filters = filters


class DependencyMapServiceMapextensionsDependencyMapRequestFilters(
    _serialization.Model
):  # pylint: disable=name-too-long
    """DependencyMap Service Map extensions Dependency Map Request Filters.

    :ivar machine_ids: array of machine ids.
    :vartype machine_ids: list[str]
    :ivar process_ids: array of process Ids.
    :vartype process_ids: list[str]
    """

    _attribute_map = {
        "machine_ids": {"key": "machineIds", "type": "[str]"},
        "process_ids": {"key": "processIds", "type": "[str]"},
    }

    def __init__(
        self, *, machine_ids: Optional[List[str]] = None, process_ids: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword machine_ids: array of machine ids.
        :paramtype machine_ids: list[str]
        :keyword process_ids: array of process Ids.
        :paramtype process_ids: list[str]
        """
        super().__init__(**kwargs)
        self.machine_ids = machine_ids
        self.process_ids = process_ids


class DependencyMapServiceMapextensionsExportDependenciesRequest(_serialization.Model):  # pylint: disable=name-too-long
    """DependencyMap ServiceMap extensions ExportDependencies Request.

    :ivar start_time: start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: end time.
    :vartype end_time: ~datetime.datetime
    """

    _attribute_map = {
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        start_time: Optional[datetime.datetime] = None,
        end_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword start_time: start time.
        :paramtype start_time: ~datetime.datetime
        :keyword end_time: end time.
        :paramtype end_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.start_time = start_time
        self.end_time = end_time


class DependencyMapServiceMapextensionsScopeMapRequest(_serialization.Model):  # pylint: disable=name-too-long
    """DependencyMap ServiceMapextensions Scope MapRequest.

    :ivar start_time: start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: end time.
    :vartype end_time: ~datetime.datetime
    :ivar filters: optional filters.
    :vartype filters:
     ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
    """

    _attribute_map = {
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "filters": {"key": "filters", "type": "DependencyMapServiceMapextensionsDependencyMapRequestFilters"},
    }

    def __init__(
        self,
        *,
        start_time: Optional[datetime.datetime] = None,
        end_time: Optional[datetime.datetime] = None,
        filters: Optional["_models.DependencyMapServiceMapextensionsDependencyMapRequestFilters"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword start_time: start time.
        :paramtype start_time: ~datetime.datetime
        :keyword end_time: end time.
        :paramtype end_time: ~datetime.datetime
        :keyword filters: optional filters.
        :paramtype filters:
         ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
        """
        super().__init__(**kwargs)
        self.start_time = start_time
        self.end_time = end_time
        self.filters = filters


class DependencyMapServiceMapextensionsServerGroupMembersRequest(_serialization.Model):  # pylint: disable=name-too-long
    """DependencyMap ServiceMap extensions ServerGroup Members Request.

    :ivar server_port: port of server.
    :vartype server_port: int
    :ivar start_time: start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: end time.
    :vartype end_time: ~datetime.datetime
    :ivar filters: optional filters.
    :vartype filters:
     ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
    """

    _attribute_map = {
        "server_port": {"key": "serverPort", "type": "int"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "filters": {"key": "filters", "type": "DependencyMapServiceMapextensionsDependencyMapRequestFilters"},
    }

    def __init__(
        self,
        *,
        server_port: Optional[int] = None,
        start_time: Optional[datetime.datetime] = None,
        end_time: Optional[datetime.datetime] = None,
        filters: Optional["_models.DependencyMapServiceMapextensionsDependencyMapRequestFilters"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword server_port: port of server.
        :paramtype server_port: int
        :keyword start_time: start time.
        :paramtype start_time: ~datetime.datetime
        :keyword end_time: end time.
        :paramtype end_time: ~datetime.datetime
        :keyword filters: optional filters.
        :paramtype filters:
         ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
        """
        super().__init__(**kwargs)
        self.server_port = server_port
        self.start_time = start_time
        self.end_time = end_time
        self.filters = filters


class DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest(
    _serialization.Model
):  # pylint: disable=name-too-long
    """DependencyMap ServiceMap extensions SingleMachine DetailedMap Request.

    :ivar machine_id: id of machine.
    :vartype machine_id: str
    :ivar start_time: start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: end time.
    :vartype end_time: ~datetime.datetime
    :ivar filters: optional filters.
    :vartype filters:
     ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
    """

    _attribute_map = {
        "machine_id": {"key": "machineId", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "filters": {"key": "filters", "type": "DependencyMapServiceMapextensionsDependencyMapRequestFilters"},
    }

    def __init__(
        self,
        *,
        machine_id: Optional[str] = None,
        start_time: Optional[datetime.datetime] = None,
        end_time: Optional[datetime.datetime] = None,
        filters: Optional["_models.DependencyMapServiceMapextensionsDependencyMapRequestFilters"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: id of machine.
        :paramtype machine_id: str
        :keyword start_time: start time.
        :paramtype start_time: ~datetime.datetime
        :keyword end_time: end time.
        :paramtype end_time: ~datetime.datetime
        :keyword filters: optional filters.
        :paramtype filters:
         ~azure.mgmt.migrate.models.DependencyMapServiceMapextensionsDependencyMapRequestFilters
        """
        super().__init__(**kwargs)
        self.machine_id = machine_id
        self.start_time = start_time
        self.end_time = end_time
        self.filters = filters


class DirectoryPath(_serialization.Model):
    """Second level entity for virtual directories.

    :ivar virtual: Gets or sets the virtual path for the directory.
    :vartype virtual: str
    :ivar physical: Gets or sets the physical path of the directory on the web server.
    :vartype physical: str
    """

    _attribute_map = {
        "virtual": {"key": "virtual", "type": "str"},
        "physical": {"key": "physical", "type": "str"},
    }

    def __init__(self, *, virtual: Optional[str] = None, physical: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword virtual: Gets or sets the virtual path for the directory.
        :paramtype virtual: str
        :keyword physical: Gets or sets the physical path of the directory on the web server.
        :paramtype physical: str
        """
        super().__init__(**kwargs)
        self.virtual = virtual
        self.physical = physical


class DiscoveryScopeErrorSummary(_serialization.Model):
    """The site error summary model.

    All required parameters must be populated in order to send to server.

    :ivar affected_resource_type: Gets or sets the affected resource type. Required.
    :vartype affected_resource_type: str
    :ivar affected_objects_count: Count of affected objects. Required.
    :vartype affected_objects_count: int
    :ivar discovery_scope: Gets or sets the count of affected objects. Required. Known values are:
     "AppsAndRoles", "DependencyMap", "StaticData", and "SQLServerConnectionInfo".
    :vartype discovery_scope: str or ~azure.mgmt.migrate.models.DiscoveryScopes
    """

    _validation = {
        "affected_resource_type": {"required": True},
        "affected_objects_count": {"required": True},
        "discovery_scope": {"required": True},
    }

    _attribute_map = {
        "affected_resource_type": {"key": "affectedResourceType", "type": "str"},
        "affected_objects_count": {"key": "affectedObjectsCount", "type": "int"},
        "discovery_scope": {"key": "discoveryScope", "type": "str"},
    }

    def __init__(
        self,
        *,
        affected_resource_type: str,
        affected_objects_count: int,
        discovery_scope: Union[str, "_models.DiscoveryScopes"],
        **kwargs: Any
    ) -> None:
        """
        :keyword affected_resource_type: Gets or sets the affected resource type. Required.
        :paramtype affected_resource_type: str
        :keyword affected_objects_count: Count of affected objects. Required.
        :paramtype affected_objects_count: int
        :keyword discovery_scope: Gets or sets the count of affected objects. Required. Known values
         are: "AppsAndRoles", "DependencyMap", "StaticData", and "SQLServerConnectionInfo".
        :paramtype discovery_scope: str or ~azure.mgmt.migrate.models.DiscoveryScopes
        """
        super().__init__(**kwargs)
        self.affected_resource_type = affected_resource_type
        self.affected_objects_count = affected_objects_count
        self.discovery_scope = discovery_scope


class DiscoverySiteDataSource(ProxyResource):
    """Web app data source web model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.DiscoverySiteDataSourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "DiscoverySiteDataSourceProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.DiscoverySiteDataSourceProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.DiscoverySiteDataSourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DiscoverySiteDataSourceListResult(_serialization.Model):
    """The response of a DiscoverySiteDataSource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The DiscoverySiteDataSource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.DiscoverySiteDataSource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DiscoverySiteDataSource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.DiscoverySiteDataSource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The DiscoverySiteDataSource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.DiscoverySiteDataSource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DiscoverySiteDataSourceProperties(_serialization.Model):
    """Discovery site data source properties class.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar discovery_site_id: Gets or sets the discovery site Id.
    :vartype discovery_site_id: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "discovery_site_id": {"key": "discoverySiteId", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, discovery_site_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword discovery_site_id: Gets or sets the discovery site Id.
        :paramtype discovery_site_id: str
        """
        super().__init__(**kwargs)
        self.discovery_site_id = discovery_site_id
        self.provisioning_state = None


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.migrate.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.migrate.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorDetailedSummary(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The site detailed error summary model.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar count_of_servers_affected: Count of servers affected by the error. Required.
    :vartype count_of_servers_affected: int
    :ivar message: Gets the error message.
    :vartype message: str
    :ivar message_parameters: Gets the message parameters.
    :vartype message_parameters: dict[str, str]
    :ivar appliance_name: Gets the appliance name.
    :vartype appliance_name: str
    :ivar id: Gets the error ID.
    :vartype id: int
    :ivar code: Gets the error name.
    :vartype code: str
    :ivar possible_causes: Gets the possible causes of error.
    :vartype possible_causes: str
    :ivar recommended_action: Gets the recommended action to resolve error.
    :vartype recommended_action: str
    :ivar severity: Gets the error severity.
    :vartype severity: str
    :ivar summary_message: Gets the error summary message.
    :vartype summary_message: str
    :ivar source: Gets the error source. Known values are: "RefreshFabricLayout",
     "RefreshFabricLayoutGuest", and "RefreshFabricLayoutDependencyMap".
    :vartype source: str or
     ~azure.mgmt.migrate.models.MicrosoftAzureFDSWebRoleHealthErrorDetailsSource
    :ivar updated_time_stamp: Gets the time stamp when the error was updated.
    :vartype updated_time_stamp: ~datetime.datetime
    :ivar run_as_account_id: Gets run as account id used while performing discovery of entity.
    :vartype run_as_account_id: str
    :ivar discovery_scope: Gets discovery scope for which error is encountered. Known values are:
     "AppsAndRoles", "DependencyMap", "StaticData", "SQLServerConnectionInfo", and
     "DiscoveryTargets".
    :vartype discovery_scope: str or ~azure.mgmt.migrate.models.HealthErrorDetailsDiscoveryScope
    """

    _validation = {
        "count_of_servers_affected": {"required": True},
        "message": {"readonly": True},
        "message_parameters": {"readonly": True},
        "appliance_name": {"readonly": True},
        "id": {"readonly": True},
        "code": {"readonly": True},
        "possible_causes": {"readonly": True},
        "recommended_action": {"readonly": True},
        "severity": {"readonly": True},
        "summary_message": {"readonly": True},
        "source": {"readonly": True},
        "updated_time_stamp": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "discovery_scope": {"readonly": True},
    }

    _attribute_map = {
        "count_of_servers_affected": {"key": "countOfServersAffected", "type": "int"},
        "message": {"key": "message", "type": "str"},
        "message_parameters": {"key": "messageParameters", "type": "{str}"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "id": {"key": "id", "type": "int"},
        "code": {"key": "code", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "recommended_action": {"key": "recommendedAction", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "summary_message": {"key": "summaryMessage", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "updated_time_stamp": {"key": "updatedTimeStamp", "type": "iso-8601"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "discovery_scope": {"key": "discoveryScope", "type": "str"},
    }

    def __init__(self, *, count_of_servers_affected: int, **kwargs: Any) -> None:
        """
        :keyword count_of_servers_affected: Count of servers affected by the error. Required.
        :paramtype count_of_servers_affected: int
        """
        super().__init__(**kwargs)
        self.count_of_servers_affected = count_of_servers_affected
        self.message = None
        self.message_parameters = None
        self.appliance_name = None
        self.id = None
        self.code = None
        self.possible_causes = None
        self.recommended_action = None
        self.severity = None
        self.summary_message = None
        self.source = None
        self.updated_time_stamp = None
        self.run_as_account_id = None
        self.discovery_scope = None


class ErrorDetails(_serialization.Model):
    """Error contract returned when some exception occurs in Rest API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Gets the error code.
    :vartype code: str
    :ivar message: Gets the error message.
    :vartype message: str
    :ivar possible_causes: Gets the possible causes of error.
    :vartype possible_causes: str
    :ivar recommended_action: Gets the recommended action to resolve error.
    :vartype recommended_action: str
    :ivar severity: Gets the error severity.
    :vartype severity: str
    :ivar is_agent_reported_error: Gets a value indicating whether the error originated from a
     agent or not.
    :vartype is_agent_reported_error: bool
    :ivar agent_error_code: Gets the agent error code.
    :vartype agent_error_code: str
    :ivar agent_error_message: Gets the error message from the agent.
    :vartype agent_error_message: str
    :ivar agent_error_possible_causes: Gets possible causes for the agent error.
    :vartype agent_error_possible_causes: str
    :ivar agent_error_recommended_action: Gets the recommended action for the agent error.
    :vartype agent_error_recommended_action: str
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "possible_causes": {"readonly": True},
        "recommended_action": {"readonly": True},
        "severity": {"readonly": True},
        "is_agent_reported_error": {"readonly": True},
        "agent_error_code": {"readonly": True},
        "agent_error_message": {"readonly": True},
        "agent_error_possible_causes": {"readonly": True},
        "agent_error_recommended_action": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "recommended_action": {"key": "recommendedAction", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "is_agent_reported_error": {"key": "isAgentReportedError", "type": "bool"},
        "agent_error_code": {"key": "agentErrorCode", "type": "str"},
        "agent_error_message": {"key": "agentErrorMessage", "type": "str"},
        "agent_error_possible_causes": {"key": "agentErrorPossibleCauses", "type": "str"},
        "agent_error_recommended_action": {"key": "agentErrorRecommendedAction", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.possible_causes = None
        self.recommended_action = None
        self.severity = None
        self.is_agent_reported_error = None
        self.agent_error_code = None
        self.agent_error_message = None
        self.agent_error_possible_causes = None
        self.agent_error_recommended_action = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.migrate.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.migrate.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Errors(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The properties of a server machine tracked resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar message: Gets the error message.
    :vartype message: str
    :ivar message_parameters: Gets the message parameters.
    :vartype message_parameters: dict[str, str]
    :ivar appliance_name: Gets the appliance name.
    :vartype appliance_name: str
    :ivar id: Gets the error ID.
    :vartype id: int
    :ivar code: Gets the error name.
    :vartype code: str
    :ivar possible_causes: Gets the possible causes of error.
    :vartype possible_causes: str
    :ivar recommended_action: Gets the recommended action to resolve error.
    :vartype recommended_action: str
    :ivar severity: Gets the error severity.
    :vartype severity: str
    :ivar summary_message: Gets the error summary message.
    :vartype summary_message: str
    :ivar source: Gets the error source. Known values are: "RefreshFabricLayout",
     "RefreshFabricLayoutGuest", and "RefreshFabricLayoutDependencyMap".
    :vartype source: str or
     ~azure.mgmt.migrate.models.MicrosoftAzureFDSWebRoleHealthErrorDetailsSource
    :ivar updated_time_stamp: Gets the time stamp when the error was updated.
    :vartype updated_time_stamp: ~datetime.datetime
    :ivar run_as_account_id: Gets run as account id used while performing discovery             of
     entity.
    :vartype run_as_account_id: str
    :ivar discovery_scope: Gets discovery scope for which             error is encountered. Known
     values are: "AppsAndRoles", "DependencyMap", "StaticData", "SQLServerConnectionInfo", and
     "DiscoveryTargets".
    :vartype discovery_scope: str or ~azure.mgmt.migrate.models.HealthErrorDetailsDiscoveryScope
    """

    _validation = {
        "message": {"readonly": True},
        "message_parameters": {"readonly": True},
        "appliance_name": {"readonly": True},
        "id": {"readonly": True},
        "code": {"readonly": True},
        "possible_causes": {"readonly": True},
        "recommended_action": {"readonly": True},
        "severity": {"readonly": True},
        "summary_message": {"readonly": True},
        "source": {"readonly": True},
        "updated_time_stamp": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "discovery_scope": {"readonly": True},
    }

    _attribute_map = {
        "message": {"key": "message", "type": "str"},
        "message_parameters": {"key": "messageParameters", "type": "{str}"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "id": {"key": "id", "type": "int"},
        "code": {"key": "code", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "recommended_action": {"key": "recommendedAction", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "summary_message": {"key": "summaryMessage", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "updated_time_stamp": {"key": "updatedTimeStamp", "type": "iso-8601"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "discovery_scope": {"key": "discoveryScope", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.message = None
        self.message_parameters = None
        self.appliance_name = None
        self.id = None
        self.code = None
        self.possible_causes = None
        self.recommended_action = None
        self.severity = None
        self.summary_message = None
        self.source = None
        self.updated_time_stamp = None
        self.run_as_account_id = None
        self.discovery_scope = None


class ErrorSummaryRequest(_serialization.Model):
    """ErrorSummaryRequest body.

    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    """

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
    }

    def __init__(self, *, appliance_name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        """
        super().__init__(**kwargs)
        self.appliance_name = appliance_name


class ExchangeServer(_serialization.Model):
    """ExchangeServer in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar product_name: Gets or sets ProductName of the ExchangeServer.
    :vartype product_name: str
    :ivar edition: Gets or sets Edition of the ExchangeServer.
    :vartype edition: str
    :ivar roles: Gets or sets Roles of the ExchangeServer.
    :vartype roles: str
    :ivar service_pack: Gets or sets ServicePack of the ExchangeServer.
    :vartype service_pack: str
    :ivar version: Gets or sets Version of the ExchangeServer.
    :vartype version: str
    """

    _validation = {
        "product_name": {"readonly": True},
        "edition": {"readonly": True},
        "roles": {"readonly": True},
        "service_pack": {"readonly": True},
        "version": {"readonly": True},
    }

    _attribute_map = {
        "product_name": {"key": "productName", "type": "str"},
        "edition": {"key": "edition", "type": "str"},
        "roles": {"key": "roles", "type": "str"},
        "service_pack": {"key": "servicePack", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.product_name = None
        self.edition = None
        self.roles = None
        self.service_pack = None
        self.version = None


class ExportImportedMachinesJob(_serialization.Model):
    """Export machines job REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: Type name for export job.
    :vartype type: str
    :ivar properties: Gets or sets the export machines job properties.
    :vartype properties: ~azure.mgmt.migrate.models.ExportImportedMachinesJobEntityProperties
    :ivar id: Gets or sets the relative ARM name to get job.
    :vartype id: str
    :ivar name: Gets or sets the Job ID.
    :vartype name: str
    :ivar status: Gets or sets the Job status.
    :vartype status: str
    :ivar start_time: Gets or sets the Job start time.
    :vartype start_time: str
    :ivar end_time: Gets or sets the Job end time.
    :vartype end_time: str
    :ivar display_name: Gets or sets the Display name.
    :vartype display_name: str
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "ExportImportedMachinesJobEntityProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.ExportImportedMachinesJobEntityProperties"] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        status: Optional[str] = None,
        start_time: Optional[str] = None,
        end_time: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Gets or sets the export machines job properties.
        :paramtype properties: ~azure.mgmt.migrate.models.ExportImportedMachinesJobEntityProperties
        :keyword id: Gets or sets the relative ARM name to get job.
        :paramtype id: str
        :keyword name: Gets or sets the Job ID.
        :paramtype name: str
        :keyword status: Gets or sets the Job status.
        :paramtype status: str
        :keyword start_time: Gets or sets the Job start time.
        :paramtype start_time: str
        :keyword end_time: Gets or sets the Job end time.
        :paramtype end_time: str
        :keyword display_name: Gets or sets the Display name.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.type = None
        self.properties = properties
        self.id = id
        self.name = name
        self.status = status
        self.start_time = start_time
        self.end_time = end_time
        self.display_name = display_name


class ExportImportedMachinesJobCollection(_serialization.Model):
    """Export imported machines job collection.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Gets the list of jobs. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ExportImportedMachinesJob]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ExportImportedMachinesJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ExportImportedMachinesJob"], **kwargs: Any) -> None:
        """
        :keyword value: Gets the list of jobs. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ExportImportedMachinesJob]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ExportImportedMachinesJobEntityProperties(_serialization.Model):  # pylint: disable=name-too-long
    """Export Imported Machines JobEntity Properties.

    :ivar blob_name: blob name.
    :vartype blob_name: str
    :ivar sas_uri: sas uri.
    :vartype sas_uri: str
    """

    _attribute_map = {
        "blob_name": {"key": "blobName", "type": "str"},
        "sas_uri": {"key": "sasUri", "type": "str"},
    }

    def __init__(self, *, blob_name: Optional[str] = None, sas_uri: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword blob_name: blob name.
        :paramtype blob_name: str
        :keyword sas_uri: sas uri.
        :paramtype sas_uri: str
        """
        super().__init__(**kwargs)
        self.blob_name = blob_name
        self.sas_uri = sas_uri


class ExportMachineErrorsRequest(_serialization.Model):
    """The body of export machine errors request.

    :ivar properties: Gets or sets the properties.
    :vartype properties: ~azure.mgmt.migrate.models.RequestExportMachineErrorsProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "RequestExportMachineErrorsProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.RequestExportMachineErrorsProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: Gets or sets the properties.
        :paramtype properties: ~azure.mgmt.migrate.models.RequestExportMachineErrorsProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ExportMachinesRequest(_serialization.Model):
    """ExportMachinesRequest body.

    :ivar filter: filter options.
    :vartype filter: str
    """

    _attribute_map = {
        "filter": {"key": "filter", "type": "str"},
    }

    def __init__(self, *, filter: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword filter: filter options.
        :paramtype filter: str
        """
        super().__init__(**kwargs)
        self.filter = filter


class ExportSqlServersRequest(_serialization.Model):
    """ExportSqlServerRequest body.

    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    :ivar filter: filter options.
    :vartype filter: str
    """

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
        "filter": {"key": "filter", "type": "str"},
    }

    def __init__(
        self,
        *,
        appliance_name: Optional[str] = None,
        filter: Optional[str] = None,  # pylint: disable=redefined-builtin
        **kwargs: Any
    ) -> None:
        """
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        :keyword filter: filter options.
        :paramtype filter: str
        """
        super().__init__(**kwargs)
        self.appliance_name = appliance_name
        self.filter = filter


class ExportWebAppsRequest(_serialization.Model):
    """ExportWebAppsRequest body.

    :ivar filter: filter options.
    :vartype filter: str
    """

    _attribute_map = {
        "filter": {"key": "filter", "type": "str"},
    }

    def __init__(self, *, filter: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword filter: filter options.
        :paramtype filter: str
        """
        super().__init__(**kwargs)
        self.filter = filter


class Feature(_serialization.Model):
    """Feature in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Gets or sets Name of the Feature.
    :vartype name: str
    :ivar feature_type: Gets or sets FeatureType of the Feature.
    :vartype feature_type: str
    :ivar parent: Gets or sets Parent of the Feature.
    :vartype parent: str
    :ivar status: Gets or sets Status of the Feature.
    :vartype status: str
    """

    _validation = {
        "name": {"readonly": True},
        "feature_type": {"readonly": True},
        "parent": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "feature_type": {"key": "featureType", "type": "str"},
        "parent": {"key": "parent", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.feature_type = None
        self.parent = None
        self.status = None


class FileMetaData(_serialization.Model):
    """File Metadata web model.

    :ivar logical_name: Gets or sets the logical name of the file.
    :vartype logical_name: str
    :ivar physical_full_name: Gets or sets the operating-system full path of the file.
    :vartype physical_full_name: str
    :ivar file_type: Gets or sets the database file type. Known values are: "Rows", "Log",
     "Filestream", "NotSupported", and "Fulltext".
    :vartype file_type: str or ~azure.mgmt.migrate.models.FileType
    :ivar size_in_mb: Gets or sets the size of the file in MB.
    :vartype size_in_mb: float
    :ivar is_memory_optimized_data_option_enabled: Gets or sets a value indicating whether memory
     optimized data option is enabled.
    :vartype is_memory_optimized_data_option_enabled: bool
    """

    _attribute_map = {
        "logical_name": {"key": "logicalName", "type": "str"},
        "physical_full_name": {"key": "physicalFullName", "type": "str"},
        "file_type": {"key": "fileType", "type": "str"},
        "size_in_mb": {"key": "sizeInMb", "type": "float"},
        "is_memory_optimized_data_option_enabled": {"key": "isMemoryOptimizedDataOptionEnabled", "type": "bool"},
    }

    def __init__(
        self,
        *,
        logical_name: Optional[str] = None,
        physical_full_name: Optional[str] = None,
        file_type: Optional[Union[str, "_models.FileType"]] = None,
        size_in_mb: Optional[float] = None,
        is_memory_optimized_data_option_enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword logical_name: Gets or sets the logical name of the file.
        :paramtype logical_name: str
        :keyword physical_full_name: Gets or sets the operating-system full path of the file.
        :paramtype physical_full_name: str
        :keyword file_type: Gets or sets the database file type. Known values are: "Rows", "Log",
         "Filestream", "NotSupported", and "Fulltext".
        :paramtype file_type: str or ~azure.mgmt.migrate.models.FileType
        :keyword size_in_mb: Gets or sets the size of the file in MB.
        :paramtype size_in_mb: float
        :keyword is_memory_optimized_data_option_enabled: Gets or sets a value indicating whether
         memory optimized data option is enabled.
        :paramtype is_memory_optimized_data_option_enabled: bool
        """
        super().__init__(**kwargs)
        self.logical_name = logical_name
        self.physical_full_name = physical_full_name
        self.file_type = file_type
        self.size_in_mb = size_in_mb
        self.is_memory_optimized_data_option_enabled = is_memory_optimized_data_option_enabled


class FrontEndBinding(_serialization.Model):
    """Frontend bindings for a web application.

    :ivar protocol: Gets or sets the Binding protocol.
    :vartype protocol: str
    :ivar host_name: Gets or sets the Host name.
    :vartype host_name: str
    :ivar port: Gets or sets the Port number.
    :vartype port: str
    :ivar ip_address: Gets or sets the IP Address.
    :vartype ip_address: str
    """

    _attribute_map = {
        "protocol": {"key": "protocol", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "port": {"key": "port", "type": "str"},
        "ip_address": {"key": "ipAddress", "type": "str"},
    }

    def __init__(
        self,
        *,
        protocol: Optional[str] = None,
        host_name: Optional[str] = None,
        port: Optional[str] = None,
        ip_address: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword protocol: Gets or sets the Binding protocol.
        :paramtype protocol: str
        :keyword host_name: Gets or sets the Host name.
        :paramtype host_name: str
        :keyword port: Gets or sets the Port number.
        :paramtype port: str
        :keyword ip_address: Gets or sets the IP Address.
        :paramtype ip_address: str
        """
        super().__init__(**kwargs)
        self.protocol = protocol
        self.host_name = host_name
        self.port = port
        self.ip_address = ip_address


class GuestOsDetails(_serialization.Model):
    """Second level object.  Data related to a machine's operating system.             Serialized and
    stored as part of Machine Rest object.

    :ivar os_type: Gets or sets the type of the operating system.
    :vartype os_type: str
    :ivar os_name: Gets or sets the Name of the operating system.
    :vartype os_name: str
    :ivar os_version: Gets or sets the Version of the operating system.
    :vartype os_version: str
    :ivar os_architecture: Gets or sets the Architecture of the operating system.
    :vartype os_architecture: str
    """

    _attribute_map = {
        "os_type": {"key": "osType", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "os_architecture": {"key": "osArchitecture", "type": "str"},
    }

    def __init__(
        self,
        *,
        os_type: Optional[str] = None,
        os_name: Optional[str] = None,
        os_version: Optional[str] = None,
        os_architecture: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword os_type: Gets or sets the type of the operating system.
        :paramtype os_type: str
        :keyword os_name: Gets or sets the Name of the operating system.
        :paramtype os_name: str
        :keyword os_version: Gets or sets the Version of the operating system.
        :paramtype os_version: str
        :keyword os_architecture: Gets or sets the Architecture of the operating system.
        :paramtype os_architecture: str
        """
        super().__init__(**kwargs)
        self.os_type = os_type
        self.os_name = os_name
        self.os_version = os_version
        self.os_architecture = os_architecture


class HealthErrorDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Error contract returned when some exception occurs in Rest API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar message: Gets the error message.
    :vartype message: str
    :ivar message_parameters: Gets the message parameters.
    :vartype message_parameters: dict[str, str]
    :ivar appliance_name: Gets the appliance name.
    :vartype appliance_name: str
    :ivar id: Gets the error ID.
    :vartype id: int
    :ivar code: Gets the error name.
    :vartype code: str
    :ivar possible_causes: Gets the possible causes of error.
    :vartype possible_causes: str
    :ivar recommended_action: Gets the recommended action to resolve error.
    :vartype recommended_action: str
    :ivar severity: Gets the error severity.
    :vartype severity: str
    :ivar summary_message: Gets the error summary message.
    :vartype summary_message: str
    :ivar source: Gets the error source. Known values are: "RefreshFabricLayout",
     "RefreshFabricLayoutGuest", and "RefreshFabricLayoutDependencyMap".
    :vartype source: str or ~azure.mgmt.migrate.models.HealthErrorDetailsSource
    :ivar updated_time_stamp: Gets the time stamp when the error was updated.
    :vartype updated_time_stamp: ~datetime.datetime
    :ivar run_as_account_id: Gets run as account id used while performing discovery             of
     entity.
    :vartype run_as_account_id: str
    :ivar discovery_scope: Gets discovery scope for which             error is encountered. Known
     values are: "AppsAndRoles", "DependencyMap", "StaticData", "SQLServerConnectionInfo", and
     "DiscoveryTargets".
    :vartype discovery_scope: str or ~azure.mgmt.migrate.models.HealthErrorDetailsDiscoveryScope
    """

    _validation = {
        "message": {"readonly": True},
        "message_parameters": {"readonly": True},
        "appliance_name": {"readonly": True},
        "id": {"readonly": True},
        "code": {"readonly": True},
        "possible_causes": {"readonly": True},
        "recommended_action": {"readonly": True},
        "severity": {"readonly": True},
        "summary_message": {"readonly": True},
        "source": {"readonly": True},
        "updated_time_stamp": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "discovery_scope": {"readonly": True},
    }

    _attribute_map = {
        "message": {"key": "message", "type": "str"},
        "message_parameters": {"key": "messageParameters", "type": "{str}"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "id": {"key": "id", "type": "int"},
        "code": {"key": "code", "type": "str"},
        "possible_causes": {"key": "possibleCauses", "type": "str"},
        "recommended_action": {"key": "recommendedAction", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "summary_message": {"key": "summaryMessage", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "updated_time_stamp": {"key": "updatedTimeStamp", "type": "iso-8601"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "discovery_scope": {"key": "discoveryScope", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.message = None
        self.message_parameters = None
        self.appliance_name = None
        self.id = None
        self.code = None
        self.possible_causes = None
        self.recommended_action = None
        self.severity = None
        self.summary_message = None
        self.source = None
        self.updated_time_stamp = None
        self.run_as_account_id = None
        self.discovery_scope = None


class HypervCluster(ProxyResource):
    """A cluster resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.HypervClusterProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "HypervClusterProperties"},
    }

    def __init__(self, *, properties: Optional["_models.HypervClusterProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.HypervClusterProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervClusterListResult(_serialization.Model):
    """The response of a HypervCluster list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervCluster items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervCluster]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervCluster]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.HypervCluster"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The HypervCluster items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervCluster]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HypervClusterProperties(_serialization.Model):
    """The properties of Hyperv Cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_timestamp: Gets the timestamp marking Hyper-V cluster creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last updated on the Hyper-V cluster.
    :vartype updated_timestamp: str
    :ivar fqdn: Gets or sets the FQDN/IPAddress of the Hyper-V cluster.
    :vartype fqdn: str
    :ivar functional_level: Gets the functional level of the Hyper-V cluster.
    :vartype functional_level: int
    :ivar status: Gets the status of the Hyper-V cluster.
    :vartype status: str
    :ivar run_as_account_id: Gets or sets Run as account ID of the Hyper-V cluster.
    :vartype run_as_account_id: str
    :ivar host_fqdn_list: Gets or sets list of hosts (FQDN) currently being tracked by the cluster.
    :vartype host_fqdn_list: list[str]
    :ivar errors: Gets the errors.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "functional_level": {"readonly": True},
        "status": {"readonly": True},
        "errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "functional_level": {"key": "functionalLevel", "type": "int"},
        "status": {"key": "status", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "host_fqdn_list": {"key": "hostFqdnList", "type": "[str]"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        fqdn: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        host_fqdn_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword fqdn: Gets or sets the FQDN/IPAddress of the Hyper-V cluster.
        :paramtype fqdn: str
        :keyword run_as_account_id: Gets or sets Run as account ID of the Hyper-V cluster.
        :paramtype run_as_account_id: str
        :keyword host_fqdn_list: Gets or sets list of hosts (FQDN) currently being tracked by the
         cluster.
        :paramtype host_fqdn_list: list[str]
        """
        super().__init__(**kwargs)
        self.created_timestamp = None
        self.updated_timestamp = None
        self.fqdn = fqdn
        self.functional_level = None
        self.status = None
        self.run_as_account_id = run_as_account_id
        self.host_fqdn_list = host_fqdn_list
        self.errors = None
        self.provisioning_state = None


class HypervDisk(_serialization.Model):
    """Second level object returned as part of Machine REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_id: Id of the disk.
    :vartype instance_id: str
    :ivar vhd_id: VHD Id of the disk.
    :vartype vhd_id: str
    :ivar max_size_in_bytes: Gets or sets Bytes allocated for the disk.
    :vartype max_size_in_bytes: int
    :ivar name: Gets or sets Name of the disk.
    :vartype name: str
    :ivar disk_type: Gets or sets Type of the disk.
    :vartype disk_type: str
    :ivar lun: Gets or sets LUN of the disk.
    :vartype lun: int
    :ivar path: Gets or sets Path of the disk.
    :vartype path: str
    """

    _validation = {
        "instance_id": {"readonly": True},
        "vhd_id": {"readonly": True},
    }

    _attribute_map = {
        "instance_id": {"key": "instanceId", "type": "str"},
        "vhd_id": {"key": "vhdId", "type": "str"},
        "max_size_in_bytes": {"key": "maxSizeInBytes", "type": "int"},
        "name": {"key": "name", "type": "str"},
        "disk_type": {"key": "diskType", "type": "str"},
        "lun": {"key": "lun", "type": "int"},
        "path": {"key": "path", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_size_in_bytes: Optional[int] = None,
        name: Optional[str] = None,
        disk_type: Optional[str] = None,
        lun: Optional[int] = None,
        path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_size_in_bytes: Gets or sets Bytes allocated for the disk.
        :paramtype max_size_in_bytes: int
        :keyword name: Gets or sets Name of the disk.
        :paramtype name: str
        :keyword disk_type: Gets or sets Type of the disk.
        :paramtype disk_type: str
        :keyword lun: Gets or sets LUN of the disk.
        :paramtype lun: int
        :keyword path: Gets or sets Path of the disk.
        :paramtype path: str
        """
        super().__init__(**kwargs)
        self.instance_id = None
        self.vhd_id = None
        self.max_size_in_bytes = max_size_in_bytes
        self.name = name
        self.disk_type = disk_type
        self.lun = lun
        self.path = path


class HypervHost(ProxyResource):
    """A host resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.HypervHostProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "HypervHostProperties"},
    }

    def __init__(self, *, properties: Optional["_models.HypervHostProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.HypervHostProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervHostListResult(_serialization.Model):
    """The response of a HypervHost list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervHost items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervHost]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervHost]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.HypervHost"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The HypervHost items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervHost]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HypervHostProperties(_serialization.Model):
    """The properties of Hyperv Host.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_timestamp: Gets the timestamp marking Hyper-V host creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last updated on the Hyper-V host.
    :vartype updated_timestamp: str
    :ivar fqdn: Gets or sets the FQDN/IPAddress of the Hyper-V host.
    :vartype fqdn: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the Hyper-V host.
    :vartype run_as_account_id: str
    :ivar version: Gets the version of the Hyper-V host.
    :vartype version: str
    :ivar errors: Gets the errors.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "version": {"readonly": True},
        "errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, fqdn: Optional[str] = None, run_as_account_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword fqdn: Gets or sets the FQDN/IPAddress of the Hyper-V host.
        :paramtype fqdn: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the Hyper-V host.
        :paramtype run_as_account_id: str
        """
        super().__init__(**kwargs)
        self.created_timestamp = None
        self.updated_timestamp = None
        self.fqdn = fqdn
        self.run_as_account_id = run_as_account_id
        self.version = None
        self.errors = None
        self.provisioning_state = None


class HypervJob(ProxyResource):
    """A job resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.JobProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "JobProperties"},
    }

    def __init__(self, *, properties: Optional["_models.JobProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.JobProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervJobListResult(_serialization.Model):
    """The response of a HypervJob list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervJob items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.HypervJob"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The HypervJob items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervJob]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HypervMachine(ProxyResource):
    """A machine resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.HypervMachineProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "HypervMachineProperties"},
    }

    def __init__(self, *, properties: Optional["_models.HypervMachineProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.HypervMachineProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervMachineListResult(_serialization.Model):
    """The response of a HypervMachine list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervMachine items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervMachine]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervMachine]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.HypervMachine"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The HypervMachine items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervMachine]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HypervMachineProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The properties of AddressResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar instance_uuid: On-premise Instance UUID of the machine.
    :vartype instance_uuid: str
    :ivar host_fqdn: Host FQDN/IPAddress.
    :vartype host_fqdn: str
    :ivar host_id: Host ARM ID.
    :vartype host_id: str
    :ivar generation: Generation of the virtual machine.
    :vartype generation: int
    :ivar version: VM version.
    :vartype version: str
    :ivar high_availability: Value indicating whether the VM is highly available. Known values are:
     "Unknown", "No", and "Yes".
    :vartype high_availability: str or ~azure.mgmt.migrate.models.HighAvailability
    :ivar cluster_fqdn: Cluster FQDN/IPAddress.
    :vartype cluster_fqdn: str
    :ivar cluster_id: Cluster ARM ID.
    :vartype cluster_id: str
    :ivar max_memory_mb: Max memory of the virtual machine in MB.
    :vartype max_memory_mb: int
    :ivar is_dynamic_memory_enabled: Value indicating whether dynamic memory is enabled for the VM.
    :vartype is_dynamic_memory_enabled: bool
    :ivar disks: Disks attached to the machine.
    :vartype disks: list[~azure.mgmt.migrate.models.HypervDisk]
    :ivar network_adapters: Network adapters attached to the machine.
    :vartype network_adapters: list[~azure.mgmt.migrate.models.HypervNetworkAdapter]
    :ivar management_server_type: Management server type captured as a string representation of the

    {Microsoft.Azure.FDS.WebRole.HyperVMachineBase.HyperVMachineBaseProperties.ManagementServerType}
     enumeration.
    :vartype management_server_type: str
    :ivar secure_boot_template_id: Gets or sets the SecureBootTemplateId setting of the VM.
    :vartype secure_boot_template_id: str
    :ivar secure_boot_enabled: Gets or sets a value indicating whether Secure boot is enabled for
     the VM.
    :vartype secure_boot_enabled: bool
    :ivar secure_boot_template: Gets or sets the SecureBootTemplateId setting of the VM.
    :vartype secure_boot_template: str
    :ivar tpm_enabled: Gets or sets a value indicating whether trusted platform module is enabled
     on
     the VM.
    :vartype tpm_enabled: bool
    :ivar ksd_enabled: Gets or sets a value indicating whether key storage device is enabled on the
     VM.
    :vartype ksd_enabled: bool
    :ivar shielding_requested: Gets or sets a value indicating whether shielding is enabled for the
     VM.
    :vartype shielding_requested: bool
    :ivar data_protection_requested: Gets or sets a value indicating whether data protection is
     requested for a VM.
    :vartype data_protection_requested: bool
    :ivar encrypt_state_and_vm_migration_traffic: Gets or sets a value indicating whether
     encryption of state and migration
     traffic is enabled for the VM.
    :vartype encrypt_state_and_vm_migration_traffic: bool
    :ivar virtualization_based_security_opt_out: Gets or sets a value indicating whether VM
     virtualization based security is
     enabled for the VM.
    :vartype virtualization_based_security_opt_out: bool
    :ivar power_status: Gets the Machine power status.
    :vartype power_status: str
    :ivar vm_fqdn: Gets the VM FQDN.
    :vartype vm_fqdn: str
    :ivar vm_configuration_file_location: Gets the Root location of the VM configuration file.
    :vartype vm_configuration_file_location: str
    :ivar firmware: Gets or sets the firmware.
    :vartype firmware: str
    :ivar guest_os_details: Operating System Details extracted from the guest             bu
     executing script inside the guest VM.
    :vartype guest_os_details: ~azure.mgmt.migrate.models.GuestOsDetails
    :ivar number_of_applications: Number of applications installed in the guest VM.
    :vartype number_of_applications: int
    :ivar guest_details_discovery_timestamp: The last time at which the Guest Details was
     discovered
                 or the
     error while discovering guest details based discovery
                 of the
     machine.
    :vartype guest_details_discovery_timestamp: ~datetime.datetime
    :ivar is_guest_details_discovery_in_progress: Whether Refresh Fabric Layout Guest Details has
     been completed once.

       Portal will show discovery in progress, if this value is true.
    :vartype is_guest_details_discovery_in_progress: bool
    :ivar dependency_mapping: Gets or sets if dependency mapping feature is enabled or not
                 for
     the VM.
    :vartype dependency_mapping: str
    :ivar dependency_mapping_start_time: Gets or sets when dependency mapping collection is last
     started.
    :vartype dependency_mapping_start_time: ~datetime.datetime
    :ivar dependency_mapping_end_time: Gets or sets when dependency mapping collection was last
     disabled.
    :vartype dependency_mapping_end_time: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the machine.
    :vartype run_as_account_id: str
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar errors: Errors for machine.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar application_discovery: Gets the data related to application discovery.
    :vartype application_discovery: ~azure.mgmt.migrate.models.ApplicationDiscovery
    :ivar dependency_map_discovery: Gets the data related to dependency map discovery.
    :vartype dependency_map_discovery: ~azure.mgmt.migrate.models.DependencyMapDiscovery
    :ivar static_discovery: Gets the data related to static discovery.
    :vartype static_discovery: ~azure.mgmt.migrate.models.StaticDiscovery
    :ivar sql_discovery: Gets the data related to SQL discovery.
    :vartype sql_discovery: ~azure.mgmt.migrate.models.SqlDiscovery
    :ivar web_app_discovery: Gets the data related to Web application discovery.
    :vartype web_app_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar oracle_discovery: Gets the data related to Oracle discovery.
    :vartype oracle_discovery: ~azure.mgmt.migrate.models.OracleDiscovery
    :ivar spring_boot_discovery: Gets the data related to SpringBoot discovery.
    :vartype spring_boot_discovery: ~azure.mgmt.migrate.models.SpringBootDiscovery
    :ivar iis_discovery: Gets the data related to iis discovery.
    :vartype iis_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar tomcat_discovery: Gets the data related to tomcat discovery.
    :vartype tomcat_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar apps_and_roles: Apps And Roles of the Server.
    :vartype apps_and_roles: ~azure.mgmt.migrate.models.AppsAndRoles
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar display_name: Gets the Display name of the machine.
    :vartype display_name: str
    :ivar is_deleted: Value indicating whether VM is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the marking machine creation.
    :vartype created_timestamp: str
    :ivar tags: Gets or sets tags on the resource.
    :vartype tags: dict[str, str]
    :ivar updated_timestamp: Gets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "instance_uuid": {"readonly": True},
        "host_fqdn": {"readonly": True},
        "host_id": {"readonly": True},
        "generation": {"readonly": True},
        "version": {"readonly": True},
        "high_availability": {"readonly": True},
        "cluster_fqdn": {"readonly": True},
        "cluster_id": {"readonly": True},
        "max_memory_mb": {"readonly": True},
        "is_dynamic_memory_enabled": {"readonly": True},
        "disks": {"readonly": True},
        "network_adapters": {"readonly": True},
        "management_server_type": {"readonly": True},
        "secure_boot_template_id": {"readonly": True},
        "secure_boot_enabled": {"readonly": True},
        "secure_boot_template": {"readonly": True},
        "tpm_enabled": {"readonly": True},
        "ksd_enabled": {"readonly": True},
        "shielding_requested": {"readonly": True},
        "data_protection_requested": {"readonly": True},
        "encrypt_state_and_vm_migration_traffic": {"readonly": True},
        "virtualization_based_security_opt_out": {"readonly": True},
        "power_status": {"readonly": True},
        "vm_fqdn": {"readonly": True},
        "vm_configuration_file_location": {"readonly": True},
        "guest_os_details": {"readonly": True},
        "number_of_applications": {"readonly": True},
        "guest_details_discovery_timestamp": {"readonly": True},
        "is_guest_details_discovery_in_progress": {"readonly": True},
        "dependency_mapping": {"readonly": True},
        "dependency_mapping_start_time": {"readonly": True},
        "dependency_mapping_end_time": {"readonly": True},
        "appliance_names": {"readonly": True},
        "errors": {"readonly": True},
        "application_discovery": {"readonly": True},
        "dependency_map_discovery": {"readonly": True},
        "static_discovery": {"readonly": True},
        "sql_discovery": {"readonly": True},
        "web_app_discovery": {"readonly": True},
        "oracle_discovery": {"readonly": True},
        "spring_boot_discovery": {"readonly": True},
        "iis_discovery": {"readonly": True},
        "tomcat_discovery": {"readonly": True},
        "apps_and_roles": {"readonly": True},
        "display_name": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "instance_uuid": {"key": "instanceUuid", "type": "str"},
        "host_fqdn": {"key": "hostFqdn", "type": "str"},
        "host_id": {"key": "hostId", "type": "str"},
        "generation": {"key": "generation", "type": "int"},
        "version": {"key": "version", "type": "str"},
        "high_availability": {"key": "highAvailability", "type": "str"},
        "cluster_fqdn": {"key": "clusterFqdn", "type": "str"},
        "cluster_id": {"key": "clusterId", "type": "str"},
        "max_memory_mb": {"key": "maxMemoryMb", "type": "int"},
        "is_dynamic_memory_enabled": {"key": "isDynamicMemoryEnabled", "type": "bool"},
        "disks": {"key": "disks", "type": "[HypervDisk]"},
        "network_adapters": {"key": "networkAdapters", "type": "[HypervNetworkAdapter]"},
        "management_server_type": {"key": "managementServerType", "type": "str"},
        "secure_boot_template_id": {"key": "secureBootTemplateId", "type": "str"},
        "secure_boot_enabled": {"key": "secureBootEnabled", "type": "bool"},
        "secure_boot_template": {"key": "secureBootTemplate", "type": "str"},
        "tpm_enabled": {"key": "tpmEnabled", "type": "bool"},
        "ksd_enabled": {"key": "ksdEnabled", "type": "bool"},
        "shielding_requested": {"key": "shieldingRequested", "type": "bool"},
        "data_protection_requested": {"key": "dataProtectionRequested", "type": "bool"},
        "encrypt_state_and_vm_migration_traffic": {"key": "encryptStateAndVmMigrationTraffic", "type": "bool"},
        "virtualization_based_security_opt_out": {"key": "virtualizationBasedSecurityOptOut", "type": "bool"},
        "power_status": {"key": "powerStatus", "type": "str"},
        "vm_fqdn": {"key": "vmFqdn", "type": "str"},
        "vm_configuration_file_location": {"key": "vmConfigurationFileLocation", "type": "str"},
        "firmware": {"key": "firmware", "type": "str"},
        "guest_os_details": {"key": "guestOsDetails", "type": "GuestOsDetails"},
        "number_of_applications": {"key": "numberOfApplications", "type": "int"},
        "guest_details_discovery_timestamp": {"key": "guestDetailsDiscoveryTimestamp", "type": "iso-8601"},
        "is_guest_details_discovery_in_progress": {"key": "isGuestDetailsDiscoveryInProgress", "type": "bool"},
        "dependency_mapping": {"key": "dependencyMapping", "type": "str"},
        "dependency_mapping_start_time": {"key": "dependencyMappingStartTime", "type": "iso-8601"},
        "dependency_mapping_end_time": {"key": "dependencyMappingEndTime", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "application_discovery": {"key": "applicationDiscovery", "type": "ApplicationDiscovery"},
        "dependency_map_discovery": {"key": "dependencyMapDiscovery", "type": "DependencyMapDiscovery"},
        "static_discovery": {"key": "staticDiscovery", "type": "StaticDiscovery"},
        "sql_discovery": {"key": "sqlDiscovery", "type": "SqlDiscovery"},
        "web_app_discovery": {"key": "webAppDiscovery", "type": "WebAppDiscovery"},
        "oracle_discovery": {"key": "oracleDiscovery", "type": "OracleDiscovery"},
        "spring_boot_discovery": {"key": "springBootDiscovery", "type": "SpringBootDiscovery"},
        "iis_discovery": {"key": "iisDiscovery", "type": "WebAppDiscovery"},
        "tomcat_discovery": {"key": "tomcatDiscovery", "type": "WebAppDiscovery"},
        "apps_and_roles": {"key": "appsAndRoles", "type": "AppsAndRoles"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        firmware: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword firmware: Gets or sets the firmware.
        :paramtype firmware: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the machine.
        :paramtype run_as_account_id: str
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: Gets or sets tags on the resource.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.instance_uuid = None
        self.host_fqdn = None
        self.host_id = None
        self.generation = None
        self.version = None
        self.high_availability = None
        self.cluster_fqdn = None
        self.cluster_id = None
        self.max_memory_mb = None
        self.is_dynamic_memory_enabled = None
        self.disks = None
        self.network_adapters = None
        self.management_server_type = None
        self.secure_boot_template_id = None
        self.secure_boot_enabled = None
        self.secure_boot_template = None
        self.tpm_enabled = None
        self.ksd_enabled = None
        self.shielding_requested = None
        self.data_protection_requested = None
        self.encrypt_state_and_vm_migration_traffic = None
        self.virtualization_based_security_opt_out = None
        self.power_status = None
        self.vm_fqdn = None
        self.vm_configuration_file_location = None
        self.firmware = firmware
        self.guest_os_details = None
        self.number_of_applications = None
        self.guest_details_discovery_timestamp = None
        self.is_guest_details_discovery_in_progress = None
        self.dependency_mapping = None
        self.dependency_mapping_start_time = None
        self.dependency_mapping_end_time = None
        self.run_as_account_id = run_as_account_id
        self.appliance_names = None
        self.errors = None
        self.application_discovery = None
        self.dependency_map_discovery = None
        self.static_discovery = None
        self.sql_discovery = None
        self.web_app_discovery = None
        self.oracle_discovery = None
        self.spring_boot_discovery = None
        self.iis_discovery = None
        self.tomcat_discovery = None
        self.apps_and_roles = None
        self.product_support_status = product_support_status
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.display_name = None
        self.is_deleted = None
        self.created_timestamp = None
        self.tags = tags
        self.updated_timestamp = None
        self.provisioning_state = None


class HypervMachineUpdate(_serialization.Model):
    """The type used for update operations of the HypervMachine.

    :ivar properties: The updatable properties of the HypervMachine.
    :vartype properties: ~azure.mgmt.migrate.models.HypervMachineUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "HypervMachineUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.HypervMachineUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The updatable properties of the HypervMachine.
        :paramtype properties: ~azure.mgmt.migrate.models.HypervMachineUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervMachineUpdateProperties(_serialization.Model):
    """The updatable properties of the HypervMachine.

    :ivar firmware: Gets or sets the firmware.
    :vartype firmware: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the machine.
    :vartype run_as_account_id: str
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar tags: Gets or sets tags on the resource.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "firmware": {"key": "firmware", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        firmware: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword firmware: Gets or sets the firmware.
        :paramtype firmware: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the machine.
        :paramtype run_as_account_id: str
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: Gets or sets tags on the resource.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.firmware = firmware
        self.run_as_account_id = run_as_account_id
        self.product_support_status = product_support_status
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.tags = tags


class HypervNetworkAdapter(_serialization.Model):
    """Second level object represented in responses as part of Machine REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar network_id: Network Id.
    :vartype network_id: str
    :ivar subnet_name: Name of the VM subnet within the virtual network the NIC is attached to.
    :vartype subnet_name: str
    :ivar static_ip_address: Static IP address.
    :vartype static_ip_address: str
    :ivar nic_type: Mac address of the NIC.
    :vartype nic_type: str
    :ivar nic_id: Gets or sets the NIC Id.
    :vartype nic_id: str
    :ivar mac_address: Gets or sets Mac address of the NIC.
    :vartype mac_address: str
    :ivar ip_address_list: Gets IP addresses for the machine.
    :vartype ip_address_list: list[str]
    :ivar network_name: Gets or sets Network Name.
    :vartype network_name: str
    :ivar ip_address_type: Gets or sets Type of the IP address.
    :vartype ip_address_type: str
    """

    _validation = {
        "network_id": {"readonly": True},
        "subnet_name": {"readonly": True},
        "static_ip_address": {"readonly": True},
        "nic_type": {"readonly": True},
        "ip_address_list": {"readonly": True},
    }

    _attribute_map = {
        "network_id": {"key": "networkId", "type": "str"},
        "subnet_name": {"key": "subnetName", "type": "str"},
        "static_ip_address": {"key": "staticIpAddress", "type": "str"},
        "nic_type": {"key": "nicType", "type": "str"},
        "nic_id": {"key": "nicId", "type": "str"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "ip_address_list": {"key": "ipAddressList", "type": "[str]"},
        "network_name": {"key": "networkName", "type": "str"},
        "ip_address_type": {"key": "ipAddressType", "type": "str"},
    }

    def __init__(
        self,
        *,
        nic_id: Optional[str] = None,
        mac_address: Optional[str] = None,
        network_name: Optional[str] = None,
        ip_address_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nic_id: Gets or sets the NIC Id.
        :paramtype nic_id: str
        :keyword mac_address: Gets or sets Mac address of the NIC.
        :paramtype mac_address: str
        :keyword network_name: Gets or sets Network Name.
        :paramtype network_name: str
        :keyword ip_address_type: Gets or sets Type of the IP address.
        :paramtype ip_address_type: str
        """
        super().__init__(**kwargs)
        self.network_id = None
        self.subnet_name = None
        self.static_ip_address = None
        self.nic_type = None
        self.nic_id = nic_id
        self.mac_address = mac_address
        self.ip_address_list = None
        self.network_name = network_name
        self.ip_address_type = ip_address_type


class HypervOperationsStatusResource(ProxyResource):
    """A cluster resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.HypervClusterProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "HypervClusterProperties"},
    }

    def __init__(self, *, properties: Optional["_models.HypervClusterProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.HypervClusterProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervRunAsAccountResource(ProxyResource):
    """A machine resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "RunAsAccountProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RunAsAccountProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervRunAsAccountResourceListResult(_serialization.Model):
    """The response of a HypervRunAsAccountResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervRunAsAccountResource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervRunAsAccountResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervRunAsAccountResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.HypervRunAsAccountResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The HypervRunAsAccountResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervRunAsAccountResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class HypervSite(TrackedResource):
    """A HyperV SiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SiteProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "SiteProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.SiteProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SiteProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class HypervSiteListResult(_serialization.Model):
    """The response of a HypervSite list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervSite items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervSite]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.HypervSite"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The HypervSite items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervSite]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HypervSiteUpdate(_serialization.Model):
    """The type used for update operations of the HypervSite.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The updatable properties of the HypervSite.
    :vartype properties: ~azure.mgmt.migrate.models.HypervSiteUpdateProperties
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "HypervSiteUpdateProperties"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.HypervSiteUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The updatable properties of the HypervSite.
        :paramtype properties: ~azure.mgmt.migrate.models.HypervSiteUpdateProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties


class HypervSiteUpdateProperties(_serialization.Model):
    """The updatable properties of the HypervSite.

    :ivar service_principal_identity_details: Gets or sets the service principal identity details
     used by agent for
     communication
                 to the service.
    :vartype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
    :ivar agent_details: Gets or sets the on-premises agent details.
    :vartype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    """

    _attribute_map = {
        "service_principal_identity_details": {"key": "servicePrincipalIdentityDetails", "type": "SiteSpnProperties"},
        "agent_details": {"key": "agentDetails", "type": "SiteAgentProperties"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        service_principal_identity_details: Optional["_models.SiteSpnProperties"] = None,
        agent_details: Optional["_models.SiteAgentProperties"] = None,
        appliance_name: Optional[str] = None,
        discovery_solution_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_principal_identity_details: Gets or sets the service principal identity
         details used by agent for
         communication
                     to the service.
        :paramtype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
        :keyword agent_details: Gets or sets the on-premises agent details.
        :paramtype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.service_principal_identity_details = service_principal_identity_details
        self.agent_details = agent_details
        self.appliance_name = appliance_name
        self.discovery_solution_id = discovery_solution_id


class HypervSiteUsage(_serialization.Model):
    """Hyper-V site usage.

    :ivar machine_count: Gets or sets the number of machines discovered in the site.
    :vartype machine_count: int
    :ivar run_as_account_count: Gets or sets the number of run as accounts in the site.
    :vartype run_as_account_count: int
    :ivar host_count: Gets or sets the number of hosts part of the site.
    :vartype host_count: int
    :ivar cluster_count: Gets or sets the number of clusters part of the site.
    :vartype cluster_count: int
    """

    _attribute_map = {
        "machine_count": {"key": "machineCount", "type": "int"},
        "run_as_account_count": {"key": "runAsAccountCount", "type": "int"},
        "host_count": {"key": "hostCount", "type": "int"},
        "cluster_count": {"key": "clusterCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        machine_count: Optional[int] = None,
        run_as_account_count: Optional[int] = None,
        host_count: Optional[int] = None,
        cluster_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_count: Gets or sets the number of machines discovered in the site.
        :paramtype machine_count: int
        :keyword run_as_account_count: Gets or sets the number of run as accounts in the site.
        :paramtype run_as_account_count: int
        :keyword host_count: Gets or sets the number of hosts part of the site.
        :paramtype host_count: int
        :keyword cluster_count: Gets or sets the number of clusters part of the site.
        :paramtype cluster_count: int
        """
        super().__init__(**kwargs)
        self.machine_count = machine_count
        self.run_as_account_count = run_as_account_count
        self.host_count = host_count
        self.cluster_count = cluster_count


class HypervVmSoftwareInventory(ProxyResource):
    """HyperV VM software inventory REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.MachineSoftwareInventoryProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "MachineSoftwareInventoryProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.MachineSoftwareInventoryProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.MachineSoftwareInventoryProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HypervVmSoftwareInventoryListResult(_serialization.Model):
    """The response of a HypervVmSoftwareInventory list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HypervVmSoftwareInventory items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.HypervVmSoftwareInventory]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HypervVmSoftwareInventory]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.HypervVmSoftwareInventory"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The HypervVmSoftwareInventory items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.HypervVmSoftwareInventory]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class IisApplicationUnit(_serialization.Model):
    """Second-level object for identification of application units in a web site
    hosted on IIS.

    :ivar application_pool_name: Gets or sets the path of the directory.
    :vartype application_pool_name: str
    :ivar managed_pipeline_mode: Gets or sets the managed pipeline mode.
    :vartype managed_pipeline_mode: str
    :ivar runtime_version: Gets or sets the runtime version.
    :vartype runtime_version: str
    :ivar enable32_bit_api_on_win64: Gets or sets a value indicating whether 32 bit applications
     are allowed to run
     on 64 bit.
    :vartype enable32_bit_api_on_win64: bool
    :ivar path: Gets or sets the path of the directory.
    :vartype path: ~azure.mgmt.migrate.models.DirectoryPath
    :ivar directories: Gets or sets the list of directories.
    :vartype directories: list[~azure.mgmt.migrate.models.DirectoryPath]
    """

    _attribute_map = {
        "application_pool_name": {"key": "applicationPoolName", "type": "str"},
        "managed_pipeline_mode": {"key": "managedPipelineMode", "type": "str"},
        "runtime_version": {"key": "runtimeVersion", "type": "str"},
        "enable32_bit_api_on_win64": {"key": "enable32BitApiOnWin64", "type": "bool"},
        "path": {"key": "path", "type": "DirectoryPath"},
        "directories": {"key": "directories", "type": "[DirectoryPath]"},
    }

    def __init__(
        self,
        *,
        application_pool_name: Optional[str] = None,
        managed_pipeline_mode: Optional[str] = None,
        runtime_version: Optional[str] = None,
        enable32_bit_api_on_win64: Optional[bool] = None,
        path: Optional["_models.DirectoryPath"] = None,
        directories: Optional[List["_models.DirectoryPath"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword application_pool_name: Gets or sets the path of the directory.
        :paramtype application_pool_name: str
        :keyword managed_pipeline_mode: Gets or sets the managed pipeline mode.
        :paramtype managed_pipeline_mode: str
        :keyword runtime_version: Gets or sets the runtime version.
        :paramtype runtime_version: str
        :keyword enable32_bit_api_on_win64: Gets or sets a value indicating whether 32 bit applications
         are allowed to run
         on 64 bit.
        :paramtype enable32_bit_api_on_win64: bool
        :keyword path: Gets or sets the path of the directory.
        :paramtype path: ~azure.mgmt.migrate.models.DirectoryPath
        :keyword directories: Gets or sets the list of directories.
        :paramtype directories: list[~azure.mgmt.migrate.models.DirectoryPath]
        """
        super().__init__(**kwargs)
        self.application_pool_name = application_pool_name
        self.managed_pipeline_mode = managed_pipeline_mode
        self.runtime_version = runtime_version
        self.enable32_bit_api_on_win64 = enable32_bit_api_on_win64
        self.path = path
        self.directories = directories


class IisVirtualApplicationUnit(_serialization.Model):
    """Second-level object for identification of virtual applications in a web site
    hosted on IIS.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_virtual_directory: Gets a value indicating whether the application corresponds to a
     directory.
    :vartype is_virtual_directory: bool
    :ivar path: Gets or sets the path of the directory.
    :vartype path: ~azure.mgmt.migrate.models.DirectoryPath
    :ivar directories: Gets or sets the list of directories.
    :vartype directories: list[~azure.mgmt.migrate.models.DirectoryPath]
    """

    _validation = {
        "is_virtual_directory": {"readonly": True},
    }

    _attribute_map = {
        "is_virtual_directory": {"key": "isVirtualDirectory", "type": "bool"},
        "path": {"key": "path", "type": "DirectoryPath"},
        "directories": {"key": "directories", "type": "[DirectoryPath]"},
    }

    def __init__(
        self,
        *,
        path: Optional["_models.DirectoryPath"] = None,
        directories: Optional[List["_models.DirectoryPath"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword path: Gets or sets the path of the directory.
        :paramtype path: ~azure.mgmt.migrate.models.DirectoryPath
        :keyword directories: Gets or sets the list of directories.
        :paramtype directories: list[~azure.mgmt.migrate.models.DirectoryPath]
        """
        super().__init__(**kwargs)
        self.is_virtual_directory = None
        self.path = path
        self.directories = directories


class IisWebApplicationProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web application properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar applications: Gets the list of application units for the web site.
    :vartype applications: list[~azure.mgmt.migrate.models.IisApplicationUnit]
    :ivar virtual_applications: Gets the list of application units for the web site.
    :vartype virtual_applications: list[~azure.mgmt.migrate.models.IisVirtualApplicationUnit]
    :ivar web_server_id: Gets the web server id.
    :vartype web_server_id: str
    :ivar web_server_name: Gets the web server name.
    :vartype web_server_name: str
    :ivar machine_arm_ids: Gets the list of machine ARM Ids on which the web application is
     deployed.
    :vartype machine_arm_ids: list[str]
    :ivar virtual_path: Gets the virtual path of the application.
    :vartype virtual_path: str
    :ivar physical_path: Gets the physical path of the application.
    :vartype physical_path: str
    :ivar bindings: Gets the front end bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrate.models.FrontEndBinding]
    :ivar frameworks: Gets the Error details.
    :vartype frameworks: list[~azure.mgmt.migrate.models.WebApplicationFramework]
    :ivar configurations: Gets the configuration.
    :vartype configurations: list[~azure.mgmt.migrate.models.WebApplicationConfigurationUnit]
    :ivar directories: Gets the directories.
    :vartype directories: list[~azure.mgmt.migrate.models.WebApplicationDirectoryUnit]
    :ivar display_name: Gets the display name.
    :vartype display_name: str
    :ivar tags: Gets or sets tags on the resource.
    :vartype tags: dict[str, str]
    :ivar static_folders: Static folders.
    :vartype static_folders: list[str]
    :ivar machine_display_name: Machine display name.
    :vartype machine_display_name: str
    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar server_type: Gets the server type.
    :vartype server_type: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar has_errors: Gets a value indicating whether the WebApp has errors or not.
    :vartype has_errors: bool
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "applications": {"readonly": True},
        "virtual_applications": {"readonly": True},
        "web_server_id": {"readonly": True},
        "web_server_name": {"readonly": True},
        "machine_arm_ids": {"readonly": True},
        "virtual_path": {"readonly": True},
        "physical_path": {"readonly": True},
        "bindings": {"readonly": True},
        "frameworks": {"readonly": True},
        "configurations": {"readonly": True},
        "directories": {"readonly": True},
        "display_name": {"readonly": True},
        "static_folders": {"readonly": True},
        "machine_display_name": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "server_type": {"readonly": True},
        "errors": {"readonly": True},
        "appliance_names": {"readonly": True},
        "has_errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "applications": {"key": "applications", "type": "[IisApplicationUnit]"},
        "virtual_applications": {"key": "virtualApplications", "type": "[IisVirtualApplicationUnit]"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_name": {"key": "webServerName", "type": "str"},
        "machine_arm_ids": {"key": "machineArmIds", "type": "[str]"},
        "virtual_path": {"key": "virtualPath", "type": "str"},
        "physical_path": {"key": "physicalPath", "type": "str"},
        "bindings": {"key": "bindings", "type": "[FrontEndBinding]"},
        "frameworks": {"key": "frameworks", "type": "[WebApplicationFramework]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfigurationUnit]"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectoryUnit]"},
        "display_name": {"key": "displayName", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "static_folders": {"key": "staticFolders", "type": "[str]"},
        "machine_display_name": {"key": "machineDisplayName", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "has_errors": {"key": "hasErrors", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Gets or sets tags on the resource.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.applications = None
        self.virtual_applications = None
        self.web_server_id = None
        self.web_server_name = None
        self.machine_arm_ids = None
        self.virtual_path = None
        self.physical_path = None
        self.bindings = None
        self.frameworks = None
        self.configurations = None
        self.directories = None
        self.display_name = None
        self.tags = tags
        self.static_folders = None
        self.machine_display_name = None
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.server_type = None
        self.errors = None
        self.appliance_names = None
        self.has_errors = None
        self.provisioning_state = None


class IisWebApplications(ProxyResource):
    """Web application REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.IisWebApplicationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "IisWebApplicationProperties"},
    }

    def __init__(self, *, properties: Optional["_models.IisWebApplicationProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.IisWebApplicationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class IisWebApplicationsListResult(_serialization.Model):
    """The response of a IisWebApplications list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The IisWebApplications items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.IisWebApplications]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[IisWebApplications]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.IisWebApplications"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The IisWebApplications items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.IisWebApplications]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class IisWebApplicationsUpdate(_serialization.Model):
    """The type used for update operations of the IisWebApplications.

    :ivar properties: The updatable properties of the IisWebApplications.
    :vartype properties: ~azure.mgmt.migrate.models.IisWebApplicationsUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "IisWebApplicationsUpdateProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.IisWebApplicationsUpdateProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The updatable properties of the IisWebApplications.
        :paramtype properties: ~azure.mgmt.migrate.models.IisWebApplicationsUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class IisWebApplicationsUpdateProperties(_serialization.Model):
    """The updatable properties of the IisWebApplications.

    :ivar tags: Gets or sets tags on the resource.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Gets or sets tags on the resource.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class IisWebServerProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web server properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar configuration_location: Gets the configuration location.
    :vartype configuration_location: str
    :ivar version: Gets the configuration location.
    :vartype version: str
    :ivar machine_ids: Gets the list of machines.
    :vartype machine_ids: list[str]
    :ivar web_applications: Gets the list of web applications.
    :vartype web_applications: list[str]
    :ivar display_name: Gets the display name.
    :vartype display_name: str
    :ivar server_fqdn: Gets the server FQDN.
    :vartype server_fqdn: str
    :ivar run_as_account_id: Gets the run as account id.
    :vartype run_as_account_id: str
    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar server_type: Gets the server type.
    :vartype server_type: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar has_errors: Gets a value indicating whether the WebApp has errors or not.
    :vartype has_errors: bool
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "configuration_location": {"readonly": True},
        "version": {"readonly": True},
        "machine_ids": {"readonly": True},
        "web_applications": {"readonly": True},
        "display_name": {"readonly": True},
        "server_fqdn": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "server_type": {"readonly": True},
        "errors": {"readonly": True},
        "appliance_names": {"readonly": True},
        "has_errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "configuration_location": {"key": "configurationLocation", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "machine_ids": {"key": "machineIds", "type": "[str]"},
        "web_applications": {"key": "webApplications", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "server_fqdn": {"key": "serverFqdn", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "has_errors": {"key": "hasErrors", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.configuration_location = None
        self.version = None
        self.machine_ids = None
        self.web_applications = None
        self.display_name = None
        self.server_fqdn = None
        self.run_as_account_id = None
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.server_type = None
        self.errors = None
        self.appliance_names = None
        self.has_errors = None
        self.provisioning_state = None


class IisWebServers(ProxyResource):
    """Web server REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.IisWebServerProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "IisWebServerProperties"},
    }

    def __init__(self, *, properties: Optional["_models.IisWebServerProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.IisWebServerProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class IisWebServersListResult(_serialization.Model):
    """The response of a IisWebServers list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The IisWebServers items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.IisWebServers]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[IisWebServers]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.IisWebServers"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The IisWebServers items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.IisWebServers]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ImportJob(ProxyResource):
    """A host resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.JobProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "JobProperties"},
    }

    def __init__(self, *, properties: Optional["_models.JobProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.JobProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ImportJobListResult(_serialization.Model):
    """The response of a ImportJob list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ImportJob items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ImportJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ImportJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ImportJob"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The ImportJob items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ImportJob]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ImportMachine(ProxyResource):
    """An machine resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.ImportMachineProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ImportMachineProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ImportMachineProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.ImportMachineProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ImportMachineListResult(_serialization.Model):
    """The response of a ImportMachine list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ImportMachine items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ImportMachine]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ImportMachine]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ImportMachine"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The ImportMachine items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ImportMachine]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ImportMachineProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for machine properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar firmware: Firmware of the machine.
    :vartype firmware: str
    :ivar percentage_cpu_utilization: CPU utilization.
    :vartype percentage_cpu_utilization: float
    :ivar percentage_memory_utilization: Memory utilization.
    :vartype percentage_memory_utilization: float
    :ivar number_of_disks: Number of disks.
    :vartype number_of_disks: int
    :ivar total_disk_read_operations_per_second: Total disk read operations per second.
    :vartype total_disk_read_operations_per_second: float
    :ivar total_disk_write_operations_per_second: Total disk write operations per second.
    :vartype total_disk_write_operations_per_second: float
    :ivar total_disk_write_throughput: Total disk write throughput.
    :vartype total_disk_write_throughput: float
    :ivar total_disk_read_throughput: Total disk read throughput.
    :vartype total_disk_read_throughput: float
    :ivar mac_address: MAC Address.
    :vartype mac_address: str
    :ivar ip_addresses: IP Addresses.
    :vartype ip_addresses: list[str]
    :ivar machine_id: Machine ID.
    :vartype machine_id: str
    :ivar machine_manager_id: Machine manager ID.
    :vartype machine_manager_id: str
    :ivar number_of_network_adapters: Number of network adapters.
    :vartype number_of_network_adapters: int
    :ivar network_in_throughput: Network in throughput.
    :vartype network_in_throughput: float
    :ivar network_out_throughput: Network out throughput.
    :vartype network_out_throughput: float
    :ivar server_type: Server type.
    :vartype server_type: str
    :ivar hypervisor: Fabric type.
    :vartype hypervisor: str
    :ivar hypervisor_version_number: Hypervisor version number.
    :vartype hypervisor_version_number: str
    :ivar disks: Disks attached to the machine.
    :vartype disks: list[~azure.mgmt.migrate.models.WebRoleImportDisk]
    :ivar vm_fqdn: Server FQDN.
    :vartype vm_fqdn: str
    :ivar storage_in_use_gb: Total storage in use.
    :vartype storage_in_use_gb: float
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.WebRoleOperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar display_name: Gets the Display name of the machine.
    :vartype display_name: str
    :ivar is_deleted: Value indicating whether VM is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the marking machine creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar tags: machine tags. Required.
    :vartype tags: dict[str, str]
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "firmware": {"readonly": True},
        "percentage_cpu_utilization": {"readonly": True},
        "percentage_memory_utilization": {"readonly": True},
        "number_of_disks": {"readonly": True},
        "total_disk_read_operations_per_second": {"readonly": True},
        "total_disk_write_operations_per_second": {"readonly": True},
        "total_disk_write_throughput": {"readonly": True},
        "total_disk_read_throughput": {"readonly": True},
        "mac_address": {"readonly": True},
        "ip_addresses": {"readonly": True},
        "machine_id": {"readonly": True},
        "machine_manager_id": {"readonly": True},
        "number_of_network_adapters": {"readonly": True},
        "network_in_throughput": {"readonly": True},
        "network_out_throughput": {"readonly": True},
        "server_type": {"readonly": True},
        "hypervisor": {"readonly": True},
        "hypervisor_version_number": {"readonly": True},
        "disks": {"readonly": True},
        "vm_fqdn": {"readonly": True},
        "storage_in_use_gb": {"readonly": True},
        "display_name": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "tags": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "firmware": {"key": "firmware", "type": "str"},
        "percentage_cpu_utilization": {"key": "percentageCpuUtilization", "type": "float"},
        "percentage_memory_utilization": {"key": "percentageMemoryUtilization", "type": "float"},
        "number_of_disks": {"key": "numberOfDisks", "type": "int"},
        "total_disk_read_operations_per_second": {"key": "totalDiskReadOperationsPerSecond", "type": "float"},
        "total_disk_write_operations_per_second": {"key": "totalDiskWriteOperationsPerSecond", "type": "float"},
        "total_disk_write_throughput": {"key": "totalDiskWriteThroughput", "type": "float"},
        "total_disk_read_throughput": {"key": "totalDiskReadThroughput", "type": "float"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "ip_addresses": {"key": "ipAddresses", "type": "[str]"},
        "machine_id": {"key": "machineId", "type": "str"},
        "machine_manager_id": {"key": "machineManagerId", "type": "str"},
        "number_of_network_adapters": {"key": "numberOfNetworkAdapters", "type": "int"},
        "network_in_throughput": {"key": "networkInThroughput", "type": "float"},
        "network_out_throughput": {"key": "networkOutThroughput", "type": "float"},
        "server_type": {"key": "serverType", "type": "str"},
        "hypervisor": {"key": "hypervisor", "type": "str"},
        "hypervisor_version_number": {"key": "hypervisorVersionNumber", "type": "str"},
        "disks": {"key": "disks", "type": "[WebRoleImportDisk]"},
        "vm_fqdn": {"key": "vmFqdn", "type": "str"},
        "storage_in_use_gb": {"key": "storageInUseGb", "type": "float"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "WebRoleOperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        tags: Dict[str, str],
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.WebRoleOperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.WebRoleOperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: machine tags. Required.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.firmware = None
        self.percentage_cpu_utilization = None
        self.percentage_memory_utilization = None
        self.number_of_disks = None
        self.total_disk_read_operations_per_second = None
        self.total_disk_write_operations_per_second = None
        self.total_disk_write_throughput = None
        self.total_disk_read_throughput = None
        self.mac_address = None
        self.ip_addresses = None
        self.machine_id = None
        self.machine_manager_id = None
        self.number_of_network_adapters = None
        self.network_in_throughput = None
        self.network_out_throughput = None
        self.server_type = None
        self.hypervisor = None
        self.hypervisor_version_number = None
        self.disks = None
        self.vm_fqdn = None
        self.storage_in_use_gb = None
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.display_name = None
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.tags = tags
        self.provisioning_state = None


class ImportMachinesJob(_serialization.Model):
    """Import machines Job REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: Handled by resource provider. Type =
     Microsoft.OffAzure/ImportSites/jobs/importJobs.
    :vartype type: str
    :ivar properties: Gets or sets the import job properties.
    :vartype properties: ~azure.mgmt.migrate.models.ImportMachinesJobProperties
    :ivar id: Gets or sets the relative ARM name to get job.
    :vartype id: str
    :ivar name: Gets or sets the Job ID.
    :vartype name: str
    :ivar status: Gets or sets the Job status.
    :vartype status: str
    :ivar start_time: Gets or sets the Job start time.
    :vartype start_time: str
    :ivar end_time: Gets or sets the Job end time.
    :vartype end_time: str
    :ivar display_name: Gets or sets the Display name.
    :vartype display_name: str
    """

    _validation = {
        "type": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "ImportMachinesJobProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.ImportMachinesJobProperties"] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        status: Optional[str] = None,
        start_time: Optional[str] = None,
        end_time: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Gets or sets the import job properties.
        :paramtype properties: ~azure.mgmt.migrate.models.ImportMachinesJobProperties
        :keyword id: Gets or sets the relative ARM name to get job.
        :paramtype id: str
        :keyword name: Gets or sets the Job ID.
        :paramtype name: str
        :keyword status: Gets or sets the Job status.
        :paramtype status: str
        :keyword start_time: Gets or sets the Job start time.
        :paramtype start_time: str
        :keyword end_time: Gets or sets the Job end time.
        :paramtype end_time: str
        :keyword display_name: Gets or sets the Display name.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.type = None
        self.properties = properties
        self.id = id
        self.name = name
        self.status = status
        self.start_time = start_time
        self.end_time = end_time
        self.display_name = display_name


class ImportMachinesJobImportMachinesJobCollection(_serialization.Model):  # pylint: disable=name-too-long
    """Collection of VMware jobs.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Gets the list of jobs. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ImportMachinesJob]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ImportMachinesJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ImportMachinesJob"], **kwargs: Any) -> None:
        """
        :keyword value: Gets the list of jobs. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ImportMachinesJob]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ImportMachinesJobProperties(_serialization.Model):
    """ImportMachines JobProperties.

    :ivar blob_name: blob name.
    :vartype blob_name: str
    :ivar blob_sas_uri: blob sasUri.
    :vartype blob_sas_uri: str
    :ivar job_result: job Result. Known values are: "Unknown", "Completed",
     "CompletedWithWarnings", "CompletedWithErrors", "Failed", "WaitingForBlobUpload", and
     "InProgress".
    :vartype job_result: str or ~azure.mgmt.migrate.models.JobResult
    :ivar number_of_machines_imported: number Of Machines Imported.
    :vartype number_of_machines_imported: int
    :ivar blob_creation_time_stamp: blob Creation TimeStamp.
    :vartype blob_creation_time_stamp: ~datetime.datetime
    :ivar error_summary: error summary.
    :vartype error_summary: ~azure.mgmt.migrate.models.JobErrorSummary
    """

    _attribute_map = {
        "blob_name": {"key": "blobName", "type": "str"},
        "blob_sas_uri": {"key": "blobSasUri", "type": "str"},
        "job_result": {"key": "jobResult", "type": "str"},
        "number_of_machines_imported": {"key": "numberOfMachinesImported", "type": "int"},
        "blob_creation_time_stamp": {"key": "blobCreationTimeStamp", "type": "iso-8601"},
        "error_summary": {"key": "errorSummary", "type": "JobErrorSummary"},
    }

    def __init__(
        self,
        *,
        blob_name: Optional[str] = None,
        blob_sas_uri: Optional[str] = None,
        job_result: Optional[Union[str, "_models.JobResult"]] = None,
        number_of_machines_imported: Optional[int] = None,
        blob_creation_time_stamp: Optional[datetime.datetime] = None,
        error_summary: Optional["_models.JobErrorSummary"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword blob_name: blob name.
        :paramtype blob_name: str
        :keyword blob_sas_uri: blob sasUri.
        :paramtype blob_sas_uri: str
        :keyword job_result: job Result. Known values are: "Unknown", "Completed",
         "CompletedWithWarnings", "CompletedWithErrors", "Failed", "WaitingForBlobUpload", and
         "InProgress".
        :paramtype job_result: str or ~azure.mgmt.migrate.models.JobResult
        :keyword number_of_machines_imported: number Of Machines Imported.
        :paramtype number_of_machines_imported: int
        :keyword blob_creation_time_stamp: blob Creation TimeStamp.
        :paramtype blob_creation_time_stamp: ~datetime.datetime
        :keyword error_summary: error summary.
        :paramtype error_summary: ~azure.mgmt.migrate.models.JobErrorSummary
        """
        super().__init__(**kwargs)
        self.blob_name = blob_name
        self.blob_sas_uri = blob_sas_uri
        self.job_result = job_result
        self.number_of_machines_imported = number_of_machines_imported
        self.blob_creation_time_stamp = blob_creation_time_stamp
        self.error_summary = error_summary


class ImportSite(TrackedResource):
    """A ImportSite.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.ImportSiteProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "ImportSiteProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ImportSiteProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.ImportSiteProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class ImportSiteListResult(_serialization.Model):
    """The response of a ImportSite list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ImportSite items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ImportSite]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ImportSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ImportSite"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The ImportSite items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ImportSite]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ImportSiteProperties(_serialization.Model):
    """The properties of ImportSiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    :ivar master_site_id: Gets the Master Site this site is linked to.
    :vartype master_site_id: str
    :ivar service_endpoint: Gets the service endpoint.
    :vartype service_endpoint: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "master_site_id": {"readonly": True},
        "service_endpoint": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
        "master_site_id": {"key": "masterSiteId", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, discovery_solution_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.discovery_solution_id = discovery_solution_id
        self.master_site_id = None
        self.service_endpoint = None
        self.provisioning_state = None


class ImportSiteUpdate(_serialization.Model):
    """The type used for update operations of the ImportSite.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The updatable properties of the ImportSite.
    :vartype properties: ~azure.mgmt.migrate.models.ImportSiteUpdateProperties
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "ImportSiteUpdateProperties"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ImportSiteUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The updatable properties of the ImportSite.
        :paramtype properties: ~azure.mgmt.migrate.models.ImportSiteUpdateProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties


class ImportSiteUpdateProperties(_serialization.Model):
    """The updatable properties of the ImportSite.

    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    """

    _attribute_map = {
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
    }

    def __init__(self, *, discovery_solution_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.discovery_solution_id = discovery_solution_id


class JobErrorSummary(_serialization.Model):
    """Job Error Summary.

    :ivar errors: errors list.
    :vartype errors: list[str]
    :ivar error_count: error count.
    :vartype error_count: int
    :ivar warning_count: warning Count.
    :vartype warning_count: int
    """

    _attribute_map = {
        "errors": {"key": "errors", "type": "[str]"},
        "error_count": {"key": "errorCount", "type": "int"},
        "warning_count": {"key": "warningCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        errors: Optional[List[str]] = None,
        error_count: Optional[int] = None,
        warning_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword errors: errors list.
        :paramtype errors: list[str]
        :keyword error_count: error count.
        :paramtype error_count: int
        :keyword warning_count: warning Count.
        :paramtype warning_count: int
        """
        super().__init__(**kwargs)
        self.errors = errors
        self.error_count = error_count
        self.warning_count = warning_count


class JobProperties(_serialization.Model):
    """Job REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar status: Gets operation status.
    :vartype status: str
    :ivar start_time: Gets operation start time.
    :vartype start_time: str
    :ivar end_time: Gets operation end time.
    :vartype end_time: str
    :ivar display_name: Gets or sets the display name of the Job.
    :vartype display_name: str
    :ivar client_request_id: Gets the client request Id used in the operation execution context.
    :vartype client_request_id: str
    :ivar activity_id: Gets the activity Id used in the operation execution context.
    :vartype activity_id: str
    :ivar errors: Gets the errors.
    :vartype errors: list[~azure.mgmt.migrate.models.ErrorDetails]
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "status": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
        "display_name": {"readonly": True},
        "client_request_id": {"readonly": True},
        "activity_id": {"readonly": True},
        "errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "client_request_id": {"key": "clientRequestId", "type": "str"},
        "activity_id": {"key": "activityId", "type": "str"},
        "errors": {"key": "errors", "type": "[ErrorDetails]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.status = None
        self.start_time = None
        self.end_time = None
        self.display_name = None
        self.client_request_id = None
        self.activity_id = None
        self.errors = None
        self.provisioning_state = None


class MachineMetadata(_serialization.Model):
    """The properties of Machine MetaData.

    All required parameters must be populated in order to send to server.

    :ivar machine_arm_id: arm id of the machine. Required.
    :vartype machine_arm_id: str
    :ivar dependency_mapping: value representing state of dependency mapping (enabled/disabled).
     Required.
    :vartype dependency_mapping: str
    :ivar tags: machine tags. Required.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "machine_arm_id": {"required": True},
        "dependency_mapping": {"required": True},
        "tags": {"required": True},
    }

    _attribute_map = {
        "machine_arm_id": {"key": "machineArmId", "type": "str"},
        "dependency_mapping": {"key": "dependencyMapping", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, machine_arm_id: str, dependency_mapping: str, tags: Dict[str, str], **kwargs: Any) -> None:
        """
        :keyword machine_arm_id: arm id of the machine. Required.
        :paramtype machine_arm_id: str
        :keyword dependency_mapping: value representing state of dependency mapping (enabled/disabled).
         Required.
        :paramtype dependency_mapping: str
        :keyword tags: machine tags. Required.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.machine_arm_id = machine_arm_id
        self.dependency_mapping = dependency_mapping
        self.tags = tags


class MachineMetadataCollection(_serialization.Model):
    """The list of Machine MetaData.

    All required parameters must be populated in order to send to server.

    :ivar value: The list of Machine MetaData. Required.
    :vartype value: list[~azure.mgmt.migrate.models.MachineMetadata]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[MachineMetadata]"},
    }

    def __init__(self, *, value: List["_models.MachineMetadata"], **kwargs: Any) -> None:
        """
        :keyword value: The list of Machine MetaData. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.MachineMetadata]
        """
        super().__init__(**kwargs)
        self.value = value


class MachineResource(ProxyResource):
    """An machine resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.VmwareMachineProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "VmwareMachineProperties"},
    }

    def __init__(self, *, properties: Optional["_models.VmwareMachineProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.VmwareMachineProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class MachineResourceListResult(_serialization.Model):
    """The response of a MachineResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The MachineResource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.MachineResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[MachineResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.MachineResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The MachineResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.MachineResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class MachineResourceUpdate(_serialization.Model):
    """The type used for update operations of the MachineResource.

    :ivar properties: The updatable properties of the MachineResource.
    :vartype properties: ~azure.mgmt.migrate.models.MachineResourceUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "MachineResourceUpdateProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.MachineResourceUpdateProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The updatable properties of the MachineResource.
        :paramtype properties: ~azure.mgmt.migrate.models.MachineResourceUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class MachineResourceUpdateProperties(_serialization.Model):
    """The updatable properties of the MachineResource.

    :ivar firmware: Gets or sets the firmware.
    :vartype firmware: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the machine.
    :vartype run_as_account_id: str
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar tags: Gets or sets tags on the VMware machine.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "firmware": {"key": "firmware", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        firmware: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword firmware: Gets or sets the firmware.
        :paramtype firmware: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the machine.
        :paramtype run_as_account_id: str
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: Gets or sets tags on the VMware machine.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.firmware = firmware
        self.run_as_account_id = run_as_account_id
        self.product_support_status = product_support_status
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.tags = tags


class MachineSoftwareInventoryProperties(_serialization.Model):
    """Class for machine software inventory properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar apps_and_roles: Apps And Roles of the machine entity.
    :vartype apps_and_roles: ~azure.mgmt.migrate.models.AppsAndRoles
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "apps_and_roles": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "apps_and_roles": {"key": "appsAndRoles", "type": "AppsAndRoles"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.apps_and_roles = None
        self.provisioning_state = None


class MasterSite(TrackedResource):
    """A MasterSite.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.MasterSiteProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "MasterSiteProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.MasterSiteProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.MasterSiteProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class MasterSiteListResult(_serialization.Model):
    """The response of a MasterSite list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The MasterSite items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.MasterSite]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[MasterSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.MasterSite"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The MasterSite items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.MasterSite]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class MasterSiteProperties(_serialization.Model):
    """Class for site properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar public_network_access: Gets or sets the state of public network access. Known values are:
     "NotSpecified", "Enabled", and "Disabled".
    :vartype public_network_access: str or
     ~azure.mgmt.migrate.models.MasterSitePropertiesPublicNetworkAccess
    :ivar allow_multiple_sites: Gets or sets a value indicating whether multiple sites per site
     type are
     allowed.
    :vartype allow_multiple_sites: bool
    :ivar sites: Gets or sets the sites that are a part of Master Site.
                 The key
     should contain the Site ARM name.
    :vartype sites: list[str]
    :ivar customer_storage_account_arm_id: Gets or sets a value for customer storage account ARM
     id.
    :vartype customer_storage_account_arm_id: str
    :ivar private_endpoint_connections: Gets the private endpoint connections.
    :vartype private_endpoint_connections:
     list[~azure.mgmt.migrate.models.PrivateEndpointConnection]
    :ivar nested_sites: Gets the nested sites under Master Site.
    :vartype nested_sites: list[str]
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "private_endpoint_connections": {"readonly": True},
        "nested_sites": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "public_network_access": {"key": "publicNetworkAccess", "type": "str"},
        "allow_multiple_sites": {"key": "allowMultipleSites", "type": "bool"},
        "sites": {"key": "sites", "type": "[str]"},
        "customer_storage_account_arm_id": {"key": "customerStorageAccountArmId", "type": "str"},
        "private_endpoint_connections": {"key": "privateEndpointConnections", "type": "[PrivateEndpointConnection]"},
        "nested_sites": {"key": "nestedSites", "type": "[str]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        public_network_access: Optional[Union[str, "_models.MasterSitePropertiesPublicNetworkAccess"]] = None,
        allow_multiple_sites: Optional[bool] = None,
        sites: Optional[List[str]] = None,
        customer_storage_account_arm_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword public_network_access: Gets or sets the state of public network access. Known values
         are: "NotSpecified", "Enabled", and "Disabled".
        :paramtype public_network_access: str or
         ~azure.mgmt.migrate.models.MasterSitePropertiesPublicNetworkAccess
        :keyword allow_multiple_sites: Gets or sets a value indicating whether multiple sites per site
         type are
         allowed.
        :paramtype allow_multiple_sites: bool
        :keyword sites: Gets or sets the sites that are a part of Master Site.
                     The key
         should contain the Site ARM name.
        :paramtype sites: list[str]
        :keyword customer_storage_account_arm_id: Gets or sets a value for customer storage account ARM
         id.
        :paramtype customer_storage_account_arm_id: str
        """
        super().__init__(**kwargs)
        self.public_network_access = public_network_access
        self.allow_multiple_sites = allow_multiple_sites
        self.sites = sites
        self.customer_storage_account_arm_id = customer_storage_account_arm_id
        self.private_endpoint_connections = None
        self.nested_sites = None
        self.provisioning_state = None


class MasterSiteUpdate(_serialization.Model):
    """The type used for update operations of the MasterSite.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The updatable properties of the MasterSite.
    :vartype properties: ~azure.mgmt.migrate.models.MasterSiteUpdateProperties
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "MasterSiteUpdateProperties"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.MasterSiteUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The updatable properties of the MasterSite.
        :paramtype properties: ~azure.mgmt.migrate.models.MasterSiteUpdateProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties


class MasterSiteUpdateProperties(_serialization.Model):
    """The updatable properties of the MasterSite.

    :ivar public_network_access: Gets or sets the state of public network access. Known values are:
     "NotSpecified", "Enabled", and "Disabled".
    :vartype public_network_access: str or
     ~azure.mgmt.migrate.models.MasterSitePropertiesPublicNetworkAccess
    :ivar allow_multiple_sites: Gets or sets a value indicating whether multiple sites per site
     type are
     allowed.
    :vartype allow_multiple_sites: bool
    :ivar sites: Gets or sets the sites that are a part of Master Site.
                 The key
     should contain the Site ARM name.
    :vartype sites: list[str]
    :ivar customer_storage_account_arm_id: Gets or sets a value for customer storage account ARM
     id.
    :vartype customer_storage_account_arm_id: str
    """

    _attribute_map = {
        "public_network_access": {"key": "publicNetworkAccess", "type": "str"},
        "allow_multiple_sites": {"key": "allowMultipleSites", "type": "bool"},
        "sites": {"key": "sites", "type": "[str]"},
        "customer_storage_account_arm_id": {"key": "customerStorageAccountArmId", "type": "str"},
    }

    def __init__(
        self,
        *,
        public_network_access: Optional[Union[str, "_models.MasterSitePropertiesPublicNetworkAccess"]] = None,
        allow_multiple_sites: Optional[bool] = None,
        sites: Optional[List[str]] = None,
        customer_storage_account_arm_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword public_network_access: Gets or sets the state of public network access. Known values
         are: "NotSpecified", "Enabled", and "Disabled".
        :paramtype public_network_access: str or
         ~azure.mgmt.migrate.models.MasterSitePropertiesPublicNetworkAccess
        :keyword allow_multiple_sites: Gets or sets a value indicating whether multiple sites per site
         type are
         allowed.
        :paramtype allow_multiple_sites: bool
        :keyword sites: Gets or sets the sites that are a part of Master Site.
                     The key
         should contain the Site ARM name.
        :paramtype sites: list[str]
        :keyword customer_storage_account_arm_id: Gets or sets a value for customer storage account ARM
         id.
        :paramtype customer_storage_account_arm_id: str
        """
        super().__init__(**kwargs)
        self.public_network_access = public_network_access
        self.allow_multiple_sites = allow_multiple_sites
        self.sites = sites
        self.customer_storage_account_arm_id = customer_storage_account_arm_id


class OperatingSystem(_serialization.Model):
    """Second level object returned as part of Machine REST resource.

    :ivar os_type: Gets or sets the type of the operating system.
    :vartype os_type: str
    :ivar os_name: Gets or sets the Name of the operating system.
    :vartype os_name: str
    :ivar os_version: Gets or sets the Version of the operating system.
    :vartype os_version: str
    :ivar os_architecture: Gets or sets the Architecture of the operating system.
    :vartype os_architecture: str
    """

    _attribute_map = {
        "os_type": {"key": "osType", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "os_architecture": {"key": "osArchitecture", "type": "str"},
    }

    def __init__(
        self,
        *,
        os_type: Optional[str] = None,
        os_name: Optional[str] = None,
        os_version: Optional[str] = None,
        os_architecture: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword os_type: Gets or sets the type of the operating system.
        :paramtype os_type: str
        :keyword os_name: Gets or sets the Name of the operating system.
        :paramtype os_name: str
        :keyword os_version: Gets or sets the Version of the operating system.
        :paramtype os_version: str
        :keyword os_architecture: Gets or sets the Architecture of the operating system.
        :paramtype os_architecture: str
        """
        super().__init__(**kwargs)
        self.os_type = os_type
        self.os_name = os_name
        self.os_version = os_version
        self.os_architecture = os_architecture


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.migrate.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.migrate.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.migrate.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.migrate.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.migrate.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class OperationStatus(_serialization.Model):
    """Operation status REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the Id.
    :vartype id: str
    :ivar name: Gets the operation name.
    :vartype name: str
    :ivar status: Gets the status of the operation. ARM expects the terminal status to be one
     of
                 Succeeded/ Failed/ Canceled. All other values imply that the
     operation is still running.
    :vartype status: str
    :ivar start_time: Gets the start time.
    :vartype start_time: str
    :ivar end_time: Gets the start time.
    :vartype end_time: str
    :ivar error: Gets the error.
    :vartype error: ~azure.mgmt.migrate.models.OperationStatusError
    :ivar properties: Operation status properties.
    :vartype properties: ~azure.mgmt.migrate.models.OperationStatusProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "status": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
        "error": {"readonly": True},
        "properties": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
        "error": {"key": "error", "type": "OperationStatusError"},
        "properties": {"key": "properties", "type": "OperationStatusProperties"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.status = None
        self.start_time = None
        self.end_time = None
        self.error = None
        self.properties = None


class OperationStatusError(_serialization.Model):
    """Class for operation status errors.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Gets the error code.
    :vartype code: str
    :ivar message: Gets the error message.
    :vartype message: str
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None


class OperationStatusProperties(_serialization.Model):
    """Class for operation result properties.

    :ivar result: Gets or sets the result or output of the workflow.
    :vartype result: str
    """

    _attribute_map = {
        "result": {"key": "result", "type": "str"},
    }

    def __init__(self, *, result: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword result: Gets or sets the result or output of the workflow.
        :paramtype result: str
        """
        super().__init__(**kwargs)
        self.result = result


class OracleDiscovery(_serialization.Model):
    """Data related to a machine's Oracle discovery.

    :ivar total_instance_count: Gets or sets number of successfully discovered instances.
    :vartype total_instance_count: int
    :ivar total_database_count: Gets or sets number of successfully discovered databases.
    :vartype total_database_count: int
    :ivar shallow_discovery_status: Gets or sets status of partner shallow discovery. Known values
     are: "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype shallow_discovery_status: str or ~azure.mgmt.migrate.models.ShallowDiscoveryStatus
    :ivar discovery_scope_status: Gets or sets status of partner discovery. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or ~azure.mgmt.migrate.models.DiscoveryScopeStatus
    """

    _attribute_map = {
        "total_instance_count": {"key": "totalInstanceCount", "type": "int"},
        "total_database_count": {"key": "totalDatabaseCount", "type": "int"},
        "shallow_discovery_status": {"key": "shallowDiscoveryStatus", "type": "str"},
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_instance_count: Optional[int] = None,
        total_database_count: Optional[int] = None,
        shallow_discovery_status: Optional[Union[str, "_models.ShallowDiscoveryStatus"]] = None,
        discovery_scope_status: Optional[Union[str, "_models.DiscoveryScopeStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_instance_count: Gets or sets number of successfully discovered instances.
        :paramtype total_instance_count: int
        :keyword total_database_count: Gets or sets number of successfully discovered databases.
        :paramtype total_database_count: int
        :keyword shallow_discovery_status: Gets or sets status of partner shallow discovery. Known
         values are: "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
         "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
         "DiscoverySucceeded".
        :paramtype shallow_discovery_status: str or ~azure.mgmt.migrate.models.ShallowDiscoveryStatus
        :keyword discovery_scope_status: Gets or sets status of partner discovery. Known values are:
         "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
         "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
         "DiscoverySucceeded".
        :paramtype discovery_scope_status: str or ~azure.mgmt.migrate.models.DiscoveryScopeStatus
        """
        super().__init__(**kwargs)
        self.total_instance_count = total_instance_count
        self.total_database_count = total_database_count
        self.shallow_discovery_status = shallow_discovery_status
        self.discovery_scope_status = discovery_scope_status


class OtherDatabase(_serialization.Model):
    """OtherDatabase in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar database_type: Gets or sets DatabaseType of the OtherDatabase.
    :vartype database_type: str
    :ivar instance: Gets or sets Instance of the OtherDatabase.
    :vartype instance: str
    :ivar version: Gets or sets Version of the OtherDatabase.
    :vartype version: str
    """

    _validation = {
        "database_type": {"readonly": True},
        "instance": {"readonly": True},
        "version": {"readonly": True},
    }

    _attribute_map = {
        "database_type": {"key": "databaseType", "type": "str"},
        "instance": {"key": "instance", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.database_type = None
        self.instance = None
        self.version = None


class PagedDeleteImportMachinesJob(_serialization.Model):
    """Paged collection of DeleteImportMachinesJob items.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The DeleteImportMachinesJob items on this page.
    :vartype value: list[~azure.mgmt.migrate.models.DeleteImportMachinesJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DeleteImportMachinesJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PagedExportImportedMachinesJob(_serialization.Model):
    """Paged collection of ExportImportedMachinesJob items.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The ExportImportedMachinesJob items on this page.
    :vartype value: list[~azure.mgmt.migrate.models.ExportImportedMachinesJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ExportImportedMachinesJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PagedImportMachinesJob(_serialization.Model):
    """Paged collection of ImportMachinesJob items.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The ImportMachinesJob items on this page.
    :vartype value: list[~azure.mgmt.migrate.models.ImportMachinesJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ImportMachinesJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateEndpointConnection(ProxyResource):
    """REST model used to encapsulate Private Link properties for tracked resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.PrivateEndpointConnectionPropertiesV2
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PrivateEndpointConnectionPropertiesV2"},
    }

    def __init__(
        self, *, properties: Optional["_models.PrivateEndpointConnectionPropertiesV2"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.PrivateEndpointConnectionPropertiesV2
        """
        super().__init__(**kwargs)
        self.properties = properties


class PrivateEndpointConnectionListResult(_serialization.Model):
    """The response of a PrivateEndpointConnection list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PrivateEndpointConnection items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.PrivateEndpointConnection]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnection]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.PrivateEndpointConnection"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The PrivateEndpointConnection items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.PrivateEndpointConnection]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PrivateEndpointConnectionPropertiesV2(_serialization.Model):
    """PrivateEndpointConnectionProperties V2.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar group_ids: array of group ids.
    :vartype group_ids: list[str]
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    :ivar private_endpoint: private endpoints.
    :vartype private_endpoint: ~azure.mgmt.migrate.models.ResourceId
    :ivar private_link_service_connection_state: private endpoints connection state.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.migrate.models.PrivateLinkServiceConnectionState
    """

    _validation = {
        "group_ids": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "private_endpoint": {"readonly": True},
    }

    _attribute_map = {
        "group_ids": {"key": "groupIds", "type": "[str]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "private_endpoint": {"key": "privateEndpoint", "type": "ResourceId"},
        "private_link_service_connection_state": {
            "key": "privateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
    }

    def __init__(
        self,
        *,
        private_link_service_connection_state: Optional["_models.PrivateLinkServiceConnectionState"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword private_link_service_connection_state: private endpoints connection state.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.migrate.models.PrivateLinkServiceConnectionState
        """
        super().__init__(**kwargs)
        self.group_ids = None
        self.provisioning_state = None
        self.private_endpoint = None
        self.private_link_service_connection_state = private_link_service_connection_state


class PrivateLinkResource(ProxyResource):
    """REST model used to encapsulate Private Link properties for tracked resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.PrivateLinkResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PrivateLinkResourceProperties"},
    }

    def __init__(self, *, properties: Optional["_models.PrivateLinkResourceProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.PrivateLinkResourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class PrivateLinkResourceListResult(_serialization.Model):
    """The response of a PrivateLinkResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PrivateLinkResource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.PrivateLinkResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateLinkResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.PrivateLinkResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The PrivateLinkResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.PrivateLinkResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PrivateLinkResourceProperties(_serialization.Model):
    """private link resource properties model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar required_members: required members.
    :vartype required_members: list[str]
    :ivar required_zone_names: required zone names.
    :vartype required_zone_names: list[str]
    :ivar group_id: group id.
    :vartype group_id: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "required_members": {"key": "requiredMembers", "type": "[str]"},
        "required_zone_names": {"key": "requiredZoneNames", "type": "[str]"},
        "group_id": {"key": "groupId", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        required_members: Optional[List[str]] = None,
        required_zone_names: Optional[List[str]] = None,
        group_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword required_members: required members.
        :paramtype required_members: list[str]
        :keyword required_zone_names: required zone names.
        :paramtype required_zone_names: list[str]
        :keyword group_id: group id.
        :paramtype group_id: str
        """
        super().__init__(**kwargs)
        self.required_members = required_members
        self.required_zone_names = required_zone_names
        self.group_id = group_id
        self.provisioning_state = None


class PrivateLinkServiceConnectionState(_serialization.Model):
    """Service Connection State.

    :ivar status: state status. Known values are: "Approved", "Pending", "Rejected", and
     "Disconnected".
    :vartype status: str or ~azure.mgmt.migrate.models.PrivateLinkServiceConnectionStateStatus
    :ivar description: description string.
    :vartype description: str
    :ivar actions_required: actions required.
    :vartype actions_required: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "actions_required": {"key": "actionsRequired", "type": "str"},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "_models.PrivateLinkServiceConnectionStateStatus"]] = None,
        description: Optional[str] = None,
        actions_required: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: state status. Known values are: "Approved", "Pending", "Rejected", and
         "Disconnected".
        :paramtype status: str or ~azure.mgmt.migrate.models.PrivateLinkServiceConnectionStateStatus
        :keyword description: description string.
        :paramtype description: str
        :keyword actions_required: actions required.
        :paramtype actions_required: str
        """
        super().__init__(**kwargs)
        self.status = status
        self.description = description
        self.actions_required = actions_required


class ProcessorInfo(_serialization.Model):
    """Processor Information.

    :ivar name: Gets or sets the name\\model of a processor.
    :vartype name: str
    :ivar number_of_sockets: Gets or sets the number of sockets.
    :vartype number_of_sockets: int
    :ivar number_of_cores_per_socket: Gets or sets the total number of cores in a socket.
    :vartype number_of_cores_per_socket: int
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "number_of_sockets": {"key": "numberOfSockets", "type": "int"},
        "number_of_cores_per_socket": {"key": "numberOfCoresPerSocket", "type": "int"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        number_of_sockets: Optional[int] = None,
        number_of_cores_per_socket: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the name\\model of a processor.
        :paramtype name: str
        :keyword number_of_sockets: Gets or sets the number of sockets.
        :paramtype number_of_sockets: int
        :keyword number_of_cores_per_socket: Gets or sets the total number of cores in a socket.
        :paramtype number_of_cores_per_socket: int
        """
        super().__init__(**kwargs)
        self.name = name
        self.number_of_sockets = number_of_sockets
        self.number_of_cores_per_socket = number_of_cores_per_socket


class ProductSupportStatus(_serialization.Model):
    """product support status.

    :ivar current_version: current version.
    :vartype current_version: str
    :ivar esu_status: esu status. Known values are: "Unknown", "Active", and "InActive".
    :vartype esu_status: str or ~azure.mgmt.migrate.models.EsuStatus
    :ivar support_status: support status. Known values are: "Unknown", "Mainstream", and
     "Extended".
    :vartype support_status: str or ~azure.mgmt.migrate.models.SupportStatus
    :ivar support_end_date: support end date.
    :vartype support_end_date: ~datetime.datetime
    :ivar esu_year: esu year. Known values are: "Unknown", "FirstYear", "SecondYear", "ThirdYear",
     and "UpgradeYear".
    :vartype esu_year: str or ~azure.mgmt.migrate.models.EsuYear
    """

    _attribute_map = {
        "current_version": {"key": "currentVersion", "type": "str"},
        "esu_status": {"key": "esuStatus", "type": "str"},
        "support_status": {"key": "supportStatus", "type": "str"},
        "support_end_date": {"key": "supportEndDate", "type": "iso-8601"},
        "esu_year": {"key": "esuYear", "type": "str"},
    }

    def __init__(
        self,
        *,
        current_version: Optional[str] = None,
        esu_status: Optional[Union[str, "_models.EsuStatus"]] = None,
        support_status: Optional[Union[str, "_models.SupportStatus"]] = None,
        support_end_date: Optional[datetime.datetime] = None,
        esu_year: Optional[Union[str, "_models.EsuYear"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword current_version: current version.
        :paramtype current_version: str
        :keyword esu_status: esu status. Known values are: "Unknown", "Active", and "InActive".
        :paramtype esu_status: str or ~azure.mgmt.migrate.models.EsuStatus
        :keyword support_status: support status. Known values are: "Unknown", "Mainstream", and
         "Extended".
        :paramtype support_status: str or ~azure.mgmt.migrate.models.SupportStatus
        :keyword support_end_date: support end date.
        :paramtype support_end_date: ~datetime.datetime
        :keyword esu_year: esu year. Known values are: "Unknown", "FirstYear", "SecondYear",
         "ThirdYear", and "UpgradeYear".
        :paramtype esu_year: str or ~azure.mgmt.migrate.models.EsuYear
        """
        super().__init__(**kwargs)
        self.current_version = current_version
        self.esu_status = esu_status
        self.support_status = support_status
        self.support_end_date = support_end_date
        self.esu_year = esu_year


class ProxySiteRefreshBody(_serialization.Model):
    """Request body for Proxy site refresh action.

    :ivar appliance_name: Gets or sets the appliance name of the agent in the site.
    :vartype appliance_name: str
    """

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
    }

    def __init__(self, *, appliance_name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword appliance_name: Gets or sets the appliance name of the agent in the site.
        :paramtype appliance_name: str
        """
        super().__init__(**kwargs)
        self.appliance_name = appliance_name


class RequestExportMachineErrorsProperties(_serialization.Model):
    """The Properties class for export machine errors request body.

    :ivar discovery_scope: Gets or sets the discovery scope. Known values are: "AppsAndRoles",
     "DependencyMap", "StaticData", and "SQLServerConnectionInfo".
    :vartype discovery_scope: str or ~azure.mgmt.migrate.models.ExportMachineErrorsProperties
    """

    _attribute_map = {
        "discovery_scope": {"key": "discoveryScope", "type": "str"},
    }

    def __init__(
        self, *, discovery_scope: Optional[Union[str, "_models.ExportMachineErrorsProperties"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword discovery_scope: Gets or sets the discovery scope. Known values are: "AppsAndRoles",
         "DependencyMap", "StaticData", and "SQLServerConnectionInfo".
        :paramtype discovery_scope: str or ~azure.mgmt.migrate.models.ExportMachineErrorsProperties
        """
        super().__init__(**kwargs)
        self.discovery_scope = discovery_scope


class ResourceId(_serialization.Model):
    """PrivateEndpointModelsResourceId.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: id name.
    :vartype id: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None


class RunAsAccountMachineInput(_serialization.Model):
    """Machine class.

    :ivar machine_id: Gets or sets the ARM id of the machine.
    :vartype machine_id: str
    :ivar run_as_account_id: run as AccountId.
    :vartype run_as_account_id: str
    """

    _attribute_map = {
        "machine_id": {"key": "machineId", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
    }

    def __init__(
        self, *, machine_id: Optional[str] = None, run_as_account_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: Gets or sets the ARM id of the machine.
        :paramtype machine_id: str
        :keyword run_as_account_id: run as AccountId.
        :paramtype run_as_account_id: str
        """
        super().__init__(**kwargs)
        self.machine_id = machine_id
        self.run_as_account_id = run_as_account_id


class RunAsAccountProperties(_serialization.Model):
    """Class for run as account properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display name of the run as account.
    :vartype display_name: str
    :ivar credential_type: Gets the credential type of the run as account.
    :vartype credential_type: str
    :ivar created_timestamp: Timestamp marking run as account creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Timestamp marking last updated on the run as account.
    :vartype updated_timestamp: str
    :ivar appliance_name: Gets the appliance name of the run as account.
    :vartype appliance_name: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "display_name": {"readonly": True},
        "credential_type": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "appliance_name": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "credential_type": {"key": "credentialType", "type": "str"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_name = None
        self.credential_type = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.appliance_name = None
        self.provisioning_state = None


class SasUriResponse(_serialization.Model):
    """Import URI response class.

    :ivar job_arm_id: Gets or sets the job ARM ID.
    :vartype job_arm_id: str
    :ivar uri: Gets or sets the SAS URI.
    :vartype uri: str
    :ivar import_type: Gets or sets the import type. Known values are: "AzureMigrateCSV" and
     "RVToolsXlsx".
    :vartype import_type: str or ~azure.mgmt.migrate.models.ImportTypeValues
    """

    _attribute_map = {
        "job_arm_id": {"key": "jobArmId", "type": "str"},
        "uri": {"key": "uri", "type": "str"},
        "import_type": {"key": "importType", "type": "str"},
    }

    def __init__(
        self,
        *,
        job_arm_id: Optional[str] = None,
        uri: Optional[str] = None,
        import_type: Optional[Union[str, "_models.ImportTypeValues"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword job_arm_id: Gets or sets the job ARM ID.
        :paramtype job_arm_id: str
        :keyword uri: Gets or sets the SAS URI.
        :paramtype uri: str
        :keyword import_type: Gets or sets the import type. Known values are: "AzureMigrateCSV" and
         "RVToolsXlsx".
        :paramtype import_type: str or ~azure.mgmt.migrate.models.ImportTypeValues
        """
        super().__init__(**kwargs)
        self.job_arm_id = job_arm_id
        self.uri = uri
        self.import_type = import_type


class Server(ProxyResource):
    """A machine resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.ServerProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ServerProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ServerProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.ServerProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ServerDisk(_serialization.Model):
    """Server disk details.

    :ivar id: Gets or sets Id of the disk.
    :vartype id: str
    :ivar generated_id: Gets or sets generated Id of the disk.
    :vartype generated_id: str
    :ivar max_size_in_bytes: Gets or sets Bytes allocated for the disk.
    :vartype max_size_in_bytes: int
    :ivar name: Gets or sets Name of the disk.
    :vartype name: str
    :ivar disk_type: Gets or sets Type of the disk.
    :vartype disk_type: str
    :ivar lun: Gets or sets LUN of the disk.
    :vartype lun: int
    :ivar path: Gets or sets Path of the disk.
    :vartype path: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "generated_id": {"key": "generatedId", "type": "str"},
        "max_size_in_bytes": {"key": "maxSizeInBytes", "type": "int"},
        "name": {"key": "name", "type": "str"},
        "disk_type": {"key": "diskType", "type": "str"},
        "lun": {"key": "lun", "type": "int"},
        "path": {"key": "path", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        generated_id: Optional[str] = None,
        max_size_in_bytes: Optional[int] = None,
        name: Optional[str] = None,
        disk_type: Optional[str] = None,
        lun: Optional[int] = None,
        path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets Id of the disk.
        :paramtype id: str
        :keyword generated_id: Gets or sets generated Id of the disk.
        :paramtype generated_id: str
        :keyword max_size_in_bytes: Gets or sets Bytes allocated for the disk.
        :paramtype max_size_in_bytes: int
        :keyword name: Gets or sets Name of the disk.
        :paramtype name: str
        :keyword disk_type: Gets or sets Type of the disk.
        :paramtype disk_type: str
        :keyword lun: Gets or sets LUN of the disk.
        :paramtype lun: int
        :keyword path: Gets or sets Path of the disk.
        :paramtype path: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.generated_id = generated_id
        self.max_size_in_bytes = max_size_in_bytes
        self.name = name
        self.disk_type = disk_type
        self.lun = lun
        self.path = path


class ServerJob(ProxyResource):
    """A host resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.JobProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "JobProperties"},
    }

    def __init__(self, *, properties: Optional["_models.JobProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.JobProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ServerJobListResult(_serialization.Model):
    """The response of a ServerJob list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ServerJob items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ServerJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ServerJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ServerJob"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The ServerJob items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ServerJob]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ServerListResult(_serialization.Model):
    """The response of a Server list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Server items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.Server]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Server]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Server"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Server items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.Server]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ServerNetworkAdapter(_serialization.Model):
    """Second level object represented in responses as part of Machine REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar nic_id: Gets or sets the NIC Id.
    :vartype nic_id: str
    :ivar mac_address: Gets or sets Mac address of the NIC.
    :vartype mac_address: str
    :ivar ip_address_list: Gets IP addresses for the machine.
    :vartype ip_address_list: list[str]
    :ivar network_name: Gets or sets Network Name.
    :vartype network_name: str
    :ivar ip_address_type: Gets or sets Type of the IP address.
    :vartype ip_address_type: str
    """

    _validation = {
        "ip_address_list": {"readonly": True},
    }

    _attribute_map = {
        "nic_id": {"key": "nicId", "type": "str"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "ip_address_list": {"key": "ipAddressList", "type": "[str]"},
        "network_name": {"key": "networkName", "type": "str"},
        "ip_address_type": {"key": "ipAddressType", "type": "str"},
    }

    def __init__(
        self,
        *,
        nic_id: Optional[str] = None,
        mac_address: Optional[str] = None,
        network_name: Optional[str] = None,
        ip_address_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nic_id: Gets or sets the NIC Id.
        :paramtype nic_id: str
        :keyword mac_address: Gets or sets Mac address of the NIC.
        :paramtype mac_address: str
        :keyword network_name: Gets or sets Network Name.
        :paramtype network_name: str
        :keyword ip_address_type: Gets or sets Type of the IP address.
        :paramtype ip_address_type: str
        """
        super().__init__(**kwargs)
        self.nic_id = nic_id
        self.mac_address = mac_address
        self.ip_address_list = None
        self.network_name = network_name
        self.ip_address_type = ip_address_type


class ServerProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Server REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Gets the Display name of the machine.
                 For server entity hydrated
     FQDN is set as display name
                 as the server id and server name are
     same.
    :vartype display_name: str
    :ivar fqdn: Gets or sets the FQDN/IPAddress of the server.
    :vartype fqdn: str
    :ivar network_adapters: Gets or sets the network adapters of the server.
    :vartype network_adapters: list[~azure.mgmt.migrate.models.ServerNetworkAdapter]
    :ivar hydrated_fqdn: Gets or sets the FQDN of machine which can be changed.
    :vartype hydrated_fqdn: str
    :ivar disks: Gets or sets the disk details of server.
    :vartype disks: list[~azure.mgmt.migrate.models.ServerDisk]
    :ivar validation_required: Gets or sets the validation required for the machine.
    :vartype validation_required: str
    :ivar processor_info: Processor Info of the Server machine.
    :vartype processor_info: ~azure.mgmt.migrate.models.ProcessorInfo
    :ivar firmware: Gets or sets the firmware.
    :vartype firmware: str
    :ivar guest_os_details: Operating System Details extracted from the guest
                 bu executing
     script inside the guest VM.
    :vartype guest_os_details: ~azure.mgmt.migrate.models.GuestOsDetails
    :ivar number_of_applications: Number of applications installed in the guest VM.
    :vartype number_of_applications: int
    :ivar guest_details_discovery_timestamp: The last time at which the Guest Details was
     discovered
                 or the
     error while discovering guest details based discovery
                 of the
     machine.
    :vartype guest_details_discovery_timestamp: ~datetime.datetime
    :ivar is_guest_details_discovery_in_progress: Whether Refresh Fabric Layout Guest Details has
     been completed once.

       Portal will show discovery in progress, if this value is true.
    :vartype is_guest_details_discovery_in_progress: bool
    :ivar dependency_mapping: Gets or sets if dependency mapping feature is enabled or not
                 for
     the VM.
    :vartype dependency_mapping: str
    :ivar dependency_mapping_start_time: Gets or sets when dependency mapping collection is last
     started.
    :vartype dependency_mapping_start_time: ~datetime.datetime
    :ivar dependency_mapping_end_time: Gets or sets when dependency mapping collection was last
     disabled.
    :vartype dependency_mapping_end_time: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the machine.
    :vartype run_as_account_id: str
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar errors: Errors for machine.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar application_discovery: Gets the data related to application discovery.
    :vartype application_discovery: ~azure.mgmt.migrate.models.ApplicationDiscovery
    :ivar dependency_map_discovery: Gets the data related to dependency map discovery.
    :vartype dependency_map_discovery: ~azure.mgmt.migrate.models.DependencyMapDiscovery
    :ivar static_discovery: Gets the data related to static discovery.
    :vartype static_discovery: ~azure.mgmt.migrate.models.StaticDiscovery
    :ivar sql_discovery: Gets the data related to SQL discovery.
    :vartype sql_discovery: ~azure.mgmt.migrate.models.SqlDiscovery
    :ivar web_app_discovery: Gets the data related to Web application discovery.
    :vartype web_app_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar oracle_discovery: Gets the data related to Oracle discovery.
    :vartype oracle_discovery: ~azure.mgmt.migrate.models.OracleDiscovery
    :ivar spring_boot_discovery: Gets the data related to SpringBoot discovery.
    :vartype spring_boot_discovery: ~azure.mgmt.migrate.models.SpringBootDiscovery
    :ivar iis_discovery: Gets the data related to iis discovery.
    :vartype iis_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar tomcat_discovery: Gets the data related to tomcat discovery.
    :vartype tomcat_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar apps_and_roles: Apps And Roles of the Server.
    :vartype apps_and_roles: ~azure.mgmt.migrate.models.AppsAndRoles
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar is_deleted: Value indicating whether VM is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the marking machine creation.
    :vartype created_timestamp: str
    :ivar tags: Gets or sets tags on the Server machine.
    :vartype tags: dict[str, JSON]
    :ivar updated_timestamp: Gets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar provisioning_state: Provisioning state of the server resource. Known values are:
     "Created", "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "display_name": {"readonly": True},
        "processor_info": {"readonly": True},
        "guest_os_details": {"readonly": True},
        "number_of_applications": {"readonly": True},
        "guest_details_discovery_timestamp": {"readonly": True},
        "is_guest_details_discovery_in_progress": {"readonly": True},
        "dependency_mapping": {"readonly": True},
        "dependency_mapping_start_time": {"readonly": True},
        "dependency_mapping_end_time": {"readonly": True},
        "appliance_names": {"readonly": True},
        "errors": {"readonly": True},
        "application_discovery": {"readonly": True},
        "dependency_map_discovery": {"readonly": True},
        "static_discovery": {"readonly": True},
        "sql_discovery": {"readonly": True},
        "web_app_discovery": {"readonly": True},
        "oracle_discovery": {"readonly": True},
        "spring_boot_discovery": {"readonly": True},
        "iis_discovery": {"readonly": True},
        "tomcat_discovery": {"readonly": True},
        "apps_and_roles": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "network_adapters": {"key": "networkAdapters", "type": "[ServerNetworkAdapter]"},
        "hydrated_fqdn": {"key": "hydratedFqdn", "type": "str"},
        "disks": {"key": "disks", "type": "[ServerDisk]"},
        "validation_required": {"key": "validationRequired", "type": "str"},
        "processor_info": {"key": "processorInfo", "type": "ProcessorInfo"},
        "firmware": {"key": "firmware", "type": "str"},
        "guest_os_details": {"key": "guestOsDetails", "type": "GuestOsDetails"},
        "number_of_applications": {"key": "numberOfApplications", "type": "int"},
        "guest_details_discovery_timestamp": {"key": "guestDetailsDiscoveryTimestamp", "type": "iso-8601"},
        "is_guest_details_discovery_in_progress": {"key": "isGuestDetailsDiscoveryInProgress", "type": "bool"},
        "dependency_mapping": {"key": "dependencyMapping", "type": "str"},
        "dependency_mapping_start_time": {"key": "dependencyMappingStartTime", "type": "iso-8601"},
        "dependency_mapping_end_time": {"key": "dependencyMappingEndTime", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "application_discovery": {"key": "applicationDiscovery", "type": "ApplicationDiscovery"},
        "dependency_map_discovery": {"key": "dependencyMapDiscovery", "type": "DependencyMapDiscovery"},
        "static_discovery": {"key": "staticDiscovery", "type": "StaticDiscovery"},
        "sql_discovery": {"key": "sqlDiscovery", "type": "SqlDiscovery"},
        "web_app_discovery": {"key": "webAppDiscovery", "type": "WebAppDiscovery"},
        "oracle_discovery": {"key": "oracleDiscovery", "type": "OracleDiscovery"},
        "spring_boot_discovery": {"key": "springBootDiscovery", "type": "SpringBootDiscovery"},
        "iis_discovery": {"key": "iisDiscovery", "type": "WebAppDiscovery"},
        "tomcat_discovery": {"key": "tomcatDiscovery", "type": "WebAppDiscovery"},
        "apps_and_roles": {"key": "appsAndRoles", "type": "AppsAndRoles"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "tags": {"key": "tags", "type": "{object}"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        fqdn: Optional[str] = None,
        network_adapters: Optional[List["_models.ServerNetworkAdapter"]] = None,
        hydrated_fqdn: Optional[str] = None,
        disks: Optional[List["_models.ServerDisk"]] = None,
        validation_required: Optional[str] = None,
        firmware: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        tags: Optional[Dict[str, JSON]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword fqdn: Gets or sets the FQDN/IPAddress of the server.
        :paramtype fqdn: str
        :keyword network_adapters: Gets or sets the network adapters of the server.
        :paramtype network_adapters: list[~azure.mgmt.migrate.models.ServerNetworkAdapter]
        :keyword hydrated_fqdn: Gets or sets the FQDN of machine which can be changed.
        :paramtype hydrated_fqdn: str
        :keyword disks: Gets or sets the disk details of server.
        :paramtype disks: list[~azure.mgmt.migrate.models.ServerDisk]
        :keyword validation_required: Gets or sets the validation required for the machine.
        :paramtype validation_required: str
        :keyword firmware: Gets or sets the firmware.
        :paramtype firmware: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the machine.
        :paramtype run_as_account_id: str
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: Gets or sets tags on the Server machine.
        :paramtype tags: dict[str, JSON]
        """
        super().__init__(**kwargs)
        self.display_name = None
        self.fqdn = fqdn
        self.network_adapters = network_adapters
        self.hydrated_fqdn = hydrated_fqdn
        self.disks = disks
        self.validation_required = validation_required
        self.processor_info = None
        self.firmware = firmware
        self.guest_os_details = None
        self.number_of_applications = None
        self.guest_details_discovery_timestamp = None
        self.is_guest_details_discovery_in_progress = None
        self.dependency_mapping = None
        self.dependency_mapping_start_time = None
        self.dependency_mapping_end_time = None
        self.run_as_account_id = run_as_account_id
        self.appliance_names = None
        self.errors = None
        self.application_discovery = None
        self.dependency_map_discovery = None
        self.static_discovery = None
        self.sql_discovery = None
        self.web_app_discovery = None
        self.oracle_discovery = None
        self.spring_boot_discovery = None
        self.iis_discovery = None
        self.tomcat_discovery = None
        self.apps_and_roles = None
        self.product_support_status = product_support_status
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.is_deleted = None
        self.created_timestamp = None
        self.tags = tags
        self.updated_timestamp = None
        self.provisioning_state = None


class ServerRunAsAccount(ProxyResource):
    """A run as account resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "RunAsAccountProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RunAsAccountProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ServerRunAsAccountListResult(_serialization.Model):
    """The response of a ServerRunAsAccount list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ServerRunAsAccount items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ServerRunAsAccount]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ServerRunAsAccount]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ServerRunAsAccount"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ServerRunAsAccount items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ServerRunAsAccount]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ServerSiteResource(TrackedResource):
    """A ServerSiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SitesProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "SitesProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.SitesProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SitesProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class ServerSiteResourceListResult(_serialization.Model):
    """The response of a ServerSiteResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ServerSiteResource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ServerSiteResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ServerSiteResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ServerSiteResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ServerSiteResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ServerSiteResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ServerSiteResourceUpdate(_serialization.Model):
    """The type used for update operations of the ServerSiteResource.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The updatable properties of the ServerSiteResource.
    :vartype properties: ~azure.mgmt.migrate.models.ServerSiteResourceUpdateProperties
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "ServerSiteResourceUpdateProperties"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ServerSiteResourceUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The updatable properties of the ServerSiteResource.
        :paramtype properties: ~azure.mgmt.migrate.models.ServerSiteResourceUpdateProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties


class ServerSiteResourceUpdateProperties(_serialization.Model):
    """The updatable properties of the ServerSiteResource.

    :ivar service_principal_identity_details: Gets or sets the service principal identity details
     used by agent for
     communication
                 to the service.
    :vartype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
    :ivar agent_details: Gets or sets the on-premises agent details.
    :vartype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    """

    _attribute_map = {
        "service_principal_identity_details": {"key": "servicePrincipalIdentityDetails", "type": "SiteSpnProperties"},
        "agent_details": {"key": "agentDetails", "type": "SiteAgentProperties"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        service_principal_identity_details: Optional["_models.SiteSpnProperties"] = None,
        agent_details: Optional["_models.SiteAgentProperties"] = None,
        appliance_name: Optional[str] = None,
        discovery_solution_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_principal_identity_details: Gets or sets the service principal identity
         details used by agent for
         communication
                     to the service.
        :paramtype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
        :keyword agent_details: Gets or sets the on-premises agent details.
        :paramtype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.service_principal_identity_details = service_principal_identity_details
        self.agent_details = agent_details
        self.appliance_name = appliance_name
        self.discovery_solution_id = discovery_solution_id


class ServerSiteUsage(_serialization.Model):
    """Server site usage.

    :ivar run_as_account_count: Gets or sets the number of run as accounts in the site.
    :vartype run_as_account_count: int
    :ivar server_count: Gets or sets the number of servers part of the site.
    :vartype server_count: int
    """

    _attribute_map = {
        "run_as_account_count": {"key": "runAsAccountCount", "type": "int"},
        "server_count": {"key": "serverCount", "type": "int"},
    }

    def __init__(
        self, *, run_as_account_count: Optional[int] = None, server_count: Optional[int] = None, **kwargs: Any
    ) -> None:
        """
        :keyword run_as_account_count: Gets or sets the number of run as accounts in the site.
        :paramtype run_as_account_count: int
        :keyword server_count: Gets or sets the number of servers part of the site.
        :paramtype server_count: int
        """
        super().__init__(**kwargs)
        self.run_as_account_count = run_as_account_count
        self.server_count = server_count


class ServerSiteUsageResponse(_serialization.Model):
    """The properties of ServerSiteUsageResponse.

    All required parameters must be populated in order to send to server.

    :ivar run_as_accounts: Gets or sets the number of run as accounts in the site. Required.
    :vartype run_as_accounts: int
    :ivar server_count: Gets or sets the number of servers part of the site. Required.
    :vartype server_count: int
    """

    _validation = {
        "run_as_accounts": {"required": True},
        "server_count": {"required": True},
    }

    _attribute_map = {
        "run_as_accounts": {"key": "runAsAccounts", "type": "int"},
        "server_count": {"key": "serverCount", "type": "int"},
    }

    def __init__(self, *, run_as_accounts: int, server_count: int, **kwargs: Any) -> None:
        """
        :keyword run_as_accounts: Gets or sets the number of run as accounts in the site. Required.
        :paramtype run_as_accounts: int
        :keyword server_count: Gets or sets the number of servers part of the site. Required.
        :paramtype server_count: int
        """
        super().__init__(**kwargs)
        self.run_as_accounts = run_as_accounts
        self.server_count = server_count


class ServerSoftwareInventory(ProxyResource):
    """An software inventory resource belonging to a server resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.MachineSoftwareInventoryProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "MachineSoftwareInventoryProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.MachineSoftwareInventoryProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.MachineSoftwareInventoryProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ServerSoftwareInventoryListResult(_serialization.Model):
    """The response of a ServerSoftwareInventory list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ServerSoftwareInventory items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.ServerSoftwareInventory]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ServerSoftwareInventory]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ServerSoftwareInventory"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ServerSoftwareInventory items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.ServerSoftwareInventory]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ServerUpdate(_serialization.Model):
    """The type used for update operations of the Server.

    :ivar properties: The updatable properties of the Server.
    :vartype properties: ~azure.mgmt.migrate.models.ServerUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "ServerUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ServerUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The updatable properties of the Server.
        :paramtype properties: ~azure.mgmt.migrate.models.ServerUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ServerUpdateProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The updatable properties of the Server.

    :ivar fqdn: Gets or sets the FQDN/IPAddress of the server.
    :vartype fqdn: str
    :ivar network_adapters: Gets or sets the network adapters of the server.
    :vartype network_adapters: list[~azure.mgmt.migrate.models.ServerNetworkAdapter]
    :ivar hydrated_fqdn: Gets or sets the FQDN of machine which can be changed.
    :vartype hydrated_fqdn: str
    :ivar disks: Gets or sets the disk details of server.
    :vartype disks: list[~azure.mgmt.migrate.models.ServerDisk]
    :ivar validation_required: Gets or sets the validation required for the machine.
    :vartype validation_required: str
    :ivar firmware: Gets or sets the firmware.
    :vartype firmware: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the machine.
    :vartype run_as_account_id: str
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar tags: Gets or sets tags on the Server machine.
    :vartype tags: dict[str, JSON]
    """

    _attribute_map = {
        "fqdn": {"key": "fqdn", "type": "str"},
        "network_adapters": {"key": "networkAdapters", "type": "[ServerNetworkAdapter]"},
        "hydrated_fqdn": {"key": "hydratedFqdn", "type": "str"},
        "disks": {"key": "disks", "type": "[ServerDisk]"},
        "validation_required": {"key": "validationRequired", "type": "str"},
        "firmware": {"key": "firmware", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "tags": {"key": "tags", "type": "{object}"},
    }

    def __init__(
        self,
        *,
        fqdn: Optional[str] = None,
        network_adapters: Optional[List["_models.ServerNetworkAdapter"]] = None,
        hydrated_fqdn: Optional[str] = None,
        disks: Optional[List["_models.ServerDisk"]] = None,
        validation_required: Optional[str] = None,
        firmware: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        tags: Optional[Dict[str, JSON]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword fqdn: Gets or sets the FQDN/IPAddress of the server.
        :paramtype fqdn: str
        :keyword network_adapters: Gets or sets the network adapters of the server.
        :paramtype network_adapters: list[~azure.mgmt.migrate.models.ServerNetworkAdapter]
        :keyword hydrated_fqdn: Gets or sets the FQDN of machine which can be changed.
        :paramtype hydrated_fqdn: str
        :keyword disks: Gets or sets the disk details of server.
        :paramtype disks: list[~azure.mgmt.migrate.models.ServerDisk]
        :keyword validation_required: Gets or sets the validation required for the machine.
        :paramtype validation_required: str
        :keyword firmware: Gets or sets the firmware.
        :paramtype firmware: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the machine.
        :paramtype run_as_account_id: str
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: Gets or sets tags on the Server machine.
        :paramtype tags: dict[str, JSON]
        """
        super().__init__(**kwargs)
        self.fqdn = fqdn
        self.network_adapters = network_adapters
        self.hydrated_fqdn = hydrated_fqdn
        self.disks = disks
        self.validation_required = validation_required
        self.firmware = firmware
        self.run_as_account_id = run_as_account_id
        self.product_support_status = product_support_status
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.tags = tags


class SharePointServer(_serialization.Model):
    """SharePointServer in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar product_name: Gets or sets ProductName of the SharePointServer.
    :vartype product_name: str
    :ivar is_enterprise: Gets or sets a value indicating whether the SharePointServer is
     Enterprise.
    :vartype is_enterprise: bool
    :ivar status: Gets or sets Status of the SharePointServer.
    :vartype status: str
    :ivar version: Gets or sets Version of the SharePointServer.
    :vartype version: str
    """

    _validation = {
        "product_name": {"readonly": True},
        "is_enterprise": {"readonly": True},
        "status": {"readonly": True},
        "version": {"readonly": True},
    }

    _attribute_map = {
        "product_name": {"key": "productName", "type": "str"},
        "is_enterprise": {"key": "isEnterprise", "type": "bool"},
        "status": {"key": "status", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.product_name = None
        self.is_enterprise = None
        self.status = None
        self.version = None


class SiteAgentProperties(_serialization.Model):
    """Class for site agent properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID of the agent.
    :vartype id: str
    :ivar version: Gets the version of the agent.
    :vartype version: str
    :ivar last_heart_beat_utc: Gets the last heartbeat time of the agent in UTC.
    :vartype last_heart_beat_utc: ~datetime.datetime
    :ivar key_vault_uri: Gets or sets the key vault URI.
    :vartype key_vault_uri: str
    :ivar key_vault_id: Gets or sets the key vault ARM Id.
    :vartype key_vault_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "version": {"readonly": True},
        "last_heart_beat_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "last_heart_beat_utc": {"key": "lastHeartBeatUtc", "type": "iso-8601"},
        "key_vault_uri": {"key": "keyVaultUri", "type": "str"},
        "key_vault_id": {"key": "keyVaultId", "type": "str"},
    }

    def __init__(
        self, *, key_vault_uri: Optional[str] = None, key_vault_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword key_vault_uri: Gets or sets the key vault URI.
        :paramtype key_vault_uri: str
        :keyword key_vault_id: Gets or sets the key vault ARM Id.
        :paramtype key_vault_id: str
        """
        super().__init__(**kwargs)
        self.id = None
        self.version = None
        self.last_heart_beat_utc = None
        self.key_vault_uri = key_vault_uri
        self.key_vault_id = key_vault_id


class SiteApplianceProperties(_serialization.Model):
    """Class for site appliance properties.

    :ivar service_principal_identity_details: Gets or sets the service principal identity details
     used by agent for  communication              to the service.
    :vartype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
    :ivar agent_details: Gets or sets the on-premises agent details.
    :vartype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    """

    _attribute_map = {
        "service_principal_identity_details": {"key": "servicePrincipalIdentityDetails", "type": "SiteSpnProperties"},
        "agent_details": {"key": "agentDetails", "type": "SiteAgentProperties"},
        "appliance_name": {"key": "applianceName", "type": "str"},
    }

    def __init__(
        self,
        *,
        service_principal_identity_details: Optional["_models.SiteSpnProperties"] = None,
        agent_details: Optional["_models.SiteAgentProperties"] = None,
        appliance_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_principal_identity_details: Gets or sets the service principal identity
         details used by agent for  communication              to the service.
        :paramtype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
        :keyword agent_details: Gets or sets the on-premises agent details.
        :paramtype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        """
        super().__init__(**kwargs)
        self.service_principal_identity_details = service_principal_identity_details
        self.agent_details = agent_details
        self.appliance_name = appliance_name


class SiteErrorSummary(_serialization.Model):
    """Site error summary.

    All required parameters must be populated in order to send to server.

    :ivar appliance_name: Appliance Name. Required.
    :vartype appliance_name: str
    :ivar discovery_scope_error_summaries: Gets the error message. Required.
    :vartype discovery_scope_error_summaries: ~azure.mgmt.migrate.models.DiscoveryScopeErrorSummary
    :ivar next_link: The link to fetch more models.
    :vartype next_link: str
    """

    _validation = {
        "appliance_name": {"required": True},
        "discovery_scope_error_summaries": {"required": True},
    }

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
        "discovery_scope_error_summaries": {
            "key": "discoveryScopeErrorSummaries",
            "type": "DiscoveryScopeErrorSummary",
        },
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        appliance_name: str,
        discovery_scope_error_summaries: "_models.DiscoveryScopeErrorSummary",
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword appliance_name: Appliance Name. Required.
        :paramtype appliance_name: str
        :keyword discovery_scope_error_summaries: Gets the error message. Required.
        :paramtype discovery_scope_error_summaries:
         ~azure.mgmt.migrate.models.DiscoveryScopeErrorSummary
        :keyword next_link: The link to fetch more models.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.appliance_name = appliance_name
        self.discovery_scope_error_summaries = discovery_scope_error_summaries
        self.next_link = next_link


class SiteHealthSummary(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The properties of ServerSiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar appliance_name: Gets the appliance name.
    :vartype appliance_name: str
    :ivar error_message: Gets the error message.
    :vartype error_message: str
    :ivar summary_message: Gets the summary message.
    :vartype summary_message: str
    :ivar error_id: Gets the error Id.
    :vartype error_id: int
    :ivar error_code: Gets the error code.
    :vartype error_code: str
    :ivar affected_objects_count: Gets or sets the count of affected objects.
    :vartype affected_objects_count: int
    :ivar hit_count: Gets or sets the hit count of the error.
    :vartype hit_count: int
    :ivar severity: Gets the severity of error.
    :vartype severity: str
    :ivar remediation_guidance: Gets the remediation guidance.
    :vartype remediation_guidance: str
    :ivar affected_resource_type: Gets the affected resource type.
    :vartype affected_resource_type: str
    :ivar affected_resources: Gets or sets the affected resources.
    :vartype affected_resources: list[str]
    :ivar fabric_layout_update_sources: Gets or sets sources of the exception.
    :vartype fabric_layout_update_sources: list[str or
     ~azure.mgmt.migrate.models.SiteHealthSummaryFabricLayoutUpdateSourcesItem]
    """

    _validation = {
        "appliance_name": {"readonly": True},
        "error_message": {"readonly": True},
        "summary_message": {"readonly": True},
        "error_id": {"readonly": True},
        "error_code": {"readonly": True},
        "severity": {"readonly": True},
        "remediation_guidance": {"readonly": True},
        "affected_resource_type": {"readonly": True},
    }

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "summary_message": {"key": "summaryMessage", "type": "str"},
        "error_id": {"key": "errorId", "type": "int"},
        "error_code": {"key": "errorCode", "type": "str"},
        "affected_objects_count": {"key": "affectedObjectsCount", "type": "int"},
        "hit_count": {"key": "hitCount", "type": "int"},
        "severity": {"key": "severity", "type": "str"},
        "remediation_guidance": {"key": "remediationGuidance", "type": "str"},
        "affected_resource_type": {"key": "affectedResourceType", "type": "str"},
        "affected_resources": {"key": "affectedResources", "type": "[str]"},
        "fabric_layout_update_sources": {"key": "fabricLayoutUpdateSources", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        affected_objects_count: Optional[int] = None,
        hit_count: Optional[int] = None,
        affected_resources: Optional[List[str]] = None,
        fabric_layout_update_sources: Optional[
            List[Union[str, "_models.SiteHealthSummaryFabricLayoutUpdateSourcesItem"]]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword affected_objects_count: Gets or sets the count of affected objects.
        :paramtype affected_objects_count: int
        :keyword hit_count: Gets or sets the hit count of the error.
        :paramtype hit_count: int
        :keyword affected_resources: Gets or sets the affected resources.
        :paramtype affected_resources: list[str]
        :keyword fabric_layout_update_sources: Gets or sets sources of the exception.
        :paramtype fabric_layout_update_sources: list[str or
         ~azure.mgmt.migrate.models.SiteHealthSummaryFabricLayoutUpdateSourcesItem]
        """
        super().__init__(**kwargs)
        self.appliance_name = None
        self.error_message = None
        self.summary_message = None
        self.error_id = None
        self.error_code = None
        self.affected_objects_count = affected_objects_count
        self.hit_count = hit_count
        self.severity = None
        self.remediation_guidance = None
        self.affected_resource_type = None
        self.affected_resources = affected_resources
        self.fabric_layout_update_sources = fabric_layout_update_sources


class SiteHealthSummaryCollection(_serialization.Model):
    """Collection of SiteHealthSummary.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Gets the list of SiteHealthSummary. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SiteHealthSummary]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SiteHealthSummary]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.SiteHealthSummary"], **kwargs: Any) -> None:
        """
        :keyword value: Gets the list of SiteHealthSummary. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SiteHealthSummary]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class SiteProperties(_serialization.Model):
    """The properties of VMwareSiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar master_site_id: Gets the Master Site this site is linked to.
    :vartype master_site_id: str
    :ivar service_principal_identity_details: Gets or sets the service principal identity details
     used by agent for
     communication
                 to the service.
    :vartype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
    :ivar agent_details: Gets or sets the on-premises agent details.
    :vartype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    :ivar service_endpoint: Gets the service endpoint.
    :vartype service_endpoint: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "master_site_id": {"readonly": True},
        "service_endpoint": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "master_site_id": {"key": "masterSiteId", "type": "str"},
        "service_principal_identity_details": {"key": "servicePrincipalIdentityDetails", "type": "SiteSpnProperties"},
        "agent_details": {"key": "agentDetails", "type": "SiteAgentProperties"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        service_principal_identity_details: Optional["_models.SiteSpnProperties"] = None,
        agent_details: Optional["_models.SiteAgentProperties"] = None,
        appliance_name: Optional[str] = None,
        discovery_solution_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_principal_identity_details: Gets or sets the service principal identity
         details used by agent for
         communication
                     to the service.
        :paramtype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
        :keyword agent_details: Gets or sets the on-premises agent details.
        :paramtype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.master_site_id = None
        self.service_principal_identity_details = service_principal_identity_details
        self.agent_details = agent_details
        self.appliance_name = appliance_name
        self.discovery_solution_id = discovery_solution_id
        self.service_endpoint = None
        self.provisioning_state = None


class SiteSpnProperties(_serialization.Model):
    """Class for site properties.

    :ivar tenant_id: Gets or sets the tenant Id for the service principal with which the
     on-premise
                 management/data plane components would communicate with
     our Azure services.
    :vartype tenant_id: str
    :ivar application_id: Gets or sets the application/client Id for the service principal with
     which
     the
                 on-premise management/data plane components would communicate
     with our Azure
                 services.
    :vartype application_id: str
    :ivar object_id: Gets or sets the object Id of the service principal with which the on-premise

     .. code-block::

               management/data plane components would communicate with our Azure

     services.
    :vartype object_id: str
    :ivar audience: Gets or sets the intended audience for the service principal.
    :vartype audience: str
    :ivar aad_authority: Gets or sets the AAD Authority URL which was used to request the token for
     the
                 service principal.
    :vartype aad_authority: str
    :ivar raw_cert_data: Gets or sets the raw certificate data for building certificate expiry
     flows.
    :vartype raw_cert_data: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "application_id": {"key": "applicationId", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "audience": {"key": "audience", "type": "str"},
        "aad_authority": {"key": "aadAuthority", "type": "str"},
        "raw_cert_data": {"key": "rawCertData", "type": "str"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        application_id: Optional[str] = None,
        object_id: Optional[str] = None,
        audience: Optional[str] = None,
        aad_authority: Optional[str] = None,
        raw_cert_data: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: Gets or sets the tenant Id for the service principal with which the
         on-premise
                     management/data plane components would communicate with
         our Azure services.
        :paramtype tenant_id: str
        :keyword application_id: Gets or sets the application/client Id for the service principal with
         which
         the
                     on-premise management/data plane components would communicate
         with our Azure
                     services.
        :paramtype application_id: str
        :keyword object_id: Gets or sets the object Id of the service principal with which the
         on-premise

         .. code-block::

                   management/data plane components would communicate with our Azure

         services.
        :paramtype object_id: str
        :keyword audience: Gets or sets the intended audience for the service principal.
        :paramtype audience: str
        :keyword aad_authority: Gets or sets the AAD Authority URL which was used to request the token
         for
         the
                     service principal.
        :paramtype aad_authority: str
        :keyword raw_cert_data: Gets or sets the raw certificate data for building certificate expiry
         flows.
        :paramtype raw_cert_data: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.application_id = application_id
        self.object_id = object_id
        self.audience = audience
        self.aad_authority = aad_authority
        self.raw_cert_data = raw_cert_data


class SitesProperties(_serialization.Model):
    """The properties of SiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar master_site_id: Gets the Master Site this site is linked to.
    :vartype master_site_id: str
    :ivar service_principal_identity_details: Gets or sets the service principal identity details
     used by agent for
     communication
                 to the service.
    :vartype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
    :ivar agent_details: Gets or sets the on-premises agent details.
    :vartype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    :ivar service_endpoint: Gets the service endpoint.
    :vartype service_endpoint: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "master_site_id": {"readonly": True},
        "service_endpoint": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "master_site_id": {"key": "masterSiteId", "type": "str"},
        "service_principal_identity_details": {"key": "servicePrincipalIdentityDetails", "type": "SiteSpnProperties"},
        "agent_details": {"key": "agentDetails", "type": "SiteAgentProperties"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        service_principal_identity_details: Optional["_models.SiteSpnProperties"] = None,
        agent_details: Optional["_models.SiteAgentProperties"] = None,
        appliance_name: Optional[str] = None,
        discovery_solution_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_principal_identity_details: Gets or sets the service principal identity
         details used by agent for
         communication
                     to the service.
        :paramtype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
        :keyword agent_details: Gets or sets the on-premises agent details.
        :paramtype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.master_site_id = None
        self.service_principal_identity_details = service_principal_identity_details
        self.agent_details = agent_details
        self.appliance_name = appliance_name
        self.discovery_solution_id = discovery_solution_id
        self.service_endpoint = None
        self.provisioning_state = None


class SpringBootDiscovery(_serialization.Model):
    """Data related to a machine's spring boot discovery.

    :ivar total_instance_count: Gets or sets number of successfully discovered instances.
    :vartype total_instance_count: int
    :ivar total_application_count: Gets or sets number of successfully discovered applications.
    :vartype total_application_count: int
    :ivar shallow_discovery_status: Gets or sets status of partner shallow discovery. Known values
     are: "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype shallow_discovery_status: str or ~azure.mgmt.migrate.models.ShallowDiscoveryStatus
    :ivar discovery_scope_status: Gets or sets status of partner discovery. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or ~azure.mgmt.migrate.models.DiscoveryScopeStatus
    """

    _attribute_map = {
        "total_instance_count": {"key": "totalInstanceCount", "type": "int"},
        "total_application_count": {"key": "totalApplicationCount", "type": "int"},
        "shallow_discovery_status": {"key": "shallowDiscoveryStatus", "type": "str"},
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_instance_count: Optional[int] = None,
        total_application_count: Optional[int] = None,
        shallow_discovery_status: Optional[Union[str, "_models.ShallowDiscoveryStatus"]] = None,
        discovery_scope_status: Optional[Union[str, "_models.DiscoveryScopeStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_instance_count: Gets or sets number of successfully discovered instances.
        :paramtype total_instance_count: int
        :keyword total_application_count: Gets or sets number of successfully discovered applications.
        :paramtype total_application_count: int
        :keyword shallow_discovery_status: Gets or sets status of partner shallow discovery. Known
         values are: "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
         "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
         "DiscoverySucceeded".
        :paramtype shallow_discovery_status: str or ~azure.mgmt.migrate.models.ShallowDiscoveryStatus
        :keyword discovery_scope_status: Gets or sets status of partner discovery. Known values are:
         "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
         "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
         "DiscoverySucceeded".
        :paramtype discovery_scope_status: str or ~azure.mgmt.migrate.models.DiscoveryScopeStatus
        """
        super().__init__(**kwargs)
        self.total_instance_count = total_instance_count
        self.total_application_count = total_application_count
        self.shallow_discovery_status = shallow_discovery_status
        self.discovery_scope_status = discovery_scope_status


class SqlAvailabilityGroup(ProxyResource):
    """Class representing the web model of SQL Availability Group.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SqlAvailabilityGroupProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SqlAvailabilityGroupProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SqlAvailabilityGroupProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlAvailabilityGroupProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlAvailabilityGroupListResult(_serialization.Model):
    """The response of a SqlAvailabilityGroup list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlAvailabilityGroup items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlAvailabilityGroup]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlAvailabilityGroup]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.SqlAvailabilityGroup"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SqlAvailabilityGroup items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlAvailabilityGroup]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlAvailabilityGroupProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for SQL Server availability group properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar availability_group_name: Gets or sets the SQL Availability Group Name.
    :vartype availability_group_name: str
    :ivar availability_group_type: Gets or sets the type of availability group.
     Currently there are two types of AGs Traditional and Distributed. Known values are: "Unknown",
     "Traditional", and "Distributed".
    :vartype availability_group_type: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupPropertiesAvailabilityGroupType
    :ivar is_multi_sub_net: Gets or sets a value indicating whether AG is multi subnet or not.
    :vartype is_multi_sub_net: bool
    :ivar cluster_name: Gets or sets the Cluster name where AG is hosted.
    :vartype cluster_name: str
    :ivar availability_replicas: Gets the list of availability replica properties which together
     forms this availability group.
    :vartype availability_replicas:
     list[~azure.mgmt.migrate.models.SqlAvailabilityReplicaProperties]
    :ivar parent_replica_overview_list: Gets the parent availability replica overview if any.
                 This would be
     set with details of parent AG and AR for cases where this availability group is
     a part of a distributed AG.
                 Currently, we do not populate this
     since discovery and linking of DAG(Distributed Availability Group) is not
     implemented.
    :vartype parent_replica_overview_list:
     list[~azure.mgmt.migrate.models.SqlAvailabilityReplicaOverview]
    :ivar is_part_of_distributed_availability_group: Gets or sets a value indicating whether this
     Availability group is part of a
     distributed AG.
    :vartype is_part_of_distributed_availability_group: bool
    :ivar is_deleted: Gets or sets a value indicating whether the entity is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets or sets the marking machine creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "availability_replicas": {"readonly": True},
        "parent_replica_overview_list": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "availability_group_name": {"key": "availabilityGroupName", "type": "str"},
        "availability_group_type": {"key": "availabilityGroupType", "type": "str"},
        "is_multi_sub_net": {"key": "isMultiSubNet", "type": "bool"},
        "cluster_name": {"key": "clusterName", "type": "str"},
        "availability_replicas": {"key": "availabilityReplicas", "type": "[SqlAvailabilityReplicaProperties]"},
        "parent_replica_overview_list": {
            "key": "parentReplicaOverviewList",
            "type": "[SqlAvailabilityReplicaOverview]",
        },
        "is_part_of_distributed_availability_group": {"key": "isPartOfDistributedAvailabilityGroup", "type": "bool"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        availability_group_name: Optional[str] = None,
        availability_group_type: Optional[
            Union[str, "_models.SqlAvailabilityGroupPropertiesAvailabilityGroupType"]
        ] = None,
        is_multi_sub_net: Optional[bool] = None,
        cluster_name: Optional[str] = None,
        is_part_of_distributed_availability_group: Optional[bool] = None,
        is_deleted: Optional[bool] = None,
        created_timestamp: Optional[str] = None,
        updated_timestamp: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword availability_group_name: Gets or sets the SQL Availability Group Name.
        :paramtype availability_group_name: str
        :keyword availability_group_type: Gets or sets the type of availability group.
         Currently there are two types of AGs Traditional and Distributed. Known values are: "Unknown",
         "Traditional", and "Distributed".
        :paramtype availability_group_type: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupPropertiesAvailabilityGroupType
        :keyword is_multi_sub_net: Gets or sets a value indicating whether AG is multi subnet or not.
        :paramtype is_multi_sub_net: bool
        :keyword cluster_name: Gets or sets the Cluster name where AG is hosted.
        :paramtype cluster_name: str
        :keyword is_part_of_distributed_availability_group: Gets or sets a value indicating whether
         this Availability group is part of a
         distributed AG.
        :paramtype is_part_of_distributed_availability_group: bool
        :keyword is_deleted: Gets or sets a value indicating whether the entity is deleted.
        :paramtype is_deleted: bool
        :keyword created_timestamp: Gets or sets the marking machine creation.
        :paramtype created_timestamp: str
        :keyword updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
        :paramtype updated_timestamp: str
        """
        super().__init__(**kwargs)
        self.availability_group_name = availability_group_name
        self.availability_group_type = availability_group_type
        self.is_multi_sub_net = is_multi_sub_net
        self.cluster_name = cluster_name
        self.availability_replicas = None
        self.parent_replica_overview_list = None
        self.is_part_of_distributed_availability_group = is_part_of_distributed_availability_group
        self.is_deleted = is_deleted
        self.created_timestamp = created_timestamp
        self.updated_timestamp = updated_timestamp
        self.provisioning_state = None


class SqlAvailabilityGroupReplicaInfo(_serialization.Model):
    """Class which represents the SQL availability replica properties of type AG.

    :ivar cluster_name: Gets or sets the name of the cluster on which this replica is hosted.
    :vartype cluster_name: str
    :ivar availability_group_name: Gets or sets the name of the availability replica.
    :vartype availability_group_name: str
    :ivar availability_group_arm_id: Gets or sets the AG ARM ID which are part of this Replica.
    :vartype availability_group_arm_id: str
    """

    _attribute_map = {
        "cluster_name": {"key": "clusterName", "type": "str"},
        "availability_group_name": {"key": "availabilityGroupName", "type": "str"},
        "availability_group_arm_id": {"key": "availabilityGroupArmId", "type": "str"},
    }

    def __init__(
        self,
        *,
        cluster_name: Optional[str] = None,
        availability_group_name: Optional[str] = None,
        availability_group_arm_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword cluster_name: Gets or sets the name of the cluster on which this replica is hosted.
        :paramtype cluster_name: str
        :keyword availability_group_name: Gets or sets the name of the availability replica.
        :paramtype availability_group_name: str
        :keyword availability_group_arm_id: Gets or sets the AG ARM ID which are part of this Replica.
        :paramtype availability_group_arm_id: str
        """
        super().__init__(**kwargs)
        self.cluster_name = cluster_name
        self.availability_group_name = availability_group_name
        self.availability_group_arm_id = availability_group_arm_id


class SqlAvailabilityReplicaOverview(_serialization.Model):
    """Web model for SQL replica overview.

    :ivar replica_state: Gets or sets the state of the availability replica. Known values are:
     "Unknown", "Primary", and "Secondary".
    :vartype replica_state: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityReplicaOverviewReplicaState
    :ivar availability_replica_id: Gets or sets the SQL Availability Replica Id within the
     Availability Group this
     database is a part of.
    :vartype availability_replica_id: str
    :ivar availability_group_arm_id: Gets or sets the Availability Group Id in which this database
     participates if
     any. It would be set if the database has
     {Microsoft.Azure.FDS.CosmosDB.SqlDatabaseEntity.IsDatabaseHighlyAvailable} has
     a value "true".
    :vartype availability_group_arm_id: str
    :ivar availability_group_name: Gets or sets the SQL Availability group name.
    :vartype availability_group_name: str
    """

    _attribute_map = {
        "replica_state": {"key": "replicaState", "type": "str"},
        "availability_replica_id": {"key": "availabilityReplicaId", "type": "str"},
        "availability_group_arm_id": {"key": "availabilityGroupArmId", "type": "str"},
        "availability_group_name": {"key": "availabilityGroupName", "type": "str"},
    }

    def __init__(
        self,
        *,
        replica_state: Optional[Union[str, "_models.SqlAvailabilityReplicaOverviewReplicaState"]] = None,
        availability_replica_id: Optional[str] = None,
        availability_group_arm_id: Optional[str] = None,
        availability_group_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword replica_state: Gets or sets the state of the availability replica. Known values are:
         "Unknown", "Primary", and "Secondary".
        :paramtype replica_state: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityReplicaOverviewReplicaState
        :keyword availability_replica_id: Gets or sets the SQL Availability Replica Id within the
         Availability Group this
         database is a part of.
        :paramtype availability_replica_id: str
        :keyword availability_group_arm_id: Gets or sets the Availability Group Id in which this
         database participates if
         any. It would be set if the database has
         {Microsoft.Azure.FDS.CosmosDB.SqlDatabaseEntity.IsDatabaseHighlyAvailable} has
         a value "true".
        :paramtype availability_group_arm_id: str
        :keyword availability_group_name: Gets or sets the SQL Availability group name.
        :paramtype availability_group_name: str
        """
        super().__init__(**kwargs)
        self.replica_state = replica_state
        self.availability_replica_id = availability_replica_id
        self.availability_group_arm_id = availability_group_arm_id
        self.availability_group_name = availability_group_name


class SqlAvailabilityReplicaProperties(_serialization.Model):
    """Class for SQL Server availability replica properties.

    :ivar availability_replica_name: Gets or sets the SQL Availability Replica Name.
    :vartype availability_replica_name: str
    :ivar availability_replica_id: Gets or sets the SQL Availability Replica Id.
    :vartype availability_replica_id: str
    :ivar replica_type: Gets or sets the replica type of the availability group. Known values are:
     "Unknown", "DatabaseReplica", and "AvailabilityGroupReplica".
    :vartype replica_type: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType
    :ivar replica_state: Gets or sets the state of the availability replica. Known values are:
     "Unknown", "Primary", and "Secondary".
    :vartype replica_state: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState
    :ivar replica_sync_status: Gets or sets the synchronization status of the replica. Known values
     are: "Unknown", "Synchronized", and "Unsynchronized".
    :vartype replica_sync_status: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus
    :ivar replica_commit_mode: Gets or sets the commit mode of the replica. Known values are:
     "Unknown", "Synchronous", and "Asynchronous".
    :vartype replica_commit_mode: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode
    :ivar replica_read_mode: Gets or sets the read mode of the replica. Known values are:
     "Unknown", "None", "ReadOnly", and "ReadWrite".
    :vartype replica_read_mode: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode
    :ivar replica_seed_mode: Gets or sets the seed mode of the replica. Known values are:
     "Unknown", "Manual", and "Automatic".
    :vartype replica_seed_mode: str or
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode
    :ivar sql_database_replica_info: Gets or sets the Availability Replica object if Replica is of
     type database.
     This is null in case Replica is
                 of type AG. This is to be populated
     in case of normal AG.
    :vartype sql_database_replica_info: ~azure.mgmt.migrate.models.SqlDatabaseReplicaInfo
    :ivar sql_availability_group_replica_info: Gets or sets the Availability Replica object if
     Replica is of type AG. This is
     null in case Replica is
                 of type database. This is to be populated
     in case AG is of type DAG.
    :vartype sql_availability_group_replica_info:
     ~azure.mgmt.migrate.models.SqlAvailabilityGroupReplicaInfo
    """

    _attribute_map = {
        "availability_replica_name": {"key": "availabilityReplicaName", "type": "str"},
        "availability_replica_id": {"key": "availabilityReplicaId", "type": "str"},
        "replica_type": {"key": "replicaType", "type": "str"},
        "replica_state": {"key": "replicaState", "type": "str"},
        "replica_sync_status": {"key": "replicaSyncStatus", "type": "str"},
        "replica_commit_mode": {"key": "replicaCommitMode", "type": "str"},
        "replica_read_mode": {"key": "replicaReadMode", "type": "str"},
        "replica_seed_mode": {"key": "replicaSeedMode", "type": "str"},
        "sql_database_replica_info": {"key": "sqlDatabaseReplicaInfo", "type": "SqlDatabaseReplicaInfo"},
        "sql_availability_group_replica_info": {
            "key": "sqlAvailabilityGroupReplicaInfo",
            "type": "SqlAvailabilityGroupReplicaInfo",
        },
    }

    def __init__(
        self,
        *,
        availability_replica_name: Optional[str] = None,
        availability_replica_id: Optional[str] = None,
        replica_type: Optional[
            Union[str, "_models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType"]
        ] = None,
        replica_state: Optional[
            Union[str, "_models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState"]
        ] = None,
        replica_sync_status: Optional[
            Union[str, "_models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus"]
        ] = None,
        replica_commit_mode: Optional[
            Union[str, "_models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode"]
        ] = None,
        replica_read_mode: Optional[
            Union[str, "_models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode"]
        ] = None,
        replica_seed_mode: Optional[
            Union[str, "_models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode"]
        ] = None,
        sql_database_replica_info: Optional["_models.SqlDatabaseReplicaInfo"] = None,
        sql_availability_group_replica_info: Optional["_models.SqlAvailabilityGroupReplicaInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword availability_replica_name: Gets or sets the SQL Availability Replica Name.
        :paramtype availability_replica_name: str
        :keyword availability_replica_id: Gets or sets the SQL Availability Replica Id.
        :paramtype availability_replica_id: str
        :keyword replica_type: Gets or sets the replica type of the availability group. Known values
         are: "Unknown", "DatabaseReplica", and "AvailabilityGroupReplica".
        :paramtype replica_type: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType
        :keyword replica_state: Gets or sets the state of the availability replica. Known values are:
         "Unknown", "Primary", and "Secondary".
        :paramtype replica_state: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState
        :keyword replica_sync_status: Gets or sets the synchronization status of the replica. Known
         values are: "Unknown", "Synchronized", and "Unsynchronized".
        :paramtype replica_sync_status: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus
        :keyword replica_commit_mode: Gets or sets the commit mode of the replica. Known values are:
         "Unknown", "Synchronous", and "Asynchronous".
        :paramtype replica_commit_mode: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode
        :keyword replica_read_mode: Gets or sets the read mode of the replica. Known values are:
         "Unknown", "None", "ReadOnly", and "ReadWrite".
        :paramtype replica_read_mode: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode
        :keyword replica_seed_mode: Gets or sets the seed mode of the replica. Known values are:
         "Unknown", "Manual", and "Automatic".
        :paramtype replica_seed_mode: str or
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode
        :keyword sql_database_replica_info: Gets or sets the Availability Replica object if Replica is
         of type database.
         This is null in case Replica is
                     of type AG. This is to be populated
         in case of normal AG.
        :paramtype sql_database_replica_info: ~azure.mgmt.migrate.models.SqlDatabaseReplicaInfo
        :keyword sql_availability_group_replica_info: Gets or sets the Availability Replica object if
         Replica is of type AG. This is
         null in case Replica is
                     of type database. This is to be populated
         in case AG is of type DAG.
        :paramtype sql_availability_group_replica_info:
         ~azure.mgmt.migrate.models.SqlAvailabilityGroupReplicaInfo
        """
        super().__init__(**kwargs)
        self.availability_replica_name = availability_replica_name
        self.availability_replica_id = availability_replica_id
        self.replica_type = replica_type
        self.replica_state = replica_state
        self.replica_sync_status = replica_sync_status
        self.replica_commit_mode = replica_commit_mode
        self.replica_read_mode = replica_read_mode
        self.replica_seed_mode = replica_seed_mode
        self.sql_database_replica_info = sql_database_replica_info
        self.sql_availability_group_replica_info = sql_availability_group_replica_info


class SqlDatabasePropertiesV2(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for SQL Server database properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar parent_replica_overview: Gets or sets the Replica overview.
    :vartype parent_replica_overview: ~azure.mgmt.migrate.models.SqlAvailabilityReplicaOverview
    :ivar is_database_highly_available: Gets or sets a value indicating whether this database is a
     part of an HA setup.
    :vartype is_database_highly_available: bool
    :ivar file_metadata_list: Gets the file metadata list.
    :vartype file_metadata_list: list[~azure.mgmt.migrate.models.FileMetaData]
    :ivar hostname: Gets or sets the hostname.
    :vartype hostname: str
    :ivar sql_server_name: Gets or sets the SQL Server Id in which the database resides.
    :vartype sql_server_name: str
    :ivar status: Gets or sets the status.
    :vartype status: str
    :ivar size_mb: Gets or sets the size in Mb.
    :vartype size_mb: float
    :ivar database_name: Gets or sets the SQL database name.
    :vartype database_name: str
    :ivar sql_server_arm_id: Gets or sets the SQL Server ARM Id in which the database resides.
    :vartype sql_server_arm_id: str
    :ivar compatibility_level: Gets or sets the database compatibility level.
    :vartype compatibility_level: str
    :ivar is_deleted: Gets or sets a value indicating whether the entity is deleted.
    :vartype is_deleted: bool
    :ivar errors: Gets the errors.
    :vartype errors: list[~azure.mgmt.migrate.models.Errors]
    :ivar created_timestamp: Gets or sets the marking machine creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "file_metadata_list": {"readonly": True},
        "errors": {"readonly": True},
    }

    _attribute_map = {
        "parent_replica_overview": {"key": "parentReplicaOverview", "type": "SqlAvailabilityReplicaOverview"},
        "is_database_highly_available": {"key": "isDatabaseHighlyAvailable", "type": "bool"},
        "file_metadata_list": {"key": "fileMetadataList", "type": "[FileMetaData]"},
        "hostname": {"key": "hostname", "type": "str"},
        "sql_server_name": {"key": "sqlServerName", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "size_mb": {"key": "sizeMb", "type": "float"},
        "database_name": {"key": "databaseName", "type": "str"},
        "sql_server_arm_id": {"key": "sqlServerArmId", "type": "str"},
        "compatibility_level": {"key": "compatibilityLevel", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "errors": {"key": "errors", "type": "[Errors]"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        parent_replica_overview: Optional["_models.SqlAvailabilityReplicaOverview"] = None,
        is_database_highly_available: Optional[bool] = None,
        hostname: Optional[str] = None,
        sql_server_name: Optional[str] = None,
        status: Optional[str] = None,
        size_mb: Optional[float] = None,
        database_name: Optional[str] = None,
        sql_server_arm_id: Optional[str] = None,
        compatibility_level: Optional[str] = None,
        is_deleted: Optional[bool] = None,
        created_timestamp: Optional[str] = None,
        updated_timestamp: Optional[str] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword parent_replica_overview: Gets or sets the Replica overview.
        :paramtype parent_replica_overview: ~azure.mgmt.migrate.models.SqlAvailabilityReplicaOverview
        :keyword is_database_highly_available: Gets or sets a value indicating whether this database is
         a part of an HA setup.
        :paramtype is_database_highly_available: bool
        :keyword hostname: Gets or sets the hostname.
        :paramtype hostname: str
        :keyword sql_server_name: Gets or sets the SQL Server Id in which the database resides.
        :paramtype sql_server_name: str
        :keyword status: Gets or sets the status.
        :paramtype status: str
        :keyword size_mb: Gets or sets the size in Mb.
        :paramtype size_mb: float
        :keyword database_name: Gets or sets the SQL database name.
        :paramtype database_name: str
        :keyword sql_server_arm_id: Gets or sets the SQL Server ARM Id in which the database resides.
        :paramtype sql_server_arm_id: str
        :keyword compatibility_level: Gets or sets the database compatibility level.
        :paramtype compatibility_level: str
        :keyword is_deleted: Gets or sets a value indicating whether the entity is deleted.
        :paramtype is_deleted: bool
        :keyword created_timestamp: Gets or sets the marking machine creation.
        :paramtype created_timestamp: str
        :keyword updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
        :paramtype updated_timestamp: str
        :keyword provisioning_state: The status of the last operation. Known values are: "Created",
         "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
        :paramtype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.parent_replica_overview = parent_replica_overview
        self.is_database_highly_available = is_database_highly_available
        self.file_metadata_list = None
        self.hostname = hostname
        self.sql_server_name = sql_server_name
        self.status = status
        self.size_mb = size_mb
        self.database_name = database_name
        self.sql_server_arm_id = sql_server_arm_id
        self.compatibility_level = compatibility_level
        self.is_deleted = is_deleted
        self.errors = None
        self.created_timestamp = created_timestamp
        self.updated_timestamp = updated_timestamp
        self.provisioning_state = provisioning_state


class SqlDatabaseReplicaInfo(_serialization.Model):
    """Class which represents the SQL availability replica properties of type
    databases.

    :ivar host_name: Gets or sets the host name of the availability replica.
    :vartype host_name: str
    :ivar sql_server_name: Gets or sets the SQL Server name of the availability replica.
    :vartype sql_server_name: str
    :ivar sql_server_arm_id: Gets or sets the SQL Server name of the availability replica.
    :vartype sql_server_arm_id: str
    """

    _attribute_map = {
        "host_name": {"key": "hostName", "type": "str"},
        "sql_server_name": {"key": "sqlServerName", "type": "str"},
        "sql_server_arm_id": {"key": "sqlServerArmId", "type": "str"},
    }

    def __init__(
        self,
        *,
        host_name: Optional[str] = None,
        sql_server_name: Optional[str] = None,
        sql_server_arm_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword host_name: Gets or sets the host name of the availability replica.
        :paramtype host_name: str
        :keyword sql_server_name: Gets or sets the SQL Server name of the availability replica.
        :paramtype sql_server_name: str
        :keyword sql_server_arm_id: Gets or sets the SQL Server name of the availability replica.
        :paramtype sql_server_arm_id: str
        """
        super().__init__(**kwargs)
        self.host_name = host_name
        self.sql_server_name = sql_server_name
        self.sql_server_arm_id = sql_server_arm_id


class SqlDatabaseV2(ProxyResource):
    """Class representing the web model of SQL Database.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SqlDatabasePropertiesV2
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SqlDatabasePropertiesV2"},
    }

    def __init__(self, *, properties: Optional["_models.SqlDatabasePropertiesV2"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlDatabasePropertiesV2
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlDatabaseV2ListResult(_serialization.Model):
    """The response of a SqlDatabaseV2 list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlDatabaseV2 items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlDatabaseV2]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlDatabaseV2]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.SqlDatabaseV2"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The SqlDatabaseV2 items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlDatabaseV2]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlDiscovery(_serialization.Model):
    """Contains data related SQL discovery.

    :ivar successfully_discovered_server_count: successfully Discovered ServerCount.
    :vartype successfully_discovered_server_count: int
    :ivar total_server_count: total Server Count.
    :vartype total_server_count: int
    :ivar sql_metadata_hydrated_run_as_account_id: sql Metadata Hydrated RunAsAccountId.
    :vartype sql_metadata_hydrated_run_as_account_id: str
    :ivar sql_metadata_discovery_pipe: sql Metadata DiscoveryPipe. Known values are: "Unknown",
     "VMware", "PowerShell", "SSH", "CIM", and "Other".
    :vartype sql_metadata_discovery_pipe: str or
     ~azure.mgmt.migrate.models.SqlMetadataDiscoveryPipe
    :ivar discovery_scope_status: discovery Scope Status. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or ~azure.mgmt.migrate.models.SQLDiscoveryScopeStatus
    """

    _attribute_map = {
        "successfully_discovered_server_count": {"key": "successfullyDiscoveredServerCount", "type": "int"},
        "total_server_count": {"key": "totalServerCount", "type": "int"},
        "sql_metadata_hydrated_run_as_account_id": {"key": "sqlMetadataHydratedRunAsAccountId", "type": "str"},
        "sql_metadata_discovery_pipe": {"key": "sqlMetadataDiscoveryPipe", "type": "str"},
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        successfully_discovered_server_count: Optional[int] = None,
        total_server_count: Optional[int] = None,
        sql_metadata_hydrated_run_as_account_id: Optional[str] = None,
        sql_metadata_discovery_pipe: Optional[Union[str, "_models.SqlMetadataDiscoveryPipe"]] = None,
        discovery_scope_status: Optional[Union[str, "_models.SQLDiscoveryScopeStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword successfully_discovered_server_count: successfully Discovered ServerCount.
        :paramtype successfully_discovered_server_count: int
        :keyword total_server_count: total Server Count.
        :paramtype total_server_count: int
        :keyword sql_metadata_hydrated_run_as_account_id: sql Metadata Hydrated RunAsAccountId.
        :paramtype sql_metadata_hydrated_run_as_account_id: str
        :keyword sql_metadata_discovery_pipe: sql Metadata DiscoveryPipe. Known values are: "Unknown",
         "VMware", "PowerShell", "SSH", "CIM", and "Other".
        :paramtype sql_metadata_discovery_pipe: str or
         ~azure.mgmt.migrate.models.SqlMetadataDiscoveryPipe
        :keyword discovery_scope_status: discovery Scope Status. Known values are:
         "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
         "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
         "DiscoverySucceeded".
        :paramtype discovery_scope_status: str or ~azure.mgmt.migrate.models.SQLDiscoveryScopeStatus
        """
        super().__init__(**kwargs)
        self.successfully_discovered_server_count = successfully_discovered_server_count
        self.total_server_count = total_server_count
        self.sql_metadata_hydrated_run_as_account_id = sql_metadata_hydrated_run_as_account_id
        self.sql_metadata_discovery_pipe = sql_metadata_discovery_pipe
        self.discovery_scope_status = discovery_scope_status


class SqlDiscoverySiteDataSource(ProxyResource):
    """A SQL discovery site data source resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SqlDiscoverySiteDataSourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SqlDiscoverySiteDataSourceProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.SqlDiscoverySiteDataSourceProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlDiscoverySiteDataSourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlDiscoverySiteDataSourceListResult(_serialization.Model):
    """The response of a SqlDiscoverySiteDataSource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlDiscoverySiteDataSource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlDiscoverySiteDataSource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlDiscoverySiteDataSource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.SqlDiscoverySiteDataSource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SqlDiscoverySiteDataSource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlDiscoverySiteDataSource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlDiscoverySiteDataSourceProperties(_serialization.Model):
    """Discovery site data source properties class.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar discovery_site_id: Gets or sets the discovery site Id.
    :vartype discovery_site_id: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "discovery_site_id": {"key": "discoverySiteId", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, discovery_site_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword discovery_site_id: Gets or sets the discovery site Id.
        :paramtype discovery_site_id: str
        """
        super().__init__(**kwargs)
        self.discovery_site_id = discovery_site_id
        self.provisioning_state = None


class SqlFciProperties(_serialization.Model):
    """The class representing the properties for an FCI instance.

    :ivar state: Gets or sets the state of the FCI instance. Known values are: "Unknown",
     "Inherited", "Initializing", "Online", "Offline", "Failed", "Pending", "OnlinePending", and
     "OfflinePending".
    :vartype state: str or ~azure.mgmt.migrate.models.FCIInstanceState
    :ivar network_name: Gets or sets the FCI Network Name used to connect to this FCI instance.
    :vartype network_name: str
    :ivar is_multi_subnet: Gets or sets a value indicating whether the FCI is hosted on possible
     owners
     which are in multiple subnets.
    :vartype is_multi_subnet: bool
    :ivar shared_disk_count: Gets or sets the count of Shared Disks for SQL FCI.
    :vartype shared_disk_count: int
    """

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
        "network_name": {"key": "networkName", "type": "str"},
        "is_multi_subnet": {"key": "isMultiSubnet", "type": "bool"},
        "shared_disk_count": {"key": "sharedDiskCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        state: Optional[Union[str, "_models.FCIInstanceState"]] = None,
        network_name: Optional[str] = None,
        is_multi_subnet: Optional[bool] = None,
        shared_disk_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Gets or sets the state of the FCI instance. Known values are: "Unknown",
         "Inherited", "Initializing", "Online", "Offline", "Failed", "Pending", "OnlinePending", and
         "OfflinePending".
        :paramtype state: str or ~azure.mgmt.migrate.models.FCIInstanceState
        :keyword network_name: Gets or sets the FCI Network Name used to connect to this FCI instance.
        :paramtype network_name: str
        :keyword is_multi_subnet: Gets or sets a value indicating whether the FCI is hosted on possible
         owners
         which are in multiple subnets.
        :paramtype is_multi_subnet: bool
        :keyword shared_disk_count: Gets or sets the count of Shared Disks for SQL FCI.
        :paramtype shared_disk_count: int
        """
        super().__init__(**kwargs)
        self.state = state
        self.network_name = network_name
        self.is_multi_subnet = is_multi_subnet
        self.shared_disk_count = shared_disk_count


class SqlJob(ProxyResource):
    """Class representing the web model of SQL Database.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.JobProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "JobProperties"},
    }

    def __init__(self, *, properties: Optional["_models.JobProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.JobProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlJobListResult(_serialization.Model):
    """The response of a SqlJob list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlJob items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.SqlJob"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The SqlJob items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlJob]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlMachineOverview(_serialization.Model):
    """Gets or sets SQL machine overview data.

    :ivar machine_arm_id: Gets or sets SQL machine ARM ID.
    :vartype machine_arm_id: str
    :ivar display_name: Gets or sets SQL machine display name.
    :vartype display_name: str
    :ivar fci_role: Gets or sets SQL machine FCI role. Known values are: "Unknown",
     "NotApplicable", "ActiveNode", and "PossibleOwnerNode".
    :vartype fci_role: str or ~azure.mgmt.migrate.models.SqlMachineOverviewFciRole
    """

    _attribute_map = {
        "machine_arm_id": {"key": "machineArmId", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "fci_role": {"key": "fciRole", "type": "str"},
    }

    def __init__(
        self,
        *,
        machine_arm_id: Optional[str] = None,
        display_name: Optional[str] = None,
        fci_role: Optional[Union[str, "_models.SqlMachineOverviewFciRole"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_arm_id: Gets or sets SQL machine ARM ID.
        :paramtype machine_arm_id: str
        :keyword display_name: Gets or sets SQL machine display name.
        :paramtype display_name: str
        :keyword fci_role: Gets or sets SQL machine FCI role. Known values are: "Unknown",
         "NotApplicable", "ActiveNode", and "PossibleOwnerNode".
        :paramtype fci_role: str or ~azure.mgmt.migrate.models.SqlMachineOverviewFciRole
        """
        super().__init__(**kwargs)
        self.machine_arm_id = machine_arm_id
        self.display_name = display_name
        self.fci_role = fci_role


class SqlRunAsAccount(ProxyResource):
    """A runasaccount resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "RunAsAccountProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RunAsAccountProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlRunAsAccountListResult(_serialization.Model):
    """The response of a SqlRunAsAccount list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlRunAsAccount items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlRunAsAccount]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlRunAsAccount]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.SqlRunAsAccount"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SqlRunAsAccount items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlRunAsAccount]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlServerApplication(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """SQLServer in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Gets or sets Name of the SQLServer.
    :vartype name: str
    :ivar edition: Gets or sets Edition of the SQLServer.
    :vartype edition: str
    :ivar service_pack: Gets or sets ServicePack of the SQLServer.
    :vartype service_pack: str
    :ivar version: Gets or sets Version of the SQLServer.
    :vartype version: str
    :ivar clustered: Gets or sets Clustered of the SQLServer.
    :vartype clustered: str
    :ivar cluster_name: Gets or sets ClusterName of the SQLServer.
    :vartype cluster_name: str
    :ivar dns_host_name: Gets or sets the DNS host name of SQLServer.
    :vartype dns_host_name: str
    :ivar port: Gets or sets the port of the SQLServer.
    :vartype port: str
    :ivar comma_separated_ips: Gets or sets the comma separated IPs of the SQLServer.
    :vartype comma_separated_ips: str
    :ivar status: Gets the status.
    :vartype status: str
    :ivar is_named_pipe_enabled: Gets or sets the value which reflects if Named Pipe is enabled or
     not.
    :vartype is_named_pipe_enabled: bool
    :ivar is_tcp_ip_enabled: Gets or sets the value which reflects if Named Pipe is enabled or not.
    :vartype is_tcp_ip_enabled: bool
    :ivar named_pipe_name: Gets the status.
    :vartype named_pipe_name: str
    """

    _validation = {
        "name": {"readonly": True},
        "edition": {"readonly": True},
        "service_pack": {"readonly": True},
        "version": {"readonly": True},
        "clustered": {"readonly": True},
        "cluster_name": {"readonly": True},
        "dns_host_name": {"readonly": True},
        "port": {"readonly": True},
        "comma_separated_ips": {"readonly": True},
        "status": {"readonly": True},
        "is_named_pipe_enabled": {"readonly": True},
        "is_tcp_ip_enabled": {"readonly": True},
        "named_pipe_name": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "edition": {"key": "edition", "type": "str"},
        "service_pack": {"key": "servicePack", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "clustered": {"key": "clustered", "type": "str"},
        "cluster_name": {"key": "clusterName", "type": "str"},
        "dns_host_name": {"key": "dnsHostName", "type": "str"},
        "port": {"key": "port", "type": "str"},
        "comma_separated_ips": {"key": "commaSeparatedIps", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "is_named_pipe_enabled": {"key": "isNamedPipeEnabled", "type": "bool"},
        "is_tcp_ip_enabled": {"key": "isTcpIpEnabled", "type": "bool"},
        "named_pipe_name": {"key": "namedPipeName", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.edition = None
        self.service_pack = None
        self.version = None
        self.clustered = None
        self.cluster_name = None
        self.dns_host_name = None
        self.port = None
        self.comma_separated_ips = None
        self.status = None
        self.is_named_pipe_enabled = None
        self.is_tcp_ip_enabled = None
        self.named_pipe_name = None


class SqlServerProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for SQL Server properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar machine_overview_list: Gets the Machine Overview properties of all machines on which the
     SQL server is deployed.
    :vartype machine_overview_list: list[~azure.mgmt.migrate.models.SqlMachineOverview]
    :ivar number_of_ag_databases: Gets or sets the number of databases part of availability group
     on this SQL instance.
    :vartype number_of_ag_databases: int
    :ivar sql_fci_properties: Gets or sets the FCI properties if the instance is an FCI instance.
     This would be populated if IsClustered is true.
    :vartype sql_fci_properties: ~azure.mgmt.migrate.models.SqlFciProperties
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar version: Gets or sets the SQL server version.
    :vartype version: str
    :ivar number_of_user_databases: Gets or sets total number of users databases.
    :vartype number_of_user_databases: int
    :ivar sum_of_user_databases_size_in_mb: Gets or sets total size of all user databases.
    :vartype sum_of_user_databases_size_in_mb: float
    :ivar temp_db_size_in_mb: Gets or sets size of temp database.
    :vartype temp_db_size_in_mb: float
    :ivar max_server_memory_in_use_in_mb: Gets or sets maximum server memory in use.
    :vartype max_server_memory_in_use_in_mb: float
    :ivar visible_online_core_count: Gets or sets the SQL server number of cores that have visible
     online status.
    :vartype visible_online_core_count: int
    :ivar num_of_logins: Gets or sets number of logins.
    :vartype num_of_logins: int
    :ivar physical_cpu_count: Gets or sets physical CPU count.
    :vartype physical_cpu_count: float
    :ivar logical_cpu_count: Gets or sets logical CPU count.
    :vartype logical_cpu_count: int
    :ivar engine_edition: Gets or sets the SQL server engine edition.
    :vartype engine_edition: str
    :ivar edition: Gets or sets the SQL server edition.
    :vartype edition: str
    :ivar is_high_availability_enabled: Gets or sets a value indicating whether High Availability
     is enabled or not.
    :vartype is_high_availability_enabled: bool
    :ivar is_clustered: Gets or sets a value indicating whether failover cluster is configured or
     not.
    :vartype is_clustered: bool
    :ivar hyperthread_ratio: Gets or sets the Hyper thread ratio.
    :vartype hyperthread_ratio: int
    :ivar sql_start_time: Gets or sets the SQL start time.
    :vartype sql_start_time: ~datetime.datetime
    :ivar machine_arm_ids: Gets the list of machine ARM Ids on which the SQL server is deployed.
    :vartype machine_arm_ids: list[str]
    :ivar run_as_account_id: Gets or sets the run as account ID of the SQL server.
    :vartype run_as_account_id: str
    :ivar hydrated_run_as_account_id: Gets or sets the hydrated run as account ID of the SQL
     server.
    :vartype hydrated_run_as_account_id: str
    :ivar host_name: Gets or sets hostname.
    :vartype host_name: str
    :ivar sql_server_name: Gets or sets the SQL server instance name.
    :vartype sql_server_name: str
    :ivar port_number: Gets or sets the Preferred Port Number.
    :vartype port_number: int
    :ivar errors: Gets the errors.
    :vartype errors: list[~azure.mgmt.migrate.models.Errors]
    :ivar tags: Gets or sets tags on the resource.
    :vartype tags: dict[str, JSON]
    :ivar is_deleted: Gets or sets a value indicating whether the entity is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets or sets the marking machine creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar status: Gets or sets the powered on status. Known values are: "Unknown",
     "ContinuePending", "Paused", "PausePending", "Running", "StartPending", "Stopped", and
     "StopPending".
    :vartype status: str or ~azure.mgmt.migrate.models.SqlServerStatus
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "machine_overview_list": {"readonly": True},
        "machine_arm_ids": {"readonly": True},
        "errors": {"readonly": True},
    }

    _attribute_map = {
        "machine_overview_list": {"key": "machineOverviewList", "type": "[SqlMachineOverview]"},
        "number_of_ag_databases": {"key": "numberOfAgDatabases", "type": "int"},
        "sql_fci_properties": {"key": "sqlFciProperties", "type": "SqlFciProperties"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "version": {"key": "version", "type": "str"},
        "number_of_user_databases": {"key": "numberOfUserDatabases", "type": "int"},
        "sum_of_user_databases_size_in_mb": {"key": "sumOfUserDatabasesSizeInMb", "type": "float"},
        "temp_db_size_in_mb": {"key": "tempDbSizeInMb", "type": "float"},
        "max_server_memory_in_use_in_mb": {"key": "maxServerMemoryInUseInMb", "type": "float"},
        "visible_online_core_count": {"key": "visibleOnlineCoreCount", "type": "int"},
        "num_of_logins": {"key": "numOfLogins", "type": "int"},
        "physical_cpu_count": {"key": "physicalCpuCount", "type": "float"},
        "logical_cpu_count": {"key": "logicalCpuCount", "type": "int"},
        "engine_edition": {"key": "engineEdition", "type": "str"},
        "edition": {"key": "edition", "type": "str"},
        "is_high_availability_enabled": {"key": "isHighAvailabilityEnabled", "type": "bool"},
        "is_clustered": {"key": "isClustered", "type": "bool"},
        "hyperthread_ratio": {"key": "hyperthreadRatio", "type": "int"},
        "sql_start_time": {"key": "sqlStartTime", "type": "iso-8601"},
        "machine_arm_ids": {"key": "machineArmIds", "type": "[str]"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "hydrated_run_as_account_id": {"key": "hydratedRunAsAccountId", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "sql_server_name": {"key": "sqlServerName", "type": "str"},
        "port_number": {"key": "portNumber", "type": "int"},
        "errors": {"key": "errors", "type": "[Errors]"},
        "tags": {"key": "tags", "type": "{object}"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        number_of_ag_databases: Optional[int] = None,
        sql_fci_properties: Optional["_models.SqlFciProperties"] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        version: Optional[str] = None,
        number_of_user_databases: Optional[int] = None,
        sum_of_user_databases_size_in_mb: Optional[float] = None,
        temp_db_size_in_mb: Optional[float] = None,
        max_server_memory_in_use_in_mb: Optional[float] = None,
        visible_online_core_count: Optional[int] = None,
        num_of_logins: Optional[int] = None,
        physical_cpu_count: Optional[float] = None,
        logical_cpu_count: Optional[int] = None,
        engine_edition: Optional[str] = None,
        edition: Optional[str] = None,
        is_high_availability_enabled: Optional[bool] = None,
        is_clustered: Optional[bool] = None,
        hyperthread_ratio: Optional[int] = None,
        sql_start_time: Optional[datetime.datetime] = None,
        run_as_account_id: Optional[str] = None,
        hydrated_run_as_account_id: Optional[str] = None,
        host_name: Optional[str] = None,
        sql_server_name: Optional[str] = None,
        port_number: Optional[int] = None,
        tags: Optional[Dict[str, JSON]] = None,
        is_deleted: Optional[bool] = None,
        created_timestamp: Optional[str] = None,
        updated_timestamp: Optional[str] = None,
        status: Optional[Union[str, "_models.SqlServerStatus"]] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword number_of_ag_databases: Gets or sets the number of databases part of availability
         group on this SQL instance.
        :paramtype number_of_ag_databases: int
        :keyword sql_fci_properties: Gets or sets the FCI properties if the instance is an FCI
         instance. This would be populated if IsClustered is true.
        :paramtype sql_fci_properties: ~azure.mgmt.migrate.models.SqlFciProperties
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword version: Gets or sets the SQL server version.
        :paramtype version: str
        :keyword number_of_user_databases: Gets or sets total number of users databases.
        :paramtype number_of_user_databases: int
        :keyword sum_of_user_databases_size_in_mb: Gets or sets total size of all user databases.
        :paramtype sum_of_user_databases_size_in_mb: float
        :keyword temp_db_size_in_mb: Gets or sets size of temp database.
        :paramtype temp_db_size_in_mb: float
        :keyword max_server_memory_in_use_in_mb: Gets or sets maximum server memory in use.
        :paramtype max_server_memory_in_use_in_mb: float
        :keyword visible_online_core_count: Gets or sets the SQL server number of cores that have
         visible online status.
        :paramtype visible_online_core_count: int
        :keyword num_of_logins: Gets or sets number of logins.
        :paramtype num_of_logins: int
        :keyword physical_cpu_count: Gets or sets physical CPU count.
        :paramtype physical_cpu_count: float
        :keyword logical_cpu_count: Gets or sets logical CPU count.
        :paramtype logical_cpu_count: int
        :keyword engine_edition: Gets or sets the SQL server engine edition.
        :paramtype engine_edition: str
        :keyword edition: Gets or sets the SQL server edition.
        :paramtype edition: str
        :keyword is_high_availability_enabled: Gets or sets a value indicating whether High
         Availability is enabled or not.
        :paramtype is_high_availability_enabled: bool
        :keyword is_clustered: Gets or sets a value indicating whether failover cluster is configured
         or not.
        :paramtype is_clustered: bool
        :keyword hyperthread_ratio: Gets or sets the Hyper thread ratio.
        :paramtype hyperthread_ratio: int
        :keyword sql_start_time: Gets or sets the SQL start time.
        :paramtype sql_start_time: ~datetime.datetime
        :keyword run_as_account_id: Gets or sets the run as account ID of the SQL server.
        :paramtype run_as_account_id: str
        :keyword hydrated_run_as_account_id: Gets or sets the hydrated run as account ID of the SQL
         server.
        :paramtype hydrated_run_as_account_id: str
        :keyword host_name: Gets or sets hostname.
        :paramtype host_name: str
        :keyword sql_server_name: Gets or sets the SQL server instance name.
        :paramtype sql_server_name: str
        :keyword port_number: Gets or sets the Preferred Port Number.
        :paramtype port_number: int
        :keyword tags: Gets or sets tags on the resource.
        :paramtype tags: dict[str, JSON]
        :keyword is_deleted: Gets or sets a value indicating whether the entity is deleted.
        :paramtype is_deleted: bool
        :keyword created_timestamp: Gets or sets the marking machine creation.
        :paramtype created_timestamp: str
        :keyword updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
        :paramtype updated_timestamp: str
        :keyword status: Gets or sets the powered on status. Known values are: "Unknown",
         "ContinuePending", "Paused", "PausePending", "Running", "StartPending", "Stopped", and
         "StopPending".
        :paramtype status: str or ~azure.mgmt.migrate.models.SqlServerStatus
        :keyword provisioning_state: The status of the last operation. Known values are: "Created",
         "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
        :paramtype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.machine_overview_list = None
        self.number_of_ag_databases = number_of_ag_databases
        self.sql_fci_properties = sql_fci_properties
        self.product_support_status = product_support_status
        self.version = version
        self.number_of_user_databases = number_of_user_databases
        self.sum_of_user_databases_size_in_mb = sum_of_user_databases_size_in_mb
        self.temp_db_size_in_mb = temp_db_size_in_mb
        self.max_server_memory_in_use_in_mb = max_server_memory_in_use_in_mb
        self.visible_online_core_count = visible_online_core_count
        self.num_of_logins = num_of_logins
        self.physical_cpu_count = physical_cpu_count
        self.logical_cpu_count = logical_cpu_count
        self.engine_edition = engine_edition
        self.edition = edition
        self.is_high_availability_enabled = is_high_availability_enabled
        self.is_clustered = is_clustered
        self.hyperthread_ratio = hyperthread_ratio
        self.sql_start_time = sql_start_time
        self.machine_arm_ids = None
        self.run_as_account_id = run_as_account_id
        self.hydrated_run_as_account_id = hydrated_run_as_account_id
        self.host_name = host_name
        self.sql_server_name = sql_server_name
        self.port_number = port_number
        self.errors = None
        self.tags = tags
        self.is_deleted = is_deleted
        self.created_timestamp = created_timestamp
        self.updated_timestamp = updated_timestamp
        self.status = status
        self.provisioning_state = provisioning_state


class SqlServerV2(ProxyResource):
    """Class representing the web model of SQL Server.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SqlServerProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SqlServerProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SqlServerProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlServerProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlServerV2ListResult(_serialization.Model):
    """The response of a SqlServerV2 list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlServerV2 items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlServerV2]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlServerV2]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.SqlServerV2"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The SqlServerV2 items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlServerV2]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlServerV2Update(_serialization.Model):
    """The type used for update operations of the SqlServerV2.

    :ivar properties: The updatable properties of the SqlServerV2.
    :vartype properties: ~azure.mgmt.migrate.models.SqlServerV2UpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "SqlServerV2UpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SqlServerV2UpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The updatable properties of the SqlServerV2.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlServerV2UpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlServerV2UpdateProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The updatable properties of the SqlServerV2.

    :ivar number_of_ag_databases: Gets or sets the number of databases part of availability group
     on this SQL instance.
    :vartype number_of_ag_databases: int
    :ivar sql_fci_properties: Gets or sets the FCI properties if the instance is an FCI instance.
     This would be populated if IsClustered is true.
    :vartype sql_fci_properties: ~azure.mgmt.migrate.models.SqlFciProperties
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar version: Gets or sets the SQL server version.
    :vartype version: str
    :ivar number_of_user_databases: Gets or sets total number of users databases.
    :vartype number_of_user_databases: int
    :ivar sum_of_user_databases_size_in_mb: Gets or sets total size of all user databases.
    :vartype sum_of_user_databases_size_in_mb: float
    :ivar temp_db_size_in_mb: Gets or sets size of temp database.
    :vartype temp_db_size_in_mb: float
    :ivar max_server_memory_in_use_in_mb: Gets or sets maximum server memory in use.
    :vartype max_server_memory_in_use_in_mb: float
    :ivar visible_online_core_count: Gets or sets the SQL server number of cores that have visible
     online status.
    :vartype visible_online_core_count: int
    :ivar num_of_logins: Gets or sets number of logins.
    :vartype num_of_logins: int
    :ivar physical_cpu_count: Gets or sets physical CPU count.
    :vartype physical_cpu_count: float
    :ivar logical_cpu_count: Gets or sets logical CPU count.
    :vartype logical_cpu_count: int
    :ivar engine_edition: Gets or sets the SQL server engine edition.
    :vartype engine_edition: str
    :ivar edition: Gets or sets the SQL server edition.
    :vartype edition: str
    :ivar is_high_availability_enabled: Gets or sets a value indicating whether High Availability
     is enabled or not.
    :vartype is_high_availability_enabled: bool
    :ivar is_clustered: Gets or sets a value indicating whether failover cluster is configured or
     not.
    :vartype is_clustered: bool
    :ivar hyperthread_ratio: Gets or sets the Hyper thread ratio.
    :vartype hyperthread_ratio: int
    :ivar sql_start_time: Gets or sets the SQL start time.
    :vartype sql_start_time: ~datetime.datetime
    :ivar run_as_account_id: Gets or sets the run as account ID of the SQL server.
    :vartype run_as_account_id: str
    :ivar hydrated_run_as_account_id: Gets or sets the hydrated run as account ID of the SQL
     server.
    :vartype hydrated_run_as_account_id: str
    :ivar host_name: Gets or sets hostname.
    :vartype host_name: str
    :ivar sql_server_name: Gets or sets the SQL server instance name.
    :vartype sql_server_name: str
    :ivar port_number: Gets or sets the Preferred Port Number.
    :vartype port_number: int
    :ivar tags: Gets or sets tags on the resource.
    :vartype tags: dict[str, JSON]
    :ivar is_deleted: Gets or sets a value indicating whether the entity is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets or sets the marking machine creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar status: Gets or sets the powered on status. Known values are: "Unknown",
     "ContinuePending", "Paused", "PausePending", "Running", "StartPending", "Stopped", and
     "StopPending".
    :vartype status: str or ~azure.mgmt.migrate.models.SqlServerStatus
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _attribute_map = {
        "number_of_ag_databases": {"key": "numberOfAgDatabases", "type": "int"},
        "sql_fci_properties": {"key": "sqlFciProperties", "type": "SqlFciProperties"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "version": {"key": "version", "type": "str"},
        "number_of_user_databases": {"key": "numberOfUserDatabases", "type": "int"},
        "sum_of_user_databases_size_in_mb": {"key": "sumOfUserDatabasesSizeInMb", "type": "float"},
        "temp_db_size_in_mb": {"key": "tempDbSizeInMb", "type": "float"},
        "max_server_memory_in_use_in_mb": {"key": "maxServerMemoryInUseInMb", "type": "float"},
        "visible_online_core_count": {"key": "visibleOnlineCoreCount", "type": "int"},
        "num_of_logins": {"key": "numOfLogins", "type": "int"},
        "physical_cpu_count": {"key": "physicalCpuCount", "type": "float"},
        "logical_cpu_count": {"key": "logicalCpuCount", "type": "int"},
        "engine_edition": {"key": "engineEdition", "type": "str"},
        "edition": {"key": "edition", "type": "str"},
        "is_high_availability_enabled": {"key": "isHighAvailabilityEnabled", "type": "bool"},
        "is_clustered": {"key": "isClustered", "type": "bool"},
        "hyperthread_ratio": {"key": "hyperthreadRatio", "type": "int"},
        "sql_start_time": {"key": "sqlStartTime", "type": "iso-8601"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "hydrated_run_as_account_id": {"key": "hydratedRunAsAccountId", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "sql_server_name": {"key": "sqlServerName", "type": "str"},
        "port_number": {"key": "portNumber", "type": "int"},
        "tags": {"key": "tags", "type": "{object}"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        number_of_ag_databases: Optional[int] = None,
        sql_fci_properties: Optional["_models.SqlFciProperties"] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        version: Optional[str] = None,
        number_of_user_databases: Optional[int] = None,
        sum_of_user_databases_size_in_mb: Optional[float] = None,
        temp_db_size_in_mb: Optional[float] = None,
        max_server_memory_in_use_in_mb: Optional[float] = None,
        visible_online_core_count: Optional[int] = None,
        num_of_logins: Optional[int] = None,
        physical_cpu_count: Optional[float] = None,
        logical_cpu_count: Optional[int] = None,
        engine_edition: Optional[str] = None,
        edition: Optional[str] = None,
        is_high_availability_enabled: Optional[bool] = None,
        is_clustered: Optional[bool] = None,
        hyperthread_ratio: Optional[int] = None,
        sql_start_time: Optional[datetime.datetime] = None,
        run_as_account_id: Optional[str] = None,
        hydrated_run_as_account_id: Optional[str] = None,
        host_name: Optional[str] = None,
        sql_server_name: Optional[str] = None,
        port_number: Optional[int] = None,
        tags: Optional[Dict[str, JSON]] = None,
        is_deleted: Optional[bool] = None,
        created_timestamp: Optional[str] = None,
        updated_timestamp: Optional[str] = None,
        status: Optional[Union[str, "_models.SqlServerStatus"]] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword number_of_ag_databases: Gets or sets the number of databases part of availability
         group on this SQL instance.
        :paramtype number_of_ag_databases: int
        :keyword sql_fci_properties: Gets or sets the FCI properties if the instance is an FCI
         instance. This would be populated if IsClustered is true.
        :paramtype sql_fci_properties: ~azure.mgmt.migrate.models.SqlFciProperties
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword version: Gets or sets the SQL server version.
        :paramtype version: str
        :keyword number_of_user_databases: Gets or sets total number of users databases.
        :paramtype number_of_user_databases: int
        :keyword sum_of_user_databases_size_in_mb: Gets or sets total size of all user databases.
        :paramtype sum_of_user_databases_size_in_mb: float
        :keyword temp_db_size_in_mb: Gets or sets size of temp database.
        :paramtype temp_db_size_in_mb: float
        :keyword max_server_memory_in_use_in_mb: Gets or sets maximum server memory in use.
        :paramtype max_server_memory_in_use_in_mb: float
        :keyword visible_online_core_count: Gets or sets the SQL server number of cores that have
         visible online status.
        :paramtype visible_online_core_count: int
        :keyword num_of_logins: Gets or sets number of logins.
        :paramtype num_of_logins: int
        :keyword physical_cpu_count: Gets or sets physical CPU count.
        :paramtype physical_cpu_count: float
        :keyword logical_cpu_count: Gets or sets logical CPU count.
        :paramtype logical_cpu_count: int
        :keyword engine_edition: Gets or sets the SQL server engine edition.
        :paramtype engine_edition: str
        :keyword edition: Gets or sets the SQL server edition.
        :paramtype edition: str
        :keyword is_high_availability_enabled: Gets or sets a value indicating whether High
         Availability is enabled or not.
        :paramtype is_high_availability_enabled: bool
        :keyword is_clustered: Gets or sets a value indicating whether failover cluster is configured
         or not.
        :paramtype is_clustered: bool
        :keyword hyperthread_ratio: Gets or sets the Hyper thread ratio.
        :paramtype hyperthread_ratio: int
        :keyword sql_start_time: Gets or sets the SQL start time.
        :paramtype sql_start_time: ~datetime.datetime
        :keyword run_as_account_id: Gets or sets the run as account ID of the SQL server.
        :paramtype run_as_account_id: str
        :keyword hydrated_run_as_account_id: Gets or sets the hydrated run as account ID of the SQL
         server.
        :paramtype hydrated_run_as_account_id: str
        :keyword host_name: Gets or sets hostname.
        :paramtype host_name: str
        :keyword sql_server_name: Gets or sets the SQL server instance name.
        :paramtype sql_server_name: str
        :keyword port_number: Gets or sets the Preferred Port Number.
        :paramtype port_number: int
        :keyword tags: Gets or sets tags on the resource.
        :paramtype tags: dict[str, JSON]
        :keyword is_deleted: Gets or sets a value indicating whether the entity is deleted.
        :paramtype is_deleted: bool
        :keyword created_timestamp: Gets or sets the marking machine creation.
        :paramtype created_timestamp: str
        :keyword updated_timestamp: Gets or sets the timestamp marking last updated on the machine.
        :paramtype updated_timestamp: str
        :keyword status: Gets or sets the powered on status. Known values are: "Unknown",
         "ContinuePending", "Paused", "PausePending", "Running", "StartPending", "Stopped", and
         "StopPending".
        :paramtype status: str or ~azure.mgmt.migrate.models.SqlServerStatus
        :keyword provisioning_state: The status of the last operation. Known values are: "Created",
         "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
        :paramtype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.number_of_ag_databases = number_of_ag_databases
        self.sql_fci_properties = sql_fci_properties
        self.product_support_status = product_support_status
        self.version = version
        self.number_of_user_databases = number_of_user_databases
        self.sum_of_user_databases_size_in_mb = sum_of_user_databases_size_in_mb
        self.temp_db_size_in_mb = temp_db_size_in_mb
        self.max_server_memory_in_use_in_mb = max_server_memory_in_use_in_mb
        self.visible_online_core_count = visible_online_core_count
        self.num_of_logins = num_of_logins
        self.physical_cpu_count = physical_cpu_count
        self.logical_cpu_count = logical_cpu_count
        self.engine_edition = engine_edition
        self.edition = edition
        self.is_high_availability_enabled = is_high_availability_enabled
        self.is_clustered = is_clustered
        self.hyperthread_ratio = hyperthread_ratio
        self.sql_start_time = sql_start_time
        self.run_as_account_id = run_as_account_id
        self.hydrated_run_as_account_id = hydrated_run_as_account_id
        self.host_name = host_name
        self.sql_server_name = sql_server_name
        self.port_number = port_number
        self.tags = tags
        self.is_deleted = is_deleted
        self.created_timestamp = created_timestamp
        self.updated_timestamp = updated_timestamp
        self.status = status
        self.provisioning_state = provisioning_state


class SqlSite(ProxyResource):
    """SQL site web model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SqlSiteProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SqlSiteProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SqlSiteProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlSiteProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlSiteErrorDetails(_serialization.Model):
    """Sql site error detailed summary.

    All required parameters must be populated in order to send to server.

    :ivar appliance_name: Appliance Name. Required.
    :vartype appliance_name: str
    :ivar site_error_details: Gets the error detailed summary. Required.
    :vartype site_error_details: ~azure.mgmt.migrate.models.ErrorDetailedSummary
    :ivar next_link: The link to fetch more models.
    :vartype next_link: str
    """

    _validation = {
        "appliance_name": {"required": True},
        "site_error_details": {"required": True},
    }

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
        "site_error_details": {"key": "siteErrorDetails", "type": "ErrorDetailedSummary"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        appliance_name: str,
        site_error_details: "_models.ErrorDetailedSummary",
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword appliance_name: Appliance Name. Required.
        :paramtype appliance_name: str
        :keyword site_error_details: Gets the error detailed summary. Required.
        :paramtype site_error_details: ~azure.mgmt.migrate.models.ErrorDetailedSummary
        :keyword next_link: The link to fetch more models.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.appliance_name = appliance_name
        self.site_error_details = site_error_details
        self.next_link = next_link


class SqlSiteListResult(_serialization.Model):
    """The response of a SqlSite list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SqlSite items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.SqlSite]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SqlSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.SqlSite"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The SqlSite items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.SqlSite]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SqlSiteProperties(_serialization.Model):
    """Class for SQL site properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar site_appliance_properties_collection: Gets or sets the appliance details used by service
     to communicate

     to the appliance.
    :vartype site_appliance_properties_collection:
     list[~azure.mgmt.migrate.models.SiteApplianceProperties]
    :ivar discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate" and
     "DR".
    :vartype discovery_scenario: str or
     ~azure.mgmt.migrate.models.SqlSitePropertiesDiscoveryScenario
    :ivar service_endpoint: Gets the service endpoint.
    :vartype service_endpoint: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "service_endpoint": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "site_appliance_properties_collection": {
            "key": "siteAppliancePropertiesCollection",
            "type": "[SiteApplianceProperties]",
        },
        "discovery_scenario": {"key": "discoveryScenario", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        site_appliance_properties_collection: Optional[List["_models.SiteApplianceProperties"]] = None,
        discovery_scenario: Optional[Union[str, "_models.SqlSitePropertiesDiscoveryScenario"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword site_appliance_properties_collection: Gets or sets the appliance details used by
         service to communicate

         to the appliance.
        :paramtype site_appliance_properties_collection:
         list[~azure.mgmt.migrate.models.SiteApplianceProperties]
        :keyword discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate"
         and "DR".
        :paramtype discovery_scenario: str or
         ~azure.mgmt.migrate.models.SqlSitePropertiesDiscoveryScenario
        """
        super().__init__(**kwargs)
        self.site_appliance_properties_collection = site_appliance_properties_collection
        self.discovery_scenario = discovery_scenario
        self.service_endpoint = None
        self.provisioning_state = None


class SqlSiteRefreshBody(_serialization.Model):
    """SQL site refresh.

    :ivar appliance_name: Gets or sets the appliance name of the agent in the site.
    :vartype appliance_name: str
    """

    _attribute_map = {
        "appliance_name": {"key": "applianceName", "type": "str"},
    }

    def __init__(self, *, appliance_name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword appliance_name: Gets or sets the appliance name of the agent in the site.
        :paramtype appliance_name: str
        """
        super().__init__(**kwargs)
        self.appliance_name = appliance_name


class SqlSiteUpdate(_serialization.Model):
    """The type used for update operations of the SqlSite.

    :ivar properties: The updatable properties of the SqlSite.
    :vartype properties: ~azure.mgmt.migrate.models.SqlSiteUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "SqlSiteUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SqlSiteUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The updatable properties of the SqlSite.
        :paramtype properties: ~azure.mgmt.migrate.models.SqlSiteUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SqlSiteUpdateProperties(_serialization.Model):
    """The updatable properties of the SqlSite.

    :ivar site_appliance_properties_collection: Gets or sets the appliance details used by service
     to communicate

     to the appliance.
    :vartype site_appliance_properties_collection:
     list[~azure.mgmt.migrate.models.SiteApplianceProperties]
    :ivar discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate" and
     "DR".
    :vartype discovery_scenario: str or
     ~azure.mgmt.migrate.models.SqlSitePropertiesDiscoveryScenario
    """

    _attribute_map = {
        "site_appliance_properties_collection": {
            "key": "siteAppliancePropertiesCollection",
            "type": "[SiteApplianceProperties]",
        },
        "discovery_scenario": {"key": "discoveryScenario", "type": "str"},
    }

    def __init__(
        self,
        *,
        site_appliance_properties_collection: Optional[List["_models.SiteApplianceProperties"]] = None,
        discovery_scenario: Optional[Union[str, "_models.SqlSitePropertiesDiscoveryScenario"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword site_appliance_properties_collection: Gets or sets the appliance details used by
         service to communicate

         to the appliance.
        :paramtype site_appliance_properties_collection:
         list[~azure.mgmt.migrate.models.SiteApplianceProperties]
        :keyword discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate"
         and "DR".
        :paramtype discovery_scenario: str or
         ~azure.mgmt.migrate.models.SqlSitePropertiesDiscoveryScenario
        """
        super().__init__(**kwargs)
        self.site_appliance_properties_collection = site_appliance_properties_collection
        self.discovery_scenario = discovery_scenario


class SqlSiteUsage(_serialization.Model):
    """SQL site usage.

    :ivar server_count: Gets or sets the number of servers discovered in the site.
    :vartype server_count: int
    :ivar database_count: Gets or sets the number of databases discovered in the site.
    :vartype database_count: int
    :ivar run_as_account_count: Gets or sets the number of run as accounts in the site.
    :vartype run_as_account_count: int
    """

    _attribute_map = {
        "server_count": {"key": "serverCount", "type": "int"},
        "database_count": {"key": "databaseCount", "type": "int"},
        "run_as_account_count": {"key": "runAsAccountCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        server_count: Optional[int] = None,
        database_count: Optional[int] = None,
        run_as_account_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword server_count: Gets or sets the number of servers discovered in the site.
        :paramtype server_count: int
        :keyword database_count: Gets or sets the number of databases discovered in the site.
        :paramtype database_count: int
        :keyword run_as_account_count: Gets or sets the number of run as accounts in the site.
        :paramtype run_as_account_count: int
        """
        super().__init__(**kwargs)
        self.server_count = server_count
        self.database_count = database_count
        self.run_as_account_count = run_as_account_count


class StaticDiscovery(_serialization.Model):
    """Contains data related static data discovery scope.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar discovery_scope_status: Gets discovery scope status. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or ~azure.mgmt.migrate.models.StaticDiscoveryScopeStatus
    :ivar errors: Gets errors for discovery scope.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar hydrated_run_as_account_id: Gets the run as account ID with which feature worked
     successfully.

     It is discovered by the agent from the list of credentials.
    :vartype hydrated_run_as_account_id: str
    """

    _validation = {
        "discovery_scope_status": {"readonly": True},
        "errors": {"readonly": True},
        "hydrated_run_as_account_id": {"readonly": True},
    }

    _attribute_map = {
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "hydrated_run_as_account_id": {"key": "hydratedRunAsAccountId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.discovery_scope_status = None
        self.errors = None
        self.hydrated_run_as_account_id = None


class SystemCenter(_serialization.Model):
    """SystemCenter in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar product_name: Gets or sets ProductName of the SystemCenter.
    :vartype product_name: str
    :ivar status: Gets or sets Status of the SystemCenter.
    :vartype status: str
    :ivar version: Gets or sets Version of the SystemCenter.
    :vartype version: str
    """

    _validation = {
        "product_name": {"readonly": True},
        "status": {"readonly": True},
        "version": {"readonly": True},
    }

    _attribute_map = {
        "product_name": {"key": "productName", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.product_name = None
        self.status = None
        self.version = None


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.migrate.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.migrate.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.migrate.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.migrate.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TagsMachineInput(_serialization.Model):
    """Machine class.

    :ivar machine_id: Gets or sets the ARM id of the machine.
    :vartype machine_id: str
    :ivar tags: run as AccountId.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "machine_id": {"key": "machineId", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self, *, machine_id: Optional[str] = None, tags: Optional[Dict[str, str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: Gets or sets the ARM id of the machine.
        :paramtype machine_id: str
        :keyword tags: run as AccountId.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.machine_id = machine_id
        self.tags = tags


class TomcatEngineUnit(_serialization.Model):
    """Tomcat engine data.

    :ivar name: Gets or sets the name of the engine.
    :vartype name: str
    :ivar hosts: Gets or sets the hosts defined for the engine.
    :vartype hosts: list[~azure.mgmt.migrate.models.TomcatHostUnit]
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "hosts": {"key": "hosts", "type": "[TomcatHostUnit]"},
    }

    def __init__(
        self, *, name: Optional[str] = None, hosts: Optional[List["_models.TomcatHostUnit"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the name of the engine.
        :paramtype name: str
        :keyword hosts: Gets or sets the hosts defined for the engine.
        :paramtype hosts: list[~azure.mgmt.migrate.models.TomcatHostUnit]
        """
        super().__init__(**kwargs)
        self.name = name
        self.hosts = hosts


class TomcatHostUnit(_serialization.Model):
    """Tomcat host data.

    :ivar name: Gets or sets the name of the host.
    :vartype name: str
    :ivar app_base_path: Gets or sets the app base path for the host.
    :vartype app_base_path: str
    :ivar app_base: Gets or sets the app base value configured for the host.
    :vartype app_base: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "app_base_path": {"key": "appBasePath", "type": "str"},
        "app_base": {"key": "appBase", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        app_base_path: Optional[str] = None,
        app_base: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the name of the host.
        :paramtype name: str
        :keyword app_base_path: Gets or sets the app base path for the host.
        :paramtype app_base_path: str
        :keyword app_base: Gets or sets the app base value configured for the host.
        :paramtype app_base: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.app_base_path = app_base_path
        self.app_base = app_base


class TomcatServiceUnit(_serialization.Model):
    """Tomcat service data.

    :ivar name: Gets or sets the name of the service.
    :vartype name: str
    :ivar connectors: Gets or sets the connectors defined for the service component.
    :vartype connectors: list[~azure.mgmt.migrate.models.ConnectorUnit]
    :ivar engine: Gets or sets the engine defined for the service component.
    :vartype engine: ~azure.mgmt.migrate.models.TomcatEngineUnit
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "connectors": {"key": "connectors", "type": "[ConnectorUnit]"},
        "engine": {"key": "engine", "type": "TomcatEngineUnit"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        connectors: Optional[List["_models.ConnectorUnit"]] = None,
        engine: Optional["_models.TomcatEngineUnit"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the name of the service.
        :paramtype name: str
        :keyword connectors: Gets or sets the connectors defined for the service component.
        :paramtype connectors: list[~azure.mgmt.migrate.models.ConnectorUnit]
        :keyword engine: Gets or sets the engine defined for the service component.
        :paramtype engine: ~azure.mgmt.migrate.models.TomcatEngineUnit
        """
        super().__init__(**kwargs)
        self.name = name
        self.connectors = connectors
        self.engine = engine


class TomcatWebApplicationProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web application properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar has_database_dependency: Boolean value having true if the application has database
     dependency.
    :vartype has_database_dependency: bool
    :ivar is_external_logging_configured: Boolean value having true if the application has file
     dependency.
    :vartype is_external_logging_configured: bool
    :ivar web_server_id: Gets the web server id.
    :vartype web_server_id: str
    :ivar web_server_name: Gets the web server name.
    :vartype web_server_name: str
    :ivar machine_arm_ids: Gets the list of machine ARM Ids on which the web application is
     deployed.
    :vartype machine_arm_ids: list[str]
    :ivar virtual_path: Gets the virtual path of the application.
    :vartype virtual_path: str
    :ivar physical_path: Gets the physical path of the application.
    :vartype physical_path: str
    :ivar bindings: Gets the front end bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrate.models.FrontEndBinding]
    :ivar frameworks: Gets the Error details.
    :vartype frameworks: list[~azure.mgmt.migrate.models.WebApplicationFramework]
    :ivar configurations: Gets the configuration.
    :vartype configurations: list[~azure.mgmt.migrate.models.WebApplicationConfigurationUnit]
    :ivar directories: Gets the directories.
    :vartype directories: list[~azure.mgmt.migrate.models.WebApplicationDirectoryUnit]
    :ivar display_name: Gets the display name.
    :vartype display_name: str
    :ivar tags: Gets tags that can be used with ODATA.
    :vartype tags: dict[str, str]
    :ivar static_folders: Static folders.
    :vartype static_folders: list[str]
    :ivar machine_display_name: Machine display name.
    :vartype machine_display_name: str
    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar server_type: Gets the server type.
    :vartype server_type: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar has_errors: Gets a value indicating whether the WebApp has errors or not.
    :vartype has_errors: bool
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "has_database_dependency": {"readonly": True},
        "is_external_logging_configured": {"readonly": True},
        "web_server_id": {"readonly": True},
        "web_server_name": {"readonly": True},
        "machine_arm_ids": {"readonly": True},
        "virtual_path": {"readonly": True},
        "physical_path": {"readonly": True},
        "bindings": {"readonly": True},
        "frameworks": {"readonly": True},
        "configurations": {"readonly": True},
        "directories": {"readonly": True},
        "display_name": {"readonly": True},
        "tags": {"readonly": True},
        "static_folders": {"readonly": True},
        "machine_display_name": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "server_type": {"readonly": True},
        "errors": {"readonly": True},
        "appliance_names": {"readonly": True},
        "has_errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "has_database_dependency": {"key": "hasDatabaseDependency", "type": "bool"},
        "is_external_logging_configured": {"key": "isExternalLoggingConfigured", "type": "bool"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_name": {"key": "webServerName", "type": "str"},
        "machine_arm_ids": {"key": "machineArmIds", "type": "[str]"},
        "virtual_path": {"key": "virtualPath", "type": "str"},
        "physical_path": {"key": "physicalPath", "type": "str"},
        "bindings": {"key": "bindings", "type": "[FrontEndBinding]"},
        "frameworks": {"key": "frameworks", "type": "[WebApplicationFramework]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfigurationUnit]"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectoryUnit]"},
        "display_name": {"key": "displayName", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "static_folders": {"key": "staticFolders", "type": "[str]"},
        "machine_display_name": {"key": "machineDisplayName", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "has_errors": {"key": "hasErrors", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.has_database_dependency = None
        self.is_external_logging_configured = None
        self.web_server_id = None
        self.web_server_name = None
        self.machine_arm_ids = None
        self.virtual_path = None
        self.physical_path = None
        self.bindings = None
        self.frameworks = None
        self.configurations = None
        self.directories = None
        self.display_name = None
        self.tags = None
        self.static_folders = None
        self.machine_display_name = None
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.server_type = None
        self.errors = None
        self.appliance_names = None
        self.has_errors = None
        self.provisioning_state = None


class TomcatWebApplications(ProxyResource):
    """Web application REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.TomcatWebApplicationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "TomcatWebApplicationProperties"},
    }

    def __init__(self, *, properties: Optional["_models.TomcatWebApplicationProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.TomcatWebApplicationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class TomcatWebApplicationsListResult(_serialization.Model):
    """The response of a TomcatWebApplications list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The TomcatWebApplications items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.TomcatWebApplications]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[TomcatWebApplications]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.TomcatWebApplications"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The TomcatWebApplications items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.TomcatWebApplications]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class TomcatWebServerProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web server properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar services: Gets or sets the services defined in the server.
    :vartype services: list[~azure.mgmt.migrate.models.TomcatServiceUnit]
    :ivar catalina_home: Catalina Home.
    :vartype catalina_home: str
    :ivar jvm_version: Version  of the JVM.
    :vartype jvm_version: str
    :ivar session_persistence_mechanism: session persistence mechanism.
    :vartype session_persistence_mechanism: str
    :ivar is_clustering_present: Gets a value indicating whether application is deleted.
    :vartype is_clustering_present: bool
    :ivar is_memory_realm_present: Gets a value indicating whether application is deleted.
    :vartype is_memory_realm_present: bool
    :ivar is_session_tracking_present: is session tracking present.
    :vartype is_session_tracking_present: bool
    :ivar is_access_log_valve_present: is access log valve present.
    :vartype is_access_log_valve_present: bool
    :ivar max_memory_usage_in_mb: max memory usage in mb.
    :vartype max_memory_usage_in_mb: str
    :ivar configuration_location: Gets the configuration location.
    :vartype configuration_location: str
    :ivar version: Gets the configuration location.
    :vartype version: str
    :ivar machine_ids: Gets the list of machines.
    :vartype machine_ids: list[str]
    :ivar web_applications: Gets the list of web applications.
    :vartype web_applications: list[str]
    :ivar display_name: Gets the display name.
    :vartype display_name: str
    :ivar server_fqdn: Gets the server FQDN.
    :vartype server_fqdn: str
    :ivar run_as_account_id: Gets the run as account id.
    :vartype run_as_account_id: str
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar server_type: Gets the server type.
    :vartype server_type: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar has_errors: Gets a value indicating whether the WebApp has errors or not.
    :vartype has_errors: bool
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "catalina_home": {"readonly": True},
        "jvm_version": {"readonly": True},
        "session_persistence_mechanism": {"readonly": True},
        "is_memory_realm_present": {"readonly": True},
        "is_session_tracking_present": {"readonly": True},
        "is_access_log_valve_present": {"readonly": True},
        "max_memory_usage_in_mb": {"readonly": True},
        "configuration_location": {"readonly": True},
        "version": {"readonly": True},
        "machine_ids": {"readonly": True},
        "web_applications": {"readonly": True},
        "display_name": {"readonly": True},
        "server_fqdn": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "server_type": {"readonly": True},
        "errors": {"readonly": True},
        "appliance_names": {"readonly": True},
        "has_errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "services": {"key": "services", "type": "[TomcatServiceUnit]"},
        "catalina_home": {"key": "catalinaHome", "type": "str"},
        "jvm_version": {"key": "jvmVersion", "type": "str"},
        "session_persistence_mechanism": {"key": "sessionPersistenceMechanism", "type": "str"},
        "is_clustering_present": {"key": "isClusteringPresent", "type": "bool"},
        "is_memory_realm_present": {"key": "isMemoryRealmPresent", "type": "bool"},
        "is_session_tracking_present": {"key": "isSessionTrackingPresent", "type": "bool"},
        "is_access_log_valve_present": {"key": "isAccessLogValvePresent", "type": "bool"},
        "max_memory_usage_in_mb": {"key": "maxMemoryUsageInMb", "type": "str"},
        "configuration_location": {"key": "configurationLocation", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "machine_ids": {"key": "machineIds", "type": "[str]"},
        "web_applications": {"key": "webApplications", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "server_fqdn": {"key": "serverFqdn", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "has_errors": {"key": "hasErrors", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        services: Optional[List["_models.TomcatServiceUnit"]] = None,
        is_clustering_present: Optional[bool] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword services: Gets or sets the services defined in the server.
        :paramtype services: list[~azure.mgmt.migrate.models.TomcatServiceUnit]
        :keyword is_clustering_present: Gets a value indicating whether application is deleted.
        :paramtype is_clustering_present: bool
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        """
        super().__init__(**kwargs)
        self.services = services
        self.catalina_home = None
        self.jvm_version = None
        self.session_persistence_mechanism = None
        self.is_clustering_present = is_clustering_present
        self.is_memory_realm_present = None
        self.is_session_tracking_present = None
        self.is_access_log_valve_present = None
        self.max_memory_usage_in_mb = None
        self.configuration_location = None
        self.version = None
        self.machine_ids = None
        self.web_applications = None
        self.display_name = None
        self.server_fqdn = None
        self.run_as_account_id = None
        self.operating_system_details = operating_system_details
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.server_type = None
        self.errors = None
        self.appliance_names = None
        self.has_errors = None
        self.provisioning_state = None


class TomcatWebServers(ProxyResource):
    """Web server REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.TomcatWebServerProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "TomcatWebServerProperties"},
    }

    def __init__(self, *, properties: Optional["_models.TomcatWebServerProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.TomcatWebServerProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class TomcatWebServersListResult(_serialization.Model):
    """The response of a TomcatWebServers list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The TomcatWebServers items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.TomcatWebServers]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[TomcatWebServers]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.TomcatWebServers"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The TomcatWebServers items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.TomcatWebServers]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class UpdateMachineDepMapStatus(_serialization.Model):
    """Defines class that represents input to enable or disable DMP on machine

    .. code-block::

         for cosmos entity operation.

    :ivar machines: Gets or sets the machine collection.
    :vartype machines: list[~azure.mgmt.migrate.models.DependencyMapMachineInput]
    """

    _attribute_map = {
        "machines": {"key": "machines", "type": "[DependencyMapMachineInput]"},
    }

    def __init__(self, *, machines: Optional[List["_models.DependencyMapMachineInput"]] = None, **kwargs: Any) -> None:
        """
        :keyword machines: Gets or sets the machine collection.
        :paramtype machines: list[~azure.mgmt.migrate.models.DependencyMapMachineInput]
        """
        super().__init__(**kwargs)
        self.machines = machines


class UpdateMachineRunAsAccount(_serialization.Model):
    """Defines class that represents input to update RunAsAccount on machine

    .. code-block::

         for cosmos entity operation.

    :ivar machines: Gets or sets the machine collection.
    :vartype machines: list[~azure.mgmt.migrate.models.RunAsAccountMachineInput]
    """

    _attribute_map = {
        "machines": {"key": "machines", "type": "[RunAsAccountMachineInput]"},
    }

    def __init__(self, *, machines: Optional[List["_models.RunAsAccountMachineInput"]] = None, **kwargs: Any) -> None:
        """
        :keyword machines: Gets or sets the machine collection.
        :paramtype machines: list[~azure.mgmt.migrate.models.RunAsAccountMachineInput]
        """
        super().__init__(**kwargs)
        self.machines = machines


class UpdateMachineTags(_serialization.Model):
    """Defines class that represents input to update Tags on machine

    .. code-block::

         for cosmos entity operation.

    :ivar machines: Gets or sets the machine collection.
    :vartype machines: list[~azure.mgmt.migrate.models.TagsMachineInput]
    """

    _attribute_map = {
        "machines": {"key": "machines", "type": "[TagsMachineInput]"},
    }

    def __init__(self, *, machines: Optional[List["_models.TagsMachineInput"]] = None, **kwargs: Any) -> None:
        """
        :keyword machines: Gets or sets the machine collection.
        :paramtype machines: list[~azure.mgmt.migrate.models.TagsMachineInput]
        """
        super().__init__(**kwargs)
        self.machines = machines


class V20180501PreviewVmwareRunAsAccount(_serialization.Model):
    """Run as account REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Relative URL to get this run as account.
    :vartype id: str
    :ivar name: Gets the Name of the Run as account.
    :vartype name: str
    :ivar type: Handled by resource provider. Type =
     Microsoft.OffAzure/VMWareSites/RunAsAccounts.
    :vartype type: str
    :ivar properties: Gets nested properties.
    :vartype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "properties": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "RunAsAccountProperties"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.properties = None


class V20180501PreviewVmwareRunAsAccountVmwareRunAsAccountCollection(
    _serialization.Model
):  # pylint: disable=name-too-long
    """Collection of VMware run as accounts.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Gets the list of run as accounts.
    :vartype value: list[~azure.mgmt.migrate.models.V20180501PreviewVmwareRunAsAccount]
    :ivar next_link: Gets the value of next link.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[V20180501PreviewVmwareRunAsAccount]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.V20180501PreviewVmwareRunAsAccount"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets the list of run as accounts.
        :paramtype value: list[~azure.mgmt.migrate.models.V20180501PreviewVmwareRunAsAccount]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class V20190501PreviewSasUriResponse(_serialization.Model):
    """Import URI response class.

    :ivar job_arm_id: Gets or sets the job ARM ID.
    :vartype job_arm_id: str
    :ivar uri: Gets or sets the SAS URI.
    :vartype uri: str
    """

    _attribute_map = {
        "job_arm_id": {"key": "jobArmId", "type": "str"},
        "uri": {"key": "uri", "type": "str"},
    }

    def __init__(self, *, job_arm_id: Optional[str] = None, uri: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword job_arm_id: Gets or sets the job ARM ID.
        :paramtype job_arm_id: str
        :keyword uri: Gets or sets the SAS URI.
        :paramtype uri: str
        """
        super().__init__(**kwargs)
        self.job_arm_id = job_arm_id
        self.uri = uri


class Vcenter(ProxyResource):
    """A vcenter resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.VcenterProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "VcenterProperties"},
    }

    def __init__(self, *, properties: Optional["_models.VcenterProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.VcenterProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class VcenterListResult(_serialization.Model):
    """The response of a Vcenter list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Vcenter items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.Vcenter]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Vcenter]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Vcenter"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Vcenter items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.Vcenter]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VcenterProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The properties of VMwareSiteResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar run_as_account_id: Gets or sets the run as account ID of the vCenter.
    :vartype run_as_account_id: str
    :ivar errors: Gets the errors.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar created_timestamp: Gets the timestamp marking vCenter creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last updated on the vCenter.
    :vartype updated_timestamp: str
    :ivar fqdn: Gets or sets the FQDN/IPAddress of the vCenter.
    :vartype fqdn: str
    :ivar port: Gets or sets the port of the vCenter.
    :vartype port: str
    :ivar version: Gets the version of the vCenter.
    :vartype version: str
    :ivar perf_statistics_level: Gets the performance statistics enabled on the vCenter.
    :vartype perf_statistics_level: str
    :ivar instance_uuid: Gets the instance UUID of the vCenter.
    :vartype instance_uuid: str
    :ivar friendly_name: Gets or sets the friendly name of the vCenter.
    :vartype friendly_name: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "errors": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "version": {"readonly": True},
        "perf_statistics_level": {"readonly": True},
        "instance_uuid": {"readonly": True},
    }

    _attribute_map = {
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "fqdn": {"key": "fqdn", "type": "str"},
        "port": {"key": "port", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "perf_statistics_level": {"key": "perfStatisticsLevel", "type": "str"},
        "instance_uuid": {"key": "instanceUuid", "type": "str"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        run_as_account_id: Optional[str] = None,
        fqdn: Optional[str] = None,
        port: Optional[str] = None,
        friendly_name: Optional[str] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword run_as_account_id: Gets or sets the run as account ID of the vCenter.
        :paramtype run_as_account_id: str
        :keyword fqdn: Gets or sets the FQDN/IPAddress of the vCenter.
        :paramtype fqdn: str
        :keyword port: Gets or sets the port of the vCenter.
        :paramtype port: str
        :keyword friendly_name: Gets or sets the friendly name of the vCenter.
        :paramtype friendly_name: str
        :keyword provisioning_state: The status of the last operation. Known values are: "Created",
         "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
        :paramtype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.run_as_account_id = run_as_account_id
        self.errors = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.fqdn = fqdn
        self.port = port
        self.version = None
        self.perf_statistics_level = None
        self.instance_uuid = None
        self.friendly_name = friendly_name
        self.provisioning_state = provisioning_state


class VmwareDatastore(_serialization.Model):
    """Second level object returned as part of VMware host REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar uuid: Data store UUID.
    :vartype uuid: str
    :ivar capacity_in_gb: Capacity of the data store.
    :vartype capacity_in_gb: float
    :ivar free_space_in_gb: Free space of the data store.
    :vartype free_space_in_gb: float
    :ivar type: Type of the data store. Known values are: "Unknown", "CIFS", "NFS", "NFS41",
     "PMEM", "VFFS", "VMFS", "VSAN", and "VVOL".
    :vartype type: str or ~azure.mgmt.migrate.models.VMwareDatastoreType
    :ivar symbolic_name: Symbolic name of the data store.
    :vartype symbolic_name: str
    """

    _validation = {
        "uuid": {"readonly": True},
        "capacity_in_gb": {"readonly": True},
        "free_space_in_gb": {"readonly": True},
        "type": {"readonly": True},
        "symbolic_name": {"readonly": True},
    }

    _attribute_map = {
        "uuid": {"key": "uuid", "type": "str"},
        "capacity_in_gb": {"key": "capacityInGb", "type": "float"},
        "free_space_in_gb": {"key": "freeSpaceInGb", "type": "float"},
        "type": {"key": "type", "type": "str"},
        "symbolic_name": {"key": "symbolicName", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.uuid = None
        self.capacity_in_gb = None
        self.free_space_in_gb = None
        self.type = None
        self.symbolic_name = None


class VmwareDisk(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Second level object returned as part of Machine REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar uuid: Disk UUID.
    :vartype uuid: str
    :ivar label: Label of the disk.
    :vartype label: str
    :ivar disk_provisioning_policy: The provisioning policy of the disk.
                 It is Thin or Thick or
     Unknown for the VMWare VMDK.
    :vartype disk_provisioning_policy: str
    :ivar disk_scrubbing_policy: The scrubbing policy of disks which can be
                 eagerly zeroed or
     lazily zeroed.
    :vartype disk_scrubbing_policy: str
    :ivar disk_mode: Disk mode property used for identifying independent disks.
    :vartype disk_mode: str
    :ivar controller_type: Gets or sets a value indicating the type of the disk controller type.
    :vartype controller_type: str
    :ivar max_size_in_bytes: Gets or sets Bytes allocated for the disk.
    :vartype max_size_in_bytes: int
    :ivar name: Gets or sets Name of the disk.
    :vartype name: str
    :ivar disk_type: Gets or sets Type of the disk.
    :vartype disk_type: str
    :ivar lun: Gets or sets LUN of the disk.
    :vartype lun: int
    :ivar path: Gets or sets Path of the disk.
    :vartype path: str
    """

    _validation = {
        "uuid": {"readonly": True},
        "label": {"readonly": True},
        "disk_provisioning_policy": {"readonly": True},
        "disk_scrubbing_policy": {"readonly": True},
        "disk_mode": {"readonly": True},
        "controller_type": {"readonly": True},
    }

    _attribute_map = {
        "uuid": {"key": "uuid", "type": "str"},
        "label": {"key": "label", "type": "str"},
        "disk_provisioning_policy": {"key": "diskProvisioningPolicy", "type": "str"},
        "disk_scrubbing_policy": {"key": "diskScrubbingPolicy", "type": "str"},
        "disk_mode": {"key": "diskMode", "type": "str"},
        "controller_type": {"key": "controllerType", "type": "str"},
        "max_size_in_bytes": {"key": "maxSizeInBytes", "type": "int"},
        "name": {"key": "name", "type": "str"},
        "disk_type": {"key": "diskType", "type": "str"},
        "lun": {"key": "lun", "type": "int"},
        "path": {"key": "path", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_size_in_bytes: Optional[int] = None,
        name: Optional[str] = None,
        disk_type: Optional[str] = None,
        lun: Optional[int] = None,
        path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_size_in_bytes: Gets or sets Bytes allocated for the disk.
        :paramtype max_size_in_bytes: int
        :keyword name: Gets or sets Name of the disk.
        :paramtype name: str
        :keyword disk_type: Gets or sets Type of the disk.
        :paramtype disk_type: str
        :keyword lun: Gets or sets LUN of the disk.
        :paramtype lun: int
        :keyword path: Gets or sets Path of the disk.
        :paramtype path: str
        """
        super().__init__(**kwargs)
        self.uuid = None
        self.label = None
        self.disk_provisioning_policy = None
        self.disk_scrubbing_policy = None
        self.disk_mode = None
        self.controller_type = None
        self.max_size_in_bytes = max_size_in_bytes
        self.name = name
        self.disk_type = disk_type
        self.lun = lun
        self.path = path


class VmwareHost(ProxyResource):
    """A host resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.VmwareHostProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "VmwareHostProperties"},
    }

    def __init__(self, *, properties: Optional["_models.VmwareHostProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.VmwareHostProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class VmwareHostListResult(_serialization.Model):
    """The response of a VmwareHost list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VmwareHost items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.VmwareHost]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VmwareHost]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.VmwareHost"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The VmwareHost items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.VmwareHost]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VmwareHostProperties(_serialization.Model):
    """Class for host properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_timestamp: Gets the timestamp marking VMware host creation.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last updated on the VMware host.
    :vartype updated_timestamp: str
    :ivar datastores: Gets the data stores.
    :vartype datastores: list[~azure.mgmt.migrate.models.VmwareDatastore]
    :ivar vcenter_id: Gets the V-center ID.
    :vartype vcenter_id: str
    :ivar uuid: Gets the instance UUID of the vmware host.
    :vartype uuid: str
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "datastores": {"readonly": True},
        "vcenter_id": {"readonly": True},
        "uuid": {"readonly": True},
        "appliance_names": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "datastores": {"key": "datastores", "type": "[VmwareDatastore]"},
        "vcenter_id": {"key": "vcenterId", "type": "str"},
        "uuid": {"key": "uuid", "type": "str"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.created_timestamp = None
        self.updated_timestamp = None
        self.datastores = None
        self.vcenter_id = None
        self.uuid = None
        self.appliance_names = None
        self.provisioning_state = None


class VmwareJob(ProxyResource):
    """A host resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.JobProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "JobProperties"},
    }

    def __init__(self, *, properties: Optional["_models.JobProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.JobProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class VmwareJobListResult(_serialization.Model):
    """The response of a VmwareJob list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VmwareJob items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.VmwareJob]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VmwareJob]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.VmwareJob"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The VmwareJob items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.VmwareJob]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VmwareMachineProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for machine properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar v_center_fqdn: VCenter FQDN/IPAddress.
    :vartype v_center_fqdn: str
    :ivar v_center_id: VCenter ARM ID.
    :vartype v_center_id: str
    :ivar instance_uuid: On-premise Instance UUID of the machine.
    :vartype instance_uuid: str
    :ivar data_center_scope: Scope of the data center.
    :vartype data_center_scope: str
    :ivar description: User description of the machine.
    :vartype description: str
    :ivar disks: Disks attached to the machine.
    :vartype disks: list[~azure.mgmt.migrate.models.VmwareDisk]
    :ivar host_in_maintenance_mode: Indicates whether the host is in maintenance mode.
    :vartype host_in_maintenance_mode: bool
    :ivar host_name: The host name.
    :vartype host_name: str
    :ivar host_power_state: The host power state.
    :vartype host_power_state: str
    :ivar host_version: The host version.
    :vartype host_version: str
    :ivar network_adapters: Network adapters attached to the machine.
    :vartype network_adapters: list[~azure.mgmt.migrate.models.VmwareNetworkAdapter]
    :ivar v_mware_tools_status: VMware tools status.
    :vartype v_mware_tools_status: str
    :ivar v_mware_tools_version: VMware tools version.
    :vartype v_mware_tools_version: str
    :ivar change_tracking_supported: Value indicating whether change tracking is supported.
    :vartype change_tracking_supported: bool
    :ivar change_tracking_enabled: Value indicating whether change tracking is enabled.
    :vartype change_tracking_enabled: bool
    :ivar max_snapshots: Maximum number of snapshots for the VM.            Default value is -1.
    :vartype max_snapshots: int
    :ivar disk_enabled_uuid: Gets or sets whether Disk Enabled UUID is set or not.
    :vartype disk_enabled_uuid: str
    :ivar number_of_snapshots: Number of snapshots for the VM.             Default value is -1.
    :vartype number_of_snapshots: int
    :ivar alt_guest_name: Gets or sets the machine alt guest name.
    :vartype alt_guest_name: str
    :ivar power_status: Gets the Machine power status.
    :vartype power_status: str
    :ivar vm_fqdn: Gets the VM FQDN.
    :vartype vm_fqdn: str
    :ivar vm_configuration_file_location: Gets the Root location of the VM configuration file.
    :vartype vm_configuration_file_location: str
    :ivar firmware: Gets or sets the firmware.
    :vartype firmware: str
    :ivar guest_os_details: Operating System Details extracted from the guest
                 bu executing
     script inside the guest VM.
    :vartype guest_os_details: ~azure.mgmt.migrate.models.GuestOsDetails
    :ivar number_of_applications: Number of applications installed in the guest VM.
    :vartype number_of_applications: int
    :ivar guest_details_discovery_timestamp: The last time at which the Guest Details was
     discovered
                 or the
     error while discovering guest details based discovery
                 of the
     machine.
    :vartype guest_details_discovery_timestamp: ~datetime.datetime
    :ivar is_guest_details_discovery_in_progress: Whether Refresh Fabric Layout Guest Details has
     been completed once.

       Portal will show discovery in progress, if this value is true.
    :vartype is_guest_details_discovery_in_progress: bool
    :ivar dependency_mapping: Gets or sets if dependency mapping feature is enabled or not
                 for
     the VM.
    :vartype dependency_mapping: str
    :ivar dependency_mapping_start_time: Gets or sets when dependency mapping collection is last
     started.
    :vartype dependency_mapping_start_time: ~datetime.datetime
    :ivar dependency_mapping_end_time: Gets or sets when dependency mapping collection was last
     disabled.
    :vartype dependency_mapping_end_time: str
    :ivar run_as_account_id: Gets or sets the run as account ID of the machine.
    :vartype run_as_account_id: str
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar errors: Errors for machine.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar application_discovery: Gets the data related to application discovery.
    :vartype application_discovery: ~azure.mgmt.migrate.models.ApplicationDiscovery
    :ivar dependency_map_discovery: Gets the data related to dependency map discovery.
    :vartype dependency_map_discovery: ~azure.mgmt.migrate.models.DependencyMapDiscovery
    :ivar static_discovery: Gets the data related to static discovery.
    :vartype static_discovery: ~azure.mgmt.migrate.models.StaticDiscovery
    :ivar sql_discovery: Gets the data related to SQL discovery.
    :vartype sql_discovery: ~azure.mgmt.migrate.models.SqlDiscovery
    :ivar web_app_discovery: Gets the data related to Web application discovery.
    :vartype web_app_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar oracle_discovery: Gets the data related to Oracle discovery.
    :vartype oracle_discovery: ~azure.mgmt.migrate.models.OracleDiscovery
    :ivar spring_boot_discovery: Gets the data related to SpringBoot discovery.
    :vartype spring_boot_discovery: ~azure.mgmt.migrate.models.SpringBootDiscovery
    :ivar iis_discovery: Gets the data related to iis discovery.
    :vartype iis_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar tomcat_discovery: Gets the data related to tomcat discovery.
    :vartype tomcat_discovery: ~azure.mgmt.migrate.models.WebAppDiscovery
    :ivar apps_and_roles: Apps And Roles of the Server.
    :vartype apps_and_roles: ~azure.mgmt.migrate.models.AppsAndRoles
    :ivar product_support_status: product support status.
    :vartype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
    :ivar number_of_processor_core: Gets or sets the Number of Processor Cores
                 allocated for the
     machine.
    :vartype number_of_processor_core: int
    :ivar allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
    :vartype allocated_memory_in_mb: float
    :ivar operating_system_details: Gets or sets the Operating System Details installed on the
     machine.
    :vartype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
    :ivar bios_serial_number: Gets or sets the Machine BIOS serial number.
    :vartype bios_serial_number: str
    :ivar bios_guid: Gets or sets the BIOS GUID.
    :vartype bios_guid: str
    :ivar display_name: Gets the Display name of the machine.
    :vartype display_name: str
    :ivar is_deleted: Value indicating whether VM is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the marking machine creation.
    :vartype created_timestamp: str
    :ivar tags: Gets or sets tags on the VMware machine.
    :vartype tags: dict[str, str]
    :ivar updated_timestamp: Gets the timestamp marking last updated on the machine.
    :vartype updated_timestamp: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Created",
     "Updated", "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    :ivar arc_discovery: Gets the data related to Azure arc discovery.
    :vartype arc_discovery: ~azure.mgmt.migrate.models.ArcDiscovery
    """

    _validation = {
        "v_center_fqdn": {"readonly": True},
        "v_center_id": {"readonly": True},
        "instance_uuid": {"readonly": True},
        "data_center_scope": {"readonly": True},
        "description": {"readonly": True},
        "disks": {"readonly": True},
        "host_in_maintenance_mode": {"readonly": True},
        "host_name": {"readonly": True},
        "host_power_state": {"readonly": True},
        "host_version": {"readonly": True},
        "network_adapters": {"readonly": True},
        "v_mware_tools_status": {"readonly": True},
        "v_mware_tools_version": {"readonly": True},
        "change_tracking_supported": {"readonly": True},
        "change_tracking_enabled": {"readonly": True},
        "max_snapshots": {"readonly": True},
        "disk_enabled_uuid": {"readonly": True},
        "number_of_snapshots": {"readonly": True},
        "alt_guest_name": {"readonly": True},
        "power_status": {"readonly": True},
        "vm_fqdn": {"readonly": True},
        "vm_configuration_file_location": {"readonly": True},
        "guest_os_details": {"readonly": True},
        "number_of_applications": {"readonly": True},
        "guest_details_discovery_timestamp": {"readonly": True},
        "is_guest_details_discovery_in_progress": {"readonly": True},
        "dependency_mapping": {"readonly": True},
        "dependency_mapping_start_time": {"readonly": True},
        "dependency_mapping_end_time": {"readonly": True},
        "appliance_names": {"readonly": True},
        "errors": {"readonly": True},
        "application_discovery": {"readonly": True},
        "dependency_map_discovery": {"readonly": True},
        "static_discovery": {"readonly": True},
        "sql_discovery": {"readonly": True},
        "web_app_discovery": {"readonly": True},
        "oracle_discovery": {"readonly": True},
        "spring_boot_discovery": {"readonly": True},
        "iis_discovery": {"readonly": True},
        "tomcat_discovery": {"readonly": True},
        "apps_and_roles": {"readonly": True},
        "display_name": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "arc_discovery": {"readonly": True},
    }

    _attribute_map = {
        "v_center_fqdn": {"key": "vCenterFqdn", "type": "str"},
        "v_center_id": {"key": "vCenterId", "type": "str"},
        "instance_uuid": {"key": "instanceUuid", "type": "str"},
        "data_center_scope": {"key": "dataCenterScope", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "disks": {"key": "disks", "type": "[VmwareDisk]"},
        "host_in_maintenance_mode": {"key": "hostInMaintenanceMode", "type": "bool"},
        "host_name": {"key": "hostName", "type": "str"},
        "host_power_state": {"key": "hostPowerState", "type": "str"},
        "host_version": {"key": "hostVersion", "type": "str"},
        "network_adapters": {"key": "networkAdapters", "type": "[VmwareNetworkAdapter]"},
        "v_mware_tools_status": {"key": "vMwareToolsStatus", "type": "str"},
        "v_mware_tools_version": {"key": "vMwareToolsVersion", "type": "str"},
        "change_tracking_supported": {"key": "changeTrackingSupported", "type": "bool"},
        "change_tracking_enabled": {"key": "changeTrackingEnabled", "type": "bool"},
        "max_snapshots": {"key": "maxSnapshots", "type": "int"},
        "disk_enabled_uuid": {"key": "diskEnabledUuid", "type": "str"},
        "number_of_snapshots": {"key": "numberOfSnapshots", "type": "int"},
        "alt_guest_name": {"key": "altGuestName", "type": "str"},
        "power_status": {"key": "powerStatus", "type": "str"},
        "vm_fqdn": {"key": "vmFqdn", "type": "str"},
        "vm_configuration_file_location": {"key": "vmConfigurationFileLocation", "type": "str"},
        "firmware": {"key": "firmware", "type": "str"},
        "guest_os_details": {"key": "guestOsDetails", "type": "GuestOsDetails"},
        "number_of_applications": {"key": "numberOfApplications", "type": "int"},
        "guest_details_discovery_timestamp": {"key": "guestDetailsDiscoveryTimestamp", "type": "iso-8601"},
        "is_guest_details_discovery_in_progress": {"key": "isGuestDetailsDiscoveryInProgress", "type": "bool"},
        "dependency_mapping": {"key": "dependencyMapping", "type": "str"},
        "dependency_mapping_start_time": {"key": "dependencyMappingStartTime", "type": "iso-8601"},
        "dependency_mapping_end_time": {"key": "dependencyMappingEndTime", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "application_discovery": {"key": "applicationDiscovery", "type": "ApplicationDiscovery"},
        "dependency_map_discovery": {"key": "dependencyMapDiscovery", "type": "DependencyMapDiscovery"},
        "static_discovery": {"key": "staticDiscovery", "type": "StaticDiscovery"},
        "sql_discovery": {"key": "sqlDiscovery", "type": "SqlDiscovery"},
        "web_app_discovery": {"key": "webAppDiscovery", "type": "WebAppDiscovery"},
        "oracle_discovery": {"key": "oracleDiscovery", "type": "OracleDiscovery"},
        "spring_boot_discovery": {"key": "springBootDiscovery", "type": "SpringBootDiscovery"},
        "iis_discovery": {"key": "iisDiscovery", "type": "WebAppDiscovery"},
        "tomcat_discovery": {"key": "tomcatDiscovery", "type": "WebAppDiscovery"},
        "apps_and_roles": {"key": "appsAndRoles", "type": "AppsAndRoles"},
        "product_support_status": {"key": "productSupportStatus", "type": "ProductSupportStatus"},
        "number_of_processor_core": {"key": "numberOfProcessorCore", "type": "int"},
        "allocated_memory_in_mb": {"key": "allocatedMemoryInMb", "type": "float"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystem"},
        "bios_serial_number": {"key": "biosSerialNumber", "type": "str"},
        "bios_guid": {"key": "biosGuid", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "arc_discovery": {"key": "arcDiscovery", "type": "ArcDiscovery"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        firmware: Optional[str] = None,
        run_as_account_id: Optional[str] = None,
        product_support_status: Optional["_models.ProductSupportStatus"] = None,
        number_of_processor_core: Optional[int] = None,
        allocated_memory_in_mb: Optional[float] = None,
        operating_system_details: Optional["_models.OperatingSystem"] = None,
        bios_serial_number: Optional[str] = None,
        bios_guid: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword firmware: Gets or sets the firmware.
        :paramtype firmware: str
        :keyword run_as_account_id: Gets or sets the run as account ID of the machine.
        :paramtype run_as_account_id: str
        :keyword product_support_status: product support status.
        :paramtype product_support_status: ~azure.mgmt.migrate.models.ProductSupportStatus
        :keyword number_of_processor_core: Gets or sets the Number of Processor Cores
                     allocated for the
         machine.
        :paramtype number_of_processor_core: int
        :keyword allocated_memory_in_mb: Gets or sets the allocated Memory in MB.
        :paramtype allocated_memory_in_mb: float
        :keyword operating_system_details: Gets or sets the Operating System Details installed on the
         machine.
        :paramtype operating_system_details: ~azure.mgmt.migrate.models.OperatingSystem
        :keyword bios_serial_number: Gets or sets the Machine BIOS serial number.
        :paramtype bios_serial_number: str
        :keyword bios_guid: Gets or sets the BIOS GUID.
        :paramtype bios_guid: str
        :keyword tags: Gets or sets tags on the VMware machine.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.v_center_fqdn = None
        self.v_center_id = None
        self.instance_uuid = None
        self.data_center_scope = None
        self.description = None
        self.disks = None
        self.host_in_maintenance_mode = None
        self.host_name = None
        self.host_power_state = None
        self.host_version = None
        self.network_adapters = None
        self.v_mware_tools_status = None
        self.v_mware_tools_version = None
        self.change_tracking_supported = None
        self.change_tracking_enabled = None
        self.max_snapshots = None
        self.disk_enabled_uuid = None
        self.number_of_snapshots = None
        self.alt_guest_name = None
        self.power_status = None
        self.vm_fqdn = None
        self.vm_configuration_file_location = None
        self.firmware = firmware
        self.guest_os_details = None
        self.number_of_applications = None
        self.guest_details_discovery_timestamp = None
        self.is_guest_details_discovery_in_progress = None
        self.dependency_mapping = None
        self.dependency_mapping_start_time = None
        self.dependency_mapping_end_time = None
        self.run_as_account_id = run_as_account_id
        self.appliance_names = None
        self.errors = None
        self.application_discovery = None
        self.dependency_map_discovery = None
        self.static_discovery = None
        self.sql_discovery = None
        self.web_app_discovery = None
        self.oracle_discovery = None
        self.spring_boot_discovery = None
        self.iis_discovery = None
        self.tomcat_discovery = None
        self.apps_and_roles = None
        self.product_support_status = product_support_status
        self.number_of_processor_core = number_of_processor_core
        self.allocated_memory_in_mb = allocated_memory_in_mb
        self.operating_system_details = operating_system_details
        self.bios_serial_number = bios_serial_number
        self.bios_guid = bios_guid
        self.display_name = None
        self.is_deleted = None
        self.created_timestamp = None
        self.tags = tags
        self.updated_timestamp = None
        self.provisioning_state = None
        self.arc_discovery = None


class VmwareMachineSoftwareInventory(ProxyResource):
    """An software inventory resource belonging to a machine resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.MachineSoftwareInventoryProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "MachineSoftwareInventoryProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.MachineSoftwareInventoryProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.MachineSoftwareInventoryProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class VmwareMachineSoftwareInventoryListResult(_serialization.Model):
    """The response of a VmwareMachineSoftwareInventory list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VmwareMachineSoftwareInventory items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.VmwareMachineSoftwareInventory]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VmwareMachineSoftwareInventory]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.VmwareMachineSoftwareInventory"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The VmwareMachineSoftwareInventory items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.VmwareMachineSoftwareInventory]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VmwareNetworkAdapter(_serialization.Model):
    """Second level object represented in responses as part of Machine REST resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar label: Label of the NIC.
    :vartype label: str
    :ivar adapter_type: Gets or sets the adapter type.
    :vartype adapter_type: str
    :ivar nic_id: Gets or sets the NIC Id.
    :vartype nic_id: str
    :ivar mac_address: Gets or sets Mac address of the NIC.
    :vartype mac_address: str
    :ivar ip_address_list: Gets IP addresses for the machine.
    :vartype ip_address_list: list[str]
    :ivar network_name: Gets or sets Network Name.
    :vartype network_name: str
    :ivar ip_address_type: Gets or sets Type of the IP address.
    :vartype ip_address_type: str
    """

    _validation = {
        "label": {"readonly": True},
        "adapter_type": {"readonly": True},
        "ip_address_list": {"readonly": True},
    }

    _attribute_map = {
        "label": {"key": "label", "type": "str"},
        "adapter_type": {"key": "adapterType", "type": "str"},
        "nic_id": {"key": "nicId", "type": "str"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "ip_address_list": {"key": "ipAddressList", "type": "[str]"},
        "network_name": {"key": "networkName", "type": "str"},
        "ip_address_type": {"key": "ipAddressType", "type": "str"},
    }

    def __init__(
        self,
        *,
        nic_id: Optional[str] = None,
        mac_address: Optional[str] = None,
        network_name: Optional[str] = None,
        ip_address_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nic_id: Gets or sets the NIC Id.
        :paramtype nic_id: str
        :keyword mac_address: Gets or sets Mac address of the NIC.
        :paramtype mac_address: str
        :keyword network_name: Gets or sets Network Name.
        :paramtype network_name: str
        :keyword ip_address_type: Gets or sets Type of the IP address.
        :paramtype ip_address_type: str
        """
        super().__init__(**kwargs)
        self.label = None
        self.adapter_type = None
        self.nic_id = nic_id
        self.mac_address = mac_address
        self.ip_address_list = None
        self.network_name = network_name
        self.ip_address_type = ip_address_type


class VmwareRunAsAccountResource(ProxyResource):
    """A runasaccount resource belonging to a site resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "RunAsAccountProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RunAsAccountProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class VmwareRunAsAccountResourceListResult(_serialization.Model):
    """The response of a VmwareRunAsAccountResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VmwareRunAsAccountResource items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.VmwareRunAsAccountResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VmwareRunAsAccountResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.VmwareRunAsAccountResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The VmwareRunAsAccountResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.VmwareRunAsAccountResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VmwareSite(TrackedResource):
    """A VmwareSite.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.SitesProperties
    :ivar e_tag: If eTag is provided in the response body, it may also be provided as a header per
     the normal etag convention.  Entity tags are used for comparing two or more entities from the
     same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match
     (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
    :vartype e_tag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "e_tag": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "SitesProperties"},
        "e_tag": {"key": "eTag", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.SitesProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.SitesProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.e_tag = None


class VmwareSiteListResult(_serialization.Model):
    """The response of a VmwareSite list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VmwareSite items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.VmwareSite]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VmwareSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.VmwareSite"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The VmwareSite items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.VmwareSite]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VmwareSiteUpdate(_serialization.Model):
    """The type used for update operations of the VmwareSite.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The updatable properties of the VmwareSite.
    :vartype properties: ~azure.mgmt.migrate.models.VmwareSiteUpdateProperties
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "VmwareSiteUpdateProperties"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.VmwareSiteUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The updatable properties of the VmwareSite.
        :paramtype properties: ~azure.mgmt.migrate.models.VmwareSiteUpdateProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties


class VmwareSiteUpdateProperties(_serialization.Model):
    """The updatable properties of the VmwareSite.

    :ivar service_principal_identity_details: Gets or sets the service principal identity details
     used by agent for
     communication
                 to the service.
    :vartype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
    :ivar agent_details: Gets or sets the on-premises agent details.
    :vartype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
    :ivar appliance_name: Gets or sets the Appliance Name.
    :vartype appliance_name: str
    :ivar discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
    :vartype discovery_solution_id: str
    """

    _attribute_map = {
        "service_principal_identity_details": {"key": "servicePrincipalIdentityDetails", "type": "SiteSpnProperties"},
        "agent_details": {"key": "agentDetails", "type": "SiteAgentProperties"},
        "appliance_name": {"key": "applianceName", "type": "str"},
        "discovery_solution_id": {"key": "discoverySolutionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        service_principal_identity_details: Optional["_models.SiteSpnProperties"] = None,
        agent_details: Optional["_models.SiteAgentProperties"] = None,
        appliance_name: Optional[str] = None,
        discovery_solution_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword service_principal_identity_details: Gets or sets the service principal identity
         details used by agent for
         communication
                     to the service.
        :paramtype service_principal_identity_details: ~azure.mgmt.migrate.models.SiteSpnProperties
        :keyword agent_details: Gets or sets the on-premises agent details.
        :paramtype agent_details: ~azure.mgmt.migrate.models.SiteAgentProperties
        :keyword appliance_name: Gets or sets the Appliance Name.
        :paramtype appliance_name: str
        :keyword discovery_solution_id: Gets or sets the ARM ID of migration hub solution for SDS.
        :paramtype discovery_solution_id: str
        """
        super().__init__(**kwargs)
        self.service_principal_identity_details = service_principal_identity_details
        self.agent_details = agent_details
        self.appliance_name = appliance_name
        self.discovery_solution_id = discovery_solution_id


class VmwareSiteUsage(_serialization.Model):
    """VMware site usage.

    :ivar machine_count: Gets or sets the number of machines discovered in the site.
    :vartype machine_count: int
    :ivar run_as_account_count: Gets or sets the number of run as accounts in the site.
    :vartype run_as_account_count: int
    :ivar v_center_count: Gets or sets the number of vCenters part of the site.
    :vartype v_center_count: int
    """

    _attribute_map = {
        "machine_count": {"key": "machineCount", "type": "int"},
        "run_as_account_count": {"key": "runAsAccountCount", "type": "int"},
        "v_center_count": {"key": "vCenterCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        machine_count: Optional[int] = None,
        run_as_account_count: Optional[int] = None,
        v_center_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_count: Gets or sets the number of machines discovered in the site.
        :paramtype machine_count: int
        :keyword run_as_account_count: Gets or sets the number of run as accounts in the site.
        :paramtype run_as_account_count: int
        :keyword v_center_count: Gets or sets the number of vCenters part of the site.
        :paramtype v_center_count: int
        """
        super().__init__(**kwargs)
        self.machine_count = machine_count
        self.run_as_account_count = run_as_account_count
        self.v_center_count = v_center_count


class WebAppDiscovery(_serialization.Model):
    """Data related to a machine's WebApps discovery.

    :ivar total_web_server_count: Gets or sets number of successfully discovered web servers..
    :vartype total_web_server_count: int
    :ivar total_web_application_count: Gets or sets number of successfully discovered web
     applications.
    :vartype total_web_application_count: int
    :ivar discovery_scope_status: Gets or sets status of partner discovery. Known values are:
     "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
     "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
     "DiscoverySucceeded".
    :vartype discovery_scope_status: str or ~azure.mgmt.migrate.models.DiscoveryScopeStatus
    """

    _attribute_map = {
        "total_web_server_count": {"key": "totalWebServerCount", "type": "int"},
        "total_web_application_count": {"key": "totalWebApplicationCount", "type": "int"},
        "discovery_scope_status": {"key": "discoveryScopeStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        total_web_server_count: Optional[int] = None,
        total_web_application_count: Optional[int] = None,
        discovery_scope_status: Optional[Union[str, "_models.DiscoveryScopeStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_web_server_count: Gets or sets number of successfully discovered web servers..
        :paramtype total_web_server_count: int
        :keyword total_web_application_count: Gets or sets number of successfully discovered web
         applications.
        :paramtype total_web_application_count: int
        :keyword discovery_scope_status: Gets or sets status of partner discovery. Known values are:
         "DiscoverySucceededAtleastOnce", "DiscoveryFailed", "RunAsAccountNotAssociated",
         "DiscoveryNotStarted", "DiscoveryInProgress", "Disabled", "DiscoveryPartiallySucceded", and
         "DiscoverySucceeded".
        :paramtype discovery_scope_status: str or ~azure.mgmt.migrate.models.DiscoveryScopeStatus
        """
        super().__init__(**kwargs)
        self.total_web_server_count = total_web_server_count
        self.total_web_application_count = total_web_application_count
        self.discovery_scope_status = discovery_scope_status


class WebAppExtendedMachine(ProxyResource):
    """Web app extended machine REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.WebAppExtendedMachineProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "WebAppExtendedMachineProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.WebAppExtendedMachineProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.WebAppExtendedMachineProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WebAppExtendedMachineListResult(_serialization.Model):
    """The response of a WebAppExtendedMachine list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The WebAppExtendedMachine items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.WebAppExtendedMachine]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[WebAppExtendedMachine]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.WebAppExtendedMachine"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The WebAppExtendedMachine items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.WebAppExtendedMachine]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebAppExtendedMachineProperties(_serialization.Model):
    """Class for web extended machine properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar host_name: Gets the hydrated host name.
    :vartype host_name: str
    :ivar machine_display_name: Gets the Name of the extended machine.
    :vartype machine_display_name: str
    :ivar machine_id: Gets the machine ARM id.
    :vartype machine_id: str
    :ivar run_as_account_id: Gets the run as account ID of the machine used for web app discovery.
    :vartype run_as_account_id: str
    :ivar hydrated_run_as_account_id: Gets the agent hydrated run as account.
    :vartype hydrated_run_as_account_id: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "errors": {"readonly": True},
        "host_name": {"readonly": True},
        "machine_display_name": {"readonly": True},
        "machine_id": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "hydrated_run_as_account_id": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "host_name": {"key": "hostName", "type": "str"},
        "machine_display_name": {"key": "machineDisplayName", "type": "str"},
        "machine_id": {"key": "machineId", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "hydrated_run_as_account_id": {"key": "hydratedRunAsAccountId", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.errors = None
        self.host_name = None
        self.machine_display_name = None
        self.machine_id = None
        self.run_as_account_id = None
        self.hydrated_run_as_account_id = None
        self.provisioning_state = None


class WebApplication(ProxyResource):
    """Web application REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.WebApplicationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "WebApplicationProperties"},
    }

    def __init__(self, *, properties: Optional["_models.WebApplicationProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.WebApplicationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WebApplicationAppsAndRolesModel(_serialization.Model):
    """WebApplication in the guest virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Gets or sets Name of the WebApplication.
    :vartype name: str
    :ivar status: Gets or sets Status of the WebApplication.
    :vartype status: str
    :ivar platform: Gets or sets Platform of the WebApplication.
    :vartype platform: str
    :ivar group_name: Gets or sets GroupName of the WebApplication.
    :vartype group_name: str
    :ivar web_server: Gets or sets WebServer of the WebApplication.
    :vartype web_server: str
    :ivar application_pool: Gets or sets ApplicationPool of the WebApplication.
    :vartype application_pool: str
    """

    _validation = {
        "name": {"readonly": True},
        "status": {"readonly": True},
        "platform": {"readonly": True},
        "group_name": {"readonly": True},
        "web_server": {"readonly": True},
        "application_pool": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "platform": {"key": "platform", "type": "str"},
        "group_name": {"key": "groupName", "type": "str"},
        "web_server": {"key": "webServer", "type": "str"},
        "application_pool": {"key": "applicationPool", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.status = None
        self.platform = None
        self.group_name = None
        self.web_server = None
        self.application_pool = None


class WebApplicationConfigurationUnit(_serialization.Model):
    """Web Application configuration unit.

    :ivar name: Gets or sets the configuration name.
    :vartype name: str
    :ivar file_path: Gets or sets the configuration file path.
    :vartype file_path: str
    :ivar local_file_path: Gets or sets the configuration local file path.
    :vartype local_file_path: str
    :ivar target_file_path: Gets or sets the configuration target file path.
    :vartype target_file_path: str
    :ivar section: Gets or sets the configuration section in the file.
    :vartype section: str
    :ivar type: Gets or sets the configuration type.
    :vartype type: str
    :ivar is_deployment_time_editable: Gets or sets a value indicating whether the configuration is
     edited or not by
     the user.
    :vartype is_deployment_time_editable: bool
    :ivar identifier: Gets or sets the identifier for the configuration.
    :vartype identifier: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "file_path": {"key": "filePath", "type": "str"},
        "local_file_path": {"key": "localFilePath", "type": "str"},
        "target_file_path": {"key": "targetFilePath", "type": "str"},
        "section": {"key": "section", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "is_deployment_time_editable": {"key": "isDeploymentTimeEditable", "type": "bool"},
        "identifier": {"key": "identifier", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        file_path: Optional[str] = None,
        local_file_path: Optional[str] = None,
        target_file_path: Optional[str] = None,
        section: Optional[str] = None,
        type: Optional[str] = None,
        is_deployment_time_editable: Optional[bool] = None,
        identifier: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the configuration name.
        :paramtype name: str
        :keyword file_path: Gets or sets the configuration file path.
        :paramtype file_path: str
        :keyword local_file_path: Gets or sets the configuration local file path.
        :paramtype local_file_path: str
        :keyword target_file_path: Gets or sets the configuration target file path.
        :paramtype target_file_path: str
        :keyword section: Gets or sets the configuration section in the file.
        :paramtype section: str
        :keyword type: Gets or sets the configuration type.
        :paramtype type: str
        :keyword is_deployment_time_editable: Gets or sets a value indicating whether the configuration
         is edited or not by
         the user.
        :paramtype is_deployment_time_editable: bool
        :keyword identifier: Gets or sets the identifier for the configuration.
        :paramtype identifier: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.file_path = file_path
        self.local_file_path = local_file_path
        self.target_file_path = target_file_path
        self.section = section
        self.type = type
        self.is_deployment_time_editable = is_deployment_time_editable
        self.identifier = identifier


class WebApplicationDirectoryUnit(_serialization.Model):
    """Web Application directory unit.

    :ivar id: Gets or sets the unique id corresponding to the application directory.
    :vartype id: str
    :ivar is_editable: Gets or sets a value indicating whether the directory object is editable.

     .. code-block::

          True when the directory is added as an optional directory, false when

     discovery is done
                 manually.
    :vartype is_editable: bool
    :ivar source_paths: Gets or sets the paths of the directory on the source machine.
    :vartype source_paths: list[str]
    :ivar local_scratch_path: Gets or sets the local scratch path at which the directories has been
     copied.
    :vartype local_scratch_path: str
    :ivar mount_path: Gets or sets the mount path of the application directory.
    :vartype mount_path: str
    :ivar source_size: Gets or sets the size of the directory on the source machine.
    :vartype source_size: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "is_editable": {"key": "isEditable", "type": "bool"},
        "source_paths": {"key": "sourcePaths", "type": "[str]"},
        "local_scratch_path": {"key": "localScratchPath", "type": "str"},
        "mount_path": {"key": "mountPath", "type": "str"},
        "source_size": {"key": "sourceSize", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        is_editable: Optional[bool] = None,
        source_paths: Optional[List[str]] = None,
        local_scratch_path: Optional[str] = None,
        mount_path: Optional[str] = None,
        source_size: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets the unique id corresponding to the application directory.
        :paramtype id: str
        :keyword is_editable: Gets or sets a value indicating whether the directory object is editable.

         .. code-block::

              True when the directory is added as an optional directory, false when

         discovery is done
                     manually.
        :paramtype is_editable: bool
        :keyword source_paths: Gets or sets the paths of the directory on the source machine.
        :paramtype source_paths: list[str]
        :keyword local_scratch_path: Gets or sets the local scratch path at which the directories has
         been copied.
        :paramtype local_scratch_path: str
        :keyword mount_path: Gets or sets the mount path of the application directory.
        :paramtype mount_path: str
        :keyword source_size: Gets or sets the size of the directory on the source machine.
        :paramtype source_size: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.is_editable = is_editable
        self.source_paths = source_paths
        self.local_scratch_path = local_scratch_path
        self.mount_path = mount_path
        self.source_size = source_size


class WebApplicationFramework(_serialization.Model):
    """Framework specific data for a web application.

    :ivar name: Gets or sets Name of the framework.
    :vartype name: str
    :ivar version: Gets or sets Version of the framework.
    :vartype version: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, version: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: Gets or sets Name of the framework.
        :paramtype name: str
        :keyword version: Gets or sets Version of the framework.
        :paramtype version: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.version = version


class WebApplicationListResult(_serialization.Model):
    """The response of a WebApplication list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The WebApplication items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.WebApplication]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[WebApplication]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.WebApplication"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The WebApplication items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.WebApplication]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebApplicationProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web application properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar web_server_id: Gets the web server id.
    :vartype web_server_id: str
    :ivar web_server_name: Gets the web server name.
    :vartype web_server_name: str
    :ivar machine_arm_ids: Gets the list of machine ARM Ids on which the web application is
     deployed.
    :vartype machine_arm_ids: list[str]
    :ivar virtual_path: Gets the virtual path of the application.
    :vartype virtual_path: str
    :ivar physical_path: Gets the physical path of the application.
    :vartype physical_path: str
    :ivar bindings: Gets the front end bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrate.models.FrontEndBinding]
    :ivar frameworks: Gets the Error details.
    :vartype frameworks: list[~azure.mgmt.migrate.models.WebApplicationFramework]
    :ivar configurations: Gets the configuration.
    :vartype configurations: list[~azure.mgmt.migrate.models.WebApplicationConfigurationUnit]
    :ivar directories: Gets the directories.
    :vartype directories: list[~azure.mgmt.migrate.models.WebApplicationDirectoryUnit]
    :ivar display_name: Gets the display name.
    :vartype display_name: str
    :ivar tags: Gets tags that can be used with ODATA.
    :vartype tags: dict[str, str]
    :ivar static_folders: Static folders.
    :vartype static_folders: list[str]
    :ivar machine_display_name: Machine display name.
    :vartype machine_display_name: str
    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar server_type: Gets the server type.
    :vartype server_type: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar has_errors: Gets a value indicating whether the WebApp has errors or not.
    :vartype has_errors: bool
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "web_server_id": {"readonly": True},
        "web_server_name": {"readonly": True},
        "machine_arm_ids": {"readonly": True},
        "virtual_path": {"readonly": True},
        "physical_path": {"readonly": True},
        "bindings": {"readonly": True},
        "frameworks": {"readonly": True},
        "configurations": {"readonly": True},
        "directories": {"readonly": True},
        "display_name": {"readonly": True},
        "tags": {"readonly": True},
        "static_folders": {"readonly": True},
        "machine_display_name": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "server_type": {"readonly": True},
        "errors": {"readonly": True},
        "appliance_names": {"readonly": True},
        "has_errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_name": {"key": "webServerName", "type": "str"},
        "machine_arm_ids": {"key": "machineArmIds", "type": "[str]"},
        "virtual_path": {"key": "virtualPath", "type": "str"},
        "physical_path": {"key": "physicalPath", "type": "str"},
        "bindings": {"key": "bindings", "type": "[FrontEndBinding]"},
        "frameworks": {"key": "frameworks", "type": "[WebApplicationFramework]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfigurationUnit]"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectoryUnit]"},
        "display_name": {"key": "displayName", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "static_folders": {"key": "staticFolders", "type": "[str]"},
        "machine_display_name": {"key": "machineDisplayName", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "has_errors": {"key": "hasErrors", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.web_server_id = None
        self.web_server_name = None
        self.machine_arm_ids = None
        self.virtual_path = None
        self.physical_path = None
        self.bindings = None
        self.frameworks = None
        self.configurations = None
        self.directories = None
        self.display_name = None
        self.tags = None
        self.static_folders = None
        self.machine_display_name = None
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.server_type = None
        self.errors = None
        self.appliance_names = None
        self.has_errors = None
        self.provisioning_state = None


class WebAppProperties(_serialization.Model):
    """Class representing web app properties web model.

    :ivar web_app_arm_id: Gets or sets the arm id of the web app.
    :vartype web_app_arm_id: str
    :ivar tags: Gets or sets Tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "web_app_arm_id": {"key": "webAppArmId", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self, *, web_app_arm_id: Optional[str] = None, tags: Optional[Dict[str, str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword web_app_arm_id: Gets or sets the arm id of the web app.
        :paramtype web_app_arm_id: str
        :keyword tags: Gets or sets Tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.web_app_arm_id = web_app_arm_id
        self.tags = tags


class WebAppPropertiesCollection(_serialization.Model):
    """Collection of web app properties.

    :ivar web_apps: Gets or sets the list of web app properties.
    :vartype web_apps: list[~azure.mgmt.migrate.models.WebAppProperties]
    """

    _attribute_map = {
        "web_apps": {"key": "webApps", "type": "[WebAppProperties]"},
    }

    def __init__(self, *, web_apps: Optional[List["_models.WebAppProperties"]] = None, **kwargs: Any) -> None:
        """
        :keyword web_apps: Gets or sets the list of web app properties.
        :paramtype web_apps: list[~azure.mgmt.migrate.models.WebAppProperties]
        """
        super().__init__(**kwargs)
        self.web_apps = web_apps


class WebAppRunAsAccount(ProxyResource):
    """Run as account REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "RunAsAccountProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RunAsAccountProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.RunAsAccountProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WebAppRunAsAccountListResult(_serialization.Model):
    """The response of a WebAppRunAsAccount list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The WebAppRunAsAccount items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.WebAppRunAsAccount]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[WebAppRunAsAccount]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.WebAppRunAsAccount"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The WebAppRunAsAccount items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.WebAppRunAsAccount]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebAppSite(ProxyResource):
    """WebApp site web model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.WebAppSiteProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "WebAppSiteProperties"},
    }

    def __init__(self, *, properties: Optional["_models.WebAppSiteProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.WebAppSiteProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WebAppSiteListResult(_serialization.Model):
    """The response of a WebAppSite list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The WebAppSite items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.WebAppSite]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[WebAppSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.WebAppSite"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The WebAppSite items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.WebAppSite]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebAppSiteProperties(_serialization.Model):
    """Class for Web app site properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar site_appliance_properties_collection: Gets or sets the appliance details used by service
     to communicate

     to the appliance.
    :vartype site_appliance_properties_collection:
     list[~azure.mgmt.migrate.models.SiteApplianceProperties]
    :ivar discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate" and
     "DR".
    :vartype discovery_scenario: str or
     ~azure.mgmt.migrate.models.WebAppSitePropertiesDiscoveryScenario
    :ivar service_endpoint: Gets the service endpoint.
    :vartype service_endpoint: str
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "service_endpoint": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "site_appliance_properties_collection": {
            "key": "siteAppliancePropertiesCollection",
            "type": "[SiteApplianceProperties]",
        },
        "discovery_scenario": {"key": "discoveryScenario", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        site_appliance_properties_collection: Optional[List["_models.SiteApplianceProperties"]] = None,
        discovery_scenario: Optional[Union[str, "_models.WebAppSitePropertiesDiscoveryScenario"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword site_appliance_properties_collection: Gets or sets the appliance details used by
         service to communicate

         to the appliance.
        :paramtype site_appliance_properties_collection:
         list[~azure.mgmt.migrate.models.SiteApplianceProperties]
        :keyword discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate"
         and "DR".
        :paramtype discovery_scenario: str or
         ~azure.mgmt.migrate.models.WebAppSitePropertiesDiscoveryScenario
        """
        super().__init__(**kwargs)
        self.site_appliance_properties_collection = site_appliance_properties_collection
        self.discovery_scenario = discovery_scenario
        self.service_endpoint = None
        self.provisioning_state = None


class WebAppSiteUpdate(_serialization.Model):
    """The type used for update operations of the WebAppSite.

    :ivar properties: The updatable properties of the WebAppSite.
    :vartype properties: ~azure.mgmt.migrate.models.WebAppSiteUpdateProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "WebAppSiteUpdateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.WebAppSiteUpdateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The updatable properties of the WebAppSite.
        :paramtype properties: ~azure.mgmt.migrate.models.WebAppSiteUpdateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WebAppSiteUpdateProperties(_serialization.Model):
    """The updatable properties of the WebAppSite.

    :ivar site_appliance_properties_collection: Gets or sets the appliance details used by service
     to communicate

     to the appliance.
    :vartype site_appliance_properties_collection:
     list[~azure.mgmt.migrate.models.SiteApplianceProperties]
    :ivar discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate" and
     "DR".
    :vartype discovery_scenario: str or
     ~azure.mgmt.migrate.models.WebAppSitePropertiesDiscoveryScenario
    """

    _attribute_map = {
        "site_appliance_properties_collection": {
            "key": "siteAppliancePropertiesCollection",
            "type": "[SiteApplianceProperties]",
        },
        "discovery_scenario": {"key": "discoveryScenario", "type": "str"},
    }

    def __init__(
        self,
        *,
        site_appliance_properties_collection: Optional[List["_models.SiteApplianceProperties"]] = None,
        discovery_scenario: Optional[Union[str, "_models.WebAppSitePropertiesDiscoveryScenario"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword site_appliance_properties_collection: Gets or sets the appliance details used by
         service to communicate

         to the appliance.
        :paramtype site_appliance_properties_collection:
         list[~azure.mgmt.migrate.models.SiteApplianceProperties]
        :keyword discovery_scenario: Gets or sets the discovery scenario. Known values are: "Migrate"
         and "DR".
        :paramtype discovery_scenario: str or
         ~azure.mgmt.migrate.models.WebAppSitePropertiesDiscoveryScenario
        """
        super().__init__(**kwargs)
        self.site_appliance_properties_collection = site_appliance_properties_collection
        self.discovery_scenario = discovery_scenario


class WebAppSiteUsage(_serialization.Model):
    """Web app site usage.

    :ivar web_server_count: Gets or sets the number of web servers discovered in the site.
    :vartype web_server_count: int
    :ivar web_application_count: Gets or sets the number of web applications discovered in the
     site.
    :vartype web_application_count: int
    :ivar run_as_account_count: Gets or sets the number of run as accounts in the site.
    :vartype run_as_account_count: int
    """

    _attribute_map = {
        "web_server_count": {"key": "webServerCount", "type": "int"},
        "web_application_count": {"key": "webApplicationCount", "type": "int"},
        "run_as_account_count": {"key": "runAsAccountCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        web_server_count: Optional[int] = None,
        web_application_count: Optional[int] = None,
        run_as_account_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword web_server_count: Gets or sets the number of web servers discovered in the site.
        :paramtype web_server_count: int
        :keyword web_application_count: Gets or sets the number of web applications discovered in the
         site.
        :paramtype web_application_count: int
        :keyword run_as_account_count: Gets or sets the number of run as accounts in the site.
        :paramtype run_as_account_count: int
        """
        super().__init__(**kwargs)
        self.web_server_count = web_server_count
        self.web_application_count = web_application_count
        self.run_as_account_count = run_as_account_count


class WebRoleImportDisk(_serialization.Model):
    """Class representing the imported machine web model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar megabytes_per_second_of_read: Disk read throughput.
    :vartype megabytes_per_second_of_read: float
    :ivar megabytes_per_second_of_write: Disk write throughput.
    :vartype megabytes_per_second_of_write: float
    :ivar number_of_read_operations_per_second: Disk read IOPS.
    :vartype number_of_read_operations_per_second: float
    :ivar number_of_write_operations_per_second: Disk write IOPS.
    :vartype number_of_write_operations_per_second: float
    :ivar max_size_in_bytes: Gets or sets Bytes allocated for the disk.
    :vartype max_size_in_bytes: int
    :ivar name: Gets or sets Name of the disk.
    :vartype name: str
    :ivar disk_type: Gets or sets Type of the disk.
    :vartype disk_type: str
    :ivar lun: Gets or sets LUN of the disk.
    :vartype lun: int
    :ivar path: Gets or sets Path of the disk.
    :vartype path: str
    """

    _validation = {
        "megabytes_per_second_of_read": {"readonly": True},
        "megabytes_per_second_of_write": {"readonly": True},
        "number_of_read_operations_per_second": {"readonly": True},
        "number_of_write_operations_per_second": {"readonly": True},
    }

    _attribute_map = {
        "megabytes_per_second_of_read": {"key": "megabytesPerSecondOfRead", "type": "float"},
        "megabytes_per_second_of_write": {"key": "megabytesPerSecondOfWrite", "type": "float"},
        "number_of_read_operations_per_second": {"key": "numberOfReadOperationsPerSecond", "type": "float"},
        "number_of_write_operations_per_second": {"key": "numberOfWriteOperationsPerSecond", "type": "float"},
        "max_size_in_bytes": {"key": "maxSizeInBytes", "type": "int"},
        "name": {"key": "name", "type": "str"},
        "disk_type": {"key": "diskType", "type": "str"},
        "lun": {"key": "lun", "type": "int"},
        "path": {"key": "path", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_size_in_bytes: Optional[int] = None,
        name: Optional[str] = None,
        disk_type: Optional[str] = None,
        lun: Optional[int] = None,
        path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_size_in_bytes: Gets or sets Bytes allocated for the disk.
        :paramtype max_size_in_bytes: int
        :keyword name: Gets or sets Name of the disk.
        :paramtype name: str
        :keyword disk_type: Gets or sets Type of the disk.
        :paramtype disk_type: str
        :keyword lun: Gets or sets LUN of the disk.
        :paramtype lun: int
        :keyword path: Gets or sets Path of the disk.
        :paramtype path: str
        """
        super().__init__(**kwargs)
        self.megabytes_per_second_of_read = None
        self.megabytes_per_second_of_write = None
        self.number_of_read_operations_per_second = None
        self.number_of_write_operations_per_second = None
        self.max_size_in_bytes = max_size_in_bytes
        self.name = name
        self.disk_type = disk_type
        self.lun = lun
        self.path = path


class WebRoleOperatingSystem(_serialization.Model):
    """Second level object returned as part of Machine REST resource.

    :ivar os_type: Gets or sets the type of the operating system.
    :vartype os_type: str
    :ivar os_name: Gets or sets the Name of the operating system.
    :vartype os_name: str
    :ivar os_version: Gets or sets the Version of the operating system.
    :vartype os_version: str
    :ivar os_architecture: Gets or sets the Architecture of the operating system.
    :vartype os_architecture: str
    """

    _attribute_map = {
        "os_type": {"key": "osType", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "os_architecture": {"key": "osArchitecture", "type": "str"},
    }

    def __init__(
        self,
        *,
        os_type: Optional[str] = None,
        os_name: Optional[str] = None,
        os_version: Optional[str] = None,
        os_architecture: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword os_type: Gets or sets the type of the operating system.
        :paramtype os_type: str
        :keyword os_name: Gets or sets the Name of the operating system.
        :paramtype os_name: str
        :keyword os_version: Gets or sets the Version of the operating system.
        :paramtype os_version: str
        :keyword os_architecture: Gets or sets the Architecture of the operating system.
        :paramtype os_architecture: str
        """
        super().__init__(**kwargs)
        self.os_type = os_type
        self.os_name = os_name
        self.os_version = os_version
        self.os_architecture = os_architecture


class WebServer(ProxyResource):
    """Web application REST Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.WebServerProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "WebServerProperties"},
    }

    def __init__(self, *, properties: Optional["_models.WebServerProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.migrate.models.WebServerProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WebServerListResult(_serialization.Model):
    """The response of a WebServer list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The WebServer items on this page. Required.
    :vartype value: list[~azure.mgmt.migrate.models.WebServer]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[WebServer]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.WebServer"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The WebServer items on this page. Required.
        :paramtype value: list[~azure.mgmt.migrate.models.WebServer]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WebServerProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web server properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar configuration_location: Gets the configuration location.
    :vartype configuration_location: str
    :ivar version: Gets the configuration location.
    :vartype version: str
    :ivar machine_ids: Gets the list of machines.
    :vartype machine_ids: list[str]
    :ivar web_applications: Gets the list of web applications.
    :vartype web_applications: list[str]
    :ivar display_name: Gets the display name.
    :vartype display_name: str
    :ivar server_fqdn: Gets the server FQDN.
    :vartype server_fqdn: str
    :ivar run_as_account_id: Gets the run as account id.
    :vartype run_as_account_id: str
    :ivar is_deleted: Gets a value indicating whether application is deleted.
    :vartype is_deleted: bool
    :ivar created_timestamp: Gets the timestamp marking creation of the entity.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Gets the timestamp marking last update operation.
    :vartype updated_timestamp: str
    :ivar server_type: Gets the server type.
    :vartype server_type: str
    :ivar errors: Gets the Error details.
    :vartype errors: list[~azure.mgmt.migrate.models.HealthErrorDetails]
    :ivar appliance_names: Gets the appliance names.
    :vartype appliance_names: list[str]
    :ivar has_errors: Gets a value indicating whether the WebApp has errors or not.
    :vartype has_errors: bool
    :ivar provisioning_state: provisioning state enum. Known values are: "Created", "Updated",
     "Running", "Completed", "Failed", "Succeeded", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    """

    _validation = {
        "configuration_location": {"readonly": True},
        "version": {"readonly": True},
        "machine_ids": {"readonly": True},
        "web_applications": {"readonly": True},
        "display_name": {"readonly": True},
        "server_fqdn": {"readonly": True},
        "run_as_account_id": {"readonly": True},
        "is_deleted": {"readonly": True},
        "created_timestamp": {"readonly": True},
        "updated_timestamp": {"readonly": True},
        "server_type": {"readonly": True},
        "errors": {"readonly": True},
        "appliance_names": {"readonly": True},
        "has_errors": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "configuration_location": {"key": "configurationLocation", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "machine_ids": {"key": "machineIds", "type": "[str]"},
        "web_applications": {"key": "webApplications", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "server_fqdn": {"key": "serverFqdn", "type": "str"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "is_deleted": {"key": "isDeleted", "type": "bool"},
        "created_timestamp": {"key": "createdTimestamp", "type": "str"},
        "updated_timestamp": {"key": "updatedTimestamp", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
        "errors": {"key": "errors", "type": "[HealthErrorDetails]"},
        "appliance_names": {"key": "applianceNames", "type": "[str]"},
        "has_errors": {"key": "hasErrors", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.configuration_location = None
        self.version = None
        self.machine_ids = None
        self.web_applications = None
        self.display_name = None
        self.server_fqdn = None
        self.run_as_account_id = None
        self.is_deleted = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.server_type = None
        self.errors = None
        self.appliance_names = None
        self.has_errors = None
        self.provisioning_state = None
