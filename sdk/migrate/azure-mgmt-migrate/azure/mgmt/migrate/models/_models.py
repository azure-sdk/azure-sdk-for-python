# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=useless-super-delegation

import datetime
from typing import Any, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .._utils.model_base import Model as _Model, rest_field

if TYPE_CHECKING:
    from .. import models as _models


class Resource(_Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    """

    id: Optional[str] = rest_field(visibility=["read"])
    """Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}."""
    name: Optional[str] = rest_field(visibility=["read"])
    """The name of the resource."""
    type: Optional[str] = rest_field(visibility=["read"])
    """The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or
     \"Microsoft.Storage/storageAccounts\"."""
    system_data: Optional["_models.SystemData"] = rest_field(name="systemData", visibility=["read"])
    """Azure Resource Manager metadata containing createdBy and modifiedBy information."""


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    """


class CompoundAssessment(ProxyResource):
    """Compound assessment resource.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.CompoundAssessmentProperties
    """

    properties: Optional["_models.CompoundAssessmentProperties"] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The resource-specific properties for this resource."""

    @overload
    def __init__(
        self,
        *,
        properties: Optional["_models.CompoundAssessmentProperties"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class CompoundAssessmentDetails(_Model):
    """Details of the compound assessment.

    :ivar created_timestamp: Timestamp when the assessment was created.
    :vartype created_timestamp: ~datetime.datetime
    :ivar updated_timestamp: Timestamp when the assessment was last updated.
    :vartype updated_timestamp: ~datetime.datetime
    :ivar status: Status of the assessment. Required. Known values are: "Created", "Updated",
     "Running", "Completed", "Invalid", "OutOfSync", "OutDated", "Deleted", and "Failed".
    :vartype status: str or ~azure.mgmt.migrate.models.AssessmentStatus
    """

    created_timestamp: Optional[datetime.datetime] = rest_field(
        name="createdTimestamp", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """Timestamp when the assessment was created."""
    updated_timestamp: Optional[datetime.datetime] = rest_field(
        name="updatedTimestamp", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """Timestamp when the assessment was last updated."""
    status: Union[str, "_models.AssessmentStatus"] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """Status of the assessment. Required. Known values are: \"Created\", \"Updated\", \"Running\",
     \"Completed\", \"Invalid\", \"OutOfSync\", \"OutDated\", \"Deleted\", and \"Failed\"."""

    @overload
    def __init__(
        self,
        *,
        status: Union[str, "_models.AssessmentStatus"],
        created_timestamp: Optional[datetime.datetime] = None,
        updated_timestamp: Optional[datetime.datetime] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class CompoundAssessmentProperties(_Model):
    """Properties of a compound assessment.

    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.migrate.models.ProvisioningState
    :ivar target_assessment_arm_ids: ARM IDs of the target assessments. Required.
    :vartype target_assessment_arm_ids: ~azure.mgmt.migrate.models.TargetAssessmentArmIds
    :ivar fallback_machine_assessment_arm_id: Fallback machine assessment ARM ID.
    :vartype fallback_machine_assessment_arm_id: str
    :ivar details: Details of the compound assessment.
    :vartype details: ~azure.mgmt.migrate.models.CompoundAssessmentDetails
    """

    provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = rest_field(
        name="provisioningState", visibility=["read"]
    )
    """The status of the last operation. Known values are: \"Succeeded\", \"Failed\", \"Canceled\",
     \"Provisioning\", \"Updating\", \"Deleting\", and \"Accepted\"."""
    target_assessment_arm_ids: "_models.TargetAssessmentArmIds" = rest_field(
        name="targetAssessmentArmIds", visibility=["read", "create", "update", "delete", "query"]
    )
    """ARM IDs of the target assessments. Required."""
    fallback_machine_assessment_arm_id: Optional[str] = rest_field(
        name="fallbackMachineAssessmentArmId", visibility=["read", "create", "update", "delete", "query"]
    )
    """Fallback machine assessment ARM ID."""
    details: Optional["_models.CompoundAssessmentDetails"] = rest_field(visibility=["read"])
    """Details of the compound assessment."""

    @overload
    def __init__(
        self,
        *,
        target_assessment_arm_ids: "_models.TargetAssessmentArmIds",
        fallback_machine_assessment_arm_id: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class CostDetailsCommon(_Model):
    """The cost details.

    :ivar saving_options: The savings options. Known values are: "None", "RI1Year", "RI3Year",
     "SavingsPlan1Year", "SavingsPlan3Year", and "CustomAzureOfferCode".
    :vartype saving_options: str or ~azure.mgmt.migrate.models.SavingsOptions
    :ivar cost_detail: The sku cost details per azure offer type.
    :vartype cost_detail: list[~azure.mgmt.migrate.models.NameValuePairCostType]
    """

    saving_options: Optional[Union[str, "_models.SavingsOptions"]] = rest_field(
        name="savingOptions", visibility=["read"]
    )
    """The savings options. Known values are: \"None\", \"RI1Year\", \"RI3Year\",
     \"SavingsPlan1Year\", \"SavingsPlan3Year\", and \"CustomAzureOfferCode\"."""
    cost_detail: Optional[List["_models.NameValuePairCostType"]] = rest_field(name="costDetail", visibility=["read"])
    """The sku cost details per azure offer type."""


class DiscoveredLightSummary(_Model):
    """Summary of the compound assessment.

    :ivar number_of_web_apps: Number of web apps. Required.
    :vartype number_of_web_apps: int
    :ivar number_of_web_apps_per_type: Number of web apps per type.
    :vartype number_of_web_apps_per_type: list[~azure.mgmt.migrate.models.WebAppsPerType]
    :ivar number_of_web_servers_per_type: Number of web servers per type.
    :vartype number_of_web_servers_per_type: list[~azure.mgmt.migrate.models.WebServersPerType]
    :ivar number_of_web_servers: Number of web servers. Required.
    :vartype number_of_web_servers: int
    :ivar number_of_servers: Number of servers. Required.
    :vartype number_of_servers: int
    """

    number_of_web_apps: int = rest_field(
        name="numberOfWebApps", visibility=["read", "create", "update", "delete", "query"]
    )
    """Number of web apps. Required."""
    number_of_web_apps_per_type: Optional[List["_models.WebAppsPerType"]] = rest_field(
        name="numberOfWebAppsPerType", visibility=["read", "create", "update", "delete", "query"]
    )
    """Number of web apps per type."""
    number_of_web_servers_per_type: Optional[List["_models.WebServersPerType"]] = rest_field(
        name="numberOfWebServersPerType", visibility=["read", "create", "update", "delete", "query"]
    )
    """Number of web servers per type."""
    number_of_web_servers: int = rest_field(
        name="numberOfWebServers", visibility=["read", "create", "update", "delete", "query"]
    )
    """Number of web servers. Required."""
    number_of_servers: int = rest_field(
        name="numberOfServers", visibility=["read", "create", "update", "delete", "query"]
    )
    """Number of servers. Required."""

    @overload
    def __init__(
        self,
        *,
        number_of_web_apps: int,
        number_of_web_servers: int,
        number_of_servers: int,
        number_of_web_apps_per_type: Optional[List["_models.WebAppsPerType"]] = None,
        number_of_web_servers_per_type: Optional[List["_models.WebServersPerType"]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class DownloadUrl(_Model):
    """Data model of Download URL for assessment report.

    :ivar assessment_report_url: Hyperlink to download report. Required.
    :vartype assessment_report_url: str
    :ivar expiration_time: Expiry date of download url. Required.
    :vartype expiration_time: ~datetime.datetime
    """

    assessment_report_url: str = rest_field(name="assessmentReportUrl", visibility=["read"])
    """Hyperlink to download report. Required."""
    expiration_time: datetime.datetime = rest_field(name="expirationTime", visibility=["read"], format="rfc3339")
    """Expiry date of download url. Required."""


class ErrorAdditionalInfo(_Model):
    """The resource management error additional info.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    type: Optional[str] = rest_field(visibility=["read"])
    """The additional info type."""
    info: Optional[Any] = rest_field(visibility=["read"])
    """The additional info."""


class ErrorDetail(_Model):
    """The error detail.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.migrate.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.migrate.models.ErrorAdditionalInfo]
    """

    code: Optional[str] = rest_field(visibility=["read"])
    """The error code."""
    message: Optional[str] = rest_field(visibility=["read"])
    """The error message."""
    target: Optional[str] = rest_field(visibility=["read"])
    """The error target."""
    details: Optional[List["_models.ErrorDetail"]] = rest_field(visibility=["read"])
    """The error details."""
    additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = rest_field(
        name="additionalInfo", visibility=["read"]
    )
    """The error additional info."""


class ErrorResponse(_Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations.

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.migrate.models.ErrorDetail
    """

    error: Optional["_models.ErrorDetail"] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The error object."""

    @overload
    def __init__(
        self,
        *,
        error: Optional["_models.ErrorDetail"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ManagementDetails(_Model):
    """Management details.

    :ivar name: The management summary name. Known values are: "No", "SCOMMI", "AzMon", "AUM", and
     "AzureBackup".
    :vartype name: str or ~azure.mgmt.migrate.models.AzureManagementOfferingType
    :ivar readiness_summary: The management suitability summary.
    :vartype readiness_summary:
     list[~azure.mgmt.migrate.models.NameValuePairCloudSuitabilityCommon]
    """

    name: Optional[Union[str, "_models.AzureManagementOfferingType"]] = rest_field(visibility=["read"])
    """The management summary name. Known values are: \"No\", \"SCOMMI\", \"AzMon\", \"AUM\", and
     \"AzureBackup\"."""
    readiness_summary: Optional[List["_models.NameValuePairCloudSuitabilityCommon"]] = rest_field(
        name="readinessSummary", visibility=["read"]
    )
    """The management suitability summary."""


class MigrationDetails(_Model):
    """Migration details.

    :ivar readiness_summary: The readiness summary.
    :vartype readiness_summary:
     list[~azure.mgmt.migrate.models.NameValuePairCloudSuitabilityCommon]
    :ivar migration_type: The migration type. Known values are: "Unknown", "Replatform", "Rehost",
     "Retain", and "Rearchitect".
    :vartype migration_type: str or ~azure.mgmt.migrate.models.MigrationType
    """

    readiness_summary: Optional[List["_models.NameValuePairCloudSuitabilityCommon"]] = rest_field(
        name="readinessSummary", visibility=["read"]
    )
    """The readiness summary."""
    migration_type: Optional[Union[str, "_models.MigrationType"]] = rest_field(
        name="migrationType", visibility=["read"]
    )
    """The migration type. Known values are: \"Unknown\", \"Replatform\", \"Rehost\", \"Retain\", and
     \"Rearchitect\"."""


class NameValuePairCloudSuitabilityCommon(_Model):
    """The generic name value pair.

    :ivar name: The name. Known values are: "Unknown", "NotSuitable", "Suitable",
     "ConditionallySuitable", "ReadinessUnknown", and "SuitableWithWarnings".
    :vartype name: str or ~azure.mgmt.migrate.models.CloudSuitabilityCommon
    :ivar value: The value.
    :vartype value: int
    """

    name: Optional[Union[str, "_models.CloudSuitabilityCommon"]] = rest_field(visibility=["read"])
    """The name. Known values are: \"Unknown\", \"NotSuitable\", \"Suitable\",
     \"ConditionallySuitable\", \"ReadinessUnknown\", and \"SuitableWithWarnings\"."""
    value: Optional[int] = rest_field(visibility=["read"])
    """The value."""


class NameValuePairCostType(_Model):
    """The generic name value pair.

    :ivar name: The name. Known values are: "MonthlyStorageCost", "MonthlyComputeCost",
     "MonthlyLicensingCost", "MonthlySecurityCost", "MonthlyManagementCost", "MonitoringService",
     "DataProtectionService", "PatchingService", "MonthlyAzureHybridCost",
     "MonthlyPremiumV2StorageCost", "MonthlyLinuxAzureHybridCost", "MonthlyUltraStorageCost",
     "MonthlyStandardSsdStorageCost", "MonthlyBandwidthCost", "MonthlyPremiumStorageCost",
     "MonthlyUltraDiskCost", "MonthlyStandardHddStorageCost", "MonthlyAvsExternalStorageCost",
     "MonthlyAvsNetworkCost", "MonthlyAvsNodeCost", and "TotalMonthlyCost".
    :vartype name: str or ~azure.mgmt.migrate.models.CostType
    :ivar value: The value.
    :vartype value: float
    """

    name: Optional[Union[str, "_models.CostType"]] = rest_field(visibility=["read"])
    """The name. Known values are: \"MonthlyStorageCost\", \"MonthlyComputeCost\",
     \"MonthlyLicensingCost\", \"MonthlySecurityCost\", \"MonthlyManagementCost\",
     \"MonitoringService\", \"DataProtectionService\", \"PatchingService\",
     \"MonthlyAzureHybridCost\", \"MonthlyPremiumV2StorageCost\", \"MonthlyLinuxAzureHybridCost\",
     \"MonthlyUltraStorageCost\", \"MonthlyStandardSsdStorageCost\", \"MonthlyBandwidthCost\",
     \"MonthlyPremiumStorageCost\", \"MonthlyUltraDiskCost\", \"MonthlyStandardHddStorageCost\",
     \"MonthlyAvsExternalStorageCost\", \"MonthlyAvsNetworkCost\", \"MonthlyAvsNodeCost\", and
     \"TotalMonthlyCost\"."""
    value: Optional[float] = rest_field(visibility=["read"])
    """The value."""


class NameValuePairSavingsType(_Model):
    """The generic name value pair.

    :ivar name: The name. Known values are: "MonthlyAzureHybridCostSavings",
     "MonthlyLinuxAzureHybridCostSavings", "MonthlyAhubSqlCostSavings", and
     "MonthlyVcfByolCostDifference".
    :vartype name: str or ~azure.mgmt.migrate.models.SavingsType
    :ivar value: The value.
    :vartype value: float
    """

    name: Optional[Union[str, "_models.SavingsType"]] = rest_field(visibility=["read"])
    """The name. Known values are: \"MonthlyAzureHybridCostSavings\",
     \"MonthlyLinuxAzureHybridCostSavings\", \"MonthlyAhubSqlCostSavings\", and
     \"MonthlyVcfByolCostDifference\"."""
    value: Optional[float] = rest_field(visibility=["read"])
    """The value."""


class SavingsDetailsCommon(_Model):
    """The savings details.

    :ivar saving_options: The savings options. Known values are: "None", "RI1Year", "RI3Year",
     "SavingsPlan1Year", "SavingsPlan3Year", and "CustomAzureOfferCode".
    :vartype saving_options: str or ~azure.mgmt.migrate.models.SavingsOptions
    :ivar savings_detail: The sku cost details per azure offer type.
    :vartype savings_detail: list[~azure.mgmt.migrate.models.NameValuePairSavingsType]
    """

    saving_options: Optional[Union[str, "_models.SavingsOptions"]] = rest_field(
        name="savingOptions", visibility=["read"]
    )
    """The savings options. Known values are: \"None\", \"RI1Year\", \"RI3Year\",
     \"SavingsPlan1Year\", \"SavingsPlan3Year\", and \"CustomAzureOfferCode\"."""
    savings_detail: Optional[List["_models.NameValuePairSavingsType"]] = rest_field(
        name="savingsDetail", visibility=["read"]
    )
    """The sku cost details per azure offer type."""


class SourceDetails(_Model):
    """Source details.

    :ivar source_name: The source name. Known values are: "Unknown", "Machine", "IIS", "TomCat",
     "OracleServer", "OracleDatabase", "SAPInstance", "SpringbootApplication", "MySQLServer",
     "SqlInstance", "SqlDatabase", and "WebApps".
    :vartype source_name: str or ~azure.mgmt.migrate.models.AssessmentSource
    :ivar source_type: The source type. Known values are: "Unknown", "Machine", "Server",
     "Instance", "WebServer", "WebApplication", "Database", "Host", and "ManagementServer".
    :vartype source_type: str or ~azure.mgmt.migrate.models.MigrateWorkloadType
    :ivar platform: The migration platform. Known values are: "Unknown", "PaaS", "IaaS", and
     "SaaS".
    :vartype platform: str or ~azure.mgmt.migrate.models.MigrationPlatform
    :ivar count: The count of a type of source.
    :vartype count: int
    """

    source_name: Optional[Union[str, "_models.AssessmentSource"]] = rest_field(name="sourceName", visibility=["read"])
    """The source name. Known values are: \"Unknown\", \"Machine\", \"IIS\", \"TomCat\",
     \"OracleServer\", \"OracleDatabase\", \"SAPInstance\", \"SpringbootApplication\",
     \"MySQLServer\", \"SqlInstance\", \"SqlDatabase\", and \"WebApps\"."""
    source_type: Optional[Union[str, "_models.MigrateWorkloadType"]] = rest_field(
        name="sourceType", visibility=["read"]
    )
    """The source type. Known values are: \"Unknown\", \"Machine\", \"Server\", \"Instance\",
     \"WebServer\", \"WebApplication\", \"Database\", \"Host\", and \"ManagementServer\"."""
    platform: Optional[Union[str, "_models.MigrationPlatform"]] = rest_field(visibility=["read"])
    """The migration platform. Known values are: \"Unknown\", \"PaaS\", \"IaaS\", and \"SaaS\"."""
    count: Optional[int] = rest_field(visibility=["read"])
    """The count of a type of source."""


class SystemData(_Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.migrate.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.migrate.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    created_by: Optional[str] = rest_field(name="createdBy", visibility=["read", "create", "update", "delete", "query"])
    """The identity that created the resource."""
    created_by_type: Optional[Union[str, "_models.CreatedByType"]] = rest_field(
        name="createdByType", visibility=["read", "create", "update", "delete", "query"]
    )
    """The type of identity that created the resource. Known values are: \"User\", \"Application\",
     \"ManagedIdentity\", and \"Key\"."""
    created_at: Optional[datetime.datetime] = rest_field(
        name="createdAt", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The timestamp of resource creation (UTC)."""
    last_modified_by: Optional[str] = rest_field(
        name="lastModifiedBy", visibility=["read", "create", "update", "delete", "query"]
    )
    """The identity that last modified the resource."""
    last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = rest_field(
        name="lastModifiedByType", visibility=["read", "create", "update", "delete", "query"]
    )
    """The type of identity that last modified the resource. Known values are: \"User\",
     \"Application\", \"ManagedIdentity\", and \"Key\"."""
    last_modified_at: Optional[datetime.datetime] = rest_field(
        name="lastModifiedAt", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The timestamp of resource last modification (UTC)."""

    @overload
    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class TargetAssessmentArmIds(_Model):
    """ARM IDs of the target assessments.

    :ivar aks: ARM ID for Azure Kubernetes Service assessment.
    :vartype aks: str
    :ivar azure_app_service: ARM ID for Azure App Service assessment.
    :vartype azure_app_service: str
    :ivar azure_app_service_container: ARM ID for Azure App Service Container assessment.
    :vartype azure_app_service_container: str
    """

    aks: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """ARM ID for Azure Kubernetes Service assessment."""
    azure_app_service: Optional[str] = rest_field(
        name="azureAppService", visibility=["read", "create", "update", "delete", "query"]
    )
    """ARM ID for Azure App Service assessment."""
    azure_app_service_container: Optional[str] = rest_field(
        name="azureAppServiceContainer", visibility=["read", "create", "update", "delete", "query"]
    )
    """ARM ID for Azure App Service Container assessment."""

    @overload
    def __init__(
        self,
        *,
        aks: Optional[str] = None,
        azure_app_service: Optional[str] = None,
        azure_app_service_container: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class TargetDetails(_Model):
    """Target details.

    :ivar target_name: The target name. Known values are: "Unknown", "SqlDatabase", "SqlMI",
     "FlexServerPG", "OracleIaasVM", "AzureSpringApps", "SAPAzureInstance", "AKS",
     "MySQLAzureFlexServer", "AzureSQLVM", "AzureVM", "AzureAppService", "AzureAppServiceContainer",
     and "Avs".
    :vartype target_name: str or ~azure.mgmt.migrate.models.AzureTarget
    :ivar target_type: The target type. Known values are: "Unknown", "Machine", "Server",
     "Instance", "WebServer", "WebApplication", "Database", "Host", and "ManagementServer".
    :vartype target_type: str or ~azure.mgmt.migrate.models.MigrateWorkloadType
    :ivar platform: The migration platform. Known values are: "Unknown", "PaaS", "IaaS", and
     "SaaS".
    :vartype platform: str or ~azure.mgmt.migrate.models.MigrationPlatform
    :ivar count: The count of a type of source.
    :vartype count: int
    """

    target_name: Optional[Union[str, "_models.AzureTarget"]] = rest_field(name="targetName", visibility=["read"])
    """The target name. Known values are: \"Unknown\", \"SqlDatabase\", \"SqlMI\", \"FlexServerPG\",
     \"OracleIaasVM\", \"AzureSpringApps\", \"SAPAzureInstance\", \"AKS\", \"MySQLAzureFlexServer\",
     \"AzureSQLVM\", \"AzureVM\", \"AzureAppService\", \"AzureAppServiceContainer\", and \"Avs\"."""
    target_type: Optional[Union[str, "_models.MigrateWorkloadType"]] = rest_field(
        name="targetType", visibility=["read"]
    )
    """The target type. Known values are: \"Unknown\", \"Machine\", \"Server\", \"Instance\",
     \"WebServer\", \"WebApplication\", \"Database\", \"Host\", and \"ManagementServer\"."""
    platform: Optional[Union[str, "_models.MigrationPlatform"]] = rest_field(visibility=["read"])
    """The migration platform. Known values are: \"Unknown\", \"PaaS\", \"IaaS\", and \"SaaS\"."""
    count: Optional[int] = rest_field(visibility=["read"])
    """The count of a type of source."""


class TargetSourcePair(_Model):
    """Target source pair.

    :ivar source_ref: The source name. Known values are: "Unknown", "Machine", "IIS", "TomCat",
     "OracleServer", "OracleDatabase", "SAPInstance", "SpringbootApplication", "MySQLServer",
     "SqlInstance", "SqlDatabase", and "WebApps".
    :vartype source_ref: str or ~azure.mgmt.migrate.models.AssessmentSource
    :ivar target_ref: The target name. Known values are: "Unknown", "SqlDatabase", "SqlMI",
     "FlexServerPG", "OracleIaasVM", "AzureSpringApps", "SAPAzureInstance", "AKS",
     "MySQLAzureFlexServer", "AzureSQLVM", "AzureVM", "AzureAppService", "AzureAppServiceContainer",
     and "Avs".
    :vartype target_ref: str or ~azure.mgmt.migrate.models.AzureTarget
    :ivar source_count: The count of a type of source.
    :vartype source_count: int
    :ivar target_count: The count of a type of target.
    :vartype target_count: int
    :ivar migration_details: The migration details.
    :vartype migration_details: ~azure.mgmt.migrate.models.MigrationDetails
    :ivar management_details: The management details.
    :vartype management_details: list[~azure.mgmt.migrate.models.ManagementDetails]
    :ivar cost_details: The cost details.
    :vartype cost_details: list[~azure.mgmt.migrate.models.CostDetailsCommon]
    :ivar savings_details: The savings details.
    :vartype savings_details: list[~azure.mgmt.migrate.models.SavingsDetailsCommon]
    :ivar confidence_score: The confidence score.
    :vartype confidence_score: float
    """

    source_ref: Optional[Union[str, "_models.AssessmentSource"]] = rest_field(name="sourceRef", visibility=["read"])
    """The source name. Known values are: \"Unknown\", \"Machine\", \"IIS\", \"TomCat\",
     \"OracleServer\", \"OracleDatabase\", \"SAPInstance\", \"SpringbootApplication\",
     \"MySQLServer\", \"SqlInstance\", \"SqlDatabase\", and \"WebApps\"."""
    target_ref: Optional[Union[str, "_models.AzureTarget"]] = rest_field(name="targetRef", visibility=["read"])
    """The target name. Known values are: \"Unknown\", \"SqlDatabase\", \"SqlMI\", \"FlexServerPG\",
     \"OracleIaasVM\", \"AzureSpringApps\", \"SAPAzureInstance\", \"AKS\", \"MySQLAzureFlexServer\",
     \"AzureSQLVM\", \"AzureVM\", \"AzureAppService\", \"AzureAppServiceContainer\", and \"Avs\"."""
    source_count: Optional[int] = rest_field(name="sourceCount", visibility=["read"])
    """The count of a type of source."""
    target_count: Optional[int] = rest_field(name="targetCount", visibility=["read"])
    """The count of a type of target."""
    migration_details: Optional["_models.MigrationDetails"] = rest_field(name="migrationDetails", visibility=["read"])
    """The migration details."""
    management_details: Optional[List["_models.ManagementDetails"]] = rest_field(
        name="managementDetails", visibility=["read"]
    )
    """The management details."""
    cost_details: Optional[List["_models.CostDetailsCommon"]] = rest_field(name="costDetails", visibility=["read"])
    """The cost details."""
    savings_details: Optional[List["_models.SavingsDetailsCommon"]] = rest_field(
        name="savingsDetails", visibility=["read"]
    )
    """The savings details."""
    confidence_score: Optional[float] = rest_field(name="confidenceScore", visibility=["read"])
    """The confidence score."""


class WebAppCompoundAssessmentSummary(ProxyResource):
    """WebApp compound assessment summary resource.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.migrate.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.migrate.models.WebAppCompoundAssessmentSummaryProperties
    """

    properties: Optional["_models.WebAppCompoundAssessmentSummaryProperties"] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The resource-specific properties for this resource."""

    @overload
    def __init__(
        self,
        *,
        properties: Optional["_models.WebAppCompoundAssessmentSummaryProperties"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class WebAppCompoundAssessmentSummaryProperties(_Model):  # pylint: disable=name-too-long
    """WebApp compound assessment summary properties class.

    :ivar summary_type: The summary type. Known values are: "Unknown", "Strategy", and "Target".
    :vartype summary_type: str or ~azure.mgmt.migrate.models.SummaryType
    :ivar summary_name: The summary name.
    :vartype summary_name: str
    :ivar sources: The source details list.
    :vartype sources: list[~azure.mgmt.migrate.models.SourceDetails]
    :ivar targets: The target details list.
    :vartype targets: list[~azure.mgmt.migrate.models.TargetDetails]
    :ivar target_source_mapping: The target source mapping.
    :vartype target_source_mapping: list[~azure.mgmt.migrate.models.TargetSourcePair]
    :ivar cost_components: The cost components.
    :vartype cost_components: list[~azure.mgmt.migrate.models.CostDetailsCommon]
    :ivar savings_components: The cost components.
    :vartype savings_components: list[~azure.mgmt.migrate.models.SavingsDetailsCommon]
    :ivar assessment_name: Name of the assessment.
    :vartype assessment_name: str
    :ivar discovered_light_summary: Light summary of the compound assessment.
    :vartype discovered_light_summary: ~azure.mgmt.migrate.models.DiscoveredLightSummary
    """

    summary_type: Optional[Union[str, "_models.SummaryType"]] = rest_field(name="summaryType", visibility=["read"])
    """The summary type. Known values are: \"Unknown\", \"Strategy\", and \"Target\"."""
    summary_name: Optional[str] = rest_field(name="summaryName", visibility=["read"])
    """The summary name."""
    sources: Optional[List["_models.SourceDetails"]] = rest_field(visibility=["read"])
    """The source details list."""
    targets: Optional[List["_models.TargetDetails"]] = rest_field(visibility=["read"])
    """The target details list."""
    target_source_mapping: Optional[List["_models.TargetSourcePair"]] = rest_field(
        name="targetSourceMapping", visibility=["read"]
    )
    """The target source mapping."""
    cost_components: Optional[List["_models.CostDetailsCommon"]] = rest_field(
        name="costComponents", visibility=["read"]
    )
    """The cost components."""
    savings_components: Optional[List["_models.SavingsDetailsCommon"]] = rest_field(
        name="savingsComponents", visibility=["read"]
    )
    """The cost components."""
    assessment_name: Optional[str] = rest_field(
        name="assessmentName", visibility=["read", "create", "update", "delete", "query"]
    )
    """Name of the assessment."""
    discovered_light_summary: Optional["_models.DiscoveredLightSummary"] = rest_field(
        name="discoveredLightSummary", visibility=["read", "create", "update", "delete", "query"]
    )
    """Light summary of the compound assessment."""

    @overload
    def __init__(
        self,
        *,
        assessment_name: Optional[str] = None,
        discovered_light_summary: Optional["_models.DiscoveredLightSummary"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class WebAppsPerType(_Model):
    """Number of web apps per type.

    :ivar web_app_type: Name of the web app type. Required. Known values are: "Unknown", "ASP.Net",
     and "Java".
    :vartype web_app_type: str or ~azure.mgmt.migrate.models.WebAppType
    :ivar count: Count of the web app type. Required.
    :vartype count: int
    """

    web_app_type: Union[str, "_models.WebAppType"] = rest_field(
        name="webAppType", visibility=["read", "create", "update", "delete", "query"]
    )
    """Name of the web app type. Required. Known values are: \"Unknown\", \"ASP.Net\", and \"Java\"."""
    count: int = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Count of the web app type. Required."""

    @overload
    def __init__(
        self,
        *,
        web_app_type: Union[str, "_models.WebAppType"],
        count: int,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class WebServersPerType(_Model):
    """Number of web servers per type.

    :ivar web_server_type: Name of the web app type. Required. Known values are: "Unknown", "IIS",
     and "Tomcat".
    :vartype web_server_type: str or ~azure.mgmt.migrate.models.WebServerType
    :ivar count: Count of the web app type. Required.
    :vartype count: int
    """

    web_server_type: Union[str, "_models.WebServerType"] = rest_field(
        name="webServerType", visibility=["read", "create", "update", "delete", "query"]
    )
    """Name of the web app type. Required. Known values are: \"Unknown\", \"IIS\", and \"Tomcat\"."""
    count: int = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Count of the web app type. Required."""

    @overload
    def __init__(
        self,
        *,
        web_server_type: Union[str, "_models.WebServerType"],
        count: int,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
