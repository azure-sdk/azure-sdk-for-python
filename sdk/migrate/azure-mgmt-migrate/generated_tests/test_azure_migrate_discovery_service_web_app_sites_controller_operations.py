# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.migrate import AzureMigrateDiscoveryService

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAzureMigrateDiscoveryServiceWebAppSitesControllerOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AzureMigrateDiscoveryService)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_list_by_master_site(self, resource_group):
        response = self.client.web_app_sites_controller.list_by_master_site(
            resource_group_name=resource_group.name,
            site_name="str",
            api_version="2024-05-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_get(self, resource_group):
        response = self.client.web_app_sites_controller.get(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            api_version="2024-05-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_create(self, resource_group):
        response = self.client.web_app_sites_controller.create(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            body={
                "id": "str",
                "name": "str",
                "properties": {
                    "discoveryScenario": "str",
                    "provisioningState": "str",
                    "serviceEndpoint": "str",
                    "siteAppliancePropertiesCollection": [
                        {
                            "agentDetails": {
                                "id": "str",
                                "keyVaultId": "str",
                                "keyVaultUri": "str",
                                "lastHeartBeatUtc": "2020-02-20 00:00:00",
                                "version": "str",
                            },
                            "applianceName": "str",
                            "servicePrincipalIdentityDetails": {
                                "aadAuthority": "str",
                                "applicationId": "str",
                                "audience": "str",
                                "objectId": "str",
                                "rawCertData": "str",
                                "tenantId": "str",
                            },
                        }
                    ],
                },
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "type": "str",
            },
            api_version="2024-05-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_begin_update(self, resource_group):
        response = self.client.web_app_sites_controller.begin_update(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            properties={
                "properties": {
                    "discoveryScenario": "str",
                    "siteAppliancePropertiesCollection": [
                        {
                            "agentDetails": {
                                "id": "str",
                                "keyVaultId": "str",
                                "keyVaultUri": "str",
                                "lastHeartBeatUtc": "2020-02-20 00:00:00",
                                "version": "str",
                            },
                            "applianceName": "str",
                            "servicePrincipalIdentityDetails": {
                                "aadAuthority": "str",
                                "applicationId": "str",
                                "audience": "str",
                                "objectId": "str",
                                "rawCertData": "str",
                                "tenantId": "str",
                            },
                        }
                    ],
                }
            },
            api_version="2024-05-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_begin_delete(self, resource_group):
        response = self.client.web_app_sites_controller.begin_delete(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            api_version="2024-05-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_error_summary(self, resource_group):
        response = self.client.web_app_sites_controller.error_summary(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            body={"applianceName": "str"},
            api_version="2024-05-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_begin_export_inventory(self, resource_group):
        response = self.client.web_app_sites_controller.begin_export_inventory(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            body={"filter": "str"},
            api_version="2024-05-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_begin_refresh(self, resource_group):
        response = self.client.web_app_sites_controller.begin_refresh(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            body={"applianceName": "str"},
            api_version="2024-05-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_web_app_sites_controller_summary(self, resource_group):
        response = self.client.web_app_sites_controller.summary(
            resource_group_name=resource_group.name,
            site_name="str",
            web_app_site_name="str",
            api_version="2024-05-01-preview",
        )

        # please add some check logic here by yourself
        # ...
