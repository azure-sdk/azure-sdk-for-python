# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.migrationdiscovery.aio import AzureMigrateDiscoveryService

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAzureMigrateDiscoveryServiceSqlServersControllerOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AzureMigrateDiscoveryService, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_list_by_sql_site(self, resource_group):
        response = self.client.sql_servers_controller.list_by_sql_site(
            resource_group_name=resource_group.name,
            site_name="str",
            sql_site_name="str",
            api_version="2023-10-01-preview",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_get(self, resource_group):
        response = await self.client.sql_servers_controller.get(
            resource_group_name=resource_group.name,
            site_name="str",
            sql_site_name="str",
            sql_server_name="str",
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_update(self, resource_group):
        response = await self.client.sql_servers_controller.update(
            resource_group_name=resource_group.name,
            site_name="str",
            sql_site_name="str",
            sql_server_name="str",
            body={
                "properties": {
                    "createdTimestamp": "str",
                    "edition": "str",
                    "engineEdition": "str",
                    "hostName": "str",
                    "hydratedRunAsAccountId": "str",
                    "hyperthreadRatio": 0,
                    "isClustered": bool,
                    "isDeleted": bool,
                    "isHighAvailabilityEnabled": bool,
                    "logicalCpuCount": 0,
                    "maxServerMemoryInUseInMb": 0.0,
                    "numOfLogins": 0,
                    "numberOfAgDatabases": 0,
                    "numberOfUserDatabases": 0,
                    "physicalCpuCount": 0.0,
                    "portNumber": 0,
                    "productSupportStatus": {
                        "currentVersion": "str",
                        "esuStatus": "str",
                        "esuYear": "str",
                        "supportEndDate": "2020-02-20 00:00:00",
                        "supportStatus": "str",
                    },
                    "provisioningState": "str",
                    "runAsAccountId": "str",
                    "sqlFciProperties": {
                        "isMultiSubnet": bool,
                        "networkName": "str",
                        "sharedDiskCount": 0,
                        "state": "str",
                    },
                    "sqlServerName": "str",
                    "sqlStartTime": "2020-02-20 00:00:00",
                    "status": "str",
                    "sumOfUserDatabasesSizeInMb": 0.0,
                    "tags": {"str": {}},
                    "tempDbSizeInMb": 0.0,
                    "updatedTimestamp": "str",
                    "version": "str",
                    "visibleOnlineCoreCount": 0,
                }
            },
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...
