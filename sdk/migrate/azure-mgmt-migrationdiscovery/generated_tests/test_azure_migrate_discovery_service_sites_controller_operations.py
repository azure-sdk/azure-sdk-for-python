# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.migrationdiscovery import AzureMigrateDiscoveryService

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAzureMigrateDiscoveryServiceSitesControllerOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AzureMigrateDiscoveryService)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_list_by_subscription(self, resource_group):
        response = self.client.sites_controller.list_by_subscription(
            api_version="2023-10-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_list_by_resource_group(self, resource_group):
        response = self.client.sites_controller.list_by_resource_group(
            resource_group_name=resource_group.name,
            api_version="2023-10-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_get(self, resource_group):
        response = self.client.sites_controller.get(
            resource_group_name=resource_group.name,
            site_name="str",
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_create(self, resource_group):
        response = self.client.sites_controller.create(
            resource_group_name=resource_group.name,
            site_name="str",
            body={
                "location": "str",
                "eTag": "str",
                "id": "str",
                "name": "str",
                "properties": {
                    "agentDetails": {
                        "id": "str",
                        "keyVaultId": "str",
                        "keyVaultUri": "str",
                        "lastHeartBeatUtc": "2020-02-20 00:00:00",
                        "version": "str",
                    },
                    "applianceName": "str",
                    "discoverySolutionId": "str",
                    "masterSiteId": "str",
                    "provisioningState": "str",
                    "serviceEndpoint": "str",
                    "servicePrincipalIdentityDetails": {
                        "aadAuthority": "str",
                        "applicationId": "str",
                        "audience": "str",
                        "objectId": "str",
                        "rawCertData": "str",
                        "tenantId": "str",
                    },
                },
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "tags": {"str": "str"},
                "type": "str",
            },
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_update(self, resource_group):
        response = self.client.sites_controller.update(
            resource_group_name=resource_group.name,
            site_name="str",
            body={
                "properties": {
                    "agentDetails": {
                        "id": "str",
                        "keyVaultId": "str",
                        "keyVaultUri": "str",
                        "lastHeartBeatUtc": "2020-02-20 00:00:00",
                        "version": "str",
                    },
                    "applianceName": "str",
                    "discoverySolutionId": "str",
                    "provisioningState": "str",
                    "servicePrincipalIdentityDetails": {
                        "aadAuthority": "str",
                        "applicationId": "str",
                        "audience": "str",
                        "objectId": "str",
                        "rawCertData": "str",
                        "tenantId": "str",
                    },
                },
                "tags": {"str": "str"},
            },
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_delete(self, resource_group):
        response = self.client.sites_controller.delete(
            resource_group_name=resource_group.name,
            site_name="str",
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_compute_error_summary(self, resource_group):
        response = self.client.sites_controller.compute_error_summary(
            resource_group_name=resource_group.name,
            site_name="str",
            body={},
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_computeusage(self, resource_group):
        response = self.client.sites_controller.computeusage(
            resource_group_name=resource_group.name,
            site_name="str",
            body={},
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_begin_export_applications(self, resource_group):
        response = self.client.sites_controller.begin_export_applications(
            resource_group_name=resource_group.name,
            site_name="str",
            body={},
            api_version="2023-10-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_begin_export_machine_errors(self, resource_group):
        response = self.client.sites_controller.begin_export_machine_errors(
            resource_group_name=resource_group.name,
            site_name="str",
            body={"properties": {"discoveryScope": "str"}},
            api_version="2023-10-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_begin_export_machines(self, resource_group):
        response = self.client.sites_controller.begin_export_machines(
            resource_group_name=resource_group.name,
            site_name="str",
            body={"filter": "str"},
            api_version="2023-10-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_list_health_summary(self, resource_group):
        response = self.client.sites_controller.list_health_summary(
            resource_group_name=resource_group.name,
            site_name="str",
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_sites_controller_summary(self, resource_group):
        response = self.client.sites_controller.summary(
            resource_group_name=resource_group.name,
            site_name="str",
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...
