# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ACRProperties(_serialization.Model):
    """Class for ACR Properties.

    :ivar registry_name: Gets or sets the azure container registry name.
    :vartype registry_name: str
    :ivar tenant_id: Gets or sets the tenant id.
    :vartype tenant_id: str
    :ivar subscription_id: Gets or sets the subscription id of the resource.
    :vartype subscription_id: str
    :ivar resource_group: Gets or sets the resource group of the resource.
    :vartype resource_group: str
    """

    _attribute_map = {
        "registry_name": {"key": "registryName", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        registry_name: Optional[str] = None,
        tenant_id: Optional[str] = None,
        subscription_id: Optional[str] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword registry_name: Gets or sets the azure container registry name.
        :paramtype registry_name: str
        :keyword tenant_id: Gets or sets the tenant id.
        :paramtype tenant_id: str
        :keyword subscription_id: Gets or sets the subscription id of the resource.
        :paramtype subscription_id: str
        :keyword resource_group: Gets or sets the resource group of the resource.
        :paramtype resource_group: str
        """
        super().__init__(**kwargs)
        self.registry_name = registry_name
        self.tenant_id = tenant_id
        self.subscription_id = subscription_id
        self.resource_group = resource_group


class AKSDeploymentProperties(_serialization.Model):
    """Class for AKSDeployment Properties.

    :ivar aks_cluster_name: Gets or sets the AKS cluster name.
    :vartype aks_cluster_name: str
    :ivar tenant_id: Gets or sets the tenant id.
    :vartype tenant_id: str
    :ivar subscription_id: Gets or sets the subscription id of the resource.
    :vartype subscription_id: str
    :ivar resource_group: Gets or sets the resource group of the resource.
    :vartype resource_group: str
    """

    _attribute_map = {
        "aks_cluster_name": {"key": "aksClusterName", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        aks_cluster_name: Optional[str] = None,
        tenant_id: Optional[str] = None,
        subscription_id: Optional[str] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword aks_cluster_name: Gets or sets the AKS cluster name.
        :paramtype aks_cluster_name: str
        :keyword tenant_id: Gets or sets the tenant id.
        :paramtype tenant_id: str
        :keyword subscription_id: Gets or sets the subscription id of the resource.
        :paramtype subscription_id: str
        :keyword resource_group: Gets or sets the resource group of the resource.
        :paramtype resource_group: str
        """
        super().__init__(**kwargs)
        self.aks_cluster_name = aks_cluster_name
        self.tenant_id = tenant_id
        self.subscription_id = subscription_id
        self.resource_group = resource_group


class AKSDeploymentSpecification(_serialization.Model):
    """AKS Deployment Specification.

    :ivar kubernetes_objects_yaml: Gets or sets the Merged Deployment and service Yaml.
    :vartype kubernetes_objects_yaml: str
    :ivar replica_count: Gets or sets the replica count to be created in AKS.
    :vartype replica_count: str
    :ivar load_balancer_type: Gets or sets the load balancer type. Known values are: "Private" and
     "Public".
    :vartype load_balancer_type: str or ~azure.mgmt.migrationmodernization.models.LoadBalancerType
    """

    _attribute_map = {
        "kubernetes_objects_yaml": {"key": "kubernetesObjectsYaml", "type": "str"},
        "replica_count": {"key": "replicaCount", "type": "str"},
        "load_balancer_type": {"key": "loadBalancerType", "type": "str"},
    }

    def __init__(
        self,
        *,
        kubernetes_objects_yaml: Optional[str] = None,
        replica_count: Optional[str] = None,
        load_balancer_type: Optional[Union[str, "_models.LoadBalancerType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword kubernetes_objects_yaml: Gets or sets the Merged Deployment and service Yaml.
        :paramtype kubernetes_objects_yaml: str
        :keyword replica_count: Gets or sets the replica count to be created in AKS.
        :paramtype replica_count: str
        :keyword load_balancer_type: Gets or sets the load balancer type. Known values are: "Private"
         and "Public".
        :paramtype load_balancer_type: str or
         ~azure.mgmt.migrationmodernization.models.LoadBalancerType
        """
        super().__init__(**kwargs)
        self.kubernetes_objects_yaml = kubernetes_objects_yaml
        self.replica_count = replica_count
        self.load_balancer_type = load_balancer_type


class ApacheTomcatAKSWorkloadDeployment(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """ApacheTomcat web application.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar cluster_properties: Class for AKSDeployment Properties.
    :vartype cluster_properties: ~azure.mgmt.migrationmodernization.models.AKSDeploymentProperties
    :ivar deployment_spec: AKS Deployment Specification.
    :vartype deployment_spec: ~azure.mgmt.migrationmodernization.models.AKSDeploymentSpecification
    :ivar deployment_history: Gets or sets the deployment history.
    :vartype deployment_history:
     list[~azure.mgmt.migrationmodernization.models.DeployedResourcesProperties]
    :ivar deployment_name_prefix: Gets or sets the deployment name prefix.
    :vartype deployment_name_prefix: str
    :ivar automation_artifact_properties: Class for automation artifact.
    :vartype automation_artifact_properties:
     ~azure.mgmt.migrationmodernization.models.AutomationArtifact
    :ivar directories: Gets or sets application directories.
    :vartype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
    :ivar configurations: Gets or sets application configuration.
    :vartype configurations:
     list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
    :ivar container_image_properties: Class for container image properties.
    :vartype container_image_properties:
     ~azure.mgmt.migrationmodernization.models.ContainerImageProperties
    :ivar build_container_images: Gets or sets the build container images.
    :vartype build_container_images:
     list[~azure.mgmt.migrationmodernization.models.ContainerImageProperties]
    :ivar bindings: Gets or sets the bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
    :ivar requests: Resource Requirements.
    :vartype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    :ivar limits: Resource Requirements.
    :vartype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    :ivar target_platform_identity: Gets or sets the target platform managed identity.
    :vartype target_platform_identity: str
    :ivar monitoring_properties: Class for app insight monitoring properties.
    :vartype monitoring_properties:
     ~azure.mgmt.migrationmodernization.models.AppInsightMonitoringProperties
    """

    _validation = {
        "deployment_history": {"readonly": True},
    }

    _attribute_map = {
        "cluster_properties": {"key": "clusterProperties", "type": "AKSDeploymentProperties"},
        "deployment_spec": {"key": "deploymentSpec", "type": "AKSDeploymentSpecification"},
        "deployment_history": {"key": "deploymentHistory", "type": "[DeployedResourcesProperties]"},
        "deployment_name_prefix": {"key": "deploymentNamePrefix", "type": "str"},
        "automation_artifact_properties": {"key": "automationArtifactProperties", "type": "AutomationArtifact"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectory]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfiguration]"},
        "container_image_properties": {"key": "containerImageProperties", "type": "ContainerImageProperties"},
        "build_container_images": {"key": "buildContainerImages", "type": "[ContainerImageProperties]"},
        "bindings": {"key": "bindings", "type": "[Binding]"},
        "requests": {"key": "requests", "type": "ResourceRequirements"},
        "limits": {"key": "limits", "type": "ResourceRequirements"},
        "target_platform_identity": {"key": "targetPlatformIdentity", "type": "str"},
        "monitoring_properties": {"key": "monitoringProperties", "type": "AppInsightMonitoringProperties"},
    }

    def __init__(
        self,
        *,
        cluster_properties: Optional["_models.AKSDeploymentProperties"] = None,
        deployment_spec: Optional["_models.AKSDeploymentSpecification"] = None,
        deployment_name_prefix: Optional[str] = None,
        automation_artifact_properties: Optional["_models.AutomationArtifact"] = None,
        directories: Optional[List["_models.WebApplicationDirectory"]] = None,
        configurations: Optional[List["_models.WebApplicationConfiguration"]] = None,
        container_image_properties: Optional["_models.ContainerImageProperties"] = None,
        build_container_images: Optional[List["_models.ContainerImageProperties"]] = None,
        bindings: Optional[List["_models.Binding"]] = None,
        requests: Optional["_models.ResourceRequirements"] = None,
        limits: Optional["_models.ResourceRequirements"] = None,
        target_platform_identity: Optional[str] = None,
        monitoring_properties: Optional["_models.AppInsightMonitoringProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword cluster_properties: Class for AKSDeployment Properties.
        :paramtype cluster_properties:
         ~azure.mgmt.migrationmodernization.models.AKSDeploymentProperties
        :keyword deployment_spec: AKS Deployment Specification.
        :paramtype deployment_spec:
         ~azure.mgmt.migrationmodernization.models.AKSDeploymentSpecification
        :keyword deployment_name_prefix: Gets or sets the deployment name prefix.
        :paramtype deployment_name_prefix: str
        :keyword automation_artifact_properties: Class for automation artifact.
        :paramtype automation_artifact_properties:
         ~azure.mgmt.migrationmodernization.models.AutomationArtifact
        :keyword directories: Gets or sets application directories.
        :paramtype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
        :keyword configurations: Gets or sets application configuration.
        :paramtype configurations:
         list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
        :keyword container_image_properties: Class for container image properties.
        :paramtype container_image_properties:
         ~azure.mgmt.migrationmodernization.models.ContainerImageProperties
        :keyword build_container_images: Gets or sets the build container images.
        :paramtype build_container_images:
         list[~azure.mgmt.migrationmodernization.models.ContainerImageProperties]
        :keyword bindings: Gets or sets the bindings for the application.
        :paramtype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
        :keyword requests: Resource Requirements.
        :paramtype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        :keyword limits: Resource Requirements.
        :paramtype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        :keyword target_platform_identity: Gets or sets the target platform managed identity.
        :paramtype target_platform_identity: str
        :keyword monitoring_properties: Class for app insight monitoring properties.
        :paramtype monitoring_properties:
         ~azure.mgmt.migrationmodernization.models.AppInsightMonitoringProperties
        """
        super().__init__(**kwargs)
        self.cluster_properties = cluster_properties
        self.deployment_spec = deployment_spec
        self.deployment_history = None
        self.deployment_name_prefix = deployment_name_prefix
        self.automation_artifact_properties = automation_artifact_properties
        self.directories = directories
        self.configurations = configurations
        self.container_image_properties = container_image_properties
        self.build_container_images = build_container_images
        self.bindings = bindings
        self.requests = requests
        self.limits = limits
        self.target_platform_identity = target_platform_identity
        self.monitoring_properties = monitoring_properties


class WorkloadDeploymentModelCustomProperties(_serialization.Model):
    """Workload deployment model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ApacheTomcatAKSWorkloadDeploymentModelCustomProperties,
    IISAKSWorkloadDeploymentModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "IISAKSWorkloadDeployment" and "ApacheTomcatAKSWorkloadDeployment".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentType
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties": "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties",
            "IISAKSWorkloadDeploymentModelCustomProperties": "IISAKSWorkloadDeploymentModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class ApacheTomcatAKSWorkloadDeploymentModelCustomProperties(
    WorkloadDeploymentModelCustomProperties
):  # pylint: disable=name-too-long
    """ApacheTomcat workload instance model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "IISAKSWorkloadDeployment" and "ApacheTomcatAKSWorkloadDeployment".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentType
    :ivar apache_tomcat_aks_workload_deployment_properties: ApacheTomcat web application.
    :vartype apache_tomcat_aks_workload_deployment_properties:
     ~azure.mgmt.migrationmodernization.models.ApacheTomcatAKSWorkloadDeployment
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "apache_tomcat_aks_workload_deployment_properties": {
            "key": "apacheTomcatAksWorkloadDeploymentProperties",
            "type": "ApacheTomcatAKSWorkloadDeployment",
        },
    }

    def __init__(
        self,
        *,
        apache_tomcat_aks_workload_deployment_properties: Optional["_models.ApacheTomcatAKSWorkloadDeployment"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword apache_tomcat_aks_workload_deployment_properties: ApacheTomcat web application.
        :paramtype apache_tomcat_aks_workload_deployment_properties:
         ~azure.mgmt.migrationmodernization.models.ApacheTomcatAKSWorkloadDeployment
        """
        super().__init__(**kwargs)
        self.instance_type: str = "ApacheTomcatAKSWorkloadDeploymentModelCustomProperties"
        self.apache_tomcat_aks_workload_deployment_properties = apache_tomcat_aks_workload_deployment_properties


class ApacheTomcatWebApplication(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """ApacheTomcat web application.

    :ivar application_id: Gets or sets the web application id.
    :vartype application_id: str
    :ivar application_name: Gets or sets the web application name.
    :vartype application_name: str
    :ivar application_scratch_path: Gets or sets application scratch path.
    :vartype application_scratch_path: str
    :ivar web_server_id: Gets or sets the web server id.
    :vartype web_server_id: str
    :ivar web_server_name: Gets or sets the web server name.
    :vartype web_server_name: str
    :ivar display_name: Gets or sets the display name.
    :vartype display_name: str
    :ivar directories: Gets or sets application directories.
    :vartype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
    :ivar configurations: Gets or sets application configuration.
    :vartype configurations:
     list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
    :ivar path: Second level entity for virtual directories.
    :vartype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
    :ivar bindings: Gets or sets the bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
    :ivar primary_framework: Framework specific data for a web application.
    :vartype primary_framework: ~azure.mgmt.migrationmodernization.models.WebApplicationFramework
    :ivar discovered_frameworks: Gets or sets the discovered frameworks of application.
    :vartype discovered_frameworks:
     list[~azure.mgmt.migrationmodernization.models.WebApplicationFramework]
    :ivar requests: Resource Requirements.
    :vartype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    :ivar limits: Resource Requirements.
    :vartype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    """

    _attribute_map = {
        "application_id": {"key": "applicationId", "type": "str"},
        "application_name": {"key": "applicationName", "type": "str"},
        "application_scratch_path": {"key": "applicationScratchPath", "type": "str"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_name": {"key": "webServerName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectory]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfiguration]"},
        "path": {"key": "path", "type": "DirectoryPath"},
        "bindings": {"key": "bindings", "type": "[Binding]"},
        "primary_framework": {"key": "primaryFramework", "type": "WebApplicationFramework"},
        "discovered_frameworks": {"key": "discoveredFrameworks", "type": "[WebApplicationFramework]"},
        "requests": {"key": "requests", "type": "ResourceRequirements"},
        "limits": {"key": "limits", "type": "ResourceRequirements"},
    }

    def __init__(
        self,
        *,
        application_id: Optional[str] = None,
        application_name: Optional[str] = None,
        application_scratch_path: Optional[str] = None,
        web_server_id: Optional[str] = None,
        web_server_name: Optional[str] = None,
        display_name: Optional[str] = None,
        directories: Optional[List["_models.WebApplicationDirectory"]] = None,
        configurations: Optional[List["_models.WebApplicationConfiguration"]] = None,
        path: Optional["_models.DirectoryPath"] = None,
        bindings: Optional[List["_models.Binding"]] = None,
        primary_framework: Optional["_models.WebApplicationFramework"] = None,
        discovered_frameworks: Optional[List["_models.WebApplicationFramework"]] = None,
        requests: Optional["_models.ResourceRequirements"] = None,
        limits: Optional["_models.ResourceRequirements"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword application_id: Gets or sets the web application id.
        :paramtype application_id: str
        :keyword application_name: Gets or sets the web application name.
        :paramtype application_name: str
        :keyword application_scratch_path: Gets or sets application scratch path.
        :paramtype application_scratch_path: str
        :keyword web_server_id: Gets or sets the web server id.
        :paramtype web_server_id: str
        :keyword web_server_name: Gets or sets the web server name.
        :paramtype web_server_name: str
        :keyword display_name: Gets or sets the display name.
        :paramtype display_name: str
        :keyword directories: Gets or sets application directories.
        :paramtype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
        :keyword configurations: Gets or sets application configuration.
        :paramtype configurations:
         list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
        :keyword path: Second level entity for virtual directories.
        :paramtype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
        :keyword bindings: Gets or sets the bindings for the application.
        :paramtype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
        :keyword primary_framework: Framework specific data for a web application.
        :paramtype primary_framework: ~azure.mgmt.migrationmodernization.models.WebApplicationFramework
        :keyword discovered_frameworks: Gets or sets the discovered frameworks of application.
        :paramtype discovered_frameworks:
         list[~azure.mgmt.migrationmodernization.models.WebApplicationFramework]
        :keyword requests: Resource Requirements.
        :paramtype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        :keyword limits: Resource Requirements.
        :paramtype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        """
        super().__init__(**kwargs)
        self.application_id = application_id
        self.application_name = application_name
        self.application_scratch_path = application_scratch_path
        self.web_server_id = web_server_id
        self.web_server_name = web_server_name
        self.display_name = display_name
        self.directories = directories
        self.configurations = configurations
        self.path = path
        self.bindings = bindings
        self.primary_framework = primary_framework
        self.discovered_frameworks = discovered_frameworks
        self.requests = requests
        self.limits = limits


class WorkloadInstanceModelCustomProperties(_serialization.Model):
    """Workload instance model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ApacheTomcatWorkloadInstanceModelCustomProperties, IISWorkloadInstanceModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are: "IISWorkload"
     and "ApacheTomcatWorkload".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkloadType
    :ivar web_app_arm_id: Gets or sets the Web application ARM id.
    :vartype web_app_arm_id: str
    :ivar web_app_site_name: Gets or sets the Web application site name.
    :vartype web_app_site_name: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "web_app_arm_id": {"key": "webAppArmId", "type": "str"},
        "web_app_site_name": {"key": "webAppSiteName", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "ApacheTomcatWorkloadInstanceModelCustomProperties": "ApacheTomcatWorkloadInstanceModelCustomProperties",
            "IISWorkloadInstanceModelCustomProperties": "IISWorkloadInstanceModelCustomProperties",
        }
    }

    def __init__(
        self, *, web_app_arm_id: Optional[str] = None, web_app_site_name: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword web_app_arm_id: Gets or sets the Web application ARM id.
        :paramtype web_app_arm_id: str
        :keyword web_app_site_name: Gets or sets the Web application site name.
        :paramtype web_app_site_name: str
        """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None
        self.web_app_arm_id = web_app_arm_id
        self.web_app_site_name = web_app_site_name


class ApacheTomcatWorkloadInstanceModelCustomProperties(
    WorkloadInstanceModelCustomProperties
):  # pylint: disable=name-too-long
    """ApacheTomcat workload instance model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are: "IISWorkload"
     and "ApacheTomcatWorkload".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkloadType
    :ivar web_app_arm_id: Gets or sets the Web application ARM id.
    :vartype web_app_arm_id: str
    :ivar web_app_site_name: Gets or sets the Web application site name.
    :vartype web_app_site_name: str
    :ivar apache_tomcat_web_application: ApacheTomcat web application.
    :vartype apache_tomcat_web_application:
     ~azure.mgmt.migrationmodernization.models.ApacheTomcatWebApplication
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "web_app_arm_id": {"key": "webAppArmId", "type": "str"},
        "web_app_site_name": {"key": "webAppSiteName", "type": "str"},
        "apache_tomcat_web_application": {"key": "apacheTomcatWebApplication", "type": "ApacheTomcatWebApplication"},
    }

    def __init__(
        self,
        *,
        web_app_arm_id: Optional[str] = None,
        web_app_site_name: Optional[str] = None,
        apache_tomcat_web_application: Optional["_models.ApacheTomcatWebApplication"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword web_app_arm_id: Gets or sets the Web application ARM id.
        :paramtype web_app_arm_id: str
        :keyword web_app_site_name: Gets or sets the Web application site name.
        :paramtype web_app_site_name: str
        :keyword apache_tomcat_web_application: ApacheTomcat web application.
        :paramtype apache_tomcat_web_application:
         ~azure.mgmt.migrationmodernization.models.ApacheTomcatWebApplication
        """
        super().__init__(web_app_arm_id=web_app_arm_id, web_app_site_name=web_app_site_name, **kwargs)
        self.instance_type: str = "ApacheTomcatWorkloadInstanceModelCustomProperties"
        self.apache_tomcat_web_application = apache_tomcat_web_application


class AppInsightMonitoringProperties(_serialization.Model):
    """Class for app insight monitoring properties.

    :ivar subscription_id: Gets or sets the subscription id of the resource.
    :vartype subscription_id: str
    :ivar resource_group: Gets or sets the resource group of the resource.
    :vartype resource_group: str
    :ivar app_insights_name: Gets or sets the app insights name.
    :vartype app_insights_name: str
    :ivar region: Gets or sets the region.
    :vartype region: str
    :ivar is_enabled: Gets or sets a value indicating whether monitoring is enabled.
    :vartype is_enabled: bool
    :ivar secret_store_details:
    :vartype secret_store_details: ~azure.mgmt.migrationmodernization.models.SecretStoreDetails
    """

    _attribute_map = {
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
        "app_insights_name": {"key": "appInsightsName", "type": "str"},
        "region": {"key": "region", "type": "str"},
        "is_enabled": {"key": "isEnabled", "type": "bool"},
        "secret_store_details": {"key": "secretStoreDetails", "type": "SecretStoreDetails"},
    }

    def __init__(
        self,
        *,
        subscription_id: Optional[str] = None,
        resource_group: Optional[str] = None,
        app_insights_name: Optional[str] = None,
        region: Optional[str] = None,
        is_enabled: Optional[bool] = None,
        secret_store_details: Optional["_models.SecretStoreDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword subscription_id: Gets or sets the subscription id of the resource.
        :paramtype subscription_id: str
        :keyword resource_group: Gets or sets the resource group of the resource.
        :paramtype resource_group: str
        :keyword app_insights_name: Gets or sets the app insights name.
        :paramtype app_insights_name: str
        :keyword region: Gets or sets the region.
        :paramtype region: str
        :keyword is_enabled: Gets or sets a value indicating whether monitoring is enabled.
        :paramtype is_enabled: bool
        :keyword secret_store_details:
        :paramtype secret_store_details: ~azure.mgmt.migrationmodernization.models.SecretStoreDetails
        """
        super().__init__(**kwargs)
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.app_insights_name = app_insights_name
        self.region = region
        self.is_enabled = is_enabled
        self.secret_store_details = secret_store_details


class SecretStoreProperties(_serialization.Model):
    """SecretStoreProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar secret_store_id:
    :vartype secret_store_id: str
    :ivar input_type:
    :vartype input_type: str
    """

    _validation = {
        "input_type": {"readonly": True},
    }

    _attribute_map = {
        "secret_store_id": {"key": "secretStoreId", "type": "str"},
        "input_type": {"key": "inputType", "type": "str"},
    }

    def __init__(self, *, secret_store_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword secret_store_id:
        :paramtype secret_store_id: str
        """
        super().__init__(**kwargs)
        self.secret_store_id = secret_store_id
        self.input_type = None


class AppServiceSettingSecretStoreProperties(SecretStoreProperties):
    """AppServiceSettingSecretStoreProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar secret_store_id:
    :vartype secret_store_id: str
    :ivar input_type:
    :vartype input_type: str
    :ivar tenant_id:
    :vartype tenant_id: str
    :ivar subscription_id:
    :vartype subscription_id: str
    :ivar resource_group:
    :vartype resource_group: str
    :ivar app_service_name:
    :vartype app_service_name: str
    """

    _validation = {
        "input_type": {"readonly": True},
    }

    _attribute_map = {
        "secret_store_id": {"key": "secretStoreId", "type": "str"},
        "input_type": {"key": "inputType", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
        "app_service_name": {"key": "appServiceName", "type": "str"},
    }

    def __init__(
        self,
        *,
        secret_store_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        subscription_id: Optional[str] = None,
        resource_group: Optional[str] = None,
        app_service_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword secret_store_id:
        :paramtype secret_store_id: str
        :keyword tenant_id:
        :paramtype tenant_id: str
        :keyword subscription_id:
        :paramtype subscription_id: str
        :keyword resource_group:
        :paramtype resource_group: str
        :keyword app_service_name:
        :paramtype app_service_name: str
        """
        super().__init__(secret_store_id=secret_store_id, **kwargs)
        self.tenant_id = tenant_id
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.app_service_name = app_service_name


class ArmError(_serialization.Model):
    """ARM error.

    :ivar error: Arm error information.
    :vartype error: ~azure.mgmt.migrationmodernization.models.ArmErrorInfo
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ArmErrorInfo"},
    }

    def __init__(self, *, error: Optional["_models.ArmErrorInfo"] = None, **kwargs: Any) -> None:
        """
        :keyword error: Arm error information.
        :paramtype error: ~azure.mgmt.migrationmodernization.models.ArmErrorInfo
        """
        super().__init__(**kwargs)
        self.error = error


class ArmErrorInfo(_serialization.Model):
    """Arm error information.

    :ivar code: Gets or sets the error code returned by the service.
    :vartype code: str
    :ivar message: Gets or sets error Message returned by the service.
    :vartype message: str
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, code: Optional[str] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword code: Gets or sets the error code returned by the service.
        :paramtype code: str
        :keyword message: Gets or sets error Message returned by the service.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message


class AutomationArtifact(_serialization.Model):
    """Class for automation artifact.

    :ivar status: Gets or sets the status of automation artifacts. Known values are: "NotGenerated"
     and "Generated".
    :vartype status: str or ~azure.mgmt.migrationmodernization.models.AutomationArtifactStatus
    :ivar azure_file_share_profile: Azure file share profile for hydration of application folders
     not mounted on
     the container file system.
    :vartype azure_file_share_profile:
     ~azure.mgmt.migrationmodernization.models.AzureFileShareHydrationProfile
    :ivar artifacts: Gets or sets the artifacts.
    :vartype artifacts: dict[str, str]
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "azure_file_share_profile": {"key": "azureFileShareProfile", "type": "AzureFileShareHydrationProfile"},
        "artifacts": {"key": "artifacts", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "_models.AutomationArtifactStatus"]] = None,
        azure_file_share_profile: Optional["_models.AzureFileShareHydrationProfile"] = None,
        artifacts: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: Gets or sets the status of automation artifacts. Known values are:
         "NotGenerated" and "Generated".
        :paramtype status: str or ~azure.mgmt.migrationmodernization.models.AutomationArtifactStatus
        :keyword azure_file_share_profile: Azure file share profile for hydration of application
         folders not mounted on
         the container file system.
        :paramtype azure_file_share_profile:
         ~azure.mgmt.migrationmodernization.models.AzureFileShareHydrationProfile
        :keyword artifacts: Gets or sets the artifacts.
        :paramtype artifacts: dict[str, str]
        """
        super().__init__(**kwargs)
        self.status = status
        self.azure_file_share_profile = azure_file_share_profile
        self.artifacts = artifacts


class AzureFileShareHydrationProfile(_serialization.Model):
    """Azure file share profile for hydration of application folders not mounted on
    the container file system.

    :ivar azure_file_share_name: Gets or sets the name of the azure file share.
    :vartype azure_file_share_name: str
    :ivar azure_file_share_subscription_id: Gets or sets the subscription id of the azure file
     share.
    :vartype azure_file_share_subscription_id: str
    :ivar azure_file_share_resource_group: Gets or sets the name of the azure file share resource
     group.
    :vartype azure_file_share_resource_group: str
    :ivar azure_file_share_storage_account: Gets or sets the name of the azure file share storage
     account.
    :vartype azure_file_share_storage_account: str
    :ivar azure_file_share_dir_path: Gets or sets the cloud directory path of the directory on
     azure file share.
    :vartype azure_file_share_dir_path: str
    """

    _attribute_map = {
        "azure_file_share_name": {"key": "azureFileShareName", "type": "str"},
        "azure_file_share_subscription_id": {"key": "azureFileShareSubscriptionId", "type": "str"},
        "azure_file_share_resource_group": {"key": "azureFileShareResourceGroup", "type": "str"},
        "azure_file_share_storage_account": {"key": "azureFileShareStorageAccount", "type": "str"},
        "azure_file_share_dir_path": {"key": "azureFileShareDirPath", "type": "str"},
    }

    def __init__(
        self,
        *,
        azure_file_share_name: Optional[str] = None,
        azure_file_share_subscription_id: Optional[str] = None,
        azure_file_share_resource_group: Optional[str] = None,
        azure_file_share_storage_account: Optional[str] = None,
        azure_file_share_dir_path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword azure_file_share_name: Gets or sets the name of the azure file share.
        :paramtype azure_file_share_name: str
        :keyword azure_file_share_subscription_id: Gets or sets the subscription id of the azure file
         share.
        :paramtype azure_file_share_subscription_id: str
        :keyword azure_file_share_resource_group: Gets or sets the name of the azure file share
         resource group.
        :paramtype azure_file_share_resource_group: str
        :keyword azure_file_share_storage_account: Gets or sets the name of the azure file share
         storage account.
        :paramtype azure_file_share_storage_account: str
        :keyword azure_file_share_dir_path: Gets or sets the cloud directory path of the directory on
         azure file share.
        :paramtype azure_file_share_dir_path: str
        """
        super().__init__(**kwargs)
        self.azure_file_share_name = azure_file_share_name
        self.azure_file_share_subscription_id = azure_file_share_subscription_id
        self.azure_file_share_resource_group = azure_file_share_resource_group
        self.azure_file_share_storage_account = azure_file_share_storage_account
        self.azure_file_share_dir_path = azure_file_share_dir_path


class Binding(_serialization.Model):
    """Binding for a web application.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar port: Gets or sets the application port.
    :vartype port: str
    :ivar port_mapping: WebApplication port mapping.
    :vartype port_mapping: ~azure.mgmt.migrationmodernization.models.PortMapping
    :ivar cert: WebApplication certificate.
    :vartype cert: ~azure.mgmt.migrationmodernization.models.Cert
    :ivar host_name: Gets or sets the binding host name.
    :vartype host_name: str
    :ivar protocol: Gets or sets the protocol.
    :vartype protocol: str
    :ivar ip_address: Gets or sets the IP Address.
    :vartype ip_address: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "port": {"key": "port", "type": "str"},
        "port_mapping": {"key": "portMapping", "type": "PortMapping"},
        "cert": {"key": "cert", "type": "Cert"},
        "host_name": {"key": "hostName", "type": "str"},
        "protocol": {"key": "protocol", "type": "str"},
        "ip_address": {"key": "ipAddress", "type": "str"},
    }

    def __init__(
        self,
        *,
        port: Optional[str] = None,
        port_mapping: Optional["_models.PortMapping"] = None,
        cert: Optional["_models.Cert"] = None,
        host_name: Optional[str] = None,
        protocol: Optional[str] = None,
        ip_address: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword port: Gets or sets the application port.
        :paramtype port: str
        :keyword port_mapping: WebApplication port mapping.
        :paramtype port_mapping: ~azure.mgmt.migrationmodernization.models.PortMapping
        :keyword cert: WebApplication certificate.
        :paramtype cert: ~azure.mgmt.migrationmodernization.models.Cert
        :keyword host_name: Gets or sets the binding host name.
        :paramtype host_name: str
        :keyword protocol: Gets or sets the protocol.
        :paramtype protocol: str
        :keyword ip_address: Gets or sets the IP Address.
        :paramtype ip_address: str
        """
        super().__init__(**kwargs)
        self.id = None
        self.port = port
        self.port_mapping = port_mapping
        self.cert = cert
        self.host_name = host_name
        self.protocol = protocol
        self.ip_address = ip_address


class BuildContainerImageModel(_serialization.Model):
    """BuildContainerImage model.

    :ivar properties: Class for container image properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.ContainerImageProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "ContainerImageProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ContainerImageProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Class for container image properties.
        :paramtype properties: ~azure.mgmt.migrationmodernization.models.ContainerImageProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class WorkflowModelCustomProperties(_serialization.Model):
    """Workflow model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    BuildContainerImageWorkflowModelCustomProperties,
    EnableReplicationWorkflowModelCustomProperties, MigrateWorkflowModelCustomProperties,
    TestMigrateCleanupWorkflowModelCustomProperties, TestMigrateWorkflowModelCustomProperties

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "SampleWorkflow", "EnableReplicationWorkflow", "StopReplicationWorkflow",
     "BuildContainerImageWorkflow", "MigrateWorkflow", "TestMigrateWorkflow",
     "TestMigrateCleanupWorkflow", "CompleteMigrationWorkflow", and "DisableReplicationWorkflow".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowType
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details: dict[str, str]
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {"key": "affectedObjectDetails", "type": "{str}"},
    }

    _subtype_map = {
        "instance_type": {
            "BuildContainerImageWorkflowModelCustomProperties": "BuildContainerImageWorkflowModelCustomProperties",
            "EnableReplicationWorkflowModelCustomProperties": "EnableReplicationWorkflowModelCustomProperties",
            "MigrateWorkflowModelCustomProperties": "MigrateWorkflowModelCustomProperties",
            "TestMigrateCleanupWorkflowModelCustomProperties": "TestMigrateCleanupWorkflowModelCustomProperties",
            "TestMigrateWorkflowModelCustomProperties": "TestMigrateWorkflowModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None
        self.affected_object_details = None


class BuildContainerImageWorkflowModelCustomProperties(WorkflowModelCustomProperties):  # pylint: disable=name-too-long
    """Build container image workflow model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "SampleWorkflow", "EnableReplicationWorkflow", "StopReplicationWorkflow",
     "BuildContainerImageWorkflow", "MigrateWorkflow", "TestMigrateWorkflow",
     "TestMigrateCleanupWorkflow", "CompleteMigrationWorkflow", and "DisableReplicationWorkflow".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowType
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details: dict[str, str]
    :ivar container_image_properties:
    :vartype container_image_properties:
     ~azure.mgmt.migrationmodernization.models.BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "container_image_properties": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {"key": "affectedObjectDetails", "type": "{str}"},
        "container_image_properties": {
            "key": "containerImageProperties",
            "type": "BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties",
        },
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "BuildContainerImageWorkflowModelCustomProperties"
        self.container_image_properties = None


class ContainerImageProperties(_serialization.Model):
    """Class for container image properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar dockerfile: Gets or sets the dockerfile for the container image.
    :vartype dockerfile: str
    :ivar registry_properties: Class for ACR Properties.
    :vartype registry_properties: ~azure.mgmt.migrationmodernization.models.ACRProperties
    :ivar image_tag: Gets or sets the container image tag.
    :vartype image_tag: str
    :ivar image_name: Gets or sets the container image name.
    :vartype image_name: str
    :ivar run_id: Gets or sets the RunId.
    :vartype run_id: str
    :ivar run_status: Gets or sets the RunStatus.
    :vartype run_status: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "dockerfile": {"key": "dockerfile", "type": "str"},
        "registry_properties": {"key": "registryProperties", "type": "ACRProperties"},
        "image_tag": {"key": "imageTag", "type": "str"},
        "image_name": {"key": "imageName", "type": "str"},
        "run_id": {"key": "runId", "type": "str"},
        "run_status": {"key": "runStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        dockerfile: Optional[str] = None,
        registry_properties: Optional["_models.ACRProperties"] = None,
        image_tag: Optional[str] = None,
        image_name: Optional[str] = None,
        run_id: Optional[str] = None,
        run_status: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword dockerfile: Gets or sets the dockerfile for the container image.
        :paramtype dockerfile: str
        :keyword registry_properties: Class for ACR Properties.
        :paramtype registry_properties: ~azure.mgmt.migrationmodernization.models.ACRProperties
        :keyword image_tag: Gets or sets the container image tag.
        :paramtype image_tag: str
        :keyword image_name: Gets or sets the container image name.
        :paramtype image_name: str
        :keyword run_id: Gets or sets the RunId.
        :paramtype run_id: str
        :keyword run_status: Gets or sets the RunStatus.
        :paramtype run_status: str
        """
        super().__init__(**kwargs)
        self.id = None
        self.dockerfile = dockerfile
        self.registry_properties = registry_properties
        self.image_tag = image_tag
        self.image_name = image_name
        self.run_id = run_id
        self.run_status = run_status


class BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties(
    ContainerImageProperties
):  # pylint: disable=name-too-long
    """BuildContainerImageWorkflowModelCustomPropertiesContainerImageProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar dockerfile: Gets or sets the dockerfile for the container image.
    :vartype dockerfile: str
    :ivar registry_properties: Class for ACR Properties.
    :vartype registry_properties: ~azure.mgmt.migrationmodernization.models.ACRProperties
    :ivar image_tag: Gets or sets the container image tag.
    :vartype image_tag: str
    :ivar image_name: Gets or sets the container image name.
    :vartype image_name: str
    :ivar run_id: Gets or sets the RunId.
    :vartype run_id: str
    :ivar run_status: Gets or sets the RunStatus.
    :vartype run_status: str
    """


class Cert(_serialization.Model):
    """WebApplication certificate.

    :ivar cert_needed: Gets or sets a value indicating whether certificate is needed or not.
    :vartype cert_needed: bool
    :ivar cert_provided: Gets or sets a value indicating whether certificate is provided or not.
    :vartype cert_provided: bool
    :ivar cert_data: Gets or sets the Certificate data.
    :vartype cert_data: bytes
    :ivar secret_store: Gets or sets the type of secret store for the certificate. Known values
     are: "None", "KubeSecret", "KeyVaultSecret", and "AppServiceAppSettings".
    :vartype secret_store: str or ~azure.mgmt.migrationmodernization.models.SecretStoreType
    """

    _attribute_map = {
        "cert_needed": {"key": "certNeeded", "type": "bool"},
        "cert_provided": {"key": "certProvided", "type": "bool"},
        "cert_data": {"key": "certData", "type": "bytearray"},
        "secret_store": {"key": "secretStore", "type": "str"},
    }

    def __init__(
        self,
        *,
        cert_needed: Optional[bool] = None,
        cert_provided: Optional[bool] = None,
        cert_data: Optional[bytes] = None,
        secret_store: Optional[Union[str, "_models.SecretStoreType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword cert_needed: Gets or sets a value indicating whether certificate is needed or not.
        :paramtype cert_needed: bool
        :keyword cert_provided: Gets or sets a value indicating whether certificate is provided or not.
        :paramtype cert_provided: bool
        :keyword cert_data: Gets or sets the Certificate data.
        :paramtype cert_data: bytes
        :keyword secret_store: Gets or sets the type of secret store for the certificate. Known values
         are: "None", "KubeSecret", "KeyVaultSecret", and "AppServiceAppSettings".
        :paramtype secret_store: str or ~azure.mgmt.migrationmodernization.models.SecretStoreType
        """
        super().__init__(**kwargs)
        self.cert_needed = cert_needed
        self.cert_provided = cert_provided
        self.cert_data = cert_data
        self.secret_store = secret_store


class DeployedResourceModel(_serialization.Model):
    """DeployedResource model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: DeployedResource properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.DeployedResourceModelProperties
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data:
    :vartype system_data: ~azure.mgmt.migrationmodernization.models.DeployedResourceModelSystemData
    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "DeployedResourceModelProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "DeployedResourceModelSystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.DeployedResourceModelProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: DeployedResource properties.
        :paramtype properties:
         ~azure.mgmt.migrationmodernization.models.DeployedResourceModelProperties
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.tags = tags


class DeployedResourceModelCollection(_serialization.Model):
    """DeployedResource model collection.

    :ivar value: Gets or sets the list of deployedResources.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.DeployedResourceModel]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[DeployedResourceModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.DeployedResourceModel"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of deployedResources.
        :paramtype value: list[~azure.mgmt.migrationmodernization.models.DeployedResourceModel]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DeployedResourceModelProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """DeployedResource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar resources_deployed: Gets or sets the list of resources deployed.
    :vartype resources_deployed: dict[str, str]
    :ivar workload_deployment_id: Gets or sets the workload deployment id.
    :vartype workload_deployment_id: str
    :ivar display_name: Gets or sets the name of deployed resources.
    :vartype display_name: str
    :ivar deployment_timestamp: Gets or sets the deployment timestamp.
    :vartype deployment_timestamp: ~datetime.datetime
    :ivar target_azure_service: Gets or sets the deployment target service. Known values are:
     "AzureKubernetesService", "AzureAppServiceContainer", and "AzureAppServiceNative".
    :vartype target_azure_service: str or
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentTarget
    :ivar container_registry_id: Gets or sets the container registry ARM Id.
    :vartype container_registry_id: str
    :ivar image_name: Gets or sets the image name.
    :vartype image_name: str
    :ivar image_tag: Gets or sets the image tag.
    :vartype image_tag: str
    :ivar app_ip: Gets or sets the app ip address.
    :vartype app_ip: str
    :ivar secret_store_id: Gets or sets the secret store ARM Id.
    :vartype secret_store_id: str
    :ivar custom_properties: Gets or sets the custom deployed resource properties.
    :vartype custom_properties: dict[str, str]
    """

    _validation = {
        "workload_deployment_id": {"readonly": True},
        "display_name": {"readonly": True},
        "deployment_timestamp": {"readonly": True},
        "target_azure_service": {"readonly": True},
        "container_registry_id": {"readonly": True},
        "image_name": {"readonly": True},
        "image_tag": {"readonly": True},
        "app_ip": {"readonly": True},
    }

    _attribute_map = {
        "resources_deployed": {"key": "resourcesDeployed", "type": "{str}"},
        "workload_deployment_id": {"key": "workloadDeploymentId", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "deployment_timestamp": {"key": "deploymentTimestamp", "type": "iso-8601"},
        "target_azure_service": {"key": "targetAzureService", "type": "str"},
        "container_registry_id": {"key": "containerRegistryId", "type": "str"},
        "image_name": {"key": "imageName", "type": "str"},
        "image_tag": {"key": "imageTag", "type": "str"},
        "app_ip": {"key": "appIp", "type": "str"},
        "secret_store_id": {"key": "secretStoreId", "type": "str"},
        "custom_properties": {"key": "customProperties", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        resources_deployed: Optional[Dict[str, str]] = None,
        secret_store_id: Optional[str] = None,
        custom_properties: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword resources_deployed: Gets or sets the list of resources deployed.
        :paramtype resources_deployed: dict[str, str]
        :keyword secret_store_id: Gets or sets the secret store ARM Id.
        :paramtype secret_store_id: str
        :keyword custom_properties: Gets or sets the custom deployed resource properties.
        :paramtype custom_properties: dict[str, str]
        """
        super().__init__(**kwargs)
        self.resources_deployed = resources_deployed
        self.workload_deployment_id = None
        self.display_name = None
        self.deployment_timestamp = None
        self.target_azure_service = None
        self.container_registry_id = None
        self.image_name = None
        self.image_tag = None
        self.app_ip = None
        self.secret_store_id = secret_store_id
        self.custom_properties = custom_properties


class SystemDataModel(_serialization.Model):
    """System data required to be defined for Azure resources.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[str] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[str] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: Gets or sets identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: Gets or sets the type of identity that created the resource: user,
         application,
         managedIdentity.
        :paramtype created_by_type: str
        :keyword created_at: Gets or sets the timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: Gets or sets the identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: Gets or sets the type of identity that last modified the
         resource: user, application,
         managedIdentity.
        :paramtype last_modified_by_type: str
        :keyword last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class DeployedResourceModelSystemData(SystemDataModel):
    """DeployedResourceModelSystemData.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """


class DeployedResourcesProperties(_serialization.Model):
    """Class for deployed resource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the ID.
    :vartype id: str
    :ivar deployed_resource_id: Gets or sets the deployed resource id.
    :vartype deployed_resource_id: str
    :ivar display_name: Gets or sets the name of deployed resources.
    :vartype display_name: str
    :ivar context: Gets or sets the context of deployed resources.
    :vartype context: str
    :ivar status: Gets or sets the status of deployed resources.
    :vartype status: str
    :ivar type: Gets or sets the type of deployed resources.
    :vartype type: str
    :ivar deployment_timestamp: Gets or sets the deployment timestamp.
    :vartype deployment_timestamp: ~datetime.datetime
    :ivar is_clean_up_done: Gets or sets a value indicating whether resources are cleaned up from
     target.
    :vartype is_clean_up_done: bool
    :ivar is_test_migration: Gets or sets a value indicating whether scenario is test migration.
    :vartype is_test_migration: bool
    """

    _validation = {
        "id": {"readonly": True},
        "deployed_resource_id": {"readonly": True},
        "display_name": {"readonly": True},
        "context": {"readonly": True},
        "status": {"readonly": True},
        "type": {"readonly": True},
        "deployment_timestamp": {"readonly": True},
        "is_clean_up_done": {"readonly": True},
        "is_test_migration": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "deployed_resource_id": {"key": "deployedResourceId", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "context": {"key": "context", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "deployment_timestamp": {"key": "deploymentTimestamp", "type": "iso-8601"},
        "is_clean_up_done": {"key": "isCleanUpDone", "type": "bool"},
        "is_test_migration": {"key": "isTestMigration", "type": "bool"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.deployed_resource_id = None
        self.display_name = None
        self.context = None
        self.status = None
        self.type = None
        self.deployment_timestamp = None
        self.is_clean_up_done = None
        self.is_test_migration = None


class DirectoryPath(_serialization.Model):
    """Second level entity for virtual directories.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar virtual: Gets or sets the virtual path for the directory.
    :vartype virtual: str
    :ivar physical: Gets or sets the physical path of the directory on the web server.
    :vartype physical: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "virtual": {"key": "virtual", "type": "str"},
        "physical": {"key": "physical", "type": "str"},
    }

    def __init__(self, *, virtual: Optional[str] = None, physical: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword virtual: Gets or sets the virtual path for the directory.
        :paramtype virtual: str
        :keyword physical: Gets or sets the physical path of the directory on the web server.
        :paramtype physical: str
        """
        super().__init__(**kwargs)
        self.id = None
        self.virtual = virtual
        self.physical = physical


class EnableReplicationWorkflowModelCustomProperties(WorkflowModelCustomProperties):  # pylint: disable=name-too-long
    """Enable replication workflow model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "SampleWorkflow", "EnableReplicationWorkflow", "StopReplicationWorkflow",
     "BuildContainerImageWorkflow", "MigrateWorkflow", "TestMigrateWorkflow",
     "TestMigrateCleanupWorkflow", "CompleteMigrationWorkflow", and "DisableReplicationWorkflow".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowType
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details: dict[str, str]
    :ivar workload_instance_properties:
    :vartype workload_instance_properties:
     ~azure.mgmt.migrationmodernization.models.EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "workload_instance_properties": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {"key": "affectedObjectDetails", "type": "{str}"},
        "workload_instance_properties": {
            "key": "workloadInstanceProperties",
            "type": "EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties",
        },
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "EnableReplicationWorkflowModelCustomProperties"
        self.workload_instance_properties = None


class WorkloadInstanceModelProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Workload instance model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Gets or sets the workload instance name.
    :vartype name: str
    :ivar provisioning_state: Gets or sets the provisioning state of the workload instance. Known
     values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or ~azure.mgmt.migrationmodernization.models.ProvisioningState
    :ivar migrate_agent_id: Gets or sets the migrate agent id associated with the workload
     instance.
    :vartype migrate_agent_id: str
    :ivar display_name: Gets or sets the display name.
    :vartype display_name: str
    :ivar source_platform: Gets or sets the source platform.
    :vartype source_platform: str
    :ivar source_name: Gets or sets the source name.
    :vartype source_name: str
    :ivar replication_health: Gets or sets the replication health of the workload instance. Known
     values are: "Normal", "Warning", and "Critical".
    :vartype replication_health: str or ~azure.mgmt.migrationmodernization.models.HealthStatus
    :ivar replication_status: Gets or sets the replication state of the workload instance. Known
     values are: "None", "Scheduled", "InitialSync", "Completed", and "Failed".
    :vartype replication_status: str or
     ~azure.mgmt.migrationmodernization.models.ClientFacingReplicationStatus
    :ivar replication_status_description: Gets or sets the workload replication state description.
    :vartype replication_status_description: str
    :ivar last_successful_replication_cycle_time: Gets or sets the Last successful replication
     cycle time.
    :vartype last_successful_replication_cycle_time: ~datetime.datetime
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar current_job:
    :vartype current_job:
     ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelPropertiesCurrentJob
    :ivar allowed_operations: Gets or sets the allowed scenarios on the workload instance.
    :vartype allowed_operations: list[str]
    :ivar master_site_name: Gets or Sets the master site name.
    :vartype master_site_name: str
    :ivar custom_properties: Workload instance model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelCustomProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "replication_health": {"readonly": True},
        "replication_status": {"readonly": True},
        "replication_status_description": {"readonly": True},
        "last_successful_replication_cycle_time": {"readonly": True},
        "health_errors": {"readonly": True},
        "current_job": {"readonly": True},
        "allowed_operations": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "migrate_agent_id": {"key": "migrateAgentId", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "source_platform": {"key": "sourcePlatform", "type": "str"},
        "source_name": {"key": "sourceName", "type": "str"},
        "replication_health": {"key": "replicationHealth", "type": "str"},
        "replication_status": {"key": "replicationStatus", "type": "str"},
        "replication_status_description": {"key": "replicationStatusDescription", "type": "str"},
        "last_successful_replication_cycle_time": {"key": "lastSuccessfulReplicationCycleTime", "type": "iso-8601"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "current_job": {"key": "currentJob", "type": "WorkloadInstanceModelPropertiesCurrentJob"},
        "allowed_operations": {"key": "allowedOperations", "type": "[str]"},
        "master_site_name": {"key": "masterSiteName", "type": "str"},
        "custom_properties": {"key": "customProperties", "type": "WorkloadInstanceModelCustomProperties"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        migrate_agent_id: Optional[str] = None,
        display_name: Optional[str] = None,
        source_platform: Optional[str] = None,
        source_name: Optional[str] = None,
        master_site_name: Optional[str] = None,
        custom_properties: Optional["_models.WorkloadInstanceModelCustomProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the workload instance name.
        :paramtype name: str
        :keyword migrate_agent_id: Gets or sets the migrate agent id associated with the workload
         instance.
        :paramtype migrate_agent_id: str
        :keyword display_name: Gets or sets the display name.
        :paramtype display_name: str
        :keyword source_platform: Gets or sets the source platform.
        :paramtype source_platform: str
        :keyword source_name: Gets or sets the source name.
        :paramtype source_name: str
        :keyword master_site_name: Gets or Sets the master site name.
        :paramtype master_site_name: str
        :keyword custom_properties: Workload instance model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelCustomProperties
        """
        super().__init__(**kwargs)
        self.name = name
        self.provisioning_state = None
        self.migrate_agent_id = migrate_agent_id
        self.display_name = display_name
        self.source_platform = source_platform
        self.source_name = source_name
        self.replication_health = None
        self.replication_status = None
        self.replication_status_description = None
        self.last_successful_replication_cycle_time = None
        self.health_errors = None
        self.current_job = None
        self.allowed_operations = None
        self.master_site_name = master_site_name
        self.custom_properties = custom_properties


class EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties(
    WorkloadInstanceModelProperties
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """EnableReplicationWorkflowModelCustomPropertiesWorkloadInstanceProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Gets or sets the workload instance name.
    :vartype name: str
    :ivar provisioning_state: Gets or sets the provisioning state of the workload instance. Known
     values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or ~azure.mgmt.migrationmodernization.models.ProvisioningState
    :ivar migrate_agent_id: Gets or sets the migrate agent id associated with the workload
     instance.
    :vartype migrate_agent_id: str
    :ivar display_name: Gets or sets the display name.
    :vartype display_name: str
    :ivar source_platform: Gets or sets the source platform.
    :vartype source_platform: str
    :ivar source_name: Gets or sets the source name.
    :vartype source_name: str
    :ivar replication_health: Gets or sets the replication health of the workload instance. Known
     values are: "Normal", "Warning", and "Critical".
    :vartype replication_health: str or ~azure.mgmt.migrationmodernization.models.HealthStatus
    :ivar replication_status: Gets or sets the replication state of the workload instance. Known
     values are: "None", "Scheduled", "InitialSync", "Completed", and "Failed".
    :vartype replication_status: str or
     ~azure.mgmt.migrationmodernization.models.ClientFacingReplicationStatus
    :ivar replication_status_description: Gets or sets the workload replication state description.
    :vartype replication_status_description: str
    :ivar last_successful_replication_cycle_time: Gets or sets the Last successful replication
     cycle time.
    :vartype last_successful_replication_cycle_time: ~datetime.datetime
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar current_job:
    :vartype current_job:
     ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelPropertiesCurrentJob
    :ivar allowed_operations: Gets or sets the allowed scenarios on the workload instance.
    :vartype allowed_operations: list[str]
    :ivar master_site_name: Gets or Sets the master site name.
    :vartype master_site_name: str
    :ivar custom_properties: Workload instance model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelCustomProperties
    """


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.migrationmodernization.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.migrationmodernization.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorModel(_serialization.Model):
    """Error model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar code: Gets or sets the error code.
    :vartype code: str
    :ivar type: Gets or sets the error type.
    :vartype type: str
    :ivar severity: Gets or sets the error severity.
    :vartype severity: str
    :ivar creation_time: Gets or sets the creation time of error.
    :vartype creation_time: ~datetime.datetime
    :ivar message: Gets or sets the error message.
    :vartype message: str
    :ivar causes: Gets or sets the possible causes of error.
    :vartype causes: str
    :ivar recommendation: Gets or sets the recommended action to resolve error.
    :vartype recommendation: str
    """

    _validation = {
        "id": {"readonly": True},
        "code": {"readonly": True},
        "type": {"readonly": True},
        "severity": {"readonly": True},
        "creation_time": {"readonly": True},
        "message": {"readonly": True},
        "causes": {"readonly": True},
        "recommendation": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "code": {"key": "code", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "message": {"key": "message", "type": "str"},
        "causes": {"key": "causes", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.code = None
        self.type = None
        self.severity = None
        self.creation_time = None
        self.message = None
        self.causes = None
        self.recommendation = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.migrationmodernization.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.migrationmodernization.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class GmsaAuthenticationProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for GMSA authentication details to configure Active Directory connectivity.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar configuration_state: Gets or sets the current state of GMSA configuration. Known values
     are: "NotApplicable", "Pending", "InProgress", "Completed", and "Failed".
    :vartype configuration_state: str or
     ~azure.mgmt.migrationmodernization.models.GmsaConfigurationState
    :ivar gmsa_account_name: Gets or sets the name to be used for GMSA.
    :vartype gmsa_account_name: str
    :ivar gmsa_username: Gets or sets username of the user having authorization to access GMSA on
     Active Directory.
    :vartype gmsa_username: str
    :ivar gmsa_user_password: Gets or sets the password of the user specified by
     RestApi.Controllers.V2022_05_01_preview.Models.WorkloadDeployment.Gmsa.GmsaAuthenticationProperties.GmsaUsername.
    :vartype gmsa_user_password: str
    :ivar ad_domain_controller_dns: Gets or sets the list of dns server that can resolve the Active
     Directory Domain Name/Address.
    :vartype ad_domain_controller_dns: str
    :ivar ad_domain_fqdn: Gets or sets the FQDN of the Active Directory Domain. For e.g.
     'contoso.local', 'fareast.corp.microsoft.com' etc.
    :vartype ad_domain_fqdn: str
    :ivar domain_controller_address: Gets or sets the address of the Active Directory Domain
     Controller running Domain Services.
    :vartype domain_controller_address: str
    :ivar domain_admin_username: Gets or sets the name of the user having admin rights on the
     Active Directory Domain Controller.
    :vartype domain_admin_username: str
    :ivar domain_admin_password: Gets or sets the password of the user specified by
     RestApi.Controllers.V2022_05_01_preview.Models.WorkloadDeployment.Gmsa.GmsaAuthenticationProperties.DomainAdminUsername.  # pylint: disable=line-too-long
    :vartype domain_admin_password: str
    :ivar akv_properties:
    :vartype akv_properties:
     ~azure.mgmt.migrationmodernization.models.KeyVaultSecretStoreProperties
    :ivar gmsa_cred_spec_name: Gets Cred Spec Name to be used.
    :vartype gmsa_cred_spec_name: str
    :ivar gmsa_secret_name: Gets name of the secret where GMSA secret is stored in the KeyVault.
    :vartype gmsa_secret_name: str
    """

    _validation = {
        "configuration_state": {"readonly": True},
        "gmsa_cred_spec_name": {"readonly": True},
        "gmsa_secret_name": {"readonly": True},
    }

    _attribute_map = {
        "configuration_state": {"key": "configurationState", "type": "str"},
        "gmsa_account_name": {"key": "gmsaAccountName", "type": "str"},
        "gmsa_username": {"key": "gmsaUsername", "type": "str"},
        "gmsa_user_password": {"key": "gmsaUserPassword", "type": "str"},
        "ad_domain_controller_dns": {"key": "adDomainControllerDns", "type": "str"},
        "ad_domain_fqdn": {"key": "adDomainFqdn", "type": "str"},
        "domain_controller_address": {"key": "domainControllerAddress", "type": "str"},
        "domain_admin_username": {"key": "domainAdminUsername", "type": "str"},
        "domain_admin_password": {"key": "domainAdminPassword", "type": "str"},
        "akv_properties": {"key": "akvProperties", "type": "KeyVaultSecretStoreProperties"},
        "gmsa_cred_spec_name": {"key": "gmsaCredSpecName", "type": "str"},
        "gmsa_secret_name": {"key": "gmsaSecretName", "type": "str"},
    }

    def __init__(
        self,
        *,
        gmsa_account_name: Optional[str] = None,
        gmsa_username: Optional[str] = None,
        gmsa_user_password: Optional[str] = None,
        ad_domain_controller_dns: Optional[str] = None,
        ad_domain_fqdn: Optional[str] = None,
        domain_controller_address: Optional[str] = None,
        domain_admin_username: Optional[str] = None,
        domain_admin_password: Optional[str] = None,
        akv_properties: Optional["_models.KeyVaultSecretStoreProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword gmsa_account_name: Gets or sets the name to be used for GMSA.
        :paramtype gmsa_account_name: str
        :keyword gmsa_username: Gets or sets username of the user having authorization to access GMSA
         on Active Directory.
        :paramtype gmsa_username: str
        :keyword gmsa_user_password: Gets or sets the password of the user specified by
         RestApi.Controllers.V2022_05_01_preview.Models.WorkloadDeployment.Gmsa.GmsaAuthenticationProperties.GmsaUsername.  # pylint: disable=line-too-long
        :paramtype gmsa_user_password: str
        :keyword ad_domain_controller_dns: Gets or sets the list of dns server that can resolve the
         Active Directory Domain Name/Address.
        :paramtype ad_domain_controller_dns: str
        :keyword ad_domain_fqdn: Gets or sets the FQDN of the Active Directory Domain. For e.g.
         'contoso.local', 'fareast.corp.microsoft.com' etc.
        :paramtype ad_domain_fqdn: str
        :keyword domain_controller_address: Gets or sets the address of the Active Directory Domain
         Controller running Domain Services.
        :paramtype domain_controller_address: str
        :keyword domain_admin_username: Gets or sets the name of the user having admin rights on the
         Active Directory Domain Controller.
        :paramtype domain_admin_username: str
        :keyword domain_admin_password: Gets or sets the password of the user specified by
         RestApi.Controllers.V2022_05_01_preview.Models.WorkloadDeployment.Gmsa.GmsaAuthenticationProperties.DomainAdminUsername.  # pylint: disable=line-too-long
        :paramtype domain_admin_password: str
        :keyword akv_properties:
        :paramtype akv_properties:
         ~azure.mgmt.migrationmodernization.models.KeyVaultSecretStoreProperties
        """
        super().__init__(**kwargs)
        self.configuration_state = None
        self.gmsa_account_name = gmsa_account_name
        self.gmsa_username = gmsa_username
        self.gmsa_user_password = gmsa_user_password
        self.ad_domain_controller_dns = ad_domain_controller_dns
        self.ad_domain_fqdn = ad_domain_fqdn
        self.domain_controller_address = domain_controller_address
        self.domain_admin_username = domain_admin_username
        self.domain_admin_password = domain_admin_password
        self.akv_properties = akv_properties
        self.gmsa_cred_spec_name = None
        self.gmsa_secret_name = None


class HealthErrorModel(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Health error model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar affected_resource_type: Gets or sets the type of affected resource type.
    :vartype affected_resource_type: str
    :ivar affected_resource_correlation_ids: Gets or sets the list of affected resource correlation
     Ids. This can be used to
     uniquely identify the count of items affected by a specific category and severity
     as well as count of item affected by an specific issue.
    :vartype affected_resource_correlation_ids: list[str]
    :ivar child_errors: Gets or sets a list of child health errors associated with this error.
    :vartype child_errors: list[~azure.mgmt.migrationmodernization.models.InnerHealthErrorModel]
    :ivar id: Gets the ID.
    :vartype id: str
    :ivar code: Gets or sets the error code.
    :vartype code: str
    :ivar health_category: Gets or sets the health category.
    :vartype health_category: str
    :ivar category: Gets or sets the error category.
    :vartype category: str
    :ivar severity: Gets or sets the error severity.
    :vartype severity: str
    :ivar source: Gets or sets the error source.
    :vartype source: str
    :ivar creation_time: Gets or sets the error creation time.
    :vartype creation_time: ~datetime.datetime
    :ivar is_customer_resolvable: Gets or sets a value indicating whether the error is customer
     resolvable.
    :vartype is_customer_resolvable: bool
    :ivar summary: Gets or sets the error summary.
    :vartype summary: str
    :ivar message: Gets or sets the error message.
    :vartype message: str
    :ivar causes: Gets or sets possible causes of the error.
    :vartype causes: str
    :ivar recommendation: Gets or sets recommended action to resolve the error.
    :vartype recommendation: str
    """

    _validation = {
        "id": {"readonly": True},
        "code": {"readonly": True},
        "health_category": {"readonly": True},
        "category": {"readonly": True},
        "severity": {"readonly": True},
        "source": {"readonly": True},
        "creation_time": {"readonly": True},
        "is_customer_resolvable": {"readonly": True},
        "summary": {"readonly": True},
        "message": {"readonly": True},
        "causes": {"readonly": True},
        "recommendation": {"readonly": True},
    }

    _attribute_map = {
        "affected_resource_type": {"key": "affectedResourceType", "type": "str"},
        "affected_resource_correlation_ids": {"key": "affectedResourceCorrelationIds", "type": "[str]"},
        "child_errors": {"key": "childErrors", "type": "[InnerHealthErrorModel]"},
        "id": {"key": "id", "type": "str"},
        "code": {"key": "code", "type": "str"},
        "health_category": {"key": "healthCategory", "type": "str"},
        "category": {"key": "category", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "is_customer_resolvable": {"key": "isCustomerResolvable", "type": "bool"},
        "summary": {"key": "summary", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "causes": {"key": "causes", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
    }

    def __init__(
        self,
        *,
        affected_resource_type: Optional[str] = None,
        affected_resource_correlation_ids: Optional[List[str]] = None,
        child_errors: Optional[List["_models.InnerHealthErrorModel"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword affected_resource_type: Gets or sets the type of affected resource type.
        :paramtype affected_resource_type: str
        :keyword affected_resource_correlation_ids: Gets or sets the list of affected resource
         correlation Ids. This can be used to
         uniquely identify the count of items affected by a specific category and severity
         as well as count of item affected by an specific issue.
        :paramtype affected_resource_correlation_ids: list[str]
        :keyword child_errors: Gets or sets a list of child health errors associated with this error.
        :paramtype child_errors: list[~azure.mgmt.migrationmodernization.models.InnerHealthErrorModel]
        """
        super().__init__(**kwargs)
        self.affected_resource_type = affected_resource_type
        self.affected_resource_correlation_ids = affected_resource_correlation_ids
        self.child_errors = child_errors
        self.id = None
        self.code = None
        self.health_category = None
        self.category = None
        self.severity = None
        self.source = None
        self.creation_time = None
        self.is_customer_resolvable = None
        self.summary = None
        self.message = None
        self.causes = None
        self.recommendation = None


class IdentityModel(_serialization.Model):
    """Identity model.

    :ivar tenant_id: Gets or sets the tenant Id of the SPN with which MigrateAgent communicates to
     service.
    :vartype tenant_id: str
    :ivar application_id: Gets or sets the client/application Id of the SPN with which MigrateAgent
     communicates to
     service.
    :vartype application_id: str
    :ivar object_id: Gets or sets the object Id of the SPN with which MigrateAgent communicates to
     service.
    :vartype object_id: str
    :ivar audience: Gets or sets the audience of the SPN with which MigrateAgent communicates to
     service.
    :vartype audience: str
    :ivar aad_authority: Gets or sets the authority of the SPN with which MigrateAgent communicates
     to service.
    :vartype aad_authority: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "application_id": {"key": "applicationId", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "audience": {"key": "audience", "type": "str"},
        "aad_authority": {"key": "aadAuthority", "type": "str"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        application_id: Optional[str] = None,
        object_id: Optional[str] = None,
        audience: Optional[str] = None,
        aad_authority: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: Gets or sets the tenant Id of the SPN with which MigrateAgent communicates
         to service.
        :paramtype tenant_id: str
        :keyword application_id: Gets or sets the client/application Id of the SPN with which
         MigrateAgent communicates to
         service.
        :paramtype application_id: str
        :keyword object_id: Gets or sets the object Id of the SPN with which MigrateAgent communicates
         to service.
        :paramtype object_id: str
        :keyword audience: Gets or sets the audience of the SPN with which MigrateAgent communicates to
         service.
        :paramtype audience: str
        :keyword aad_authority: Gets or sets the authority of the SPN with which MigrateAgent
         communicates to service.
        :paramtype aad_authority: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.application_id = application_id
        self.object_id = object_id
        self.audience = audience
        self.aad_authority = aad_authority


class IISAKSWorkloadDeployment(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """IIS AKS workload deployment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar cluster_properties: Class for AKSDeployment Properties.
    :vartype cluster_properties: ~azure.mgmt.migrationmodernization.models.AKSDeploymentProperties
    :ivar deployment_spec: AKS Deployment Specification.
    :vartype deployment_spec: ~azure.mgmt.migrationmodernization.models.AKSDeploymentSpecification
    :ivar deployment_history: Gets or sets the deployment history.
    :vartype deployment_history:
     list[~azure.mgmt.migrationmodernization.models.DeployedResourcesProperties]
    :ivar authentication_properties: Class for GMSA authentication details to configure Active
     Directory connectivity.
    :vartype authentication_properties:
     ~azure.mgmt.migrationmodernization.models.GmsaAuthenticationProperties
    :ivar deployment_name_prefix: Gets or sets the deployment name prefix.
    :vartype deployment_name_prefix: str
    :ivar automation_artifact_properties: Class for automation artifact.
    :vartype automation_artifact_properties:
     ~azure.mgmt.migrationmodernization.models.AutomationArtifact
    :ivar directories: Gets or sets application directories.
    :vartype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
    :ivar configurations: Gets or sets application configuration.
    :vartype configurations:
     list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
    :ivar container_image_properties: Class for container image properties.
    :vartype container_image_properties:
     ~azure.mgmt.migrationmodernization.models.ContainerImageProperties
    :ivar build_container_images: Gets or sets the build container images.
    :vartype build_container_images:
     list[~azure.mgmt.migrationmodernization.models.ContainerImageProperties]
    :ivar bindings: Gets or sets the bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
    :ivar requests: Resource Requirements.
    :vartype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    :ivar limits: Resource Requirements.
    :vartype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    :ivar target_platform_identity: Gets or sets the target platform managed identity.
    :vartype target_platform_identity: str
    :ivar monitoring_properties: Class for app insight monitoring properties.
    :vartype monitoring_properties:
     ~azure.mgmt.migrationmodernization.models.AppInsightMonitoringProperties
    """

    _validation = {
        "deployment_history": {"readonly": True},
    }

    _attribute_map = {
        "cluster_properties": {"key": "clusterProperties", "type": "AKSDeploymentProperties"},
        "deployment_spec": {"key": "deploymentSpec", "type": "AKSDeploymentSpecification"},
        "deployment_history": {"key": "deploymentHistory", "type": "[DeployedResourcesProperties]"},
        "authentication_properties": {"key": "authenticationProperties", "type": "GmsaAuthenticationProperties"},
        "deployment_name_prefix": {"key": "deploymentNamePrefix", "type": "str"},
        "automation_artifact_properties": {"key": "automationArtifactProperties", "type": "AutomationArtifact"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectory]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfiguration]"},
        "container_image_properties": {"key": "containerImageProperties", "type": "ContainerImageProperties"},
        "build_container_images": {"key": "buildContainerImages", "type": "[ContainerImageProperties]"},
        "bindings": {"key": "bindings", "type": "[Binding]"},
        "requests": {"key": "requests", "type": "ResourceRequirements"},
        "limits": {"key": "limits", "type": "ResourceRequirements"},
        "target_platform_identity": {"key": "targetPlatformIdentity", "type": "str"},
        "monitoring_properties": {"key": "monitoringProperties", "type": "AppInsightMonitoringProperties"},
    }

    def __init__(
        self,
        *,
        cluster_properties: Optional["_models.AKSDeploymentProperties"] = None,
        deployment_spec: Optional["_models.AKSDeploymentSpecification"] = None,
        authentication_properties: Optional["_models.GmsaAuthenticationProperties"] = None,
        deployment_name_prefix: Optional[str] = None,
        automation_artifact_properties: Optional["_models.AutomationArtifact"] = None,
        directories: Optional[List["_models.WebApplicationDirectory"]] = None,
        configurations: Optional[List["_models.WebApplicationConfiguration"]] = None,
        container_image_properties: Optional["_models.ContainerImageProperties"] = None,
        build_container_images: Optional[List["_models.ContainerImageProperties"]] = None,
        bindings: Optional[List["_models.Binding"]] = None,
        requests: Optional["_models.ResourceRequirements"] = None,
        limits: Optional["_models.ResourceRequirements"] = None,
        target_platform_identity: Optional[str] = None,
        monitoring_properties: Optional["_models.AppInsightMonitoringProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword cluster_properties: Class for AKSDeployment Properties.
        :paramtype cluster_properties:
         ~azure.mgmt.migrationmodernization.models.AKSDeploymentProperties
        :keyword deployment_spec: AKS Deployment Specification.
        :paramtype deployment_spec:
         ~azure.mgmt.migrationmodernization.models.AKSDeploymentSpecification
        :keyword authentication_properties: Class for GMSA authentication details to configure Active
         Directory connectivity.
        :paramtype authentication_properties:
         ~azure.mgmt.migrationmodernization.models.GmsaAuthenticationProperties
        :keyword deployment_name_prefix: Gets or sets the deployment name prefix.
        :paramtype deployment_name_prefix: str
        :keyword automation_artifact_properties: Class for automation artifact.
        :paramtype automation_artifact_properties:
         ~azure.mgmt.migrationmodernization.models.AutomationArtifact
        :keyword directories: Gets or sets application directories.
        :paramtype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
        :keyword configurations: Gets or sets application configuration.
        :paramtype configurations:
         list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
        :keyword container_image_properties: Class for container image properties.
        :paramtype container_image_properties:
         ~azure.mgmt.migrationmodernization.models.ContainerImageProperties
        :keyword build_container_images: Gets or sets the build container images.
        :paramtype build_container_images:
         list[~azure.mgmt.migrationmodernization.models.ContainerImageProperties]
        :keyword bindings: Gets or sets the bindings for the application.
        :paramtype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
        :keyword requests: Resource Requirements.
        :paramtype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        :keyword limits: Resource Requirements.
        :paramtype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        :keyword target_platform_identity: Gets or sets the target platform managed identity.
        :paramtype target_platform_identity: str
        :keyword monitoring_properties: Class for app insight monitoring properties.
        :paramtype monitoring_properties:
         ~azure.mgmt.migrationmodernization.models.AppInsightMonitoringProperties
        """
        super().__init__(**kwargs)
        self.cluster_properties = cluster_properties
        self.deployment_spec = deployment_spec
        self.deployment_history = None
        self.authentication_properties = authentication_properties
        self.deployment_name_prefix = deployment_name_prefix
        self.automation_artifact_properties = automation_artifact_properties
        self.directories = directories
        self.configurations = configurations
        self.container_image_properties = container_image_properties
        self.build_container_images = build_container_images
        self.bindings = bindings
        self.requests = requests
        self.limits = limits
        self.target_platform_identity = target_platform_identity
        self.monitoring_properties = monitoring_properties


class IISAKSWorkloadDeploymentModelCustomProperties(
    WorkloadDeploymentModelCustomProperties
):  # pylint: disable=name-too-long
    """IIS workload instance model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "IISAKSWorkloadDeployment" and "ApacheTomcatAKSWorkloadDeployment".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentType
    :ivar iis_aks_workload_deployment_properties: IIS AKS workload deployment.
    :vartype iis_aks_workload_deployment_properties:
     ~azure.mgmt.migrationmodernization.models.IISAKSWorkloadDeployment
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "iis_aks_workload_deployment_properties": {
            "key": "iisAksWorkloadDeploymentProperties",
            "type": "IISAKSWorkloadDeployment",
        },
    }

    def __init__(
        self,
        *,
        iis_aks_workload_deployment_properties: Optional["_models.IISAKSWorkloadDeployment"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword iis_aks_workload_deployment_properties: IIS AKS workload deployment.
        :paramtype iis_aks_workload_deployment_properties:
         ~azure.mgmt.migrationmodernization.models.IISAKSWorkloadDeployment
        """
        super().__init__(**kwargs)
        self.instance_type: str = "IISAKSWorkloadDeploymentModelCustomProperties"
        self.iis_aks_workload_deployment_properties = iis_aks_workload_deployment_properties


class IISApplicationDetails(_serialization.Model):
    """IISApplication details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar application_pool_name: Gets or sets the application pool name.
    :vartype application_pool_name: str
    :ivar managed_pipeline_mode: Gets or sets the managed pipeline mode.
    :vartype managed_pipeline_mode: str
    :ivar runtime_version: Gets or sets the runtime version.
    :vartype runtime_version: str
    :ivar enable32_bit_api_on_win64: Gets or sets a value indicating whether 32 bit applications
     are allowed to run on 64 bit.
    :vartype enable32_bit_api_on_win64: bool
    :ivar path: Second level entity for virtual directories.
    :vartype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
    :ivar directories: Gets or sets the list of directories.
    :vartype directories: list[~azure.mgmt.migrationmodernization.models.DirectoryPath]
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "application_pool_name": {"key": "applicationPoolName", "type": "str"},
        "managed_pipeline_mode": {"key": "managedPipelineMode", "type": "str"},
        "runtime_version": {"key": "runtimeVersion", "type": "str"},
        "enable32_bit_api_on_win64": {"key": "enable32BitApiOnWin64", "type": "bool"},
        "path": {"key": "path", "type": "DirectoryPath"},
        "directories": {"key": "directories", "type": "[DirectoryPath]"},
    }

    def __init__(
        self,
        *,
        application_pool_name: Optional[str] = None,
        managed_pipeline_mode: Optional[str] = None,
        runtime_version: Optional[str] = None,
        enable32_bit_api_on_win64: Optional[bool] = None,
        path: Optional["_models.DirectoryPath"] = None,
        directories: Optional[List["_models.DirectoryPath"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword application_pool_name: Gets or sets the application pool name.
        :paramtype application_pool_name: str
        :keyword managed_pipeline_mode: Gets or sets the managed pipeline mode.
        :paramtype managed_pipeline_mode: str
        :keyword runtime_version: Gets or sets the runtime version.
        :paramtype runtime_version: str
        :keyword enable32_bit_api_on_win64: Gets or sets a value indicating whether 32 bit applications
         are allowed to run on 64 bit.
        :paramtype enable32_bit_api_on_win64: bool
        :keyword path: Second level entity for virtual directories.
        :paramtype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
        :keyword directories: Gets or sets the list of directories.
        :paramtype directories: list[~azure.mgmt.migrationmodernization.models.DirectoryPath]
        """
        super().__init__(**kwargs)
        self.id = None
        self.application_pool_name = application_pool_name
        self.managed_pipeline_mode = managed_pipeline_mode
        self.runtime_version = runtime_version
        self.enable32_bit_api_on_win64 = enable32_bit_api_on_win64
        self.path = path
        self.directories = directories


class IISVirtualApplicationDetails(_serialization.Model):
    """IIS virtual application details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar is_virtual_directory: Gets a value indicating whether the application corresponds to a
     directory.
    :vartype is_virtual_directory: bool
    :ivar path: Second level entity for virtual directories.
    :vartype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
    :ivar directories: Gets or sets the list of directories.
    :vartype directories: list[~azure.mgmt.migrationmodernization.models.DirectoryPath]
    """

    _validation = {
        "id": {"readonly": True},
        "is_virtual_directory": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "is_virtual_directory": {"key": "isVirtualDirectory", "type": "bool"},
        "path": {"key": "path", "type": "DirectoryPath"},
        "directories": {"key": "directories", "type": "[DirectoryPath]"},
    }

    def __init__(
        self,
        *,
        path: Optional["_models.DirectoryPath"] = None,
        directories: Optional[List["_models.DirectoryPath"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword path: Second level entity for virtual directories.
        :paramtype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
        :keyword directories: Gets or sets the list of directories.
        :paramtype directories: list[~azure.mgmt.migrationmodernization.models.DirectoryPath]
        """
        super().__init__(**kwargs)
        self.id = None
        self.is_virtual_directory = None
        self.path = path
        self.directories = directories


class IISWebApplication(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """IISWeb application.

    :ivar applications: Gets or sets the list of applications for the IIS web site.
    :vartype applications: list[~azure.mgmt.migrationmodernization.models.IISApplicationDetails]
    :ivar virtual_applications: Gets or sets the list of application units for the web site.
    :vartype virtual_applications:
     list[~azure.mgmt.migrationmodernization.models.IISVirtualApplicationDetails]
    :ivar iis_web_server: IISWeb server.
    :vartype iis_web_server: ~azure.mgmt.migrationmodernization.models.IISWebServer
    :ivar application_id: Gets or sets the web application id.
    :vartype application_id: str
    :ivar application_name: Gets or sets the web application name.
    :vartype application_name: str
    :ivar application_scratch_path: Gets or sets application scratch path.
    :vartype application_scratch_path: str
    :ivar web_server_id: Gets or sets the web server id.
    :vartype web_server_id: str
    :ivar web_server_name: Gets or sets the web server name.
    :vartype web_server_name: str
    :ivar display_name: Gets or sets the display name.
    :vartype display_name: str
    :ivar directories: Gets or sets application directories.
    :vartype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
    :ivar configurations: Gets or sets application configuration.
    :vartype configurations:
     list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
    :ivar path: Second level entity for virtual directories.
    :vartype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
    :ivar bindings: Gets or sets the bindings for the application.
    :vartype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
    :ivar primary_framework: Framework specific data for a web application.
    :vartype primary_framework: ~azure.mgmt.migrationmodernization.models.WebApplicationFramework
    :ivar discovered_frameworks: Gets or sets the discovered frameworks of application.
    :vartype discovered_frameworks:
     list[~azure.mgmt.migrationmodernization.models.WebApplicationFramework]
    :ivar requests: Resource Requirements.
    :vartype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    :ivar limits: Resource Requirements.
    :vartype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
    """

    _attribute_map = {
        "applications": {"key": "applications", "type": "[IISApplicationDetails]"},
        "virtual_applications": {"key": "virtualApplications", "type": "[IISVirtualApplicationDetails]"},
        "iis_web_server": {"key": "iisWebServer", "type": "IISWebServer"},
        "application_id": {"key": "applicationId", "type": "str"},
        "application_name": {"key": "applicationName", "type": "str"},
        "application_scratch_path": {"key": "applicationScratchPath", "type": "str"},
        "web_server_id": {"key": "webServerId", "type": "str"},
        "web_server_name": {"key": "webServerName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "directories": {"key": "directories", "type": "[WebApplicationDirectory]"},
        "configurations": {"key": "configurations", "type": "[WebApplicationConfiguration]"},
        "path": {"key": "path", "type": "DirectoryPath"},
        "bindings": {"key": "bindings", "type": "[Binding]"},
        "primary_framework": {"key": "primaryFramework", "type": "WebApplicationFramework"},
        "discovered_frameworks": {"key": "discoveredFrameworks", "type": "[WebApplicationFramework]"},
        "requests": {"key": "requests", "type": "ResourceRequirements"},
        "limits": {"key": "limits", "type": "ResourceRequirements"},
    }

    def __init__(
        self,
        *,
        applications: Optional[List["_models.IISApplicationDetails"]] = None,
        virtual_applications: Optional[List["_models.IISVirtualApplicationDetails"]] = None,
        iis_web_server: Optional["_models.IISWebServer"] = None,
        application_id: Optional[str] = None,
        application_name: Optional[str] = None,
        application_scratch_path: Optional[str] = None,
        web_server_id: Optional[str] = None,
        web_server_name: Optional[str] = None,
        display_name: Optional[str] = None,
        directories: Optional[List["_models.WebApplicationDirectory"]] = None,
        configurations: Optional[List["_models.WebApplicationConfiguration"]] = None,
        path: Optional["_models.DirectoryPath"] = None,
        bindings: Optional[List["_models.Binding"]] = None,
        primary_framework: Optional["_models.WebApplicationFramework"] = None,
        discovered_frameworks: Optional[List["_models.WebApplicationFramework"]] = None,
        requests: Optional["_models.ResourceRequirements"] = None,
        limits: Optional["_models.ResourceRequirements"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword applications: Gets or sets the list of applications for the IIS web site.
        :paramtype applications: list[~azure.mgmt.migrationmodernization.models.IISApplicationDetails]
        :keyword virtual_applications: Gets or sets the list of application units for the web site.
        :paramtype virtual_applications:
         list[~azure.mgmt.migrationmodernization.models.IISVirtualApplicationDetails]
        :keyword iis_web_server: IISWeb server.
        :paramtype iis_web_server: ~azure.mgmt.migrationmodernization.models.IISWebServer
        :keyword application_id: Gets or sets the web application id.
        :paramtype application_id: str
        :keyword application_name: Gets or sets the web application name.
        :paramtype application_name: str
        :keyword application_scratch_path: Gets or sets application scratch path.
        :paramtype application_scratch_path: str
        :keyword web_server_id: Gets or sets the web server id.
        :paramtype web_server_id: str
        :keyword web_server_name: Gets or sets the web server name.
        :paramtype web_server_name: str
        :keyword display_name: Gets or sets the display name.
        :paramtype display_name: str
        :keyword directories: Gets or sets application directories.
        :paramtype directories: list[~azure.mgmt.migrationmodernization.models.WebApplicationDirectory]
        :keyword configurations: Gets or sets application configuration.
        :paramtype configurations:
         list[~azure.mgmt.migrationmodernization.models.WebApplicationConfiguration]
        :keyword path: Second level entity for virtual directories.
        :paramtype path: ~azure.mgmt.migrationmodernization.models.DirectoryPath
        :keyword bindings: Gets or sets the bindings for the application.
        :paramtype bindings: list[~azure.mgmt.migrationmodernization.models.Binding]
        :keyword primary_framework: Framework specific data for a web application.
        :paramtype primary_framework: ~azure.mgmt.migrationmodernization.models.WebApplicationFramework
        :keyword discovered_frameworks: Gets or sets the discovered frameworks of application.
        :paramtype discovered_frameworks:
         list[~azure.mgmt.migrationmodernization.models.WebApplicationFramework]
        :keyword requests: Resource Requirements.
        :paramtype requests: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        :keyword limits: Resource Requirements.
        :paramtype limits: ~azure.mgmt.migrationmodernization.models.ResourceRequirements
        """
        super().__init__(**kwargs)
        self.applications = applications
        self.virtual_applications = virtual_applications
        self.iis_web_server = iis_web_server
        self.application_id = application_id
        self.application_name = application_name
        self.application_scratch_path = application_scratch_path
        self.web_server_id = web_server_id
        self.web_server_name = web_server_name
        self.display_name = display_name
        self.directories = directories
        self.configurations = configurations
        self.path = path
        self.bindings = bindings
        self.primary_framework = primary_framework
        self.discovered_frameworks = discovered_frameworks
        self.requests = requests
        self.limits = limits


class IISWebServer(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """IISWeb server.

    :ivar server_id: Gets or sets the web server id.
    :vartype server_id: str
    :ivar server_name: Gets or sets the web server name.
    :vartype server_name: str
    :ivar root_configuration_location: Gets or sets the server root configuration location.
    :vartype root_configuration_location: str
    :ivar version: Gets or sets the server version.
    :vartype version: str
    :ivar machines: Gets or sets the list of machines.
    :vartype machines: list[str]
    :ivar web_applications: Gets or sets the list of web applications.
    :vartype web_applications: list[str]
    :ivar display_name: Gets or sets the display name.
    :vartype display_name: str
    :ivar server_fqdn: Gets or sets the server FQDN.
    :vartype server_fqdn: str
    :ivar ip_addresses: Gets or sets list of ip addresses.
    :vartype ip_addresses: list[str]
    :ivar run_as_account_id: Gets or sets the run as account id.
    :vartype run_as_account_id: str
    :ivar operating_system_details:
    :vartype operating_system_details:
     ~azure.mgmt.migrationmodernization.models.OperatingSystemDetails
    """

    _attribute_map = {
        "server_id": {"key": "serverId", "type": "str"},
        "server_name": {"key": "serverName", "type": "str"},
        "root_configuration_location": {"key": "rootConfigurationLocation", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "machines": {"key": "machines", "type": "[str]"},
        "web_applications": {"key": "webApplications", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "server_fqdn": {"key": "serverFqdn", "type": "str"},
        "ip_addresses": {"key": "ipAddresses", "type": "[str]"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "operating_system_details": {"key": "operatingSystemDetails", "type": "OperatingSystemDetails"},
    }

    def __init__(
        self,
        *,
        server_id: Optional[str] = None,
        server_name: Optional[str] = None,
        root_configuration_location: Optional[str] = None,
        version: Optional[str] = None,
        machines: Optional[List[str]] = None,
        web_applications: Optional[List[str]] = None,
        display_name: Optional[str] = None,
        server_fqdn: Optional[str] = None,
        ip_addresses: Optional[List[str]] = None,
        run_as_account_id: Optional[str] = None,
        operating_system_details: Optional["_models.OperatingSystemDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword server_id: Gets or sets the web server id.
        :paramtype server_id: str
        :keyword server_name: Gets or sets the web server name.
        :paramtype server_name: str
        :keyword root_configuration_location: Gets or sets the server root configuration location.
        :paramtype root_configuration_location: str
        :keyword version: Gets or sets the server version.
        :paramtype version: str
        :keyword machines: Gets or sets the list of machines.
        :paramtype machines: list[str]
        :keyword web_applications: Gets or sets the list of web applications.
        :paramtype web_applications: list[str]
        :keyword display_name: Gets or sets the display name.
        :paramtype display_name: str
        :keyword server_fqdn: Gets or sets the server FQDN.
        :paramtype server_fqdn: str
        :keyword ip_addresses: Gets or sets list of ip addresses.
        :paramtype ip_addresses: list[str]
        :keyword run_as_account_id: Gets or sets the run as account id.
        :paramtype run_as_account_id: str
        :keyword operating_system_details:
        :paramtype operating_system_details:
         ~azure.mgmt.migrationmodernization.models.OperatingSystemDetails
        """
        super().__init__(**kwargs)
        self.server_id = server_id
        self.server_name = server_name
        self.root_configuration_location = root_configuration_location
        self.version = version
        self.machines = machines
        self.web_applications = web_applications
        self.display_name = display_name
        self.server_fqdn = server_fqdn
        self.ip_addresses = ip_addresses
        self.run_as_account_id = run_as_account_id
        self.operating_system_details = operating_system_details


class IISWorkloadInstanceModelCustomProperties(WorkloadInstanceModelCustomProperties):
    """IIS workload instance model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are: "IISWorkload"
     and "ApacheTomcatWorkload".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkloadType
    :ivar web_app_arm_id: Gets or sets the Web application ARM id.
    :vartype web_app_arm_id: str
    :ivar web_app_site_name: Gets or sets the Web application site name.
    :vartype web_app_site_name: str
    :ivar iis_web_application: IISWeb application.
    :vartype iis_web_application: ~azure.mgmt.migrationmodernization.models.IISWebApplication
    :ivar container_name: Gets or sets the container Id.
    :vartype container_name: str
    :ivar fileshare_name: Gets or sets the fileshare name.
    :vartype fileshare_name: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "web_app_arm_id": {"key": "webAppArmId", "type": "str"},
        "web_app_site_name": {"key": "webAppSiteName", "type": "str"},
        "iis_web_application": {"key": "iisWebApplication", "type": "IISWebApplication"},
        "container_name": {"key": "containerName", "type": "str"},
        "fileshare_name": {"key": "fileshareName", "type": "str"},
    }

    def __init__(
        self,
        *,
        web_app_arm_id: Optional[str] = None,
        web_app_site_name: Optional[str] = None,
        iis_web_application: Optional["_models.IISWebApplication"] = None,
        container_name: Optional[str] = None,
        fileshare_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword web_app_arm_id: Gets or sets the Web application ARM id.
        :paramtype web_app_arm_id: str
        :keyword web_app_site_name: Gets or sets the Web application site name.
        :paramtype web_app_site_name: str
        :keyword iis_web_application: IISWeb application.
        :paramtype iis_web_application: ~azure.mgmt.migrationmodernization.models.IISWebApplication
        :keyword container_name: Gets or sets the container Id.
        :paramtype container_name: str
        :keyword fileshare_name: Gets or sets the fileshare name.
        :paramtype fileshare_name: str
        """
        super().__init__(web_app_arm_id=web_app_arm_id, web_app_site_name=web_app_site_name, **kwargs)
        self.instance_type: str = "IISWorkloadInstanceModelCustomProperties"
        self.iis_web_application = iis_web_application
        self.container_name = container_name
        self.fileshare_name = fileshare_name


class InnerHealthErrorModel(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Inner health error model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar code: Gets or sets the error code.
    :vartype code: str
    :ivar health_category: Gets or sets the health category.
    :vartype health_category: str
    :ivar category: Gets or sets the error category.
    :vartype category: str
    :ivar severity: Gets or sets the error severity.
    :vartype severity: str
    :ivar source: Gets or sets the error source.
    :vartype source: str
    :ivar creation_time: Gets or sets the error creation time.
    :vartype creation_time: ~datetime.datetime
    :ivar is_customer_resolvable: Gets or sets a value indicating whether the error is customer
     resolvable.
    :vartype is_customer_resolvable: bool
    :ivar summary: Gets or sets the error summary.
    :vartype summary: str
    :ivar message: Gets or sets the error message.
    :vartype message: str
    :ivar causes: Gets or sets possible causes of the error.
    :vartype causes: str
    :ivar recommendation: Gets or sets recommended action to resolve the error.
    :vartype recommendation: str
    """

    _validation = {
        "id": {"readonly": True},
        "code": {"readonly": True},
        "health_category": {"readonly": True},
        "category": {"readonly": True},
        "severity": {"readonly": True},
        "source": {"readonly": True},
        "creation_time": {"readonly": True},
        "is_customer_resolvable": {"readonly": True},
        "summary": {"readonly": True},
        "message": {"readonly": True},
        "causes": {"readonly": True},
        "recommendation": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "code": {"key": "code", "type": "str"},
        "health_category": {"key": "healthCategory", "type": "str"},
        "category": {"key": "category", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "is_customer_resolvable": {"key": "isCustomerResolvable", "type": "bool"},
        "summary": {"key": "summary", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "causes": {"key": "causes", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.code = None
        self.health_category = None
        self.category = None
        self.severity = None
        self.source = None
        self.creation_time = None
        self.is_customer_resolvable = None
        self.summary = None
        self.message = None
        self.causes = None
        self.recommendation = None


class KeyVaultSecretStoreProperties(SecretStoreProperties):
    """KeyVaultSecretStoreProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar secret_store_id:
    :vartype secret_store_id: str
    :ivar input_type:
    :vartype input_type: str
    :ivar tenant_id:
    :vartype tenant_id: str
    :ivar subscription_id:
    :vartype subscription_id: str
    :ivar resource_group:
    :vartype resource_group: str
    :ivar keyvault_name:
    :vartype keyvault_name: str
    :ivar managed_identity_properties:
    :vartype managed_identity_properties:
     ~azure.mgmt.migrationmodernization.models.ManagedIdentityProperties
    """

    _validation = {
        "input_type": {"readonly": True},
    }

    _attribute_map = {
        "secret_store_id": {"key": "secretStoreId", "type": "str"},
        "input_type": {"key": "inputType", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
        "keyvault_name": {"key": "keyvaultName", "type": "str"},
        "managed_identity_properties": {"key": "managedIdentityProperties", "type": "ManagedIdentityProperties"},
    }

    def __init__(
        self,
        *,
        secret_store_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        subscription_id: Optional[str] = None,
        resource_group: Optional[str] = None,
        keyvault_name: Optional[str] = None,
        managed_identity_properties: Optional["_models.ManagedIdentityProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword secret_store_id:
        :paramtype secret_store_id: str
        :keyword tenant_id:
        :paramtype tenant_id: str
        :keyword subscription_id:
        :paramtype subscription_id: str
        :keyword resource_group:
        :paramtype resource_group: str
        :keyword keyvault_name:
        :paramtype keyvault_name: str
        :keyword managed_identity_properties:
        :paramtype managed_identity_properties:
         ~azure.mgmt.migrationmodernization.models.ManagedIdentityProperties
        """
        super().__init__(secret_store_id=secret_store_id, **kwargs)
        self.tenant_id = tenant_id
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.keyvault_name = keyvault_name
        self.managed_identity_properties = managed_identity_properties


class KubeSecretStoreProperties(SecretStoreProperties):
    """KubeSecretStoreProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar secret_store_id:
    :vartype secret_store_id: str
    :ivar input_type:
    :vartype input_type: str
    """


class ManagedIdentityProperties(_serialization.Model):
    """ManagedIdentityProperties.

    :ivar tenant_id:
    :vartype tenant_id: str
    :ivar subscription_id:
    :vartype subscription_id: str
    :ivar resource_group:
    :vartype resource_group: str
    :ivar managed_identity_name:
    :vartype managed_identity_name: str
    :ivar client_id:
    :vartype client_id: str
    :ivar principal_id:
    :vartype principal_id: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
        "managed_identity_name": {"key": "managedIdentityName", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "principal_id": {"key": "principalId", "type": "str"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        subscription_id: Optional[str] = None,
        resource_group: Optional[str] = None,
        managed_identity_name: Optional[str] = None,
        client_id: Optional[str] = None,
        principal_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id:
        :paramtype tenant_id: str
        :keyword subscription_id:
        :paramtype subscription_id: str
        :keyword resource_group:
        :paramtype resource_group: str
        :keyword managed_identity_name:
        :paramtype managed_identity_name: str
        :keyword client_id:
        :paramtype client_id: str
        :keyword principal_id:
        :paramtype principal_id: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.managed_identity_name = managed_identity_name
        self.client_id = client_id
        self.principal_id = principal_id


class MigrateAgentModel(_serialization.Model):
    """MigrateAgent model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: MigrateAgent model properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.MigrateAgentModelProperties
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data:
    :vartype system_data: ~azure.mgmt.migrationmodernization.models.MigrateAgentModelSystemData
    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "MigrateAgentModelProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "MigrateAgentModelSystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.MigrateAgentModelProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: MigrateAgent model properties.
        :paramtype properties: ~azure.mgmt.migrationmodernization.models.MigrateAgentModelProperties
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.tags = tags


class MigrateAgentModelCollection(_serialization.Model):
    """MigrateAgent model collection.

    :ivar value: Gets or sets the list of agents.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.MigrateAgentModel]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[MigrateAgentModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.MigrateAgentModel"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of agents.
        :paramtype value: list[~azure.mgmt.migrationmodernization.models.MigrateAgentModel]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class MigrateAgentModelCustomProperties(_serialization.Model):
    """MigrateAgent model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    VMwareMigrateAgentModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {"VMwareMigrateAgentModelCustomProperties": "VMwareMigrateAgentModelCustomProperties"}
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class MigrateAgentModelProperties(_serialization.Model):
    """MigrateAgent model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar correlation_id: Gets or sets the MigrateAgent correlation Id.
    :vartype correlation_id: str
    :ivar machine_id: Gets or sets the machine Id where MigrateAgent is running.
    :vartype machine_id: str
    :ivar machine_name: Gets or sets the machine name where MigrateAgent is running.
    :vartype machine_name: str
    :ivar authentication_identity: Identity model.
    :vartype authentication_identity: ~azure.mgmt.migrationmodernization.models.IdentityModel
    :ivar is_responsive: Gets or sets a value indicating whether MigrateAgent is responsive.
    :vartype is_responsive: bool
    :ivar last_heartbeat: Gets or sets the time when last heartbeat was sent by the MigrateAgent.
    :vartype last_heartbeat: ~datetime.datetime
    :ivar version_number: Gets or sets the MigrateAgent version.
    :vartype version_number: str
    :ivar provisioning_state: Gets or sets the provisioning state of the MigrateAgent. Known values
     are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or ~azure.mgmt.migrationmodernization.models.ProvisioningState
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar custom_properties: MigrateAgent model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.migrationmodernization.models.MigrateAgentModelCustomProperties
    """

    _validation = {
        "correlation_id": {"readonly": True},
        "is_responsive": {"readonly": True},
        "last_heartbeat": {"readonly": True},
        "version_number": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "health_errors": {"readonly": True},
    }

    _attribute_map = {
        "correlation_id": {"key": "correlationId", "type": "str"},
        "machine_id": {"key": "machineId", "type": "str"},
        "machine_name": {"key": "machineName", "type": "str"},
        "authentication_identity": {"key": "authenticationIdentity", "type": "IdentityModel"},
        "is_responsive": {"key": "isResponsive", "type": "bool"},
        "last_heartbeat": {"key": "lastHeartbeat", "type": "iso-8601"},
        "version_number": {"key": "versionNumber", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "MigrateAgentModelCustomProperties"},
    }

    def __init__(
        self,
        *,
        machine_id: Optional[str] = None,
        machine_name: Optional[str] = None,
        authentication_identity: Optional["_models.IdentityModel"] = None,
        custom_properties: Optional["_models.MigrateAgentModelCustomProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: Gets or sets the machine Id where MigrateAgent is running.
        :paramtype machine_id: str
        :keyword machine_name: Gets or sets the machine name where MigrateAgent is running.
        :paramtype machine_name: str
        :keyword authentication_identity: Identity model.
        :paramtype authentication_identity: ~azure.mgmt.migrationmodernization.models.IdentityModel
        :keyword custom_properties: MigrateAgent model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.migrationmodernization.models.MigrateAgentModelCustomProperties
        """
        super().__init__(**kwargs)
        self.correlation_id = None
        self.machine_id = machine_id
        self.machine_name = machine_name
        self.authentication_identity = authentication_identity
        self.is_responsive = None
        self.last_heartbeat = None
        self.version_number = None
        self.provisioning_state = None
        self.health_errors = None
        self.custom_properties = custom_properties


class MigrateAgentModelSystemData(SystemDataModel):
    """MigrateAgentModelSystemData.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """


class MigrateWorkflowModelCustomProperties(WorkflowModelCustomProperties):
    """Migrate workflow model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "SampleWorkflow", "EnableReplicationWorkflow", "StopReplicationWorkflow",
     "BuildContainerImageWorkflow", "MigrateWorkflow", "TestMigrateWorkflow",
     "TestMigrateCleanupWorkflow", "CompleteMigrationWorkflow", and "DisableReplicationWorkflow".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowType
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details: dict[str, str]
    :ivar deployed_resources_properties:
    :vartype deployed_resources_properties:
     ~azure.mgmt.migrationmodernization.models.MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "deployed_resources_properties": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {"key": "affectedObjectDetails", "type": "{str}"},
        "deployed_resources_properties": {
            "key": "deployedResourcesProperties",
            "type": "MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties",
        },
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "MigrateWorkflowModelCustomProperties"
        self.deployed_resources_properties = None


class MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties(
    DeployedResourcesProperties
):  # pylint: disable=name-too-long
    """MigrateWorkflowModelCustomPropertiesDeployedResourcesProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the ID.
    :vartype id: str
    :ivar deployed_resource_id: Gets or sets the deployed resource id.
    :vartype deployed_resource_id: str
    :ivar display_name: Gets or sets the name of deployed resources.
    :vartype display_name: str
    :ivar context: Gets or sets the context of deployed resources.
    :vartype context: str
    :ivar status: Gets or sets the status of deployed resources.
    :vartype status: str
    :ivar type: Gets or sets the type of deployed resources.
    :vartype type: str
    :ivar deployment_timestamp: Gets or sets the deployment timestamp.
    :vartype deployment_timestamp: ~datetime.datetime
    :ivar is_clean_up_done: Gets or sets a value indicating whether resources are cleaned up from
     target.
    :vartype is_clean_up_done: bool
    :ivar is_test_migration: Gets or sets a value indicating whether scenario is test migration.
    :vartype is_test_migration: bool
    """


class MigrationConfiguration(_serialization.Model):
    """MigrationConfiguration properties.

    :ivar storage_account_resource_id: Gets or sets the storage account resource Id.
    :vartype storage_account_resource_id: str
    :ivar key_vault_resource_id: Gets or sets the key vault resource Id.
    :vartype key_vault_resource_id: str
    :ivar migration_solution_resource_id: Gets or sets the migration solution resource Id.
    :vartype migration_solution_resource_id: str
    """

    _attribute_map = {
        "storage_account_resource_id": {"key": "storageAccountResourceId", "type": "str"},
        "key_vault_resource_id": {"key": "keyVaultResourceId", "type": "str"},
        "migration_solution_resource_id": {"key": "migrationSolutionResourceId", "type": "str"},
    }

    def __init__(
        self,
        *,
        storage_account_resource_id: Optional[str] = None,
        key_vault_resource_id: Optional[str] = None,
        migration_solution_resource_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword storage_account_resource_id: Gets or sets the storage account resource Id.
        :paramtype storage_account_resource_id: str
        :keyword key_vault_resource_id: Gets or sets the key vault resource Id.
        :paramtype key_vault_resource_id: str
        :keyword migration_solution_resource_id: Gets or sets the migration solution resource Id.
        :paramtype migration_solution_resource_id: str
        """
        super().__init__(**kwargs)
        self.storage_account_resource_id = storage_account_resource_id
        self.key_vault_resource_id = key_vault_resource_id
        self.migration_solution_resource_id = migration_solution_resource_id


class ModernizeProjectModel(_serialization.Model):
    """ModernizeProject model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar location: Gets or sets the location of the modernizeProject.
    :vartype location: str
    :ivar properties: ModernizeProject properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.ModernizeProjectModelProperties
    :ivar identity:
    :vartype identity: ~azure.mgmt.migrationmodernization.models.ResourceIdentity
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data:
    :vartype system_data: ~azure.mgmt.migrationmodernization.models.ModernizeProjectModelSystemData
    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "ModernizeProjectModelProperties"},
        "identity": {"key": "identity", "type": "ResourceIdentity"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "ModernizeProjectModelSystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        properties: Optional["_models.ModernizeProjectModelProperties"] = None,
        identity: Optional["_models.ResourceIdentity"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Gets or sets the location of the modernizeProject.
        :paramtype location: str
        :keyword properties: ModernizeProject properties.
        :paramtype properties:
         ~azure.mgmt.migrationmodernization.models.ModernizeProjectModelProperties
        :keyword identity:
        :paramtype identity: ~azure.mgmt.migrationmodernization.models.ResourceIdentity
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.location = location
        self.properties = properties
        self.identity = identity
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.tags = tags


class ModernizeProjectModelCollection(_serialization.Model):
    """ModernizeProject model collection.

    :ivar value: Gets or sets the list of modernizeProjects.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.ModernizeProjectModel]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ModernizeProjectModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.ModernizeProjectModel"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of modernizeProjects.
        :paramtype value: list[~azure.mgmt.migrationmodernization.models.ModernizeProjectModel]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ModernizeProjectModelProperties(_serialization.Model):
    """ModernizeProject properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Gets or sets the provisioning state of the ModernizeProject. Known
     values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or ~azure.mgmt.migrationmodernization.models.ProvisioningState
    :ivar service_resource_id: Gets or sets the service resource Id.
    :vartype service_resource_id: str
    :ivar service_endpoint: Gets or sets the service endpoint.
    :vartype service_endpoint: str
    :ivar migration_configuration: MigrationConfiguration properties.
    :vartype migration_configuration:
     ~azure.mgmt.migrationmodernization.models.MigrationConfiguration
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "service_resource_id": {"readonly": True},
        "service_endpoint": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "service_resource_id": {"key": "serviceResourceId", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "migration_configuration": {"key": "migrationConfiguration", "type": "MigrationConfiguration"},
    }

    def __init__(
        self, *, migration_configuration: Optional["_models.MigrationConfiguration"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword migration_configuration: MigrationConfiguration properties.
        :paramtype migration_configuration:
         ~azure.mgmt.migrationmodernization.models.MigrationConfiguration
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.service_resource_id = None
        self.service_endpoint = None
        self.migration_configuration = migration_configuration


class ModernizeProjectModelSystemData(SystemDataModel):
    """ModernizeProjectModelSystemData.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """


class ModernizeProjectStatisticsModel(_serialization.Model):
    """ModernizeProject statistics model.

    :ivar properties: ModernizeProject statistics properties.
    :vartype properties:
     ~azure.mgmt.migrationmodernization.models.ModernizeProjectStatisticsModelProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "ModernizeProjectStatisticsModelProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.ModernizeProjectStatisticsModelProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: ModernizeProject statistics properties.
        :paramtype properties:
         ~azure.mgmt.migrationmodernization.models.ModernizeProjectStatisticsModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ModernizeProjectStatisticsModelProperties(_serialization.Model):  # pylint: disable=name-too-long
    """ModernizeProject statistics properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar workload_deployment_statistics:
    :vartype workload_deployment_statistics:
     ~azure.mgmt.migrationmodernization.models.ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics
    :ivar job_statistics:
    :vartype job_statistics:
     ~azure.mgmt.migrationmodernization.models.ModernizeProjectStatisticsModelPropertiesJobStatistics
    :ivar workload_instance_statistics:
    :vartype workload_instance_statistics:
     ~azure.mgmt.migrationmodernization.models.ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics
    :ivar modernize_project_errors: Gets or sets the list of modernizeProject health errors.
    :vartype modernize_project_errors:
     list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    """

    _validation = {
        "workload_deployment_statistics": {"readonly": True},
        "job_statistics": {"readonly": True},
        "workload_instance_statistics": {"readonly": True},
        "modernize_project_errors": {"readonly": True},
    }

    _attribute_map = {
        "workload_deployment_statistics": {
            "key": "workloadDeploymentStatistics",
            "type": "ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics",
        },
        "job_statistics": {"key": "jobStatistics", "type": "ModernizeProjectStatisticsModelPropertiesJobStatistics"},
        "workload_instance_statistics": {
            "key": "workloadInstanceStatistics",
            "type": "ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics",
        },
        "modernize_project_errors": {"key": "modernizeProjectErrors", "type": "[HealthErrorModel]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.workload_deployment_statistics = None
        self.job_statistics = None
        self.workload_instance_statistics = None
        self.modernize_project_errors = None


class WorkflowStatisticsModel(_serialization.Model):
    """Workflow statistics.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar count: Gets or sets the resource count.
    :vartype count: int
    :ivar categorized_counts: Gets or sets the categorized resource counts.
    :vartype categorized_counts: dict[str, int]
    """

    _validation = {
        "count": {"readonly": True},
        "categorized_counts": {"readonly": True},
    }

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "categorized_counts": {"key": "categorizedCounts", "type": "{int}"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.count = None
        self.categorized_counts = None


class ModernizeProjectStatisticsModelPropertiesJobStatistics(WorkflowStatisticsModel):  # pylint: disable=name-too-long
    """ModernizeProjectStatisticsModelPropertiesJobStatistics.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar count: Gets or sets the resource count.
    :vartype count: int
    :ivar categorized_counts: Gets or sets the categorized resource counts.
    :vartype categorized_counts: dict[str, int]
    """


class WorkloadDeploymentStatisticsModel(_serialization.Model):
    """Workload deployment statistics.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar count: Gets or sets the resource count.
    :vartype count: int
    :ivar categorized_counts: Gets or sets the categorized resource counts.
    :vartype categorized_counts: dict[str, int]
    """

    _validation = {
        "health_errors": {"readonly": True},
        "count": {"readonly": True},
        "categorized_counts": {"readonly": True},
    }

    _attribute_map = {
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "count": {"key": "count", "type": "int"},
        "categorized_counts": {"key": "categorizedCounts", "type": "{int}"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.health_errors = None
        self.count = None
        self.categorized_counts = None


class ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics(
    WorkloadDeploymentStatisticsModel
):  # pylint: disable=name-too-long
    """ModernizeProjectStatisticsModelPropertiesWorkloadDeploymentStatistics.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar count: Gets or sets the resource count.
    :vartype count: int
    :ivar categorized_counts: Gets or sets the categorized resource counts.
    :vartype categorized_counts: dict[str, int]
    """


class WorkloadInstanceStatisticsModel(_serialization.Model):
    """Workload instance statistics.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar count: Gets or sets the resource count.
    :vartype count: int
    :ivar categorized_counts: Gets or sets the categorized resource counts.
    :vartype categorized_counts: dict[str, int]
    """

    _validation = {
        "health_errors": {"readonly": True},
        "count": {"readonly": True},
        "categorized_counts": {"readonly": True},
    }

    _attribute_map = {
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "count": {"key": "count", "type": "int"},
        "categorized_counts": {"key": "categorizedCounts", "type": "{int}"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.health_errors = None
        self.count = None
        self.categorized_counts = None


class ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics(
    WorkloadInstanceStatisticsModel
):  # pylint: disable=name-too-long
    """ModernizeProjectStatisticsModelPropertiesWorkloadInstanceStatistics.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar count: Gets or sets the resource count.
    :vartype count: int
    :ivar categorized_counts: Gets or sets the categorized resource counts.
    :vartype categorized_counts: dict[str, int]
    """


class OperatingSystemDetails(_serialization.Model):
    """OperatingSystemDetails.

    :ivar os: Known values are: "Windows" and "Linux".
    :vartype os: str or ~azure.mgmt.migrationmodernization.models.OperatingSystemType
    :ivar os_name:
    :vartype os_name: str
    :ivar os_version:
    :vartype os_version: str
    :ivar os_architecture:
    :vartype os_architecture: str
    """

    _attribute_map = {
        "os": {"key": "os", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "os_architecture": {"key": "osArchitecture", "type": "str"},
    }

    def __init__(
        self,
        *,
        os: Optional[Union[str, "_models.OperatingSystemType"]] = None,
        os_name: Optional[str] = None,
        os_version: Optional[str] = None,
        os_architecture: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword os: Known values are: "Windows" and "Linux".
        :paramtype os: str or ~azure.mgmt.migrationmodernization.models.OperatingSystemType
        :keyword os_name:
        :paramtype os_name: str
        :keyword os_version:
        :paramtype os_version: str
        :keyword os_architecture:
        :paramtype os_architecture: str
        """
        super().__init__(**kwargs)
        self.os = os
        self.os_name = os_name
        self.os_version = os_version
        self.os_architecture = os_architecture


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.migrationmodernization.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.migrationmodernization.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.migrationmodernization.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.migrationmodernization.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class OperationStatus(_serialization.Model):
    """Defines the operation status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the Id.
    :vartype id: str
    :ivar name: Gets the operation name.
    :vartype name: str
    :ivar status: Gets the status of the operation. ARM expects the terminal status to be one of
     Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.
    :vartype status: str
    :ivar start_time: Gets the start time.
    :vartype start_time: str
    :ivar end_time: Gets the end time.
    :vartype end_time: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "status": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.status = None
        self.start_time = None
        self.end_time = None


class PortMapping(_serialization.Model):
    """WebApplication port mapping.

    :ivar internal_port: Gets or sets the Internal Port.
    :vartype internal_port: int
    :ivar external_port: Gets or sets the External Port.
    :vartype external_port: int
    """

    _attribute_map = {
        "internal_port": {"key": "internalPort", "type": "int"},
        "external_port": {"key": "externalPort", "type": "int"},
    }

    def __init__(
        self, *, internal_port: Optional[int] = None, external_port: Optional[int] = None, **kwargs: Any
    ) -> None:
        """
        :keyword internal_port: Gets or sets the Internal Port.
        :paramtype internal_port: int
        :keyword external_port: Gets or sets the External Port.
        :paramtype external_port: int
        """
        super().__init__(**kwargs)
        self.internal_port = internal_port
        self.external_port = external_port


class ResourceIdentity(_serialization.Model):
    """ResourceIdentity.

    :ivar principal_id:
    :vartype principal_id: str
    :ivar tenant_id:
    :vartype tenant_id: str
    :ivar type: Known values are: "None", "SystemAssigned", and "UserAssigned".
    :vartype type: str or ~azure.mgmt.migrationmodernization.models.ResourceIdentityTypes
    :ivar user_assigned_identities: Dictionary of :code:`<UserAssignedIdentity>`.
    :vartype user_assigned_identities: dict[str,
     ~azure.mgmt.migrationmodernization.models.UserAssignedIdentity]
    """

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "user_assigned_identities": {"key": "userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(
        self,
        *,
        principal_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        type: Optional[Union[str, "_models.ResourceIdentityTypes"]] = None,
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword principal_id:
        :paramtype principal_id: str
        :keyword tenant_id:
        :paramtype tenant_id: str
        :keyword type: Known values are: "None", "SystemAssigned", and "UserAssigned".
        :paramtype type: str or ~azure.mgmt.migrationmodernization.models.ResourceIdentityTypes
        :keyword user_assigned_identities: Dictionary of :code:`<UserAssignedIdentity>`.
        :paramtype user_assigned_identities: dict[str,
         ~azure.mgmt.migrationmodernization.models.UserAssignedIdentity]
        """
        super().__init__(**kwargs)
        self.principal_id = principal_id
        self.tenant_id = tenant_id
        self.type = type
        self.user_assigned_identities = user_assigned_identities


class ResourceRequirements(_serialization.Model):
    """Resource Requirements.

    :ivar cpu: Gets or sets the Cpu requirement.
    :vartype cpu: str
    :ivar memory: Gets or sets the Memory requirement.
    :vartype memory: str
    """

    _attribute_map = {
        "cpu": {"key": "cpu", "type": "str"},
        "memory": {"key": "memory", "type": "str"},
    }

    def __init__(self, *, cpu: Optional[str] = None, memory: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword cpu: Gets or sets the Cpu requirement.
        :paramtype cpu: str
        :keyword memory: Gets or sets the Memory requirement.
        :paramtype memory: str
        """
        super().__init__(**kwargs)
        self.cpu = cpu
        self.memory = memory


class SecretStoreDetails(_serialization.Model):
    """SecretStoreDetails.

    :ivar secret_store: Gets or sets the type of secret store for the certificate. Known values
     are: "None", "KubeSecret", "KeyVaultSecret", and "AppServiceAppSettings".
    :vartype secret_store: str or ~azure.mgmt.migrationmodernization.models.SecretStoreType
    :ivar secret_store_properties:
    :vartype secret_store_properties:
     ~azure.mgmt.migrationmodernization.models.SecretStoreProperties
    """

    _attribute_map = {
        "secret_store": {"key": "secretStore", "type": "str"},
        "secret_store_properties": {"key": "secretStoreProperties", "type": "SecretStoreProperties"},
    }

    def __init__(
        self,
        *,
        secret_store: Optional[Union[str, "_models.SecretStoreType"]] = None,
        secret_store_properties: Optional["_models.SecretStoreProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword secret_store: Gets or sets the type of secret store for the certificate. Known values
         are: "None", "KubeSecret", "KeyVaultSecret", and "AppServiceAppSettings".
        :paramtype secret_store: str or ~azure.mgmt.migrationmodernization.models.SecretStoreType
        :keyword secret_store_properties:
        :paramtype secret_store_properties:
         ~azure.mgmt.migrationmodernization.models.SecretStoreProperties
        """
        super().__init__(**kwargs)
        self.secret_store = secret_store
        self.secret_store_properties = secret_store_properties


class TargetStorageProfile(_serialization.Model):
    """Storage profile for the directory on the target container.

    :ivar storage_access_type: Gets or sets the target storage access type. Known values are:
     "Shared" and "Exclusive".
    :vartype storage_access_type: str or
     ~azure.mgmt.migrationmodernization.models.TargetStorageAccessType
    :ivar storage_projection_type: Gets or sets the target projection type. Known values are:
     "ContainerFileSystem" and "PersistentVolume".
    :vartype storage_projection_type: str or
     ~azure.mgmt.migrationmodernization.models.TargetStorageProjectionType
    :ivar hydration_storage_provider_type: Gets or sets the storage provider type on the target.
     Applicable when StorageProjectionType is not ContainerFileSystem. "AzureFileShare"
    :vartype hydration_storage_provider_type: str or
     ~azure.mgmt.migrationmodernization.models.TargetHydrationStorageProviderType
    :ivar persistent_volume_id: Gets or sets the target persistent volume id.
     Applicable when StorageProjectionType is PersistentVolume and on using an
     existing PersistentVolume.
    :vartype persistent_volume_id: str
    :ivar target_name: Gets or sets the name of the projected volume on the target environment.
    :vartype target_name: str
    :ivar target_size: Gets or sets the storage size on the target.
     Applicable when StorageProjectionType is PersistentVolume and on creating a new
     PersistentVolume.
    :vartype target_size: str
    :ivar azure_file_share_profile: Azure file share profile for hydration of application folders
     not mounted on
     the container file system.
    :vartype azure_file_share_profile:
     ~azure.mgmt.migrationmodernization.models.AzureFileShareHydrationProfile
    """

    _attribute_map = {
        "storage_access_type": {"key": "storageAccessType", "type": "str"},
        "storage_projection_type": {"key": "storageProjectionType", "type": "str"},
        "hydration_storage_provider_type": {"key": "hydrationStorageProviderType", "type": "str"},
        "persistent_volume_id": {"key": "persistentVolumeId", "type": "str"},
        "target_name": {"key": "targetName", "type": "str"},
        "target_size": {"key": "targetSize", "type": "str"},
        "azure_file_share_profile": {"key": "azureFileShareProfile", "type": "AzureFileShareHydrationProfile"},
    }

    def __init__(
        self,
        *,
        storage_access_type: Optional[Union[str, "_models.TargetStorageAccessType"]] = None,
        storage_projection_type: Optional[Union[str, "_models.TargetStorageProjectionType"]] = None,
        hydration_storage_provider_type: Optional[Union[str, "_models.TargetHydrationStorageProviderType"]] = None,
        persistent_volume_id: Optional[str] = None,
        target_name: Optional[str] = None,
        target_size: Optional[str] = None,
        azure_file_share_profile: Optional["_models.AzureFileShareHydrationProfile"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword storage_access_type: Gets or sets the target storage access type. Known values are:
         "Shared" and "Exclusive".
        :paramtype storage_access_type: str or
         ~azure.mgmt.migrationmodernization.models.TargetStorageAccessType
        :keyword storage_projection_type: Gets or sets the target projection type. Known values are:
         "ContainerFileSystem" and "PersistentVolume".
        :paramtype storage_projection_type: str or
         ~azure.mgmt.migrationmodernization.models.TargetStorageProjectionType
        :keyword hydration_storage_provider_type: Gets or sets the storage provider type on the target.
         Applicable when StorageProjectionType is not ContainerFileSystem. "AzureFileShare"
        :paramtype hydration_storage_provider_type: str or
         ~azure.mgmt.migrationmodernization.models.TargetHydrationStorageProviderType
        :keyword persistent_volume_id: Gets or sets the target persistent volume id.
         Applicable when StorageProjectionType is PersistentVolume and on using an
         existing PersistentVolume.
        :paramtype persistent_volume_id: str
        :keyword target_name: Gets or sets the name of the projected volume on the target environment.
        :paramtype target_name: str
        :keyword target_size: Gets or sets the storage size on the target.
         Applicable when StorageProjectionType is PersistentVolume and on creating a new
         PersistentVolume.
        :paramtype target_size: str
        :keyword azure_file_share_profile: Azure file share profile for hydration of application
         folders not mounted on
         the container file system.
        :paramtype azure_file_share_profile:
         ~azure.mgmt.migrationmodernization.models.AzureFileShareHydrationProfile
        """
        super().__init__(**kwargs)
        self.storage_access_type = storage_access_type
        self.storage_projection_type = storage_projection_type
        self.hydration_storage_provider_type = hydration_storage_provider_type
        self.persistent_volume_id = persistent_volume_id
        self.target_name = target_name
        self.target_size = target_size
        self.azure_file_share_profile = azure_file_share_profile


class TaskModel(_serialization.Model):
    """Task model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar task_name: Gets or sets the task name.
    :vartype task_name: str
    :ivar state: Gets or sets the task state. Known values are: "Pending", "Started", "Succeeded",
     "Failed", "Cancelled", and "Skipped".
    :vartype state: str or ~azure.mgmt.migrationmodernization.models.TaskState
    :ivar start_time: Gets or sets the start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets the end time.
    :vartype end_time: ~datetime.datetime
    :ivar custom_properties: Task model custom properties.
    :vartype custom_properties: ~azure.mgmt.migrationmodernization.models.TaskModelCustomProperties
    """

    _validation = {
        "id": {"readonly": True},
        "task_name": {"readonly": True},
        "state": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "task_name": {"key": "taskName", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "custom_properties": {"key": "customProperties", "type": "TaskModelCustomProperties"},
    }

    def __init__(
        self, *, custom_properties: Optional["_models.TaskModelCustomProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword custom_properties: Task model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.migrationmodernization.models.TaskModelCustomProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.task_name = None
        self.state = None
        self.start_time = None
        self.end_time = None
        self.custom_properties = custom_properties


class TaskModelCustomProperties(_serialization.Model):
    """Task model custom properties.

    :ivar instance_type: Gets or sets the instance type.
    :vartype instance_type: str
    """

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    def __init__(self, *, instance_type: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword instance_type: Gets or sets the instance type.
        :paramtype instance_type: str
        """
        super().__init__(**kwargs)
        self.instance_type = instance_type


class TestMigrateCleanupWorkflowModelCustomProperties(WorkflowModelCustomProperties):  # pylint: disable=name-too-long
    """Test migrate cleanup workflow model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "SampleWorkflow", "EnableReplicationWorkflow", "StopReplicationWorkflow",
     "BuildContainerImageWorkflow", "MigrateWorkflow", "TestMigrateWorkflow",
     "TestMigrateCleanupWorkflow", "CompleteMigrationWorkflow", and "DisableReplicationWorkflow".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowType
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details: dict[str, str]
    :ivar comments: Gets or sets the test migrate cleanup comments.
    :vartype comments: str
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "comments": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {"key": "affectedObjectDetails", "type": "{str}"},
        "comments": {"key": "comments", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "TestMigrateCleanupWorkflowModelCustomProperties"
        self.comments = None


class TestMigrateModel(_serialization.Model):
    """Test migrate model.

    :ivar properties: Test migrate model properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.TestMigrateModelProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "TestMigrateModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.TestMigrateModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Test migrate model properties.
        :paramtype properties: ~azure.mgmt.migrationmodernization.models.TestMigrateModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class TestMigrateModelProperties(_serialization.Model):
    """Test migrate model properties.

    :ivar custom_properties: Workload deployment model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelCustomProperties
    """

    _attribute_map = {
        "custom_properties": {"key": "customProperties", "type": "WorkloadDeploymentModelCustomProperties"},
    }

    def __init__(
        self, *, custom_properties: Optional["_models.WorkloadDeploymentModelCustomProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword custom_properties: Workload deployment model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelCustomProperties
        """
        super().__init__(**kwargs)
        self.custom_properties = custom_properties


class TestMigrateWorkflowModelCustomProperties(WorkflowModelCustomProperties):
    """Test migrate workflow model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required. Known values are:
     "SampleWorkflow", "EnableReplicationWorkflow", "StopReplicationWorkflow",
     "BuildContainerImageWorkflow", "MigrateWorkflow", "TestMigrateWorkflow",
     "TestMigrateCleanupWorkflow", "CompleteMigrationWorkflow", and "DisableReplicationWorkflow".
    :vartype instance_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowType
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details: dict[str, str]
    :ivar deployed_resources_properties:
    :vartype deployed_resources_properties:
     ~azure.mgmt.migrationmodernization.models.TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "deployed_resources_properties": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {"key": "affectedObjectDetails", "type": "{str}"},
        "deployed_resources_properties": {
            "key": "deployedResourcesProperties",
            "type": "TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties",
        },
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "TestMigrateWorkflowModelCustomProperties"
        self.deployed_resources_properties = None


class TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties(
    DeployedResourcesProperties
):  # pylint: disable=name-too-long
    """TestMigrateWorkflowModelCustomPropertiesDeployedResourcesProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets or sets the ID.
    :vartype id: str
    :ivar deployed_resource_id: Gets or sets the deployed resource id.
    :vartype deployed_resource_id: str
    :ivar display_name: Gets or sets the name of deployed resources.
    :vartype display_name: str
    :ivar context: Gets or sets the context of deployed resources.
    :vartype context: str
    :ivar status: Gets or sets the status of deployed resources.
    :vartype status: str
    :ivar type: Gets or sets the type of deployed resources.
    :vartype type: str
    :ivar deployment_timestamp: Gets or sets the deployment timestamp.
    :vartype deployment_timestamp: ~datetime.datetime
    :ivar is_clean_up_done: Gets or sets a value indicating whether resources are cleaned up from
     target.
    :vartype is_clean_up_done: bool
    :ivar is_test_migration: Gets or sets a value indicating whether scenario is test migration.
    :vartype is_test_migration: bool
    """


class UpdateModernizeProjectModel(_serialization.Model):
    """Update ModernizeProject model.

    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    :ivar identity:
    :vartype identity: ~azure.mgmt.migrationmodernization.models.ResourceIdentity
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "identity": {"key": "identity", "type": "ResourceIdentity"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        identity: Optional["_models.ResourceIdentity"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        :keyword identity:
        :paramtype identity: ~azure.mgmt.migrationmodernization.models.ResourceIdentity
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.identity = identity


class UserAssignedIdentity(_serialization.Model):
    """UserAssignedIdentity.

    :ivar principal_id:
    :vartype principal_id: str
    :ivar client_id:
    :vartype client_id: str
    """

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
    }

    def __init__(self, *, principal_id: Optional[str] = None, client_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword principal_id:
        :paramtype principal_id: str
        :keyword client_id:
        :paramtype client_id: str
        """
        super().__init__(**kwargs)
        self.principal_id = principal_id
        self.client_id = client_id


class VMwareMigrateAgentModelCustomProperties(MigrateAgentModelCustomProperties):
    """VMware MigrateAgent model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required.
    :vartype instance_type: str
    :ivar vmware_site_id: Gets or sets the master Site Id of the Migrate Agent.
    :vartype vmware_site_id: str
    :ivar fabric_friendly_name: Gets or sets the friendly name of the,of the MigrateAgent fabric.
    :vartype fabric_friendly_name: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "vmware_site_id": {"key": "vmwareSiteId", "type": "str"},
        "fabric_friendly_name": {"key": "fabricFriendlyName", "type": "str"},
    }

    def __init__(
        self, *, vmware_site_id: Optional[str] = None, fabric_friendly_name: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword vmware_site_id: Gets or sets the master Site Id of the Migrate Agent.
        :paramtype vmware_site_id: str
        :keyword fabric_friendly_name: Gets or sets the friendly name of the,of the MigrateAgent
         fabric.
        :paramtype fabric_friendly_name: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareMigrateAgentModelCustomProperties"
        self.vmware_site_id = vmware_site_id
        self.fabric_friendly_name = fabric_friendly_name


class WebApplicationConfiguration(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Class for web application configurations.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar name: Gets or sets the configuration name.
    :vartype name: str
    :ivar file_path: Gets or sets the configuration file path.
    :vartype file_path: str
    :ivar local_file_path: Gets or sets the configuration local file path.
    :vartype local_file_path: str
    :ivar target_file_path: Gets or sets the configuration target file path.
    :vartype target_file_path: str
    :ivar section: Gets or sets the configuration section in the file.
    :vartype section: str
    :ivar type: Gets or sets the configuration type. Known values are: "IISConnectionString",
     "IISAuthentication", and "ApacheTomcatContextResource".
    :vartype type: str or ~azure.mgmt.migrationmodernization.models.ConfigurationType
    :ivar is_deployment_time_editable: Gets or sets a value indicating whether the configuration is
     edited or not by the user.
    :vartype is_deployment_time_editable: bool
    :ivar value: Gets or sets the configuration value.
    :vartype value: str
    :ivar identifier: Gets or sets the identifier for the configuration.
    :vartype identifier: str
    :ivar secret_store_details:
    :vartype secret_store_details: ~azure.mgmt.migrationmodernization.models.SecretStoreDetails
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "file_path": {"key": "filePath", "type": "str"},
        "local_file_path": {"key": "localFilePath", "type": "str"},
        "target_file_path": {"key": "targetFilePath", "type": "str"},
        "section": {"key": "section", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "is_deployment_time_editable": {"key": "isDeploymentTimeEditable", "type": "bool"},
        "value": {"key": "value", "type": "str"},
        "identifier": {"key": "identifier", "type": "str"},
        "secret_store_details": {"key": "secretStoreDetails", "type": "SecretStoreDetails"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        file_path: Optional[str] = None,
        local_file_path: Optional[str] = None,
        target_file_path: Optional[str] = None,
        section: Optional[str] = None,
        type: Optional[Union[str, "_models.ConfigurationType"]] = None,
        is_deployment_time_editable: Optional[bool] = None,
        value: Optional[str] = None,
        identifier: Optional[str] = None,
        secret_store_details: Optional["_models.SecretStoreDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the configuration name.
        :paramtype name: str
        :keyword file_path: Gets or sets the configuration file path.
        :paramtype file_path: str
        :keyword local_file_path: Gets or sets the configuration local file path.
        :paramtype local_file_path: str
        :keyword target_file_path: Gets or sets the configuration target file path.
        :paramtype target_file_path: str
        :keyword section: Gets or sets the configuration section in the file.
        :paramtype section: str
        :keyword type: Gets or sets the configuration type. Known values are: "IISConnectionString",
         "IISAuthentication", and "ApacheTomcatContextResource".
        :paramtype type: str or ~azure.mgmt.migrationmodernization.models.ConfigurationType
        :keyword is_deployment_time_editable: Gets or sets a value indicating whether the configuration
         is edited or not by the user.
        :paramtype is_deployment_time_editable: bool
        :keyword value: Gets or sets the configuration value.
        :paramtype value: str
        :keyword identifier: Gets or sets the identifier for the configuration.
        :paramtype identifier: str
        :keyword secret_store_details:
        :paramtype secret_store_details: ~azure.mgmt.migrationmodernization.models.SecretStoreDetails
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = name
        self.file_path = file_path
        self.local_file_path = local_file_path
        self.target_file_path = target_file_path
        self.section = section
        self.type = type
        self.is_deployment_time_editable = is_deployment_time_editable
        self.value = value
        self.identifier = identifier
        self.secret_store_details = secret_store_details


class WebApplicationDirectory(_serialization.Model):
    """WebApplication directory structure.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the unique id corresponding to the application directory.
    :vartype id: str
    :ivar is_editable: Gets or sets a value indicating whether the directory object is editable.
     True when the directory is added as an optional directory, false when discovery is done
     manually.
    :vartype is_editable: bool
    :ivar source_paths: Gets or sets the paths of the directory on the source machine.
    :vartype source_paths: list[str]
    :ivar source_size: Gets or sets the size of the directory on the source machine.
    :vartype source_size: str
    :ivar storage_profile: Storage profile for the directory on the target container.
    :vartype storage_profile: ~azure.mgmt.migrationmodernization.models.TargetStorageProfile
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "is_editable": {"key": "isEditable", "type": "bool"},
        "source_paths": {"key": "sourcePaths", "type": "[str]"},
        "source_size": {"key": "sourceSize", "type": "str"},
        "storage_profile": {"key": "storageProfile", "type": "TargetStorageProfile"},
    }

    def __init__(
        self,
        *,
        is_editable: Optional[bool] = None,
        source_paths: Optional[List[str]] = None,
        source_size: Optional[str] = None,
        storage_profile: Optional["_models.TargetStorageProfile"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword is_editable: Gets or sets a value indicating whether the directory object is editable.
         True when the directory is added as an optional directory, false when discovery is done
         manually.
        :paramtype is_editable: bool
        :keyword source_paths: Gets or sets the paths of the directory on the source machine.
        :paramtype source_paths: list[str]
        :keyword source_size: Gets or sets the size of the directory on the source machine.
        :paramtype source_size: str
        :keyword storage_profile: Storage profile for the directory on the target container.
        :paramtype storage_profile: ~azure.mgmt.migrationmodernization.models.TargetStorageProfile
        """
        super().__init__(**kwargs)
        self.id = None
        self.is_editable = is_editable
        self.source_paths = source_paths
        self.source_size = source_size
        self.storage_profile = storage_profile


class WebApplicationFramework(_serialization.Model):
    """Framework specific data for a web application.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Gets the ID.
    :vartype id: str
    :ivar name: Gets or sets Name of the framework.
    :vartype name: str
    :ivar version: Gets or sets Version of the framework.
    :vartype version: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, version: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: Gets or sets Name of the framework.
        :paramtype name: str
        :keyword version: Gets or sets Version of the framework.
        :paramtype version: str
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = name
        self.version = version


class WorkflowModel(_serialization.Model):
    """Workflow model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: Workflow model properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.WorkflowModelProperties
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data:
    :vartype system_data: ~azure.mgmt.migrationmodernization.models.WorkflowModelSystemData
    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "WorkflowModelProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "WorkflowModelSystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.WorkflowModelProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Workflow model properties.
        :paramtype properties: ~azure.mgmt.migrationmodernization.models.WorkflowModelProperties
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.tags = tags


class WorkflowModelCollection(_serialization.Model):
    """Workflow model collection.

    :ivar value: Gets or sets the list of workflows.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.WorkflowModel]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[WorkflowModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.WorkflowModel"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of workflows.
        :paramtype value: list[~azure.mgmt.migrationmodernization.models.WorkflowModel]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WorkflowModelProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Workflow model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Gets or sets the friendly display name.
    :vartype display_name: str
    :ivar state: Gets or sets the workflow state. Known values are: "Pending", "Started",
     "Cancelling", "Succeeded", "Failed", "Cancelled", "CompletedWithInformation",
     "CompletedWithWarnings", and "CompletedWithErrors".
    :vartype state: str or ~azure.mgmt.migrationmodernization.models.WorkflowState
    :ivar start_time: Gets or sets the start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets the end time.
    :vartype end_time: ~datetime.datetime
    :ivar object_id: Gets or sets the affected object Id.
    :vartype object_id: str
    :ivar object_name: Gets or sets the affected object name.
    :vartype object_name: str
    :ivar object_internal_id: Gets or sets the affected object internal Id.
    :vartype object_internal_id: str
    :ivar object_internal_name: Gets or sets the affected object internal name.
    :vartype object_internal_name: str
    :ivar object_type: Gets or sets the object type. Known values are: "ModernizeProject",
     "MigrateAgent", "WorkloadInstance", "WorkloadDeployment", and "ReplicationPostAction".
    :vartype object_type: str or ~azure.mgmt.migrationmodernization.models.WorkflowObjectType
    :ivar workload_instance_provider_id: Gets or sets the workload instance provider.
    :vartype workload_instance_provider_id: str
    :ivar workload_deployment_provider_id: Gets or sets the workload deployment provider.
    :vartype workload_deployment_provider_id: str
    :ivar allowed_actions: Gets or sets the list of allowed actions on the workflow.
    :vartype allowed_actions: list[str]
    :ivar activity_id: Gets or sets the workflow activity id.
    :vartype activity_id: str
    :ivar tasks: Gets or sets the list of tasks.
    :vartype tasks: list[~azure.mgmt.migrationmodernization.models.TaskModel]
    :ivar errors: Gets or sets the list of errors.
    :vartype errors: list[~azure.mgmt.migrationmodernization.models.ErrorModel]
    :ivar custom_properties: Workflow model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.migrationmodernization.models.WorkflowModelCustomProperties
    """

    _validation = {
        "display_name": {"readonly": True},
        "state": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
        "object_id": {"readonly": True},
        "object_name": {"readonly": True},
        "object_internal_id": {"readonly": True},
        "object_internal_name": {"readonly": True},
        "object_type": {"readonly": True},
        "workload_instance_provider_id": {"readonly": True},
        "workload_deployment_provider_id": {"readonly": True},
        "allowed_actions": {"readonly": True},
        "activity_id": {"readonly": True},
        "tasks": {"readonly": True},
        "errors": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "object_id": {"key": "objectId", "type": "str"},
        "object_name": {"key": "objectName", "type": "str"},
        "object_internal_id": {"key": "objectInternalId", "type": "str"},
        "object_internal_name": {"key": "objectInternalName", "type": "str"},
        "object_type": {"key": "objectType", "type": "str"},
        "workload_instance_provider_id": {"key": "workloadInstanceProviderId", "type": "str"},
        "workload_deployment_provider_id": {"key": "workloadDeploymentProviderId", "type": "str"},
        "allowed_actions": {"key": "allowedActions", "type": "[str]"},
        "activity_id": {"key": "activityId", "type": "str"},
        "tasks": {"key": "tasks", "type": "[TaskModel]"},
        "errors": {"key": "errors", "type": "[ErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "WorkflowModelCustomProperties"},
    }

    def __init__(
        self, *, custom_properties: Optional["_models.WorkflowModelCustomProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword custom_properties: Workflow model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.migrationmodernization.models.WorkflowModelCustomProperties
        """
        super().__init__(**kwargs)
        self.display_name = None
        self.state = None
        self.start_time = None
        self.end_time = None
        self.object_id = None
        self.object_name = None
        self.object_internal_id = None
        self.object_internal_name = None
        self.object_type = None
        self.workload_instance_provider_id = None
        self.workload_deployment_provider_id = None
        self.allowed_actions = None
        self.activity_id = None
        self.tasks = None
        self.errors = None
        self.custom_properties = custom_properties


class WorkflowModelSystemData(SystemDataModel):
    """WorkflowModelSystemData.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """


class WorkloadDeploymentModel(_serialization.Model):
    """Workload deployment model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: Workload deployment model properties.
    :vartype properties:
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelProperties
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data:
    :vartype system_data:
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelSystemData
    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "WorkloadDeploymentModelProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "WorkloadDeploymentModelSystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.WorkloadDeploymentModelProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Workload deployment model properties.
        :paramtype properties:
         ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelProperties
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.tags = tags


class WorkloadDeploymentModelCollection(_serialization.Model):
    """Workload deployment model collection.

    :ivar value: Gets or sets the list of workload deployments.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModel]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[WorkloadDeploymentModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.WorkloadDeploymentModel"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of workload deployments.
        :paramtype value: list[~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModel]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WorkloadDeploymentModelProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Workload deployment model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Gets or sets the provisioning state of the workload deployment. Known
     values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or ~azure.mgmt.migrationmodernization.models.ProvisioningState
    :ivar status: Gets or sets the workload deployment status. Known values are: "None",
     "InitialReplication", "ReplicationFailed", "ImageBuildPending", "ImageBuildInProgress",
     "ImageBuildFailed", "TestMigrating", "CleanUpPending", "CleanUpInProgress", "ReadyToMigrate",
     "Migrating", "Migrated", and "MigrationFailed".
    :vartype status: str or ~azure.mgmt.migrationmodernization.models.WorkloadStatus
    :ivar status_description: Gets or sets the workload deployment status description.
    :vartype status_description: str
    :ivar test_migration_status: Gets or sets the test migrate state. Known values are: "None",
     "ImageBuildPending", "ImageBuildInProgress", "ImageBuildFailed", "ReadyToTestMigrate",
     "TestMigrationInProgress", "TestMigrated", "Failed", "CleanupInProgress", and "CleanedUp".
    :vartype test_migration_status: str or
     ~azure.mgmt.migrationmodernization.models.ClientFacingTestMigrateStatus
    :ivar test_migration_status_description: Gets or sets the Test migrate state description.
    :vartype test_migration_status_description: str
    :ivar migration_status: Gets or sets the migrate state. Known values are: "None",
     "ImageBuildPending", "ImageBuildInProgress", "ImageBuildFailed", "ReadyToTestMigrate",
     "ReadyToMigrate", "TestMigrating", "TestMigrated", "TestMigrateCleanupInProgress", "Migrating",
     "Migrated", and "Failed".
    :vartype migration_status: str or
     ~azure.mgmt.migrationmodernization.models.ClientFacingMigrateStatus
    :ivar migration_status_description: Gets or sets the migrate state description.
    :vartype migration_status_description: str
    :ivar display_name: Gets or sets the display name.
    :vartype display_name: str
    :ivar target_platform: Gets or sets the deployment target platform. Known values are:
     "AzureKubernetesService", "AzureAppServiceContainer", and "AzureAppServiceNative".
    :vartype target_platform: str or
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentTarget
    :ivar workload_instance_properties: Workload instance model properties.
    :vartype workload_instance_properties:
     ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelProperties
    :ivar correlation_id: Gets or sets the workload deployment correlation Id.
    :vartype correlation_id: str
    :ivar last_successful_migrate_time: Gets or sets the Last successful unplanned migrate time.
    :vartype last_successful_migrate_time: ~datetime.datetime
    :ivar last_successful_test_migrate_time: Gets or sets the Last successful test migrate time.
    :vartype last_successful_test_migrate_time: ~datetime.datetime
    :ivar current_job:
    :vartype current_job:
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelPropertiesCurrentJob
    :ivar allowed_operations: Gets or sets the allowed scenarios on the workload deployment.
    :vartype allowed_operations: list[str or
     ~azure.mgmt.migrationmodernization.models.WorkloadScenario]
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors: list[~azure.mgmt.migrationmodernization.models.HealthErrorModel]
    :ivar custom_properties: Workload deployment model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelCustomProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
        "status_description": {"readonly": True},
        "test_migration_status": {"readonly": True},
        "test_migration_status_description": {"readonly": True},
        "migration_status": {"readonly": True},
        "migration_status_description": {"readonly": True},
        "correlation_id": {"readonly": True},
        "last_successful_migrate_time": {"readonly": True},
        "last_successful_test_migrate_time": {"readonly": True},
        "current_job": {"readonly": True},
        "allowed_operations": {"readonly": True},
        "health_errors": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "status_description": {"key": "statusDescription", "type": "str"},
        "test_migration_status": {"key": "testMigrationStatus", "type": "str"},
        "test_migration_status_description": {"key": "testMigrationStatusDescription", "type": "str"},
        "migration_status": {"key": "migrationStatus", "type": "str"},
        "migration_status_description": {"key": "migrationStatusDescription", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "target_platform": {"key": "targetPlatform", "type": "str"},
        "workload_instance_properties": {
            "key": "workloadInstanceProperties",
            "type": "WorkloadInstanceModelProperties",
        },
        "correlation_id": {"key": "correlationId", "type": "str"},
        "last_successful_migrate_time": {"key": "lastSuccessfulMigrateTime", "type": "iso-8601"},
        "last_successful_test_migrate_time": {"key": "lastSuccessfulTestMigrateTime", "type": "iso-8601"},
        "current_job": {"key": "currentJob", "type": "WorkloadDeploymentModelPropertiesCurrentJob"},
        "allowed_operations": {"key": "allowedOperations", "type": "[str]"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "WorkloadDeploymentModelCustomProperties"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        target_platform: Optional[Union[str, "_models.WorkloadDeploymentTarget"]] = None,
        workload_instance_properties: Optional["_models.WorkloadInstanceModelProperties"] = None,
        custom_properties: Optional["_models.WorkloadDeploymentModelCustomProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: Gets or sets the display name.
        :paramtype display_name: str
        :keyword target_platform: Gets or sets the deployment target platform. Known values are:
         "AzureKubernetesService", "AzureAppServiceContainer", and "AzureAppServiceNative".
        :paramtype target_platform: str or
         ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentTarget
        :keyword workload_instance_properties: Workload instance model properties.
        :paramtype workload_instance_properties:
         ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelProperties
        :keyword custom_properties: Workload deployment model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.migrationmodernization.models.WorkloadDeploymentModelCustomProperties
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.status = None
        self.status_description = None
        self.test_migration_status = None
        self.test_migration_status_description = None
        self.migration_status = None
        self.migration_status_description = None
        self.display_name = display_name
        self.target_platform = target_platform
        self.workload_instance_properties = workload_instance_properties
        self.correlation_id = None
        self.last_successful_migrate_time = None
        self.last_successful_test_migrate_time = None
        self.current_job = None
        self.allowed_operations = None
        self.health_errors = None
        self.custom_properties = custom_properties


class WorkloadJobProperties(_serialization.Model):
    """Workload job properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar scenario_name: Gets or sets workload scenario name.
    :vartype scenario_name: str
    :ivar id: Gets or sets workflow Id.
    :vartype id: str
    :ivar name: Gets or sets workflow name.
    :vartype name: str
    :ivar display_name: Gets or sets the workflow friendly display name.
    :vartype display_name: str
    :ivar state: Gets or sets workflow state.
    :vartype state: str
    :ivar start_time: Gets or sets start time of the workflow.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets end time of the workflow.
    :vartype end_time: ~datetime.datetime
    """

    _validation = {
        "scenario_name": {"readonly": True},
        "id": {"readonly": True},
        "name": {"readonly": True},
        "display_name": {"readonly": True},
        "state": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
    }

    _attribute_map = {
        "scenario_name": {"key": "scenarioName", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.scenario_name = None
        self.id = None
        self.name = None
        self.display_name = None
        self.state = None
        self.start_time = None
        self.end_time = None


class WorkloadDeploymentModelPropertiesCurrentJob(WorkloadJobProperties):  # pylint: disable=name-too-long
    """WorkloadDeploymentModelPropertiesCurrentJob.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar scenario_name: Gets or sets workload scenario name.
    :vartype scenario_name: str
    :ivar id: Gets or sets workflow Id.
    :vartype id: str
    :ivar name: Gets or sets workflow name.
    :vartype name: str
    :ivar display_name: Gets or sets the workflow friendly display name.
    :vartype display_name: str
    :ivar state: Gets or sets workflow state.
    :vartype state: str
    :ivar start_time: Gets or sets start time of the workflow.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets end time of the workflow.
    :vartype end_time: ~datetime.datetime
    """


class WorkloadDeploymentModelSystemData(SystemDataModel):
    """WorkloadDeploymentModelSystemData.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """


class WorkloadInstanceModel(_serialization.Model):
    """Workload instance model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: Workload instance model properties.
    :vartype properties: ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelProperties
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data:
    :vartype system_data: ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelSystemData
    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "WorkloadInstanceModelProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "WorkloadInstanceModelSystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.WorkloadInstanceModelProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Workload instance model properties.
        :paramtype properties:
         ~azure.mgmt.migrationmodernization.models.WorkloadInstanceModelProperties
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.tags = tags


class WorkloadInstanceModelCollection(_serialization.Model):
    """Workload instance model collection.

    :ivar value: Gets or sets the list of workload instances.
    :vartype value: list[~azure.mgmt.migrationmodernization.models.WorkloadInstanceModel]
    :ivar next_link: Gets or sets the value of next link.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[WorkloadInstanceModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.WorkloadInstanceModel"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets or sets the list of workload instances.
        :paramtype value: list[~azure.mgmt.migrationmodernization.models.WorkloadInstanceModel]
        :keyword next_link: Gets or sets the value of next link.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WorkloadInstanceModelPropertiesCurrentJob(WorkloadJobProperties):  # pylint: disable=name-too-long
    """WorkloadInstanceModelPropertiesCurrentJob.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar scenario_name: Gets or sets workload scenario name.
    :vartype scenario_name: str
    :ivar id: Gets or sets workflow Id.
    :vartype id: str
    :ivar name: Gets or sets workflow name.
    :vartype name: str
    :ivar display_name: Gets or sets the workflow friendly display name.
    :vartype display_name: str
    :ivar state: Gets or sets workflow state.
    :vartype state: str
    :ivar start_time: Gets or sets start time of the workflow.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets end time of the workflow.
    :vartype end_time: ~datetime.datetime
    """


class WorkloadInstanceModelSystemData(SystemDataModel):
    """WorkloadInstanceModelSystemData.

    :ivar created_by: Gets or sets identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: Gets or sets the type of identity that created the resource: user,
     application,
     managedIdentity.
    :vartype created_by_type: str
    :ivar created_at: Gets or sets the timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: Gets or sets the identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Gets or sets the type of identity that last modified the resource:
     user, application,
     managedIdentity.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Gets or sets the timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """
