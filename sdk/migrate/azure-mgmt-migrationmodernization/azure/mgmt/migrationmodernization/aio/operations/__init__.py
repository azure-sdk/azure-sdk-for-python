# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._operations import Operations
from ._deployed_resource_operations import DeployedResourceOperations
from ._migrate_agent_operations import MigrateAgentOperations
from ._migrate_agent_operation_status_operations import MigrateAgentOperationStatusOperations
from ._modernize_project_operations import ModernizeProjectOperations
from ._modernize_project_statistics_operations import ModernizeProjectStatisticsOperations
from ._modernize_project_operation_status_operations import ModernizeProjectOperationStatusOperations
from ._workflow_operations import WorkflowOperations
from ._workflow_operation_status_operations import WorkflowOperationStatusOperations
from ._workload_deployment_operations import WorkloadDeploymentOperations
from ._workload_deployment_operation_status_operations import WorkloadDeploymentOperationStatusOperations
from ._workload_instance_operations import WorkloadInstanceOperations
from ._workload_instance_operation_status_operations import WorkloadInstanceOperationStatusOperations

from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "DeployedResourceOperations",
    "MigrateAgentOperations",
    "MigrateAgentOperationStatusOperations",
    "ModernizeProjectOperations",
    "ModernizeProjectStatisticsOperations",
    "ModernizeProjectOperationStatusOperations",
    "WorkflowOperations",
    "WorkflowOperationStatusOperations",
    "WorkloadDeploymentOperations",
    "WorkloadDeploymentOperationStatusOperations",
    "WorkloadInstanceOperations",
    "WorkloadInstanceOperationStatusOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
