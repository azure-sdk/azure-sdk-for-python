# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.migrationassessment import AzureMigrateAssessmentService

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-migrationassessment
# USAGE
    python business_case_operations_create_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = AzureMigrateAssessmentService(
        credential=DefaultAzureCredential(),
        subscription_id="ADC896AD-6A38-454E-9A62-AFC618F5F4BC",
    )

    response = client.business_case_operations.begin_create(
        resource_group_name="rgopenapi",
        project_name="multipleto8617project",
        business_case_name="sample-business-case",
        resource={
            "properties": {
                "settings": {
                    "azureArcSettings": {
                        "azureArcState": "Enabled",
                        "laborCostPercentage": 70,
                        "managementSettings": {"monitoringSettings": {"alertRulesCount": 10, "logsVolumeInGB": 0.5}},
                    },
                    "azureSettings": {
                        "avsLaborCostPercentage": 0,
                        "businessCaseType": "OptimizeForCost",
                        "comfortFactor": 29,
                        "currency": "USD",
                        "discountPercentage": 83,
                        "iaasLaborCostPercentage": 94,
                        "infrastructureGrowthRate": 83,
                        "networkCostPercentage": 40,
                        "paasLaborCostPercentage": 47,
                        "perYearMigrationCompletionPercentage": {"Year0": 20, "Year1": 30, "Year2": 60, "Year3": 90},
                        "performanceDataEndTime": "2023-11-08T07:10:07.764Z",
                        "performanceDataStartTime": "2023-11-08T07:10:07.764Z",
                        "performanceUtilizationPercentile": 4,
                        "savingsOption": "RI3Year",
                        "targetLocation": "WestUs2",
                        "wacc": 79,
                        "workloadDiscoverySource": "Appliance",
                    },
                    "onPremiseSettings": {
                        "computeSettings": {
                            "hyperthreadCoreToMemoryRatio": 12,
                            "price": 16,
                            "rhelLinuxServerLicensing": {"licenseCost": 9},
                            "sqlServerLicensing": [
                                {"licenseCost": 27, "softwareAssuranceCost": 16, "version": "Enterprise"}
                            ],
                            "suseLinuxServerLicensing": {"licenseCost": 9},
                            "virtualizationSoftwareSettings": {"vMwareCloudFoundationLicenseCost": 7},
                            "windowsServerLicensing": {
                                "licenseCost": 9,
                                "licensesPerCore": 11,
                                "softwareAssuranceCost": 1,
                            },
                        },
                        "facilitySettings": {"facilitiesCostPerKwh": 28},
                        "laborSettings": {
                            "hourlyAdminCost": 25,
                            "physicalServersPerAdmin": 6,
                            "virtualMachinesPerAdmin": 24,
                        },
                        "managementSettings": {
                            "hypervVirtualizationManagementSettings": {
                                "licenseAndSupportList": [{"licenseCost": 4, "licenseType": "Standard"}],
                                "numberOfPhysicalCoresPerLicense": 2,
                                "softwareAssuranceCost": 11,
                            },
                            "otherManagementCostsSettings": {
                                "dataProtectionCostPerServerPerYear": 18,
                                "monitoringCostPerServerPerYear": 10,
                                "patchingCostPerServerPerYear": 18,
                            },
                            "thirdPartyManagementSettings": {"licenseCost": 23, "supportCost": 9},
                        },
                        "networkSettings": {"hardwareSoftwareCostPercentage": 50, "maintenanceCostPercentage": 48},
                        "securitySettings": {
                            "serverSecurityCostPerServerPerYear": 14,
                            "sqlServerSecurityCostPerServerPerYear": 7,
                        },
                        "storageSettings": {"costPerGbPerMonth": 22, "maintainanceCostPercentageToAcquisitionCost": 1},
                    },
                },
                "state": "InProgress",
            }
        },
    ).result()
    print(response)


# x-ms-original-file: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/preview/2024-01-01-preview/examples/BusinessCaseOperations_Create_MaximumSet_Gen.json
if __name__ == "__main__":
    main()
