# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Literal, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_discriminator, rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Element(_model_base.Model):
    """The base definition for all elements contained inside a resource.
    Based on `FHIR Element <https://www.hl7.org/fhir/R4/element.html>`_.

    :ivar id: Unique id for inter-element referencing.
    :vartype id: str
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    """

    id: Optional[str] = rest_field()
    """Unique id for inter-element referencing."""
    extension: Optional[List["_models.Extension"]] = rest_field()
    """Additional Content defined by implementations."""

    @overload
    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        extension: Optional[List["_models.Extension"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Annotation(Element):
    """A text note which also  contains information about who made the statement and when
    Based on `FHIR Annotation <https://www.hl7.org/fhir/R4/datatypes.html#Annotation>`_.

    All required parameters must be populated in order to send to server.

    :ivar id: Unique id for inter-element referencing.
    :vartype id: str
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar author_string: Individual responsible for the annotation.
    :vartype author_string: str
    :ivar time: When the annotation was made.
    :vartype time: str
    :ivar text: The annotation - text content (as markdown). Required.
    :vartype text: str
    """

    author_string: Optional[str] = rest_field(name="authorString")
    """Individual responsible for the annotation."""
    time: Optional[str] = rest_field()
    """When the annotation was made."""
    text: str = rest_field()
    """The annotation - text content (as markdown). Required."""

    @overload
    def __init__(
        self,
        *,
        text: str,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        extension: Optional[List["_models.Extension"]] = None,
        author_string: Optional[str] = None,
        time: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class CodeableConcept(Element):
    """Concept - reference to a terminology or just text
    Based on `FHIR CodeableConcept <https://www.hl7.org/fhir/R4/datatypes.html#CodeableConcept>`_.

    :ivar coding: Code defined by a terminology system.
    :vartype coding: list[~azure.healthinsights.patienttimeline.models.Coding]
    :ivar text: Plain text representation of the concept.
    :vartype text: str
    """

    coding: Optional[List["_models.Coding"]] = rest_field()
    """Code defined by a terminology system."""
    text: Optional[str] = rest_field()
    """Plain text representation of the concept."""

    @overload
    def __init__(
        self,
        *,
        coding: Optional[List["_models.Coding"]] = None,
        text: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Coding(Element):
    """A Coding is a representation of a defined concept using a symbol from a defined "code system".
    Based on `FHIR Coding <https://www.hl7.org/fhir/R4/datatypes.html#Coding>`_.

    :ivar id: Unique id for inter-element referencing.
    :vartype id: str
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar system: Identity of the terminology system.
    :vartype system: str
    :ivar version: Version of the system - if relevant.
    :vartype version: str
    :ivar code: Symbol in syntax defined by the system.
    :vartype code: str
    :ivar display: Representation defined by the system.
    :vartype display: str
    """

    system: Optional[str] = rest_field()
    """Identity of the terminology system."""
    version: Optional[str] = rest_field()
    """Version of the system - if relevant."""
    code: Optional[str] = rest_field()
    """Symbol in syntax defined by the system."""
    display: Optional[str] = rest_field()
    """Representation defined by the system."""

    @overload
    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        extension: Optional[List["_models.Extension"]] = None,
        system: Optional[str] = None,
        version: Optional[str] = None,
        code: Optional[str] = None,
        display: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Resource(_model_base.Model):
    """Resource is the ancestor of DomainResource from which most resources are derived. Bundle,
    Parameters, and Binary extend Resource directly.
    Based on [FHIR Resource](https://www.hl7.org/fhir/r4/resource.html.

    All required parameters must be populated in order to send to server.

    :ivar resource_type: The type of resource. Required.
    :vartype resource_type: str
    :ivar id: Resource Id.
    :vartype id: str
    :ivar meta: Metadata about the resource.
    :vartype meta: ~azure.healthinsights.patienttimeline.models.Meta
    :ivar implicit_rules: A set of rules under which this content was created.
    :vartype implicit_rules: str
    :ivar language: Language of the resource content.
    :vartype language: str
    """

    resource_type: str = rest_field(name="resourceType")
    """The type of resource. Required."""
    id: Optional[str] = rest_field()
    """Resource Id."""
    meta: Optional["_models.Meta"] = rest_field()
    """Metadata about the resource."""
    implicit_rules: Optional[str] = rest_field(name="implicitRules")
    """A set of rules under which this content was created."""
    language: Optional[str] = rest_field()
    """Language of the resource content."""

    @overload
    def __init__(
        self,
        *,
        resource_type: str,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        meta: Optional["_models.Meta"] = None,
        implicit_rules: Optional[str] = None,
        language: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class DomainResource(Resource):
    """A resource with narrative, extensions, and contained resources
    Based on `FHIR DomainResource <https://www.hl7.org/fhir/domainresource.html>`_.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    Condition, Observation, ResearchStudy

    All required parameters must be populated in order to send to server.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar meta: Metadata about the resource.
    :vartype meta: ~azure.healthinsights.patienttimeline.models.Meta
    :ivar implicit_rules: A set of rules under which this content was created.
    :vartype implicit_rules: str
    :ivar language: Language of the resource content.
    :vartype language: str
    :ivar text: Text summary of the resource, for human interpretation.
    :vartype text: ~azure.healthinsights.patienttimeline.models.Narrative
    :ivar contained: Contained, inline Resources.
    :vartype contained: list[~azure.healthinsights.patienttimeline.models.Resource]
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar modifier_extension: Extensions that cannot be ignored.
    :vartype modifier_extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar resource_type: Required. Default value is None.
    :vartype resource_type: str
    """

    __mapping__: Dict[str, _model_base.Model] = {}
    text: Optional["_models.Narrative"] = rest_field()
    """Text summary of the resource, for human interpretation."""
    contained: Optional[List["_models.Resource"]] = rest_field()
    """Contained, inline Resources."""
    extension: Optional[List["_models.Extension"]] = rest_field()
    """Additional Content defined by implementations."""
    modifier_extension: Optional[List["_models.Extension"]] = rest_field(name="modifierExtension")
    """Extensions that cannot be ignored."""
    resource_type: str = rest_discriminator(name="resourceType")
    """Required. Default value is None."""

    @overload
    def __init__(
        self,
        *,
        resource_type: str,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        meta: Optional["_models.Meta"] = None,
        implicit_rules: Optional[str] = None,
        language: Optional[str] = None,
        text: Optional["_models.Narrative"] = None,
        contained: Optional[List["_models.Resource"]] = None,
        extension: Optional[List["_models.Extension"]] = None,
        modifier_extension: Optional[List["_models.Extension"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Condition(DomainResource, discriminator="Condition"):  # pylint: disable=too-many-instance-attributes
    """Detailed information about conditions, problems or diagnoses
    Based on `FHIR Condition <https://www.hl7.org/fhir/R4/condition.html>`_.

    All required parameters must be populated in order to send to server.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar meta: Metadata about the resource.
    :vartype meta: ~azure.healthinsights.patienttimeline.models.Meta
    :ivar implicit_rules: A set of rules under which this content was created.
    :vartype implicit_rules: str
    :ivar language: Language of the resource content.
    :vartype language: str
    :ivar text: Text summary of the resource, for human interpretation.
    :vartype text: ~azure.healthinsights.patienttimeline.models.Narrative
    :ivar contained: Contained, inline Resources.
    :vartype contained: list[~azure.healthinsights.patienttimeline.models.Resource]
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar modifier_extension: Extensions that cannot be ignored.
    :vartype modifier_extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar resource_type: resourceType. Required. Default value is "Condition".
    :vartype resource_type: str
    :ivar identifier: External Ids for this condition.
    :vartype identifier: list[~azure.healthinsights.patienttimeline.models.Identifier]
    :ivar clinical_status: active | recurrence | relapse | inactive | remission | resolved.
    :vartype clinical_status: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar verification_status: unconfirmed | provisional | differential | confirmed | refuted |
     entered-in-error.
    :vartype verification_status: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar category: problem-list-item | encounter-diagnosis.
    :vartype category: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar severity: Subjective severity of condition.
    :vartype severity: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar code: Identification of the condition, problem or diagnosis.
    :vartype code: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar body_site: Anatomical location, if relevant.
    :vartype body_site: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar encounter: Encounter created as part of.
    :vartype encounter: ~azure.healthinsights.patienttimeline.models.Reference
    :ivar onset_date_time: Estimated or actual date,  date-time, or age.
    :vartype onset_date_time: str
    :ivar onset_age: Estimated or actual date,  date-time, or age.
    :vartype onset_age: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar onset_period: Estimated or actual date,  date-time, or age.
    :vartype onset_period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar onset_range: Estimated or actual date,  date-time, or age.
    :vartype onset_range: ~azure.healthinsights.patienttimeline.models.Range
    :ivar onset_string: Estimated or actual date,  date-time, or age.
    :vartype onset_string: str
    :ivar abatement_date_time: When in resolution/remission.
    :vartype abatement_date_time: str
    :ivar abatement_age: When in resolution/remission.
    :vartype abatement_age: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar abatement_period: When in resolution/remission.
    :vartype abatement_period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar abatement_range: When in resolution/remission.
    :vartype abatement_range: ~azure.healthinsights.patienttimeline.models.Range
    :ivar abatement_string: When in resolution/remission.
    :vartype abatement_string: str
    :ivar recorded_date: Date record was first recorded.
    :vartype recorded_date: str
    :ivar stage: stge/grade, usually assessed formally.
    :vartype stage: list[~azure.healthinsights.patienttimeline.models.ConditionStage]
    :ivar note: Additional information about the Condition.
    :vartype note: list[~azure.healthinsights.patienttimeline.models.Annotation]
    """

    resource_type: Literal["Condition"] = rest_discriminator(name="resourceType")  # type: ignore
    """resourceType. Required. Default value is \"Condition\"."""
    identifier: Optional[List["_models.Identifier"]] = rest_field()
    """External Ids for this condition."""
    clinical_status: Optional["_models.CodeableConcept"] = rest_field(name="clinicalStatus")
    """active | recurrence | relapse | inactive | remission | resolved."""
    verification_status: Optional["_models.CodeableConcept"] = rest_field(name="verificationStatus")
    """unconfirmed | provisional | differential | confirmed | refuted | entered-in-error."""
    category: Optional[List["_models.CodeableConcept"]] = rest_field()
    """problem-list-item | encounter-diagnosis."""
    severity: Optional["_models.CodeableConcept"] = rest_field()
    """Subjective severity of condition."""
    code: Optional["_models.CodeableConcept"] = rest_field()
    """Identification of the condition, problem or diagnosis."""
    body_site: Optional[List["_models.CodeableConcept"]] = rest_field(name="bodySite")
    """Anatomical location, if relevant."""
    encounter: Optional["_models.Reference"] = rest_field()
    """Encounter created as part of."""
    onset_date_time: Optional[str] = rest_field(name="onsetDateTime")
    """Estimated or actual date,  date-time, or age."""
    onset_age: Optional["_models.Quantity"] = rest_field(name="onsetAge")
    """Estimated or actual date,  date-time, or age."""
    onset_period: Optional["_models.Period"] = rest_field(name="onsetPeriod")
    """Estimated or actual date,  date-time, or age."""
    onset_range: Optional["_models.Range"] = rest_field(name="onsetRange")
    """Estimated or actual date,  date-time, or age."""
    onset_string: Optional[str] = rest_field(name="onsetString")
    """Estimated or actual date,  date-time, or age."""
    abatement_date_time: Optional[str] = rest_field(name="abatementDateTime")
    """When in resolution/remission."""
    abatement_age: Optional["_models.Quantity"] = rest_field(name="abatementAge")
    """When in resolution/remission."""
    abatement_period: Optional["_models.Period"] = rest_field(name="abatementPeriod")
    """When in resolution/remission."""
    abatement_range: Optional["_models.Range"] = rest_field(name="abatementRange")
    """When in resolution/remission."""
    abatement_string: Optional[str] = rest_field(name="abatementString")
    """When in resolution/remission."""
    recorded_date: Optional[str] = rest_field(name="recordedDate")
    """Date record was first recorded."""
    stage: Optional[List["_models.ConditionStage"]] = rest_field()
    """stge/grade, usually assessed formally."""
    note: Optional[List["_models.Annotation"]] = rest_field()
    """Additional information about the Condition."""

    @overload
    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        meta: Optional["_models.Meta"] = None,
        implicit_rules: Optional[str] = None,
        language: Optional[str] = None,
        text: Optional["_models.Narrative"] = None,
        contained: Optional[List["_models.Resource"]] = None,
        extension: Optional[List["_models.Extension"]] = None,
        modifier_extension: Optional[List["_models.Extension"]] = None,
        identifier: Optional[List["_models.Identifier"]] = None,
        clinical_status: Optional["_models.CodeableConcept"] = None,
        verification_status: Optional["_models.CodeableConcept"] = None,
        category: Optional[List["_models.CodeableConcept"]] = None,
        severity: Optional["_models.CodeableConcept"] = None,
        code: Optional["_models.CodeableConcept"] = None,
        body_site: Optional[List["_models.CodeableConcept"]] = None,
        encounter: Optional["_models.Reference"] = None,
        onset_date_time: Optional[str] = None,
        onset_age: Optional["_models.Quantity"] = None,
        onset_period: Optional["_models.Period"] = None,
        onset_range: Optional["_models.Range"] = None,
        onset_string: Optional[str] = None,
        abatement_date_time: Optional[str] = None,
        abatement_age: Optional["_models.Quantity"] = None,
        abatement_period: Optional["_models.Period"] = None,
        abatement_range: Optional["_models.Range"] = None,
        abatement_string: Optional[str] = None,
        recorded_date: Optional[str] = None,
        stage: Optional[List["_models.ConditionStage"]] = None,
        note: Optional[List["_models.Annotation"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, resource_type="Condition", **kwargs)


class ConditionStage(_model_base.Model):
    """Stage/grade, usually assessed formally
    Based on `FHIR Condition.Stage <https://www.hl7.org/fhir/R4/condition.html>`_.

    :ivar summary: Simple summary (disease specific).
    :vartype summary: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar type: Kind of staging.
    :vartype type: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    """

    summary: Optional["_models.CodeableConcept"] = rest_field()
    """Simple summary (disease specific)."""
    type: Optional["_models.CodeableConcept"] = rest_field()
    """Kind of staging."""

    @overload
    def __init__(
        self,
        *,
        summary: Optional["_models.CodeableConcept"] = None,
        type: Optional["_models.CodeableConcept"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ContactDetail(Element):
    """Contact details (See: https://www.hl7.org/fhir/R4/metadatatypes.html#ContactDetail).

    :ivar id: Unique id for inter-element referencing.
    :vartype id: str
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar name: Name of an individual to contact.
    :vartype name: str
    :ivar telecom: Contact details for individual or organization.
    :vartype telecom: list[~azure.healthinsights.patienttimeline.models.ContactPoint]
    """

    name: Optional[str] = rest_field()
    """Name of an individual to contact."""
    telecom: Optional[List["_models.ContactPoint"]] = rest_field()
    """Contact details for individual or organization."""

    @overload
    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        extension: Optional[List["_models.Extension"]] = None,
        name: Optional[str] = None,
        telecom: Optional[List["_models.ContactPoint"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ContactPoint(_model_base.Model):
    """Details for all kinds of technology mediated contact points for a person or organization,
    including telephone, email, etc.
    See https://www.hl7.org/fhir/R4/datatypes.html#ContactPoint.

    :ivar system: phone | fax | email | pager | url | sms | other. Known values are: "phone",
     "fax", "email", "pager", "url", "sms", and "other".
    :vartype system: str or ~azure.healthinsights.patienttimeline.models.ContactPointSystem
    :ivar value: The actual contact point details.
    :vartype value: str
    :ivar use: home | work | temp | old | mobile - purpose of this contact point. Known values are:
     "home", "work", "temp", "old", and "mobile".
    :vartype use: str or ~azure.healthinsights.patienttimeline.models.ContactPointUse
    :ivar rank: Specify preferred order of use (1 = highest).
    :vartype rank: int
    :ivar period: Time period when the contact point was/is in use.
    :vartype period: ~azure.healthinsights.patienttimeline.models.Period
    """

    system: Optional[Union[str, "_models.ContactPointSystem"]] = rest_field()
    """phone | fax | email | pager | url | sms | other. Known values are: \"phone\", \"fax\",
     \"email\", \"pager\", \"url\", \"sms\", and \"other\"."""
    value: Optional[str] = rest_field()
    """The actual contact point details."""
    use: Optional[Union[str, "_models.ContactPointUse"]] = rest_field()
    """home | work | temp | old | mobile - purpose of this contact point. Known values are: \"home\",
     \"work\", \"temp\", \"old\", and \"mobile\"."""
    rank: Optional[int] = rest_field()
    """Specify preferred order of use (1 = highest)."""
    period: Optional["_models.Period"] = rest_field()
    """Time period when the contact point was/is in use."""

    @overload
    def __init__(
        self,
        *,
        system: Optional[Union[str, "_models.ContactPointSystem"]] = None,
        value: Optional[str] = None,
        use: Optional[Union[str, "_models.ContactPointUse"]] = None,
        rank: Optional[int] = None,
        period: Optional["_models.Period"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class DocumentAdministrativeMetadata(_model_base.Model):
    """Document administrative metadata.

    :ivar ordered_procedures: List of procedure information associated with the document.
    :vartype ordered_procedures:
     list[~azure.healthinsights.patienttimeline.models.OrderedProcedure]
    :ivar encounter_id: Reference to the encounter associated with the document.
    :vartype encounter_id: str
    """

    ordered_procedures: Optional[List["_models.OrderedProcedure"]] = rest_field(name="orderedProcedures")
    """List of procedure information associated with the document."""
    encounter_id: Optional[str] = rest_field(name="encounterId")
    """Reference to the encounter associated with the document."""

    @overload
    def __init__(
        self,
        *,
        ordered_procedures: Optional[List["_models.OrderedProcedure"]] = None,
        encounter_id: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class DocumentAuthor(_model_base.Model):
    """Document author.

    :ivar id: author id.
    :vartype id: str
    :ivar full_name: Text representation of the full name.
    :vartype full_name: str
    """

    id: Optional[str] = rest_field()
    """author id."""
    full_name: Optional[str] = rest_field(name="fullName")
    """Text representation of the full name."""

    @overload
    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        full_name: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class DocumentContent(_model_base.Model):
    """The content of the patient document.

    All required parameters must be populated in order to send to server.

    :ivar source_type: The type of the content's source.
     In case the source type is 'inline', the content is given as a string (for instance, text).
     In case the source type is 'reference', the content is given as a URI. Required. Known values
     are: "inline" and "reference".
    :vartype source_type: str or
     ~azure.healthinsights.patienttimeline.models.DocumentContentSourceType
    :ivar value: The content of the document, given either inline (as a string) or as a reference
     (URI). Required.
    :vartype value: str
    """

    source_type: Union[str, "_models.DocumentContentSourceType"] = rest_field(name="sourceType")
    """The type of the content's source.
     In case the source type is 'inline', the content is given as a string (for instance, text).
     In case the source type is 'reference', the content is given as a URI. Required. Known values
     are: \"inline\" and \"reference\"."""
    value: str = rest_field()
    """The content of the document, given either inline (as a string) or as a reference (URI).
     Required."""

    @overload
    def __init__(
        self,
        *,
        source_type: Union[str, "_models.DocumentContentSourceType"],
        value: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Encounter(_model_base.Model):
    """visit/encounter information.

    All required parameters must be populated in order to send to server.

    :ivar id: The id of the visit. Required.
    :vartype id: str
    :ivar period: Time period of the visit.
     In case of admission, use timePeriod.start to indicate the admission time and timePeriod.end
     to indicate the discharge time.
    :vartype period: ~azure.healthinsights.patienttimeline.models.TimePeriod
    :ivar class_property: The class of the encounter. Known values are: "inpatient", "ambulatory",
     "observation", "emergency", "virtual", and "healthHome".
    :vartype class_property: str or ~azure.healthinsights.patienttimeline.models.EncounterClass
    """

    id: str = rest_field()
    """The id of the visit. Required."""
    period: Optional["_models.TimePeriod"] = rest_field()
    """Time period of the visit.
     In case of admission, use timePeriod.start to indicate the admission time and timePeriod.end to
     indicate the discharge time."""
    class_property: Optional[Union[str, "_models.EncounterClass"]] = rest_field(name="class")
    """The class of the encounter. Known values are: \"inpatient\", \"ambulatory\", \"observation\",
     \"emergency\", \"virtual\", and \"healthHome\"."""

    @overload
    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        period: Optional["_models.TimePeriod"] = None,
        class_property: Optional[Union[str, "_models.EncounterClass"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Error(_model_base.Model):
    """The error object.

    All required parameters must be populated in order to send to server.

    :ivar code: One of a server-defined set of error codes. Required.
    :vartype code: str
    :ivar message: A human-readable representation of the error. Required.
    :vartype message: str
    :ivar target: The target of the error.
    :vartype target: str
    :ivar details: An array of details about specific errors that led to this reported error.
    :vartype details: list[~azure.healthinsights.patienttimeline.models.Error]
    :ivar innererror: An object containing more specific information than the current object about
     the error.
    :vartype innererror: ~azure.healthinsights.patienttimeline.models.InnerError
    """

    code: str = rest_field()
    """One of a server-defined set of error codes. Required."""
    message: str = rest_field()
    """A human-readable representation of the error. Required."""
    target: Optional[str] = rest_field()
    """The target of the error."""
    details: Optional[List["_models.Error"]] = rest_field()
    """An array of details about specific errors that led to this reported error."""
    innererror: Optional["_models.InnerError"] = rest_field()
    """An object containing more specific information than the current object about the error."""

    @overload
    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        details: Optional[List["_models.Error"]] = None,
        innererror: Optional["_models.InnerError"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Extension(Element):  # pylint: disable=too-many-instance-attributes
    """Base for all elements
    Based on `FHIR Element <https://www.hl7.org/fhir/datatypes.html#Element>`_.

    All required parameters must be populated in order to send to server.

    :ivar url: Source of the definition for the extension code - a logical name or a URL. Required.
    :vartype url: str
    :ivar value_quantity: Value as Quantity.
    :vartype value_quantity: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar value_codeable_concept: Value as CodeableConcept.
    :vartype value_codeable_concept: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar value_string: Value as string.
    :vartype value_string: str
    :ivar value_boolean: Value as boolean.
    :vartype value_boolean: bool
    :ivar value_integer: Value as integer.
    :vartype value_integer: int
    :ivar value_range: Value as Range.
    :vartype value_range: ~azure.healthinsights.patienttimeline.models.Range
    :ivar value_ratio: Value as Ratio.
    :vartype value_ratio: ~azure.healthinsights.patienttimeline.models.Ratio
    :ivar value_sampled_data: Value as SampledData.
    :vartype value_sampled_data: ~azure.healthinsights.patienttimeline.models.SampledData
    :ivar value_time: Value as time (hh:mm:ss).
    :vartype value_time: ~datetime.time
    :ivar value_date_time: Value as dateTime.
    :vartype value_date_time: str
    :ivar value_period: Value as Period.
    :vartype value_period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar value_reference: Value as reference.
    :vartype value_reference: ~azure.healthinsights.patienttimeline.models.Reference
    """

    url: str = rest_field()
    """Source of the definition for the extension code - a logical name or a URL. Required."""
    value_quantity: Optional["_models.Quantity"] = rest_field(name="valueQuantity")
    """Value as Quantity."""
    value_codeable_concept: Optional["_models.CodeableConcept"] = rest_field(name="valueCodeableConcept")
    """Value as CodeableConcept."""
    value_string: Optional[str] = rest_field(name="valueString")
    """Value as string."""
    value_boolean: Optional[bool] = rest_field(name="valueBoolean")
    """Value as boolean."""
    value_integer: Optional[int] = rest_field(name="valueInteger")
    """Value as integer."""
    value_range: Optional["_models.Range"] = rest_field(name="valueRange")
    """Value as Range."""
    value_ratio: Optional["_models.Ratio"] = rest_field(name="valueRatio")
    """Value as Ratio."""
    value_sampled_data: Optional["_models.SampledData"] = rest_field(name="valueSampledData")
    """Value as SampledData."""
    value_time: Optional[datetime.time] = rest_field(name="valueTime")
    """Value as time (hh:mm:ss)."""
    value_date_time: Optional[str] = rest_field(name="valueDateTime")
    """Value as dateTime."""
    value_period: Optional["_models.Period"] = rest_field(name="valuePeriod")
    """Value as Period."""
    value_reference: Optional["_models.Reference"] = rest_field(name="valueReference")
    """Value as reference."""

    @overload
    def __init__(
        self,
        *,
        url: str,
        value_quantity: Optional["_models.Quantity"] = None,
        value_codeable_concept: Optional["_models.CodeableConcept"] = None,
        value_string: Optional[str] = None,
        value_boolean: Optional[bool] = None,
        value_integer: Optional[int] = None,
        value_range: Optional["_models.Range"] = None,
        value_ratio: Optional["_models.Ratio"] = None,
        value_sampled_data: Optional["_models.SampledData"] = None,
        value_time: Optional[datetime.time] = None,
        value_date_time: Optional[str] = None,
        value_period: Optional["_models.Period"] = None,
        value_reference: Optional["_models.Reference"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class HealthInsightsOperationStatus(_model_base.Model):
    """Provides status details for long running operations.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The unique ID of the operation. Required.
    :vartype id: str
    :ivar status: The status of the operation. Required. Known values are: "notStarted", "running",
     "succeeded", "failed", and "canceled".
    :vartype status: str or ~azure.healthinsights.patienttimeline.models.JobStatus
    :ivar created_date_time: The date and time when the processing job was created.
    :vartype created_date_time: ~datetime.datetime
    :ivar expiration_date_time: The date and time when the processing job is set to expire.
    :vartype expiration_date_time: ~datetime.datetime
    :ivar last_update_date_time: The date and time when the processing job was last updated.
    :vartype last_update_date_time: ~datetime.datetime
    :ivar error: Error object that describes the error when status is "Failed".
    :vartype error: ~azure.healthinsights.patienttimeline.models.Error
    :ivar result: The result of the operation.
    :vartype result: ~azure.healthinsights.patienttimeline.models.PatientTimelineInferenceResult
    """

    id: str = rest_field(visibility=["read"])
    """The unique ID of the operation. Required."""
    status: Union[str, "_models.JobStatus"] = rest_field(visibility=["read"])
    """The status of the operation. Required. Known values are: \"notStarted\", \"running\",
     \"succeeded\", \"failed\", and \"canceled\"."""
    created_date_time: Optional[datetime.datetime] = rest_field(
        name="createdDateTime", visibility=["read"], format="rfc3339"
    )
    """The date and time when the processing job was created."""
    expiration_date_time: Optional[datetime.datetime] = rest_field(
        name="expirationDateTime", visibility=["read"], format="rfc3339"
    )
    """The date and time when the processing job is set to expire."""
    last_update_date_time: Optional[datetime.datetime] = rest_field(
        name="lastUpdateDateTime", visibility=["read"], format="rfc3339"
    )
    """The date and time when the processing job was last updated."""
    error: Optional["_models.Error"] = rest_field()
    """Error object that describes the error when status is \"Failed\"."""
    result: Optional["_models.PatientTimelineInferenceResult"] = rest_field()
    """The result of the operation."""

    @overload
    def __init__(
        self,
        *,
        error: Optional["_models.Error"] = None,
        result: Optional["_models.PatientTimelineInferenceResult"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Identifier(Element):
    """An identifier intended for computation
    Based on `FHIR Identifier <https://www.hl7.org/fhir/R4/identifier.html>`_.

    :ivar use: usual | official | temp | secondary | old (If known).
    :vartype use: str
    :ivar type: Description of identifier.
    :vartype type: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar system: The namespace for the identifier value.
    :vartype system: str
    :ivar value: The value that is unique.
    :vartype value: str
    :ivar period: Time period when id is/was valid for use.
    :vartype period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar assigner: Organization that issued id (may be just text).
    :vartype assigner: ~azure.healthinsights.patienttimeline.models.Reference
    """

    use: Optional[str] = rest_field()
    """usual | official | temp | secondary | old (If known)."""
    type: Optional["_models.CodeableConcept"] = rest_field()
    """Description of identifier."""
    system: Optional[str] = rest_field()
    """The namespace for the identifier value."""
    value: Optional[str] = rest_field()
    """The value that is unique."""
    period: Optional["_models.Period"] = rest_field()
    """Time period when id is/was valid for use."""
    assigner: Optional["_models.Reference"] = rest_field()
    """Organization that issued id (may be just text)."""

    @overload
    def __init__(
        self,
        *,
        use: Optional[str] = None,
        type: Optional["_models.CodeableConcept"] = None,
        system: Optional[str] = None,
        value: Optional[str] = None,
        period: Optional["_models.Period"] = None,
        assigner: Optional["_models.Reference"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class InnerError(_model_base.Model):
    """An object containing more specific information about the error. As per Microsoft One API
    guidelines -
    https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.

    :ivar code: One of a server-defined set of error codes.
    :vartype code: str
    :ivar innererror: Inner error.
    :vartype innererror: ~azure.healthinsights.patienttimeline.models.InnerError
    """

    code: Optional[str] = rest_field()
    """One of a server-defined set of error codes."""
    innererror: Optional["_models.InnerError"] = rest_field()
    """Inner error."""

    @overload
    def __init__(
        self,
        *,
        code: Optional[str] = None,
        innererror: Optional["_models.InnerError"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Meta(_model_base.Model):
    """Metadata about a resource
    Based on `FHIR Meta <https://www.hl7.org/fhir/R4/resource.html#Meta>`_.

    :ivar version_id: The version specific identifier, as it appears in the version portion of the
     URL. This value changes when the resource is created, updated, or deleted.
    :vartype version_id: str
    :ivar last_updated: When the resource last changed - e.g. when the version changed.
    :vartype last_updated: str
    :ivar source: A uri that identifies the source system of the resource. This provides a minimal
     amount of Provenance information that can be used to track or differentiate the source of
     information in the resource. The source may identify another FHIR server, document, message,
     database, etc.
    :vartype source: str
    :ivar profile: A list of profiles (references to `StructureDefinition
     <https://www.hl7.org/fhir/structuredefinition.html>`_ resources) that this resource claims to
     conform to. The URL is a reference to `StructureDefinition.url
     <https://www.hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url>`_.
    :vartype profile: list[str]
    :ivar security: Security labels applied to this resource. These tags connect specific resources
     to the overall security policy and infrastructure.
    :vartype security: list[~azure.healthinsights.patienttimeline.models.Coding]
    :ivar tag: Tags applied to this resource. Tags are intended to be used to identify and relate
     resources to process and workflow, and applications are not required to consider the tags when
     interpreting the meaning of a resource.
    :vartype tag: list[~azure.healthinsights.patienttimeline.models.Coding]
    """

    version_id: Optional[str] = rest_field(name="versionId")
    """The version specific identifier, as it appears in the version portion of the URL. This value
     changes when the resource is created, updated, or deleted."""
    last_updated: Optional[str] = rest_field(name="lastUpdated")
    """When the resource last changed - e.g. when the version changed."""
    source: Optional[str] = rest_field()
    """A uri that identifies the source system of the resource. This provides a minimal amount of
     Provenance information that can be used to track or differentiate the source of information in
     the resource. The source may identify another FHIR server, document, message, database, etc."""
    profile: Optional[List[str]] = rest_field()
    """A list of profiles (references to `StructureDefinition
     <https://www.hl7.org/fhir/structuredefinition.html>`_ resources) that this resource claims to
     conform to. The URL is a reference to `StructureDefinition.url
     <https://www.hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url>`_."""
    security: Optional[List["_models.Coding"]] = rest_field()
    """Security labels applied to this resource. These tags connect specific resources to the overall
     security policy and infrastructure."""
    tag: Optional[List["_models.Coding"]] = rest_field()
    """Tags applied to this resource. Tags are intended to be used to identify and relate resources to
     process and workflow, and applications are not required to consider the tags when interpreting
     the meaning of a resource."""

    @overload
    def __init__(
        self,
        *,
        version_id: Optional[str] = None,
        last_updated: Optional[str] = None,
        source: Optional[str] = None,
        profile: Optional[List[str]] = None,
        security: Optional[List["_models.Coding"]] = None,
        tag: Optional[List["_models.Coding"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Narrative(Element):
    """Any resource that is a `DomainResource <https://www.hl7.org/fhir/domainresource.html>`_ may
    include a human-readable narrative that contains a summary of the resource and may be used to
    represent the content of the resource to a human.
    Based on `FHIR Narrative <https://www.hl7.org/fhir/R4/narrative.html#Narrative>`_.

    All required parameters must be populated in order to send to server.

    :ivar id: Unique id for inter-element referencing.
    :vartype id: str
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar status: generated, extensions, additional, empty. Required.
    :vartype status: str
    :ivar div: xhtml. Required.
    :vartype div: str
    """

    status: str = rest_field()
    """generated, extensions, additional, empty. Required."""
    div: str = rest_field()
    """xhtml. Required."""

    @overload
    def __init__(
        self,
        *,
        status: str,
        div: str,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        extension: Optional[List["_models.Extension"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Observation(DomainResource, discriminator="Observation"):  # pylint: disable=too-many-instance-attributes
    """Detailed information about observations
    Based on `FHIR Observation <https://www.hl7.org/fhir/R4/observation.html>`_.

    All required parameters must be populated in order to send to server.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar meta: Metadata about the resource.
    :vartype meta: ~azure.healthinsights.patienttimeline.models.Meta
    :ivar implicit_rules: A set of rules under which this content was created.
    :vartype implicit_rules: str
    :ivar language: Language of the resource content.
    :vartype language: str
    :ivar text: Text summary of the resource, for human interpretation.
    :vartype text: ~azure.healthinsights.patienttimeline.models.Narrative
    :ivar contained: Contained, inline Resources.
    :vartype contained: list[~azure.healthinsights.patienttimeline.models.Resource]
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar modifier_extension: Extensions that cannot be ignored.
    :vartype modifier_extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar resource_type: resourceType. Required. Default value is "Observation".
    :vartype resource_type: str
    :ivar identifier: Business Identifier for observation.
    :vartype identifier: list[~azure.healthinsights.patienttimeline.models.Identifier]
    :ivar status: registered | preliminary | final | amended +. Required. Known values are:
     "registered", "preliminary", "final", "amended", "corrected", "cancelled", "entered-in-error",
     and "unknown".
    :vartype status: str or ~azure.healthinsights.patienttimeline.models.ObservationStatusCodeType
    :ivar category: Classification of  type of observation.
    :vartype category: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar code: Type of observation (code / type). Required.
    :vartype code: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar subject: Who and/or what the observation is about.
    :vartype subject: ~azure.healthinsights.patienttimeline.models.Reference
    :ivar encounter: Healthcare event during which this observation is made.
    :vartype encounter: ~azure.healthinsights.patienttimeline.models.Reference
    :ivar effective_date_time: Clinically relevant time/time-period for observation.
    :vartype effective_date_time: str
    :ivar effective_period: Clinically relevant time/time-period for observation.
    :vartype effective_period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar effective_instant: Clinically relevant time/time-period for observation.
    :vartype effective_instant: str
    :ivar issued: Date/Time this version was made available.
    :vartype issued: str
    :ivar value_quantity: Actual result.
    :vartype value_quantity: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar value_codeable_concept: Actual result.
    :vartype value_codeable_concept: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar value_string: Actual result.
    :vartype value_string: str
    :ivar value_boolean: Actual result.
    :vartype value_boolean: bool
    :ivar value_integer: Actual result.
    :vartype value_integer: int
    :ivar value_range: Actual result.
    :vartype value_range: ~azure.healthinsights.patienttimeline.models.Range
    :ivar value_ratio: Actual result.
    :vartype value_ratio: ~azure.healthinsights.patienttimeline.models.Ratio
    :ivar value_sampled_data: Actual result.
    :vartype value_sampled_data: ~azure.healthinsights.patienttimeline.models.SampledData
    :ivar value_time: Actual result.
    :vartype value_time: ~datetime.time
    :ivar value_date_time: Actual result.
    :vartype value_date_time: str
    :ivar value_period: Actual result.
    :vartype value_period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar data_absent_reason: Why the result is missing.
    :vartype data_absent_reason: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar interpretation: High, low, normal, etc.
    :vartype interpretation: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar note: Comments about the observation.
    :vartype note: list[~azure.healthinsights.patienttimeline.models.Annotation]
    :ivar body_site: Observed body part.
    :vartype body_site: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar method: How it was done.
    :vartype method: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar reference_range: Provides guide for interpretation.
    :vartype reference_range:
     list[~azure.healthinsights.patienttimeline.models.ObservationReferenceRange]
    :ivar has_member: Related resource that belongs to the Observation group.
    :vartype has_member: list[~azure.healthinsights.patienttimeline.models.Reference]
    :ivar derived_from: Related measurements the observation is made from.
    :vartype derived_from: list[~azure.healthinsights.patienttimeline.models.Reference]
    :ivar component: Component results.
    :vartype component: list[~azure.healthinsights.patienttimeline.models.ObservationComponent]
    """

    resource_type: Literal["Observation"] = rest_discriminator(name="resourceType")  # type: ignore
    """resourceType. Required. Default value is \"Observation\"."""
    identifier: Optional[List["_models.Identifier"]] = rest_field()
    """Business Identifier for observation."""
    status: Union[str, "_models.ObservationStatusCodeType"] = rest_field()
    """registered | preliminary | final | amended +. Required. Known values are: \"registered\",
     \"preliminary\", \"final\", \"amended\", \"corrected\", \"cancelled\", \"entered-in-error\",
     and \"unknown\"."""
    category: Optional[List["_models.CodeableConcept"]] = rest_field()
    """Classification of  type of observation."""
    code: "_models.CodeableConcept" = rest_field()
    """Type of observation (code / type). Required."""
    subject: Optional["_models.Reference"] = rest_field()
    """Who and/or what the observation is about."""
    encounter: Optional["_models.Reference"] = rest_field()
    """Healthcare event during which this observation is made."""
    effective_date_time: Optional[str] = rest_field(name="effectiveDateTime")
    """Clinically relevant time/time-period for observation."""
    effective_period: Optional["_models.Period"] = rest_field(name="effectivePeriod")
    """Clinically relevant time/time-period for observation."""
    effective_instant: Optional[str] = rest_field(name="effectiveInstant")
    """Clinically relevant time/time-period for observation."""
    issued: Optional[str] = rest_field()
    """Date/Time this version was made available."""
    value_quantity: Optional["_models.Quantity"] = rest_field(name="valueQuantity")
    """Actual result."""
    value_codeable_concept: Optional["_models.CodeableConcept"] = rest_field(name="valueCodeableConcept")
    """Actual result."""
    value_string: Optional[str] = rest_field(name="valueString")
    """Actual result."""
    value_boolean: Optional[bool] = rest_field(name="valueBoolean")
    """Actual result."""
    value_integer: Optional[int] = rest_field(name="valueInteger")
    """Actual result."""
    value_range: Optional["_models.Range"] = rest_field(name="valueRange")
    """Actual result."""
    value_ratio: Optional["_models.Ratio"] = rest_field(name="valueRatio")
    """Actual result."""
    value_sampled_data: Optional["_models.SampledData"] = rest_field(name="valueSampledData")
    """Actual result."""
    value_time: Optional[datetime.time] = rest_field(name="valueTime")
    """Actual result."""
    value_date_time: Optional[str] = rest_field(name="valueDateTime")
    """Actual result."""
    value_period: Optional["_models.Period"] = rest_field(name="valuePeriod")
    """Actual result."""
    data_absent_reason: Optional["_models.CodeableConcept"] = rest_field(name="dataAbsentReason")
    """Why the result is missing."""
    interpretation: Optional[List["_models.CodeableConcept"]] = rest_field()
    """High, low, normal, etc."""
    note: Optional[List["_models.Annotation"]] = rest_field()
    """Comments about the observation."""
    body_site: Optional["_models.CodeableConcept"] = rest_field(name="bodySite")
    """Observed body part."""
    method: Optional["_models.CodeableConcept"] = rest_field()
    """How it was done."""
    reference_range: Optional[List["_models.ObservationReferenceRange"]] = rest_field(name="referenceRange")
    """Provides guide for interpretation."""
    has_member: Optional[List["_models.Reference"]] = rest_field(name="hasMember")
    """Related resource that belongs to the Observation group."""
    derived_from: Optional[List["_models.Reference"]] = rest_field(name="derivedFrom")
    """Related measurements the observation is made from."""
    component: Optional[List["_models.ObservationComponent"]] = rest_field()
    """Component results."""

    @overload
    def __init__(
        self,
        *,
        status: Union[str, "_models.ObservationStatusCodeType"],
        code: "_models.CodeableConcept",
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        meta: Optional["_models.Meta"] = None,
        implicit_rules: Optional[str] = None,
        language: Optional[str] = None,
        text: Optional["_models.Narrative"] = None,
        contained: Optional[List["_models.Resource"]] = None,
        extension: Optional[List["_models.Extension"]] = None,
        modifier_extension: Optional[List["_models.Extension"]] = None,
        identifier: Optional[List["_models.Identifier"]] = None,
        category: Optional[List["_models.CodeableConcept"]] = None,
        subject: Optional["_models.Reference"] = None,
        encounter: Optional["_models.Reference"] = None,
        effective_date_time: Optional[str] = None,
        effective_period: Optional["_models.Period"] = None,
        effective_instant: Optional[str] = None,
        issued: Optional[str] = None,
        value_quantity: Optional["_models.Quantity"] = None,
        value_codeable_concept: Optional["_models.CodeableConcept"] = None,
        value_string: Optional[str] = None,
        value_boolean: Optional[bool] = None,
        value_integer: Optional[int] = None,
        value_range: Optional["_models.Range"] = None,
        value_ratio: Optional["_models.Ratio"] = None,
        value_sampled_data: Optional["_models.SampledData"] = None,
        value_time: Optional[datetime.time] = None,
        value_date_time: Optional[str] = None,
        value_period: Optional["_models.Period"] = None,
        data_absent_reason: Optional["_models.CodeableConcept"] = None,
        interpretation: Optional[List["_models.CodeableConcept"]] = None,
        note: Optional[List["_models.Annotation"]] = None,
        body_site: Optional["_models.CodeableConcept"] = None,
        method: Optional["_models.CodeableConcept"] = None,
        reference_range: Optional[List["_models.ObservationReferenceRange"]] = None,
        has_member: Optional[List["_models.Reference"]] = None,
        derived_from: Optional[List["_models.Reference"]] = None,
        component: Optional[List["_models.ObservationComponent"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, resource_type="Observation", **kwargs)


class ObservationComponent(Element):  # pylint: disable=too-many-instance-attributes
    """Component results
    Based on `FHIR Observation.component <https://www.hl7.org/fhir/R4/observation.html>`_.

    All required parameters must be populated in order to send to server.

    :ivar id: Unique id for inter-element referencing.
    :vartype id: str
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar code: Type of component observation (code / type). Required.
    :vartype code: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar value_quantity: Value as Quantity.
    :vartype value_quantity: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar value_codeable_concept: Value as CodeableConcept.
    :vartype value_codeable_concept: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar value_string: Value as string.
    :vartype value_string: str
    :ivar value_boolean: Value as boolean.
    :vartype value_boolean: bool
    :ivar value_integer: Value as integer.
    :vartype value_integer: int
    :ivar value_range: Value as Range.
    :vartype value_range: ~azure.healthinsights.patienttimeline.models.Range
    :ivar value_ratio: Value as Ratio.
    :vartype value_ratio: ~azure.healthinsights.patienttimeline.models.Ratio
    :ivar value_sampled_data: Value as SampledData.
    :vartype value_sampled_data: ~azure.healthinsights.patienttimeline.models.SampledData
    :ivar value_time: Value as time (hh:mm:ss).
    :vartype value_time: ~datetime.time
    :ivar value_date_time: Value as dateTime.
    :vartype value_date_time: str
    :ivar value_period: Value as Period.
    :vartype value_period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar value_reference: Value as reference.
    :vartype value_reference: ~azure.healthinsights.patienttimeline.models.Reference
    :ivar data_absent_reason: Why the component result is missing.
    :vartype data_absent_reason: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar interpretation: High, low, normal, etc.
    :vartype interpretation: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar reference_range: Provides guide for interpretation of component result.
    :vartype reference_range:
     list[~azure.healthinsights.patienttimeline.models.ObservationReferenceRange]
    """

    code: "_models.CodeableConcept" = rest_field()
    """Type of component observation (code / type). Required."""
    value_quantity: Optional["_models.Quantity"] = rest_field(name="valueQuantity")
    """Value as Quantity."""
    value_codeable_concept: Optional["_models.CodeableConcept"] = rest_field(name="valueCodeableConcept")
    """Value as CodeableConcept."""
    value_string: Optional[str] = rest_field(name="valueString")
    """Value as string."""
    value_boolean: Optional[bool] = rest_field(name="valueBoolean")
    """Value as boolean."""
    value_integer: Optional[int] = rest_field(name="valueInteger")
    """Value as integer."""
    value_range: Optional["_models.Range"] = rest_field(name="valueRange")
    """Value as Range."""
    value_ratio: Optional["_models.Ratio"] = rest_field(name="valueRatio")
    """Value as Ratio."""
    value_sampled_data: Optional["_models.SampledData"] = rest_field(name="valueSampledData")
    """Value as SampledData."""
    value_time: Optional[datetime.time] = rest_field(name="valueTime")
    """Value as time (hh:mm:ss)."""
    value_date_time: Optional[str] = rest_field(name="valueDateTime")
    """Value as dateTime."""
    value_period: Optional["_models.Period"] = rest_field(name="valuePeriod")
    """Value as Period."""
    value_reference: Optional["_models.Reference"] = rest_field(name="valueReference")
    """Value as reference."""
    data_absent_reason: Optional["_models.CodeableConcept"] = rest_field(name="dataAbsentReason")
    """Why the component result is missing."""
    interpretation: Optional[List["_models.CodeableConcept"]] = rest_field()
    """High, low, normal, etc."""
    reference_range: Optional[List["_models.ObservationReferenceRange"]] = rest_field(name="referenceRange")
    """Provides guide for interpretation of component result."""

    @overload
    def __init__(
        self,
        *,
        code: "_models.CodeableConcept",
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        extension: Optional[List["_models.Extension"]] = None,
        value_quantity: Optional["_models.Quantity"] = None,
        value_codeable_concept: Optional["_models.CodeableConcept"] = None,
        value_string: Optional[str] = None,
        value_boolean: Optional[bool] = None,
        value_integer: Optional[int] = None,
        value_range: Optional["_models.Range"] = None,
        value_ratio: Optional["_models.Ratio"] = None,
        value_sampled_data: Optional["_models.SampledData"] = None,
        value_time: Optional[datetime.time] = None,
        value_date_time: Optional[str] = None,
        value_period: Optional["_models.Period"] = None,
        value_reference: Optional["_models.Reference"] = None,
        data_absent_reason: Optional["_models.CodeableConcept"] = None,
        interpretation: Optional[List["_models.CodeableConcept"]] = None,
        reference_range: Optional[List["_models.ObservationReferenceRange"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ObservationReferenceRange(_model_base.Model):
    """Provides guide for interpretation of component result
    Based on `FHIR Observation.referenceRange <https://www.hl7.org/fhir/R4/observation.html>`_.

    :ivar low: Low Range, if relevant.
    :vartype low: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar high: High Range, if relevant.
    :vartype high: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar type: Reference range qualifier.
    :vartype type: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar applies_to: Reference range population.
    :vartype applies_to: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar age: Applicable age range, if relevant.
    :vartype age: ~azure.healthinsights.patienttimeline.models.Range
    :ivar text: Text based reference range in an observation.
    :vartype text: str
    """

    low: Optional["_models.Quantity"] = rest_field()
    """Low Range, if relevant."""
    high: Optional["_models.Quantity"] = rest_field()
    """High Range, if relevant."""
    type: Optional["_models.CodeableConcept"] = rest_field()
    """Reference range qualifier."""
    applies_to: Optional[List["_models.CodeableConcept"]] = rest_field(name="appliesTo")
    """Reference range population."""
    age: Optional["_models.Range"] = rest_field()
    """Applicable age range, if relevant."""
    text: Optional[str] = rest_field()
    """Text based reference range in an observation."""

    @overload
    def __init__(
        self,
        *,
        low: Optional["_models.Quantity"] = None,
        high: Optional["_models.Quantity"] = None,
        type: Optional["_models.CodeableConcept"] = None,
        applies_to: Optional[List["_models.CodeableConcept"]] = None,
        age: Optional["_models.Range"] = None,
        text: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class OrderedProcedure(_model_base.Model):
    """Procedure information.

    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar code: Procedure code.
    :vartype code: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar description: Procedure description.
    :vartype description: str
    """

    extension: Optional[List["_models.Extension"]] = rest_field()
    """Additional Content defined by implementations."""
    code: Optional["_models.CodeableConcept"] = rest_field()
    """Procedure code."""
    description: Optional[str] = rest_field()
    """Procedure description."""

    @overload
    def __init__(
        self,
        *,
        extension: Optional[List["_models.Extension"]] = None,
        code: Optional["_models.CodeableConcept"] = None,
        description: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientDetails(_model_base.Model):
    """Patient structured information, including demographics and known structured clinical
    information.

    :ivar sex: The patient's sex. Known values are: "female", "male", and "unspecified".
    :vartype sex: str or ~azure.healthinsights.patienttimeline.models.PatientSex
    :ivar birth_date: The patient's date of birth.
    :vartype birth_date: ~datetime.date
    :ivar clinical_info: Known clinical information for the patient, structured.
    :vartype clinical_info: list[~azure.healthinsights.patienttimeline.models.Resource]
    """

    sex: Optional[Union[str, "_models.PatientSex"]] = rest_field()
    """The patient's sex. Known values are: \"female\", \"male\", and \"unspecified\"."""
    birth_date: Optional[datetime.date] = rest_field(name="birthDate")
    """The patient's date of birth."""
    clinical_info: Optional[List["_models.Resource"]] = rest_field(name="clinicalInfo")
    """Known clinical information for the patient, structured."""

    @overload
    def __init__(
        self,
        *,
        sex: Optional[Union[str, "_models.PatientSex"]] = None,
        birth_date: Optional[datetime.date] = None,
        clinical_info: Optional[List["_models.Resource"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientDocument(_model_base.Model):
    """A clinical document related to a patient. Document here is in the wide sense - not just a text
    document (note).

    All required parameters must be populated in order to send to server.

    :ivar type: The type of the patient document, such as 'note' (text document) or 'fhirBundle'
     (FHIR JSON document). Required. Known values are: "note", "fhirBundle", "dicom", and
     "genomicSequencing".
    :vartype type: str or ~azure.healthinsights.patienttimeline.models.DocumentType
    :ivar clinical_type: The type of the clinical document. Known values are: "consultation",
     "dischargeSummary", "historyAndPhysical", "radiologyReport", "procedure", "progress",
     "laboratory", and "pathologyReport".
    :vartype clinical_type: str or
     ~azure.healthinsights.patienttimeline.models.ClinicalDocumentType
    :ivar id: A given identifier for the document. Has to be unique across all documents for a
     single patient. Required.
    :vartype id: str
    :ivar language: A 2 letter ISO 639-1 representation of the language of the document.
    :vartype language: str
    :ivar created_date_time: The date and time when the document was created.
    :vartype created_date_time: ~datetime.datetime
    :ivar authors: Document author(s).
    :vartype authors: list[~azure.healthinsights.patienttimeline.models.DocumentAuthor]
    :ivar specialty_type: specialty type the document. Known values are: "pathology" and
     "radiology".
    :vartype specialty_type: str or ~azure.healthinsights.patienttimeline.models.SpecialtyType
    :ivar administrative_metadata: Administrative metadata for the document.
    :vartype administrative_metadata:
     ~azure.healthinsights.patienttimeline.models.DocumentAdministrativeMetadata
    :ivar content: The content of the patient document. Required.
    :vartype content: ~azure.healthinsights.patienttimeline.models.DocumentContent
    """

    type: Union[str, "_models.DocumentType"] = rest_field()
    """The type of the patient document, such as 'note' (text document) or 'fhirBundle' (FHIR JSON
     document). Required. Known values are: \"note\", \"fhirBundle\", \"dicom\", and
     \"genomicSequencing\"."""
    clinical_type: Optional[Union[str, "_models.ClinicalDocumentType"]] = rest_field(name="clinicalType")
    """The type of the clinical document. Known values are: \"consultation\", \"dischargeSummary\",
     \"historyAndPhysical\", \"radiologyReport\", \"procedure\", \"progress\", \"laboratory\", and
     \"pathologyReport\"."""
    id: str = rest_field()
    """A given identifier for the document. Has to be unique across all documents for a single
     patient. Required."""
    language: Optional[str] = rest_field()
    """A 2 letter ISO 639-1 representation of the language of the document."""
    created_date_time: Optional[datetime.datetime] = rest_field(name="createdDateTime", format="rfc3339")
    """The date and time when the document was created."""
    authors: Optional[List["_models.DocumentAuthor"]] = rest_field()
    """Document author(s)."""
    specialty_type: Optional[Union[str, "_models.SpecialtyType"]] = rest_field(name="specialtyType")
    """specialty type the document. Known values are: \"pathology\" and \"radiology\"."""
    administrative_metadata: Optional["_models.DocumentAdministrativeMetadata"] = rest_field(
        name="administrativeMetadata"
    )
    """Administrative metadata for the document."""
    content: "_models.DocumentContent" = rest_field()
    """The content of the patient document. Required."""

    @overload
    def __init__(
        self,
        *,
        type: Union[str, "_models.DocumentType"],
        id: str,  # pylint: disable=redefined-builtin
        content: "_models.DocumentContent",
        clinical_type: Optional[Union[str, "_models.ClinicalDocumentType"]] = None,
        language: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        authors: Optional[List["_models.DocumentAuthor"]] = None,
        specialty_type: Optional[Union[str, "_models.SpecialtyType"]] = None,
        administrative_metadata: Optional["_models.DocumentAdministrativeMetadata"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientRecord(_model_base.Model):
    """A patient record, including their clinical information and data.

    All required parameters must be populated in order to send to server.

    :ivar id: A given identifier for the patient. Has to be unique across all patients in a single
     request. Required.
    :vartype id: str
    :ivar info: Patient structured information, including demographics and known structured
     clinical information.
    :vartype info: ~azure.healthinsights.patienttimeline.models.PatientDetails
    :ivar encounters: Patient encounters/visits.
    :vartype encounters: list[~azure.healthinsights.patienttimeline.models.Encounter]
    :ivar patient_documents: Patient unstructured clinical data, given as documents.
    :vartype patient_documents: list[~azure.healthinsights.patienttimeline.models.PatientDocument]
    """

    id: str = rest_field()
    """A given identifier for the patient. Has to be unique across all patients in a single request.
     Required."""
    info: Optional["_models.PatientDetails"] = rest_field()
    """Patient structured information, including demographics and known structured clinical
     information."""
    encounters: Optional[List["_models.Encounter"]] = rest_field()
    """Patient encounters/visits."""
    patient_documents: Optional[List["_models.PatientDocument"]] = rest_field(name="patientDocuments")
    """Patient unstructured clinical data, given as documents."""

    @overload
    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        info: Optional["_models.PatientDetails"] = None,
        encounters: Optional[List["_models.Encounter"]] = None,
        patient_documents: Optional[List["_models.PatientDocument"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientTimelineData(_model_base.Model):
    """The body of the Patient Timeline request.

    All required parameters must be populated in order to send to server.

    :ivar patients: The list of patients, including their clinical information and data. Required.
    :vartype patients: list[~azure.healthinsights.patienttimeline.models.PatientRecord]
    :ivar configuration: Configuration affecting the Patient Timeline model's inference.
    :vartype configuration:
     ~azure.healthinsights.patienttimeline.models.PatientTimelineModelConfiguration
    """

    patients: List["_models.PatientRecord"] = rest_field()
    """The list of patients, including their clinical information and data. Required."""
    configuration: Optional["_models.PatientTimelineModelConfiguration"] = rest_field()
    """Configuration affecting the Patient Timeline model's inference."""

    @overload
    def __init__(
        self,
        *,
        patients: List["_models.PatientRecord"],
        configuration: Optional["_models.PatientTimelineModelConfiguration"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientTimelineInference(_model_base.Model):
    """An inference made by the Patient Timeline model regarding a patient.

    All required parameters must be populated in order to send to server.

    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar type: The type of the Patient Timeline inference. Required. Known values are:
     "timelineEvent" and "summaryItem".
    :vartype type: str or ~azure.healthinsights.patienttimeline.models.PatientTimelineInferenceType
    :ivar resource: FHIR 4.0 representation of the piece of clinical info.
     additional dependent resources maybe contained (e.g. MedicationStatement may contain
     Medication)
     -- In the SDK we will have custom mapping to map this type to JsonObject.
    :vartype resource: ~azure.healthinsights.patienttimeline.models.DomainResource
    :ivar period: Time range relevant to this Timeline inference.
    :vartype period: ~azure.healthinsights.patienttimeline.models.TimePeriod
    """

    extension: Optional[List["_models.Extension"]] = rest_field()
    """Additional Content defined by implementations."""
    type: Union[str, "_models.PatientTimelineInferenceType"] = rest_field()
    """The type of the Patient Timeline inference. Required. Known values are: \"timelineEvent\" and
     \"summaryItem\"."""
    resource: Optional["_models.DomainResource"] = rest_field()
    """FHIR 4.0 representation of the piece of clinical info.
     additional dependent resources maybe contained (e.g. MedicationStatement may contain
     Medication)
     -- In the SDK we will have custom mapping to map this type to JsonObject."""
    period: Optional["_models.TimePeriod"] = rest_field()
    """Time range relevant to this Timeline inference."""

    @overload
    def __init__(
        self,
        *,
        type: Union[str, "_models.PatientTimelineInferenceType"],
        extension: Optional[List["_models.Extension"]] = None,
        resource: Optional["_models.DomainResource"] = None,
        period: Optional["_models.TimePeriod"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientTimelineInferenceResult(_model_base.Model):
    """The inference results for the Patient Timeline request.

    All required parameters must be populated in order to send to server.

    :ivar patient_results: Results for the patients given in the request. Required.
    :vartype patient_results:
     list[~azure.healthinsights.patienttimeline.models.PatientTimelinePatientResult]
    :ivar model_version: The version of the model used for inference, expressed as the model date.
     Required.
    :vartype model_version: str
    """

    patient_results: List["_models.PatientTimelinePatientResult"] = rest_field(name="patientResults")
    """Results for the patients given in the request. Required."""
    model_version: str = rest_field(name="modelVersion")
    """The version of the model used for inference, expressed as the model date. Required."""

    @overload
    def __init__(
        self,
        *,
        patient_results: List["_models.PatientTimelinePatientResult"],
        model_version: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientTimelineModelConfiguration(_model_base.Model):
    """Configuration affecting the Patient Timeline model's inference.

    :ivar verbose: An indication whether the model should produce verbose output.
    :vartype verbose: bool
    :ivar include_evidence: An indication whether the model's output should include evidence for
     the inferences.
    :vartype include_evidence: bool
    """

    verbose: Optional[bool] = rest_field()
    """An indication whether the model should produce verbose output."""
    include_evidence: Optional[bool] = rest_field(name="includeEvidence")
    """An indication whether the model's output should include evidence for the inferences."""

    @overload
    def __init__(
        self,
        *,
        verbose: Optional[bool] = None,
        include_evidence: Optional[bool] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientTimelinePatientResult(_model_base.Model):
    """The results of the model's work for a single patient.

    All required parameters must be populated in order to send to server.

    :ivar patient_id: The identifier given for the patient in the request. Required.
    :vartype patient_id: str
    :ivar inferences: The model's inferences for the given patient. Required.
    :vartype inferences:
     list[~azure.healthinsights.patienttimeline.models.PatientTimelineInference]
    """

    patient_id: str = rest_field(name="patientId")
    """The identifier given for the patient in the request. Required."""
    inferences: List["_models.PatientTimelineInference"] = rest_field()
    """The model's inferences for the given patient. Required."""

    @overload
    def __init__(
        self,
        *,
        patient_id: str,
        inferences: List["_models.PatientTimelineInference"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class PatientTimelineResult(_model_base.Model):
    """The response for the Patient Timeline request.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The unique ID of the operation. Required.
    :vartype id: str
    :ivar status: The status of the operation. Required. Known values are: "notStarted", "running",
     "succeeded", "failed", and "canceled".
    :vartype status: str or ~azure.healthinsights.patienttimeline.models.JobStatus
    :ivar created_date_time: The date and time when the processing job was created.
    :vartype created_date_time: ~datetime.datetime
    :ivar expiration_date_time: The date and time when the processing job is set to expire.
    :vartype expiration_date_time: ~datetime.datetime
    :ivar last_update_date_time: The date and time when the processing job was last updated.
    :vartype last_update_date_time: ~datetime.datetime
    :ivar error: Error object that describes the error when status is "Failed".
    :vartype error: ~azure.healthinsights.patienttimeline.models.Error
    :ivar result: The result of the operation.
    :vartype result: ~azure.healthinsights.patienttimeline.models.PatientTimelineInferenceResult
    """

    id: str = rest_field(visibility=["read"])
    """The unique ID of the operation. Required."""
    status: Union[str, "_models.JobStatus"] = rest_field(visibility=["read"])
    """The status of the operation. Required. Known values are: \"notStarted\", \"running\",
     \"succeeded\", \"failed\", and \"canceled\"."""
    created_date_time: Optional[datetime.datetime] = rest_field(
        name="createdDateTime", visibility=["read"], format="rfc3339"
    )
    """The date and time when the processing job was created."""
    expiration_date_time: Optional[datetime.datetime] = rest_field(
        name="expirationDateTime", visibility=["read"], format="rfc3339"
    )
    """The date and time when the processing job is set to expire."""
    last_update_date_time: Optional[datetime.datetime] = rest_field(
        name="lastUpdateDateTime", visibility=["read"], format="rfc3339"
    )
    """The date and time when the processing job was last updated."""
    error: Optional["_models.Error"] = rest_field()
    """Error object that describes the error when status is \"Failed\"."""
    result: Optional["_models.PatientTimelineInferenceResult"] = rest_field()
    """The result of the operation."""

    @overload
    def __init__(
        self,
        *,
        error: Optional["_models.Error"] = None,
        result: Optional["_models.PatientTimelineInferenceResult"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Period(Element):
    """A time period defined by a start and end date and optionally time
    Based on `FHIR Period <https://www.hl7.org/fhir/R4/datatypes.html#Period>`_.

    :ivar start: Starting time with inclusive boundary.
    :vartype start: str
    :ivar end: End time with inclusive boundary, if not ongoing.
    :vartype end: str
    """

    start: Optional[str] = rest_field()
    """Starting time with inclusive boundary."""
    end: Optional[str] = rest_field()
    """End time with inclusive boundary, if not ongoing."""

    @overload
    def __init__(
        self,
        *,
        start: Optional[str] = None,
        end: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Quantity(Element):
    """A measured or measurable amount
    Based on `FHIR Quantity <https://www.hl7.org/fhir/R4/datatypes.html#Quantity>`_.

    :ivar value: Numerical value (with implicit precision).
    :vartype value: float
    :ivar comparator: < | <= | >= | > - how to understand the value.
    :vartype comparator: str
    :ivar unit: Unit representation.
    :vartype unit: str
    :ivar system: System that defines coded unit form.
    :vartype system: str
    :ivar code: Coded form of the unit.
    :vartype code: str
    """

    value: Optional[float] = rest_field()
    """Numerical value (with implicit precision)."""
    comparator: Optional[str] = rest_field()
    """< | <= | >= | > - how to understand the value."""
    unit: Optional[str] = rest_field()
    """Unit representation."""
    system: Optional[str] = rest_field()
    """System that defines coded unit form."""
    code: Optional[str] = rest_field()
    """Coded form of the unit."""

    @overload
    def __init__(
        self,
        *,
        value: Optional[float] = None,
        comparator: Optional[str] = None,
        unit: Optional[str] = None,
        system: Optional[str] = None,
        code: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Range(Element):
    """A set of ordered Quantities defined by a low and high limit
    Based on `FHIR Range <https://www.hl7.org/fhir/R4/datatypes.html#Range>`_.

    :ivar low: Low limit.
    :vartype low: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar high: High limit.
    :vartype high: ~azure.healthinsights.patienttimeline.models.Quantity
    """

    low: Optional["_models.Quantity"] = rest_field()
    """Low limit."""
    high: Optional["_models.Quantity"] = rest_field()
    """High limit."""

    @overload
    def __init__(
        self,
        *,
        low: Optional["_models.Quantity"] = None,
        high: Optional["_models.Quantity"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Ratio(Element):
    """A ratio of two Quantity values - a numerator and a denominator
    Based on `FHIR Ratio <https://www.hl7.org/fhir/R4/datatypes.html#Ratio>`_.

    :ivar numerator: Numerator value.
    :vartype numerator: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar denominator: Denominator value.
    :vartype denominator: ~azure.healthinsights.patienttimeline.models.Quantity
    """

    numerator: Optional["_models.Quantity"] = rest_field()
    """Numerator value."""
    denominator: Optional["_models.Quantity"] = rest_field()
    """Denominator value."""

    @overload
    def __init__(
        self,
        *,
        numerator: Optional["_models.Quantity"] = None,
        denominator: Optional["_models.Quantity"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Reference(Element):
    """A reference from one resource to another
    Based on `FHIR Reference <https://www.hl7.org/fhir/R4/references.html>`_.

    :ivar reference: Literal reference, Relative, internal or absolute URL.
    :vartype reference: str
    :ivar type: Type the reference refers to (e.g. "Patient").
    :vartype type: str
    :ivar identifier: Logical reference, when literal reference is not known.
    :vartype identifier: ~azure.healthinsights.patienttimeline.models.Identifier
    :ivar display: Text alternative for the resource.
    :vartype display: str
    """

    reference: Optional[str] = rest_field()
    """Literal reference, Relative, internal or absolute URL."""
    type: Optional[str] = rest_field()
    """Type the reference refers to (e.g. \"Patient\")."""
    identifier: Optional["_models.Identifier"] = rest_field()
    """Logical reference, when literal reference is not known."""
    display: Optional[str] = rest_field()
    """Text alternative for the resource."""

    @overload
    def __init__(
        self,
        *,
        reference: Optional[str] = None,
        type: Optional[str] = None,
        identifier: Optional["_models.Identifier"] = None,
        display: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ResearchStudy(DomainResource, discriminator="ResearchStudy"):  # pylint: disable=too-many-instance-attributes
    """Detailed information about Research Study
    Based on `FHIR ResearchStudy <https://www.hl7.org/fhir/R4/researchstudy.html>`_.

    All required parameters must be populated in order to send to server.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar meta: Metadata about the resource.
    :vartype meta: ~azure.healthinsights.patienttimeline.models.Meta
    :ivar implicit_rules: A set of rules under which this content was created.
    :vartype implicit_rules: str
    :ivar language: Language of the resource content.
    :vartype language: str
    :ivar text: Text summary of the resource, for human interpretation.
    :vartype text: ~azure.healthinsights.patienttimeline.models.Narrative
    :ivar contained: Contained, inline Resources.
    :vartype contained: list[~azure.healthinsights.patienttimeline.models.Resource]
    :ivar extension: Additional Content defined by implementations.
    :vartype extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar modifier_extension: Extensions that cannot be ignored.
    :vartype modifier_extension: list[~azure.healthinsights.patienttimeline.models.Extension]
    :ivar resource_type: resourceType. Required. Default value is "ResearchStudy".
    :vartype resource_type: str
    :ivar identifier: Business Identifier for study.
    :vartype identifier: list[~azure.healthinsights.patienttimeline.models.Identifier]
    :ivar title: Name for this study.
    :vartype title: str
    :ivar protocol: Steps followed in executing study.
    :vartype protocol: list[~azure.healthinsights.patienttimeline.models.Reference]
    :ivar part_of: Part of larger study.
    :vartype part_of: list[~azure.healthinsights.patienttimeline.models.Reference]
    :ivar status: active | administratively-completed | approved | closed-to-accrual |
     closed-to-accrual-and-intervention | completed | disapproved | in-review |
     temporarily-closed-to-accrual | temporarily-closed-to-accrual-and-intervention | withdrawn.
     Required. Known values are: "active", "administratively-completed", "approved",
     "closed-to-accrual", "closed-to-accrual-and-intervention", "completed", "disapproved",
     "in-review", "temporarily-closed-to-accrual", "temporarily-closed-to-accrual-and-intervention",
     and "withdrawn".
    :vartype status: str or
     ~azure.healthinsights.patienttimeline.models.ResearchStudyStatusCodeType
    :ivar primary_purpose_type: treatment | prevention | diagnostic | supportive-care | screening |
     health-services-research | basic-science | device-feasibility.
    :vartype primary_purpose_type: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar phase: n-a | early-phase-1 | phase-1 | phase-1-phase-2 | phase-2 | phase-2-phase-3 |
     phase-3 | phase-4.
    :vartype phase: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar category: Classifications for the study.
    :vartype category: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar focus: Drugs, devices, etc. under study.
    :vartype focus: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar condition: Condition being studied.
    :vartype condition: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar contact: Contact details for the study.
    :vartype contact: list[~azure.healthinsights.patienttimeline.models.ContactDetail]
    :ivar keyword: Used to search for the study.
    :vartype keyword: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar location: Geographic region(s) for study.
    :vartype location: list[~azure.healthinsights.patienttimeline.models.CodeableConcept]
    :ivar description: What this is study doing.
    :vartype description: str
    :ivar enrollment: Inclusion & exclusion criteria.
    :vartype enrollment: list[~azure.healthinsights.patienttimeline.models.Reference]
    :ivar period: When the study began and ended.
    :vartype period: ~azure.healthinsights.patienttimeline.models.Period
    :ivar sponsor: Organization that initiates and is legally responsible for the study.
    :vartype sponsor: ~azure.healthinsights.patienttimeline.models.Reference
    :ivar principal_investigator: Researcher who oversees multiple aspects of the study.
    :vartype principal_investigator: ~azure.healthinsights.patienttimeline.models.Reference
    :ivar site: Facility where study activities are conducted.
    :vartype site: list[~azure.healthinsights.patienttimeline.models.Reference]
    :ivar reason_stopped: accrual-goal-met | closed-due-to-toxicity |
     closed-due-to-lack-of-study-progress | temporarily-closed-per-study-design.
    :vartype reason_stopped: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar note: Comments made about the study.
    :vartype note: list[~azure.healthinsights.patienttimeline.models.Annotation]
    :ivar arm: Defined path through the study for a subject.
    :vartype arm: list[~azure.healthinsights.patienttimeline.models.ResearchStudyArm]
    :ivar objective: A goal for the study.
    :vartype objective: list[~azure.healthinsights.patienttimeline.models.ResearchStudyObjective]
    """

    resource_type: Literal["ResearchStudy"] = rest_discriminator(name="resourceType")  # type: ignore
    """resourceType. Required. Default value is \"ResearchStudy\"."""
    identifier: Optional[List["_models.Identifier"]] = rest_field()
    """Business Identifier for study."""
    title: Optional[str] = rest_field()
    """Name for this study."""
    protocol: Optional[List["_models.Reference"]] = rest_field()
    """Steps followed in executing study."""
    part_of: Optional[List["_models.Reference"]] = rest_field(name="partOf")
    """Part of larger study."""
    status: Union[str, "_models.ResearchStudyStatusCodeType"] = rest_field()
    """active | administratively-completed | approved | closed-to-accrual |
     closed-to-accrual-and-intervention | completed | disapproved | in-review |
     temporarily-closed-to-accrual | temporarily-closed-to-accrual-and-intervention | withdrawn.
     Required. Known values are: \"active\", \"administratively-completed\", \"approved\",
     \"closed-to-accrual\", \"closed-to-accrual-and-intervention\", \"completed\", \"disapproved\",
     \"in-review\", \"temporarily-closed-to-accrual\",
     \"temporarily-closed-to-accrual-and-intervention\", and \"withdrawn\"."""
    primary_purpose_type: Optional["_models.CodeableConcept"] = rest_field(name="primaryPurposeType")
    """treatment | prevention | diagnostic | supportive-care | screening | health-services-research |
     basic-science | device-feasibility."""
    phase: Optional["_models.CodeableConcept"] = rest_field()
    """n-a | early-phase-1 | phase-1 | phase-1-phase-2 | phase-2 | phase-2-phase-3 | phase-3 |
     phase-4."""
    category: Optional[List["_models.CodeableConcept"]] = rest_field()
    """Classifications for the study."""
    focus: Optional[List["_models.CodeableConcept"]] = rest_field()
    """Drugs, devices, etc. under study."""
    condition: Optional[List["_models.CodeableConcept"]] = rest_field()
    """Condition being studied."""
    contact: Optional[List["_models.ContactDetail"]] = rest_field()
    """Contact details for the study."""
    keyword: Optional[List["_models.CodeableConcept"]] = rest_field()
    """Used to search for the study."""
    location: Optional[List["_models.CodeableConcept"]] = rest_field()
    """Geographic region(s) for study."""
    description: Optional[str] = rest_field()
    """What this is study doing."""
    enrollment: Optional[List["_models.Reference"]] = rest_field()
    """Inclusion & exclusion criteria."""
    period: Optional["_models.Period"] = rest_field()
    """When the study began and ended."""
    sponsor: Optional["_models.Reference"] = rest_field()
    """Organization that initiates and is legally responsible for the study."""
    principal_investigator: Optional["_models.Reference"] = rest_field(name="principalInvestigator")
    """Researcher who oversees multiple aspects of the study."""
    site: Optional[List["_models.Reference"]] = rest_field()
    """Facility where study activities are conducted."""
    reason_stopped: Optional["_models.CodeableConcept"] = rest_field(name="reasonStopped")
    """accrual-goal-met | closed-due-to-toxicity | closed-due-to-lack-of-study-progress |
     temporarily-closed-per-study-design."""
    note: Optional[List["_models.Annotation"]] = rest_field()
    """Comments made about the study."""
    arm: Optional[List["_models.ResearchStudyArm"]] = rest_field()
    """Defined path through the study for a subject."""
    objective: Optional[List["_models.ResearchStudyObjective"]] = rest_field()
    """A goal for the study."""

    @overload
    def __init__(
        self,
        *,
        status: Union[str, "_models.ResearchStudyStatusCodeType"],
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        meta: Optional["_models.Meta"] = None,
        implicit_rules: Optional[str] = None,
        language: Optional[str] = None,
        text: Optional["_models.Narrative"] = None,
        contained: Optional[List["_models.Resource"]] = None,
        extension: Optional[List["_models.Extension"]] = None,
        modifier_extension: Optional[List["_models.Extension"]] = None,
        identifier: Optional[List["_models.Identifier"]] = None,
        title: Optional[str] = None,
        protocol: Optional[List["_models.Reference"]] = None,
        part_of: Optional[List["_models.Reference"]] = None,
        primary_purpose_type: Optional["_models.CodeableConcept"] = None,
        phase: Optional["_models.CodeableConcept"] = None,
        category: Optional[List["_models.CodeableConcept"]] = None,
        focus: Optional[List["_models.CodeableConcept"]] = None,
        condition: Optional[List["_models.CodeableConcept"]] = None,
        contact: Optional[List["_models.ContactDetail"]] = None,
        keyword: Optional[List["_models.CodeableConcept"]] = None,
        location: Optional[List["_models.CodeableConcept"]] = None,
        description: Optional[str] = None,
        enrollment: Optional[List["_models.Reference"]] = None,
        period: Optional["_models.Period"] = None,
        sponsor: Optional["_models.Reference"] = None,
        principal_investigator: Optional["_models.Reference"] = None,
        site: Optional[List["_models.Reference"]] = None,
        reason_stopped: Optional["_models.CodeableConcept"] = None,
        note: Optional[List["_models.Annotation"]] = None,
        arm: Optional[List["_models.ResearchStudyArm"]] = None,
        objective: Optional[List["_models.ResearchStudyObjective"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, resource_type="ResearchStudy", **kwargs)


class ResearchStudyArm(_model_base.Model):
    """ResearchStudyArm.

    All required parameters must be populated in order to send to server.

    :ivar name: Label for study arm. Required.
    :vartype name: str
    :ivar type: Categorization of study arm.
    :vartype type: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    :ivar description: Short explanation of study path.
    :vartype description: str
    """

    name: str = rest_field()
    """Label for study arm. Required."""
    type: Optional["_models.CodeableConcept"] = rest_field()
    """Categorization of study arm."""
    description: Optional[str] = rest_field()
    """Short explanation of study path."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        type: Optional["_models.CodeableConcept"] = None,
        description: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ResearchStudyObjective(_model_base.Model):
    """ResearchStudyObjective.

    All required parameters must be populated in order to send to server.

    :ivar name: Label for the objective. Required.
    :vartype name: str
    :ivar type: primary | secondary | exploratory.
    :vartype type: ~azure.healthinsights.patienttimeline.models.CodeableConcept
    """

    name: str = rest_field()
    """Label for the objective. Required."""
    type: Optional["_models.CodeableConcept"] = rest_field()
    """primary | secondary | exploratory."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        type: Optional["_models.CodeableConcept"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class SampledData(Element):
    """A series of measurements taken by a device
    Based on `FHIR SampledData <https://www.hl7.org/fhir/R4/datatypes.html#SampledData>`_.

    All required parameters must be populated in order to send to server.

    :ivar origin: Zero value and units. Required.
    :vartype origin: ~azure.healthinsights.patienttimeline.models.Quantity
    :ivar period: Number of milliseconds between samples. Required.
    :vartype period: float
    :ivar factor: Multiply data by this before adding to origin.
    :vartype factor: float
    :ivar lower_limit: Lower limit of detection.
    :vartype lower_limit: float
    :ivar upper_limit: Upper limit of detection.
    :vartype upper_limit: float
    :ivar dimensions: Number of sample points at each time point. Required.
    :vartype dimensions: int
    :ivar data: Decimal values with spaces, or "E" | "U" | "L".
    :vartype data: str
    """

    origin: "_models.Quantity" = rest_field()
    """Zero value and units. Required."""
    period: float = rest_field()
    """Number of milliseconds between samples. Required."""
    factor: Optional[float] = rest_field()
    """Multiply data by this before adding to origin."""
    lower_limit: Optional[float] = rest_field(name="lowerLimit")
    """Lower limit of detection."""
    upper_limit: Optional[float] = rest_field(name="upperLimit")
    """Upper limit of detection."""
    dimensions: int = rest_field()
    """Number of sample points at each time point. Required."""
    data: Optional[str] = rest_field()
    """Decimal values with spaces, or \"E\" | \"U\" | \"L\"."""

    @overload
    def __init__(
        self,
        *,
        origin: "_models.Quantity",
        period: float,
        dimensions: int,
        factor: Optional[float] = None,
        lower_limit: Optional[float] = None,
        upper_limit: Optional[float] = None,
        data: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class TimePeriod(_model_base.Model):
    """A duration of time during which an event is happening.

    :ivar start: Starting time with inclusive boundary.
    :vartype start: ~datetime.datetime
    :ivar end: End time with inclusive boundary, if not ongoing.
    :vartype end: ~datetime.datetime
    """

    start: Optional[datetime.datetime] = rest_field(format="rfc3339")
    """Starting time with inclusive boundary."""
    end: Optional[datetime.datetime] = rest_field(format="rfc3339")
    """End time with inclusive boundary, if not ongoing."""

    @overload
    def __init__(
        self,
        *,
        start: Optional[datetime.datetime] = None,
        end: Optional[datetime.datetime] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
