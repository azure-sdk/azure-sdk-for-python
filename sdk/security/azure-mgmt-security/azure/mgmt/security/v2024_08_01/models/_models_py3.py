# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .._utils import serialization as _serialization

if TYPE_CHECKING:
    from .. import models as _models


class AssignedAssessmentItem(_serialization.Model):
    """Describe the properties of a security assessment object reference (by key).

    :ivar assessment_key: Unique key to a security assessment object.
    :vartype assessment_key: str
    """

    _attribute_map = {
        "assessment_key": {"key": "assessmentKey", "type": "str"},
    }

    def __init__(self, *, assessment_key: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword assessment_key: Unique key to a security assessment object.
        :paramtype assessment_key: str
        """
        super().__init__(**kwargs)
        self.assessment_key = assessment_key


class AssignedStandardItem(_serialization.Model):
    """Describe the properties of a of a standard assignments object reference.

    :ivar id: Full resourceId of the Microsoft.Security/standard object.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: Full resourceId of the Microsoft.Security/standard object.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class AttestationEvidence(_serialization.Model):
    """Describe the properties of a assignment attestation.

    :ivar description: The description of the evidence.
    :vartype description: str
    :ivar source_url: The source url of the evidence.
    :vartype source_url: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "source_url": {"key": "sourceUrl", "type": "str"},
    }

    def __init__(self, *, description: Optional[str] = None, source_url: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword description: The description of the evidence.
        :paramtype description: str
        :keyword source_url: The source url of the evidence.
        :paramtype source_url: str
        """
        super().__init__(**kwargs)
        self.description = description
        self.source_url = source_url


class Resource(_serialization.Model):
    """Describes an Azure resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.type: Optional[str] = None


class CustomRecommendation(Resource):
    """Custom Recommendation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.security.v2024_08_01.models.SystemData
    :ivar query: KQL query representing the Recommendation results required.
    :vartype query: str
    :ivar cloud_providers: List of all standard supported clouds.
    :vartype cloud_providers: list[str or
     ~azure.mgmt.security.v2024_08_01.models.RecommendationSupportedClouds]
    :ivar severity: The severity to relate to the assessments generated by this Recommendation.
     Known values are: "High", "Medium", and "Low".
    :vartype severity: str or ~azure.mgmt.security.v2024_08_01.models.SeverityEnum
    :ivar security_issue: The severity to relate to the assessments generated by this
     Recommendation. Known values are: "Vulnerability", "ExcessivePermissions", "AnonymousAccess",
     "NetworkExposure", "TrafficEncryption", and "BestPractices".
    :vartype security_issue: str or ~azure.mgmt.security.v2024_08_01.models.SecurityIssue
    :ivar display_name: The display name of the assessments generated by this Recommendation.
    :vartype display_name: str
    :ivar description: The description to relate to the assessments generated by this
     Recommendation.
    :vartype description: str
    :ivar remediation_description: The remediation description to relate to the assessments
     generated by this Recommendation.
    :vartype remediation_description: str
    :ivar assessment_key: The assessment metadata key used when an assessment is generated for this
     Recommendation.
    :vartype assessment_key: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "assessment_key": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "query": {"key": "properties.query", "type": "str"},
        "cloud_providers": {"key": "properties.cloudProviders", "type": "[str]"},
        "severity": {"key": "properties.severity", "type": "str"},
        "security_issue": {"key": "properties.securityIssue", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "remediation_description": {"key": "properties.remediationDescription", "type": "str"},
        "assessment_key": {"key": "properties.assessmentKey", "type": "str"},
    }

    def __init__(
        self,
        *,
        query: Optional[str] = None,
        cloud_providers: Optional[List[Union[str, "_models.RecommendationSupportedClouds"]]] = None,
        severity: Union[str, "_models.SeverityEnum"] = "Low",
        security_issue: Union[str, "_models.SecurityIssue"] = "BestPractices",
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        remediation_description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword query: KQL query representing the Recommendation results required.
        :paramtype query: str
        :keyword cloud_providers: List of all standard supported clouds.
        :paramtype cloud_providers: list[str or
         ~azure.mgmt.security.v2024_08_01.models.RecommendationSupportedClouds]
        :keyword severity: The severity to relate to the assessments generated by this Recommendation.
         Known values are: "High", "Medium", and "Low".
        :paramtype severity: str or ~azure.mgmt.security.v2024_08_01.models.SeverityEnum
        :keyword security_issue: The severity to relate to the assessments generated by this
         Recommendation. Known values are: "Vulnerability", "ExcessivePermissions", "AnonymousAccess",
         "NetworkExposure", "TrafficEncryption", and "BestPractices".
        :paramtype security_issue: str or ~azure.mgmt.security.v2024_08_01.models.SecurityIssue
        :keyword display_name: The display name of the assessments generated by this Recommendation.
        :paramtype display_name: str
        :keyword description: The description to relate to the assessments generated by this
         Recommendation.
        :paramtype description: str
        :keyword remediation_description: The remediation description to relate to the assessments
         generated by this Recommendation.
        :paramtype remediation_description: str
        """
        super().__init__(**kwargs)
        self.system_data: Optional["_models.SystemData"] = None
        self.query = query
        self.cloud_providers = cloud_providers
        self.severity = severity
        self.security_issue = security_issue
        self.display_name = display_name
        self.description = description
        self.remediation_description = remediation_description
        self.assessment_key: Optional[str] = None


class CustomRecommendationsList(_serialization.Model):
    """A list of Custom Recommendations.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Collection of Custom Recommendations. Required.
    :vartype value: list[~azure.mgmt.security.v2024_08_01.models.CustomRecommendation]
    :ivar next_link: The link used to get the next page of operations.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CustomRecommendation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: The link used to get the next page of operations.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value: Optional[List["_models.CustomRecommendation"]] = None
        self.next_link = next_link


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: Optional[str] = None
        self.info: Optional[JSON] = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.security.v2024_08_01.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.security.v2024_08_01.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code: Optional[str] = None
        self.message: Optional[str] = None
        self.target: Optional[str] = None
        self.details: Optional[List["_models.ErrorDetail"]] = None
        self.additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.security.v2024_08_01.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.security.v2024_08_01.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class PartialAssessmentProperties(_serialization.Model):
    """Describes properties of an assessment as related to the standard.

    :ivar assessment_key: The assessment key.
    :vartype assessment_key: str
    """

    _attribute_map = {
        "assessment_key": {"key": "assessmentKey", "type": "str"},
    }

    def __init__(self, *, assessment_key: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword assessment_key: The assessment key.
        :paramtype assessment_key: str
        """
        super().__init__(**kwargs)
        self.assessment_key = assessment_key


class SecurityStandard(Resource):
    """Security Standard on a resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar display_name: Display name of the standard, equivalent to the standardId.
    :vartype display_name: str
    :ivar standard_type: Standard type (Custom or Default or Compliance only currently). Known
     values are: "Custom", "Default", and "Compliance".
    :vartype standard_type: str or ~azure.mgmt.security.v2024_08_01.models.StandardType
    :ivar description: Description of the standard.
    :vartype description: str
    :ivar assessments: List of assessment keys to apply to standard scope.
    :vartype assessments: list[~azure.mgmt.security.v2024_08_01.models.PartialAssessmentProperties]
    :ivar cloud_providers: List of all standard supported clouds.
    :vartype cloud_providers: list[str or
     ~azure.mgmt.security.v2024_08_01.models.StandardSupportedCloud]
    :ivar policy_set_definition_id: The policy set definition id associated with the standard.
    :vartype policy_set_definition_id: str
    :ivar metadata: The security standard metadata.
    :vartype metadata: ~azure.mgmt.security.v2024_08_01.models.StandardMetadata
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "standard_type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "standard_type": {"key": "properties.standardType", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "assessments": {"key": "properties.assessments", "type": "[PartialAssessmentProperties]"},
        "cloud_providers": {"key": "properties.cloudProviders", "type": "[str]"},
        "policy_set_definition_id": {"key": "properties.policySetDefinitionId", "type": "str"},
        "metadata": {"key": "properties.metadata", "type": "StandardMetadata"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        assessments: Optional[List["_models.PartialAssessmentProperties"]] = None,
        cloud_providers: Optional[List[Union[str, "_models.StandardSupportedCloud"]]] = None,
        policy_set_definition_id: Optional[str] = None,
        metadata: Optional["_models.StandardMetadata"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: Display name of the standard, equivalent to the standardId.
        :paramtype display_name: str
        :keyword description: Description of the standard.
        :paramtype description: str
        :keyword assessments: List of assessment keys to apply to standard scope.
        :paramtype assessments:
         list[~azure.mgmt.security.v2024_08_01.models.PartialAssessmentProperties]
        :keyword cloud_providers: List of all standard supported clouds.
        :paramtype cloud_providers: list[str or
         ~azure.mgmt.security.v2024_08_01.models.StandardSupportedCloud]
        :keyword policy_set_definition_id: The policy set definition id associated with the standard.
        :paramtype policy_set_definition_id: str
        :keyword metadata: The security standard metadata.
        :paramtype metadata: ~azure.mgmt.security.v2024_08_01.models.StandardMetadata
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.standard_type: Optional[Union[str, "_models.StandardType"]] = None
        self.description = description
        self.assessments = assessments
        self.cloud_providers = cloud_providers
        self.policy_set_definition_id = policy_set_definition_id
        self.metadata = metadata


class SecurityStandardList(_serialization.Model):
    """Page of a Standard list.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Collection of standards in this page. Required.
    :vartype value: list[~azure.mgmt.security.v2024_08_01.models.SecurityStandard]
    :ivar next_link: The URI to fetch the next page.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True, "readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SecurityStandard]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value: Optional[List["_models.SecurityStandard"]] = None
        self.next_link: Optional[str] = None


class StandardAssignment(Resource):
    """Security Assignment on a resource group over a given scope.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar display_name: Display name of the standardAssignment.
    :vartype display_name: str
    :ivar description: Description of the standardAssignment.
    :vartype description: str
    :ivar assigned_standard: Standard item with key as applied to this standard assignment over the
     given scope.
    :vartype assigned_standard: ~azure.mgmt.security.v2024_08_01.models.AssignedStandardItem
    :ivar effect: Expected effect of this assignment (Audit/Exempt/Attest). Known values are:
     "Audit", "Exempt", and "Attest".
    :vartype effect: str or ~azure.mgmt.security.v2024_08_01.models.Effect
    :ivar excluded_scopes: Excluded scopes, filter out the descendants of the scope (on management
     scopes).
    :vartype excluded_scopes: list[str]
    :ivar expires_on: Expiration date of this assignment as a full ISO date.
    :vartype expires_on: ~datetime.datetime
    :ivar exemption_data: Additional data about assignment that has Exempt effect.
    :vartype exemption_data:
     ~azure.mgmt.security.v2024_08_01.models.StandardAssignmentPropertiesExemptionData
    :ivar attestation_data: Additional data about assignment that has Attest effect.
    :vartype attestation_data:
     ~azure.mgmt.security.v2024_08_01.models.StandardAssignmentPropertiesAttestationData
    :ivar metadata: The standard assignment metadata.
    :vartype metadata: ~azure.mgmt.security.v2024_08_01.models.StandardAssignmentMetadata
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "assigned_standard": {"key": "properties.assignedStandard", "type": "AssignedStandardItem"},
        "effect": {"key": "properties.effect", "type": "str"},
        "excluded_scopes": {"key": "properties.excludedScopes", "type": "[str]"},
        "expires_on": {"key": "properties.expiresOn", "type": "iso-8601"},
        "exemption_data": {"key": "properties.exemptionData", "type": "StandardAssignmentPropertiesExemptionData"},
        "attestation_data": {
            "key": "properties.attestationData",
            "type": "StandardAssignmentPropertiesAttestationData",
        },
        "metadata": {"key": "properties.metadata", "type": "StandardAssignmentMetadata"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        assigned_standard: Optional["_models.AssignedStandardItem"] = None,
        effect: Optional[Union[str, "_models.Effect"]] = None,
        excluded_scopes: Optional[List[str]] = None,
        expires_on: Optional[datetime.datetime] = None,
        exemption_data: Optional["_models.StandardAssignmentPropertiesExemptionData"] = None,
        attestation_data: Optional["_models.StandardAssignmentPropertiesAttestationData"] = None,
        metadata: Optional["_models.StandardAssignmentMetadata"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: Display name of the standardAssignment.
        :paramtype display_name: str
        :keyword description: Description of the standardAssignment.
        :paramtype description: str
        :keyword assigned_standard: Standard item with key as applied to this standard assignment over
         the given scope.
        :paramtype assigned_standard: ~azure.mgmt.security.v2024_08_01.models.AssignedStandardItem
        :keyword effect: Expected effect of this assignment (Audit/Exempt/Attest). Known values are:
         "Audit", "Exempt", and "Attest".
        :paramtype effect: str or ~azure.mgmt.security.v2024_08_01.models.Effect
        :keyword excluded_scopes: Excluded scopes, filter out the descendants of the scope (on
         management scopes).
        :paramtype excluded_scopes: list[str]
        :keyword expires_on: Expiration date of this assignment as a full ISO date.
        :paramtype expires_on: ~datetime.datetime
        :keyword exemption_data: Additional data about assignment that has Exempt effect.
        :paramtype exemption_data:
         ~azure.mgmt.security.v2024_08_01.models.StandardAssignmentPropertiesExemptionData
        :keyword attestation_data: Additional data about assignment that has Attest effect.
        :paramtype attestation_data:
         ~azure.mgmt.security.v2024_08_01.models.StandardAssignmentPropertiesAttestationData
        :keyword metadata: The standard assignment metadata.
        :paramtype metadata: ~azure.mgmt.security.v2024_08_01.models.StandardAssignmentMetadata
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.assigned_standard = assigned_standard
        self.effect = effect
        self.excluded_scopes = excluded_scopes
        self.expires_on = expires_on
        self.exemption_data = exemption_data
        self.attestation_data = attestation_data
        self.metadata = metadata


class StandardAssignmentMetadata(_serialization.Model):
    """The standard assignment metadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_by: Standard assignment Created by object id (GUID).
    :vartype created_by: str
    :ivar created_on: Standard assignment creation date.
    :vartype created_on: ~datetime.datetime
    :ivar last_updated_by: Standard assignment last updated by object id (GUID).
    :vartype last_updated_by: str
    :ivar last_updated_on: Standard assignment last update date.
    :vartype last_updated_on: ~datetime.datetime
    """

    _validation = {
        "created_by": {"readonly": True},
        "created_on": {"readonly": True},
        "last_updated_by": {"readonly": True},
        "last_updated_on": {"readonly": True},
    }

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_on": {"key": "createdOn", "type": "iso-8601"},
        "last_updated_by": {"key": "lastUpdatedBy", "type": "str"},
        "last_updated_on": {"key": "lastUpdatedOn", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.created_by: Optional[str] = None
        self.created_on: Optional[datetime.datetime] = None
        self.last_updated_by: Optional[str] = None
        self.last_updated_on: Optional[datetime.datetime] = None


class StandardAssignmentPropertiesAttestationData(_serialization.Model):  # pylint: disable=name-too-long
    """Additional data about assignment that has Attest effect.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar compliance_state: Attest category of this assignment. Known values are: "unknown",
     "compliant", and "nonCompliant".
    :vartype compliance_state: str or
     ~azure.mgmt.security.v2024_08_01.models.AttestationComplianceState
    :ivar assigned_assessment: Component item with key as applied to this standard assignment over
     the given scope.
    :vartype assigned_assessment: ~azure.mgmt.security.v2024_08_01.models.AssignedAssessmentItem
    :ivar compliance_date: Attestation compliance date.
    :vartype compliance_date: ~datetime.datetime
    :ivar evidence: Array of links to attestation evidence.
    :vartype evidence: list[~azure.mgmt.security.v2024_08_01.models.AttestationEvidence]
    """

    _validation = {
        "compliance_date": {"readonly": True},
    }

    _attribute_map = {
        "compliance_state": {"key": "complianceState", "type": "str"},
        "assigned_assessment": {"key": "assignedAssessment", "type": "AssignedAssessmentItem"},
        "compliance_date": {"key": "complianceDate", "type": "iso-8601"},
        "evidence": {"key": "evidence", "type": "[AttestationEvidence]"},
    }

    def __init__(
        self,
        *,
        compliance_state: Optional[Union[str, "_models.AttestationComplianceState"]] = None,
        assigned_assessment: Optional["_models.AssignedAssessmentItem"] = None,
        evidence: Optional[List["_models.AttestationEvidence"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword compliance_state: Attest category of this assignment. Known values are: "unknown",
         "compliant", and "nonCompliant".
        :paramtype compliance_state: str or
         ~azure.mgmt.security.v2024_08_01.models.AttestationComplianceState
        :keyword assigned_assessment: Component item with key as applied to this standard assignment
         over the given scope.
        :paramtype assigned_assessment: ~azure.mgmt.security.v2024_08_01.models.AssignedAssessmentItem
        :keyword evidence: Array of links to attestation evidence.
        :paramtype evidence: list[~azure.mgmt.security.v2024_08_01.models.AttestationEvidence]
        """
        super().__init__(**kwargs)
        self.compliance_state = compliance_state
        self.assigned_assessment = assigned_assessment
        self.compliance_date: Optional[datetime.datetime] = None
        self.evidence = evidence


class StandardAssignmentPropertiesExemptionData(_serialization.Model):  # pylint: disable=name-too-long
    """Additional data about assignment that has Exempt effect.

    :ivar exemption_category: Exemption category of this assignment. Known values are: "waiver" and
     "mitigated".
    :vartype exemption_category: str or ~azure.mgmt.security.v2024_08_01.models.ExemptionCategory
    :ivar assigned_assessment: Component item with key as applied to this standard assignment over
     the given scope.
    :vartype assigned_assessment: ~azure.mgmt.security.v2024_08_01.models.AssignedAssessmentItem
    """

    _attribute_map = {
        "exemption_category": {"key": "exemptionCategory", "type": "str"},
        "assigned_assessment": {"key": "assignedAssessment", "type": "AssignedAssessmentItem"},
    }

    def __init__(
        self,
        *,
        exemption_category: Optional[Union[str, "_models.ExemptionCategory"]] = None,
        assigned_assessment: Optional["_models.AssignedAssessmentItem"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword exemption_category: Exemption category of this assignment. Known values are: "waiver"
         and "mitigated".
        :paramtype exemption_category: str or ~azure.mgmt.security.v2024_08_01.models.ExemptionCategory
        :keyword assigned_assessment: Component item with key as applied to this standard assignment
         over the given scope.
        :paramtype assigned_assessment: ~azure.mgmt.security.v2024_08_01.models.AssignedAssessmentItem
        """
        super().__init__(**kwargs)
        self.exemption_category = exemption_category
        self.assigned_assessment = assigned_assessment


class StandardAssignmentsList(_serialization.Model):
    """Page of a standard assignment list.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Collection of standardAssignments in this page. Required.
    :vartype value: list[~azure.mgmt.security.v2024_08_01.models.StandardAssignment]
    :ivar next_link: The URI to fetch the next page.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True, "readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[StandardAssignment]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value: Optional[List["_models.StandardAssignment"]] = None
        self.next_link: Optional[str] = None


class StandardMetadata(_serialization.Model):
    """The standard metadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_by: Standard Created by object id (GUID).
    :vartype created_by: str
    :ivar created_on: Standard creation date.
    :vartype created_on: ~datetime.datetime
    :ivar last_updated_by: Standard last updated by object id (GUID).
    :vartype last_updated_by: str
    :ivar last_updated_on: Standard last update date.
    :vartype last_updated_on: ~datetime.datetime
    """

    _validation = {
        "created_by": {"readonly": True},
        "created_on": {"readonly": True},
        "last_updated_by": {"readonly": True},
        "last_updated_on": {"readonly": True},
    }

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_on": {"key": "createdOn", "type": "iso-8601"},
        "last_updated_by": {"key": "lastUpdatedBy", "type": "str"},
        "last_updated_on": {"key": "lastUpdatedOn", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.created_by: Optional[str] = None
        self.created_on: Optional[datetime.datetime] = None
        self.last_updated_by: Optional[str] = None
        self.last_updated_on: Optional[datetime.datetime] = None


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.security.v2024_08_01.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.security.v2024_08_01.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.security.v2024_08_01.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.security.v2024_08_01.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
