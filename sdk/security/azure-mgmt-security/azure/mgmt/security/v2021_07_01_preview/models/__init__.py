# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    AzureTrackedResourceLocation,
    CloudErrorBody,
    CloudOffering,
    CspmMonitorAwsOffering,
    CspmMonitorAwsOfferingNativeCloudConnection,
    CustomAssessmentAutomation,
    CustomAssessmentAutomationRequest,
    CustomAssessmentAutomationsListResult,
    CustomEntityStoreAssignment,
    CustomEntityStoreAssignmentRequest,
    CustomEntityStoreAssignmentsListResult,
    DefenderForContainersAwsOffering,
    DefenderForContainersAwsOfferingCloudWatchToKinesis,
    DefenderForContainersAwsOfferingKinesisToS3,
    DefenderForContainersAwsOfferingKubernetesScubaReader,
    DefenderForContainersAwsOfferingKubernetesService,
    DefenderForServersAwsOffering,
    DefenderForServersAwsOfferingArcAutoProvisioning,
    DefenderForServersAwsOfferingArcAutoProvisioningServicePrincipalSecretMetadata,
    DefenderForServersAwsOfferingDefenderForServers,
    ETag,
    ErrorAdditionalInfo,
    InformationProtectionAwsOffering,
    InformationProtectionAwsOfferingInformationProtection,
    Kind,
    Resource,
    SecurityConnector,
    SecurityConnectorPropertiesOrganizationalData,
    SecurityConnectorsList,
    SystemData,
    Tags,
    TrackedResource,
)

from ._security_center_enums import (  # type: ignore
    CloudName,
    CreatedByType,
    OfferingType,
    OrganizationMembershipType,
    SeverityEnum,
    SupportedCloudEnum,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AzureTrackedResourceLocation",
    "CloudErrorBody",
    "CloudOffering",
    "CspmMonitorAwsOffering",
    "CspmMonitorAwsOfferingNativeCloudConnection",
    "CustomAssessmentAutomation",
    "CustomAssessmentAutomationRequest",
    "CustomAssessmentAutomationsListResult",
    "CustomEntityStoreAssignment",
    "CustomEntityStoreAssignmentRequest",
    "CustomEntityStoreAssignmentsListResult",
    "DefenderForContainersAwsOffering",
    "DefenderForContainersAwsOfferingCloudWatchToKinesis",
    "DefenderForContainersAwsOfferingKinesisToS3",
    "DefenderForContainersAwsOfferingKubernetesScubaReader",
    "DefenderForContainersAwsOfferingKubernetesService",
    "DefenderForServersAwsOffering",
    "DefenderForServersAwsOfferingArcAutoProvisioning",
    "DefenderForServersAwsOfferingArcAutoProvisioningServicePrincipalSecretMetadata",
    "DefenderForServersAwsOfferingDefenderForServers",
    "ETag",
    "ErrorAdditionalInfo",
    "InformationProtectionAwsOffering",
    "InformationProtectionAwsOfferingInformationProtection",
    "Kind",
    "Resource",
    "SecurityConnector",
    "SecurityConnectorPropertiesOrganizationalData",
    "SecurityConnectorsList",
    "SystemData",
    "Tags",
    "TrackedResource",
    "CloudName",
    "CreatedByType",
    "OfferingType",
    "OrganizationMembershipType",
    "SeverityEnum",
    "SupportedCloudEnum",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
