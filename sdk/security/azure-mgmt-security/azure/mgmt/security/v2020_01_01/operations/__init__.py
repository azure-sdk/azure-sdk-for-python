# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._allowed_connections_operations import AllowedConnectionsOperations  # type: ignore
from ._assessments_metadata_operations import AssessmentsMetadataOperations  # type: ignore
from ._assessments_operations import AssessmentsOperations  # type: ignore
from ._discovered_security_solutions_operations import DiscoveredSecuritySolutionsOperations  # type: ignore
from ._external_security_solutions_operations import ExternalSecuritySolutionsOperations  # type: ignore
from ._jit_network_access_policies_operations import JitNetworkAccessPoliciesOperations  # type: ignore
from ._secure_scores_operations import SecureScoresOperations  # type: ignore
from ._secure_score_controls_operations import SecureScoreControlsOperations  # type: ignore
from ._secure_score_control_definitions_operations import SecureScoreControlDefinitionsOperations  # type: ignore
from ._security_solutions_operations import SecuritySolutionsOperations  # type: ignore
from ._security_solutions_reference_data_operations import SecuritySolutionsReferenceDataOperations  # type: ignore
from ._server_vulnerability_assessment_operations import ServerVulnerabilityAssessmentOperations  # type: ignore
from ._topology_operations import TopologyOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AllowedConnectionsOperations",
    "AssessmentsMetadataOperations",
    "AssessmentsOperations",
    "DiscoveredSecuritySolutionsOperations",
    "ExternalSecuritySolutionsOperations",
    "JitNetworkAccessPoliciesOperations",
    "SecureScoresOperations",
    "SecureScoreControlsOperations",
    "SecureScoreControlDefinitionsOperations",
    "SecuritySolutionsOperations",
    "SecuritySolutionsReferenceDataOperations",
    "ServerVulnerabilityAssessmentOperations",
    "TopologyOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
