# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.security import SecurityCenter

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSecurityCenterAdaptiveApplicationControlsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SecurityCenter)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list(self, resource_group):
        response = self.client.adaptive_application_controls.list(
            api_version="2020-01-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get(self, resource_group):
        response = self.client.adaptive_application_controls.get(
            asc_location="str",
            group_name="str",
            api_version="2020-01-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_put(self, resource_group):
        response = self.client.adaptive_application_controls.put(
            asc_location="str",
            group_name="str",
            body={
                "configurationStatus": "str",
                "enforcementMode": "str",
                "id": "str",
                "issues": [{"issue": "str", "numberOfVms": 0.0}],
                "location": "str",
                "name": "str",
                "pathRecommendations": [
                    {
                        "action": "str",
                        "common": bool,
                        "configurationStatus": "str",
                        "fileType": "str",
                        "path": "str",
                        "publisherInfo": {
                            "binaryName": "str",
                            "productName": "str",
                            "publisherName": "str",
                            "version": "str",
                        },
                        "type": "str",
                        "userSids": ["str"],
                        "usernames": [{"recommendationAction": "str", "username": "str"}],
                    }
                ],
                "protectionMode": {"exe": "str", "executable": "str", "msi": "str", "script": "str"},
                "recommendationStatus": "str",
                "sourceSystem": "str",
                "type": "str",
                "vmRecommendations": [
                    {
                        "configurationStatus": "str",
                        "enforcementSupport": "str",
                        "recommendationAction": "str",
                        "resourceId": "str",
                    }
                ],
            },
            api_version="2020-01-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_delete(self, resource_group):
        response = self.client.adaptive_application_controls.delete(
            asc_location="str",
            group_name="str",
            api_version="2020-01-01",
        )

        # please add some check logic here by yourself
        # ...
