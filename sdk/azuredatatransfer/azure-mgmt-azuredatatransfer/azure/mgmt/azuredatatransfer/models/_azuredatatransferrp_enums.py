# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class DataType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Transfer Storage Blobs or Tables."""

    BLOB = "Blob"
    TABLE = "Table"


class Direction(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Direction of data movement."""

    SEND = "Send"
    RECEIVE = "Receive"


class FlowBillingTier(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Billing tier for this messaging flow."""

    BLOB_TRANSPORT = "BlobTransport"
    STANDARD = "Standard"
    PREMIUM = "Premium"


class FlowStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the current flow."""

    ENABLED = "Enabled"
    DISABLED = "Disabled"


class FlowType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Flow type for the specified resource."""

    UNKNOWN = "Unknown"
    COMPLEX = "Complex"
    DEV_SEC_OPS = "DevSecOps"
    MESSAGING = "Messaging"
    MISSION = "Mission"
    MICROSOFT_INTERNAL = "MicrosoftInternal"
    BASIC_FILES = "BasicFiles"
    DATA = "Data"
    STREAMING_VIDEO = "StreamingVideo"
    OPAQUE = "Opaque"
    MISSION_OPAQUE_XML = "MissionOpaqueXML"


class LinkStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Link status of the current connection."""

    LINKED = "Linked"
    UNLINKED = "Unlinked"


class LinkStatusFlow(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Link status of the current flow."""

    LINKED = "Linked"
    UNLINKED = "Unlinked"


class ListApprovedSchemasDirection(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The direction pipeline to filter approved schemas."""

    SEND = "Send"
    RECEIVE = "Receive"


class ManagedServiceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class OperationStatusEnum(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Operation status for the last patch request for this connection."""

    FAILED = "Failed"
    SUCCEEDED = "Succeeded"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Provisioning state of the flow."""

    FAILED = "Failed"
    SUCCEEDED = "Succeeded"
    CANCELED = "Canceled"
    ACCEPTED = "Accepted"


class SchemaDirection(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The direction of the schema."""

    SEND = "Send"
    RECEIVE = "Receive"


class SchemaStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the schema."""

    NEW = "New"
    APPROVED = "Approved"


class Status(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the connection."""

    IN_REVIEW = "InReview"
    APPROVED = "Approved"
    REJECTED = "Rejected"
    ACCEPTED = "Accepted"


class ValidateSchemaStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Validation status of the schema."""

    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
