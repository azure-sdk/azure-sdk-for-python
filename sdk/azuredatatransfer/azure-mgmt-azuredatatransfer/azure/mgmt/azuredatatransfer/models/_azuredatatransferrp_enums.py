# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class ApiMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will
    be invoked.
    """

    SDK = "SDK"
    """The API flow will forward calls to a custom Software Development Kit implementation."""
    ENDPOINT = "Endpoint"
    """The API flow will forward calls to a specified endpoint."""


class ConnectionStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the connection."""

    IN_REVIEW = "InReview"
    """This connection has been created but is under review by the pipeline owner."""
    APPROVED = "Approved"
    """This connection has been approved by the pipeline owner and is ready for use."""
    REJECTED = "Rejected"
    """This connection has been rejected by the pipeline owner and cannot be used."""
    ACCEPTED = "Accepted"
    """Creation of the connection has been accepted."""


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class DataType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Transfer Storage Blobs or Tables."""

    BLOB = "Blob"
    """The flow uses Azure Storage blobs to send or receive data."""
    TABLE = "Table"
    """The flow uses Azure Storage tables to send or receive data."""


class Direction(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Direction of data movement."""

    SEND = "Send"
    """The direction is on the sending side of a pipeline, connection, or flow."""
    RECEIVE = "Receive"
    """The direction is on the receiving side side of a pipeline, connection, or flow."""


class FlowBillingTier(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Billing tier for this messaging flow."""

    BLOB_TRANSPORT = "BlobTransport"
    """Billing tier for messaging processing that charges based on how much data is transferred."""
    STANDARD = "Standard"
    """Billing tier for standard messaging processing that charges based on having the messaging
    resource allocated."""
    PREMIUM = "Premium"
    """Billing tier for premium messaging processing that charges based on having the messaging
    resource allocated."""


class FlowStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the current flow."""

    ENABLED = "Enabled"
    """The flow is currently enabled and able to send or receive data."""
    DISABLED = "Disabled"
    """The flow is currently disabled and cannot send or receive data."""


class FlowType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Flow type for the specified resource."""

    UNKNOWN = "Unknown"
    """This type of flow is not set."""
    COMPLEX = "Complex"
    """This flow sends complex documents, such as Microsoft Office documents of Portable document
    format files."""
    DEV_SEC_OPS = "DevSecOps"
    """This flow sends source code files and artifacts."""
    MESSAGING = "Messaging"
    """This flow over the Azure Data Transfer low latency messaging subsystem."""
    MISSION = "Mission"
    """This flow sends data that will not be processed by any security system."""
    MICROSOFT_INTERNAL = "MicrosoftInternal"
    """This flow is assigned to internal Microsoft use cases."""
    BASIC_FILES = "BasicFiles"
    """This flow sends blobs that can be used for multiple use cases."""
    DATA = "Data"
    """This flow sends blobs that can be used for multiple use cases."""
    STANDARD = "Standard"
    """This flow sends blobs that can be used for multiple use cases."""
    STREAMING_VIDEO = "StreamingVideo"
    """This flow sends video streams."""
    OPAQUE = "Opaque"
    """This flow sends blobs that will not be processed by any security system."""
    MISSION_OPAQUE_XML = "MissionOpaqueXML"
    """This flow sends Extensible Markup Language that will not be processed by any security system."""
    DISK_IMAGES = "DiskImages"
    """This flow sends blobs that can be used for Virtual Machines."""
    API = "API"
    """This flow sends data via an Application Programmer Interface."""


class ForceDisabledStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of force disablement."""

    CONNECTION_FORCE_DISABLED = "ConnectionForceDisabled"
    """This Flow has been disabled as the connection has been disabled."""
    FLOW_TYPE_FORCE_DISABLED = "FlowTypeForceDisabled"
    """This Flow has been disabled as the flow type this flow uses has been disabled."""


class IdentityTranslation(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Flag for if Azure Data Transfer API Flow should extract the user token."""

    USER_IDENTITY = "UserIdentity"
    """The API flow will make use of the user identity that called this API flow, and pass that token
    through the boundary."""
    SERVICE_IDENTITY = "ServiceIdentity"
    """The API flow will make use of the Azure Data Transfer Flow managed identity on the other side
    of the boundary."""


class LinkStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Link status of the current pipeline, connection, flow."""

    LINKED = "Linked"
    """The pipeline, connection, or flow is currently linked with another corresponding pipeline,
    connection, or flow, and can be used."""
    UNLINKED = "Unlinked"
    """The pipeline, connection, or flow is not linked with another corresponding pipeline,
    connection, or flow, and cannot be used."""


class ManagedServiceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class OperationStatusEnum(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Operation status for the last patch request for this connection."""

    FAILED = "Failed"
    """The last patch request for this connection completed with an error."""
    SUCCEEDED = "Succeeded"
    """The last patch request for this connection completed."""


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class PipelineStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the current pipeline."""

    ENABLED = "Enabled"
    """The pipeline is currently enabled and all child connection and flow resources below able to
    send or receive data."""
    DISABLED = "Disabled"
    """The pipeline is currently disabled and all child connection and flow resources below are unable
    to send or receive data."""


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Provisioning state of the pipeline, connection, flow."""

    SUCCEEDED = "Succeeded"
    """Resource has been created."""
    FAILED = "Failed"
    """Resource creation failed."""
    CANCELED = "Canceled"
    """Resource creation was canceled."""
    ACCEPTED = "Accepted"
    """Resource has been accepted for creation."""


class SchemaStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the schema."""

    NEW = "New"
    """A schema that has not been approved and is awaiting review."""
    APPROVED = "Approved"
    """A schema that has been approved and is ready for use."""


class SchemaType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The Schema Type."""

    XSD = "Xsd"
    """The schema represents a single XML schema definition file."""
    ZIP = "Zip"
    """The schema represents a ZIP file with multiple XML schema definition files within it."""


class StreamProtocol(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The protocol of the stream."""

    UDP = "UDP"
    """This Flow is using User Datagram Protocol for the video stream."""
    SRT = "SRT"
    """This Flow is using Secure Reliable Transfer for the video stream."""
    RTP = "RTP"
    """This Flow is using Real-time Transport Protocol for the video stream."""


class TargetType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of target to execute the action on."""

    PIPELINE = "Pipeline"
    """The action executing is targeting a pipeline."""
    CONNECTION = "Connection"
    """The action executing is targeting a connection."""
    FLOW_TYPE = "FlowType"
    """The action executing is targeting a flow type."""


class ValidateSchemaStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Validation status of the schema."""

    SUCCEEDED = "Succeeded"
    """Validation of the schema was successful."""
    FAILED = "Failed"
    """The schema failed validation, whether due to error or an invalid schema."""
