# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.peering import PeeringManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestPeeringManagementPeerAsnsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(PeeringManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_peer_asns_get(self, resource_group):
        response = self.client.peer_asns.get(
            peer_asn_name="str",
            api_version="2025-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_peer_asns_create_or_update(self, resource_group):
        response = self.client.peer_asns.create_or_update(
            peer_asn_name="str",
            peer_asn={
                "errorMessage": "str",
                "id": "str",
                "name": "str",
                "peerAsn": 0,
                "peerContactDetail": [{"email": "str", "phone": "str", "role": "str"}],
                "peerName": "str",
                "type": "str",
                "validationState": "str",
            },
            api_version="2025-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_peer_asns_delete(self, resource_group):
        response = self.client.peer_asns.delete(
            peer_asn_name="str",
            api_version="2025-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_peer_asns_list_by_subscription(self, resource_group):
        response = self.client.peer_asns.list_by_subscription(
            api_version="2025-05-01",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...
