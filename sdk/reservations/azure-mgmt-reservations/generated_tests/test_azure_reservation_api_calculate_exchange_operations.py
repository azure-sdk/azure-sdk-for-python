# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.reservations import AzureReservationAPI

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAzureReservationAPICalculateExchangeOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AzureReservationAPI)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_calculate_exchange_begin_post(self, resource_group):
        response = self.client.calculate_exchange.begin_post(
            body={
                "properties": {
                    "reservationsToExchange": [{"quantity": 0, "reservationId": "str"}],
                    "reservationsToPurchase": [
                        {
                            "appliedScopeProperties": {
                                "displayName": "str",
                                "managementGroupId": "str",
                                "resourceGroupId": "str",
                                "subscriptionId": "str",
                                "tenantId": "str",
                            },
                            "appliedScopeType": "str",
                            "appliedScopes": ["str"],
                            "billingPlan": "str",
                            "billingScopeId": "str",
                            "displayName": "str",
                            "location": "str",
                            "quantity": 0,
                            "renew": False,
                            "reservedResourceProperties": {"instanceFlexibility": "str"},
                            "reservedResourceType": "str",
                            "reviewDateTime": "2020-02-20 00:00:00",
                            "sku": {"name": "str"},
                            "term": "str",
                        }
                    ],
                    "savingsPlansToPurchase": [
                        {
                            "appliedScopeProperties": {
                                "displayName": "str",
                                "managementGroupId": "str",
                                "resourceGroupId": "str",
                                "subscriptionId": "str",
                                "tenantId": "str",
                            },
                            "appliedScopeType": "str",
                            "billingPlan": "str",
                            "billingScopeId": "str",
                            "commitment": {"amount": 0.0, "currencyCode": "str", "grain": "str"},
                            "displayName": "str",
                            "sku": {"name": "str"},
                            "term": "str",
                        }
                    ],
                }
            },
            api_version="2022-11-01",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
