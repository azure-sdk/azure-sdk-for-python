# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    AccessModeSettings,
    AccessModeSettingsExclusion,
    AzureMonitorPrivateLinkScope,
    AzureMonitorPrivateLinkScopeListResult,
    DefaultErrorResponse,
    ErrorAdditionalInfo,
    ErrorDetail,
    OperationStatus,
    PrivateEndpoint,
    PrivateEndpointConnection,
    PrivateEndpointConnectionListResult,
    PrivateLinkResource,
    PrivateLinkResourceListResult,
    PrivateLinkServiceConnectionState,
    ProxyResource,
    Resource,
    ScopedResource,
    ScopedResourceListResult,
    SystemData,
    TagsResource,
    TrackedResource,
)

from ._monitor_management_client_enums import (  # type: ignore
    AccessMode,
    CreatedByType,
    PrivateEndpointConnectionProvisioningState,
    PrivateEndpointServiceConnectionStatus,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AccessModeSettings",
    "AccessModeSettingsExclusion",
    "AzureMonitorPrivateLinkScope",
    "AzureMonitorPrivateLinkScopeListResult",
    "DefaultErrorResponse",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "OperationStatus",
    "PrivateEndpoint",
    "PrivateEndpointConnection",
    "PrivateEndpointConnectionListResult",
    "PrivateLinkResource",
    "PrivateLinkResourceListResult",
    "PrivateLinkServiceConnectionState",
    "ProxyResource",
    "Resource",
    "ScopedResource",
    "ScopedResourceListResult",
    "SystemData",
    "TagsResource",
    "TrackedResource",
    "AccessMode",
    "CreatedByType",
    "PrivateEndpointConnectionProvisioningState",
    "PrivateEndpointServiceConnectionStatus",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
