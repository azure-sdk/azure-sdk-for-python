# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.monitor import MonitorManagementClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-monitor
# USAGE
    python pipeline_group_create_syslogs_with_cache.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = MonitorManagementClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.pipeline_groups.begin_create_or_update(
        resource_group_name="myResourceGroup",
        pipeline_group_name="plGroup1",
        resource={
            "extendedLocation": {
                "name": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.extendedlocation/customlocations/myTestCustomLocation",
                "type": "CustomLocation",
            },
            "location": "eastus2",
            "properties": {
                "exporters": [
                    {
                        "azureMonitorWorkspaceLogs": {
                            "api": {
                                "dataCollectionEndpointUrl": "https://logs-myingestion-eb0s.eastus-1.ingest.monitor.azure.com",
                                "dataCollectionRule": "dcr-00000000000000000000000000000000",
                                "schema": {
                                    "recordMap": [
                                        {"from": "body", "to": "Body"},
                                        {"from": "severity_text", "to": "SeverityText"},
                                        {"from": "time_unix_nano", "to": "TimeGenerated"},
                                    ]
                                },
                                "stream": "Custom-MyTableRawData_CL",
                            },
                            "cache": {"maxStorageUsage": 100, "retentionPeriod": 10},
                            "concurrency": {"batchQueueSize": 100, "workerCount": 4},
                        },
                        "name": "my-workspace-logs-exporter1",
                        "type": "AzureMonitorWorkspaceLogs",
                    }
                ],
                "processors": [{"name": "batch-processor1", "type": "Batch"}],
                "receivers": [{"name": "syslog-receiver1", "syslog": {"endpoint": "0.0.0.0:514"}, "type": "Syslog"}],
                "service": {
                    "pipelines": [
                        {
                            "exporters": ["my-workspace-logs-exporter1"],
                            "name": "MyPipelineForLogs1",
                            "processors": ["batch-processor1"],
                            "receivers": ["syslog-receiver1"],
                            "type": "logs",
                        }
                    ]
                },
            },
            "tags": {"tag1": "A", "tag2": "B"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2023-10-01-preview/PipelineGroupCreateSyslogsWithCache.json
if __name__ == "__main__":
    main()
