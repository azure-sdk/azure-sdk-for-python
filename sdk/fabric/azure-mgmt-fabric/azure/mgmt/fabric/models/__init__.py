# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    CapacityAdministration,
    CheckNameAvailabilityRequest,
    CheckNameAvailabilityResponse,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    FabricCapacity,
    FabricCapacityListResult,
    FabricCapacityProperties,
    FabricCapacityUpdate,
    FabricCapacityUpdateProperties,
    Operation,
    OperationDisplay,
    OperationListResult,
    Resource,
    RpSku,
    RpSkuDetailsForExistingResource,
    RpSkuDetailsForNewResource,
    RpSkuEnumerationForExistingResourceResult,
    RpSkuEnumerationForNewResourceResult,
    RpSkuProperties,
    RpUsageAndQuotaDetailsForExistingResource,
    RpUsageAndQuotaEnumerationForExistingResourceResult,
    SystemData,
    TrackedResource,
)

from ._microsoft_fabric_management_service_enums import (  # type: ignore
    ActionType,
    CheckNameAvailabilityReason,
    CreatedByType,
    Origin,
    ProvisioningState,
    ResourceState,
    RpSkuTier,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "CapacityAdministration",
    "CheckNameAvailabilityRequest",
    "CheckNameAvailabilityResponse",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "FabricCapacity",
    "FabricCapacityListResult",
    "FabricCapacityProperties",
    "FabricCapacityUpdate",
    "FabricCapacityUpdateProperties",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "Resource",
    "RpSku",
    "RpSkuDetailsForExistingResource",
    "RpSkuDetailsForNewResource",
    "RpSkuEnumerationForExistingResourceResult",
    "RpSkuEnumerationForNewResourceResult",
    "RpSkuProperties",
    "RpUsageAndQuotaDetailsForExistingResource",
    "RpUsageAndQuotaEnumerationForExistingResourceResult",
    "SystemData",
    "TrackedResource",
    "ActionType",
    "CheckNameAvailabilityReason",
    "CreatedByType",
    "Origin",
    "ProvisioningState",
    "ResourceState",
    "RpSkuTier",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
