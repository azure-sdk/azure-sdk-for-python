# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AppCredentials(_serialization.Model):
    """Application credentials used to call the operator's Network APIs.

    All required parameters must be populated in order to send to Azure.

    :ivar app_id: Application ID. Required.
    :vartype app_id: str
    :ivar app_secret: Application Secret. Required.
    :vartype app_secret: str
    """

    _validation = {
        "app_id": {"required": True},
        "app_secret": {"required": True},
    }

    _attribute_map = {
        "app_id": {"key": "appId", "type": "str"},
        "app_secret": {"key": "appSecret", "type": "str"},
    }

    def __init__(self, *, app_id: str, app_secret: str, **kwargs: Any) -> None:
        """
        :keyword app_id: Application ID. Required.
        :paramtype app_id: str
        :keyword app_secret: Application Secret. Required.
        :paramtype app_secret: str
        """
        super().__init__(**kwargs)
        self.app_id = app_id
        self.app_secret = app_secret


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.programmableconnectivity.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.programmableconnectivity.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.programmableconnectivity.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.programmableconnectivity.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.programmableconnectivity.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.programmableconnectivity.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class Gateway(TrackedResource):
    """A Programmable Connectivity Gateway resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.programmableconnectivity.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar sku: SKU of the Azure Programmable Connectivity resource.
    :vartype sku: str
    :ivar open_api_gateways: List of Open API gateways selected by the user.
    :vartype open_api_gateways: list[str]
    :ivar gateway_base_url: Base URL of the Gateway resource. This is the URL that the users would
     use to make Open API Gateway requests to the Operators via Azure.
    :vartype gateway_base_url: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or
     ~azure.mgmt.programmableconnectivity.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "open_api_gateways": {"readonly": True},
        "gateway_base_url": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "sku": {"key": "properties.sku", "type": "str"},
        "open_api_gateways": {"key": "properties.openApiGateways", "type": "[str]"},
        "gateway_base_url": {"key": "properties.gatewayBaseUrl", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self, *, location: str, tags: Optional[Dict[str, str]] = None, sku: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword sku: SKU of the Azure Programmable Connectivity resource.
        :paramtype sku: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.sku = sku
        self.open_api_gateways = None
        self.gateway_base_url = None
        self.provisioning_state = None


class GatewayListKeysResult(_serialization.Model):
    """APC Gateway API Key list result.

    :ivar primary_key: Primary Key.
    :vartype primary_key: str
    :ivar secondary_key: Secondary Key.
    :vartype secondary_key: str
    """

    _attribute_map = {
        "primary_key": {"key": "primaryKey", "type": "str"},
        "secondary_key": {"key": "secondaryKey", "type": "str"},
    }

    def __init__(
        self, *, primary_key: Optional[str] = None, secondary_key: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword primary_key: Primary Key.
        :paramtype primary_key: str
        :keyword secondary_key: Secondary Key.
        :paramtype secondary_key: str
        """
        super().__init__(**kwargs)
        self.primary_key = primary_key
        self.secondary_key = secondary_key


class GatewayListResult(_serialization.Model):
    """The response of a Gateway list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Gateway items on this page. Required.
    :vartype value: list[~azure.mgmt.programmableconnectivity.models.Gateway]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Gateway]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Gateway"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Gateway items on this page. Required.
        :paramtype value: list[~azure.mgmt.programmableconnectivity.models.Gateway]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class GatewayRegenerateKeyRequest(_serialization.Model):
    """APC Gateway API Key regenerate request.

    All required parameters must be populated in order to send to Azure.

    :ivar key_type: Key type to regenerate. primary or secondary. Required. Known values are:
     "primary" and "secondary".
    :vartype key_type: str or ~azure.mgmt.programmableconnectivity.models.RegenerateKeyType
    """

    _validation = {
        "key_type": {"required": True},
    }

    _attribute_map = {
        "key_type": {"key": "keyType", "type": "str"},
    }

    def __init__(self, *, key_type: Union[str, "_models.RegenerateKeyType"], **kwargs: Any) -> None:
        """
        :keyword key_type: Key type to regenerate. primary or secondary. Required. Known values are:
         "primary" and "secondary".
        :paramtype key_type: str or ~azure.mgmt.programmableconnectivity.models.RegenerateKeyType
        """
        super().__init__(**kwargs)
        self.key_type = key_type


class GatewayUpdate(_serialization.Model):
    """The type used for update operations of the Gateway.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar sku: SKU of the Azure Programmable Connectivity resource.
    :vartype sku: str
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "sku": {"key": "properties.sku", "type": "str"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, sku: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: SKU of the Azure Programmable Connectivity resource.
        :paramtype sku: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.sku = sku


class OpenApiGateway(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """A Programmable Connectivity Open API Gateway resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.programmableconnectivity.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar gateway_id: APC Gateway resource ID linked to this Open API Gateway.
    :vartype gateway_id: str
    :ivar open_api_gateway_offering_id: Reference to the Open API Gateway Offering Resource ID.
    :vartype open_api_gateway_offering_id: str
    :ivar features: List of features the user has selected for the current operator in the country
     provided in the Offering.
    :vartype features: list[str]
    :ivar account_type: Type of the account the user has with the Operator's Network API
     infrastructure. AzureManaged | UserManaged. Known values are: "AzureManaged" and "UserManaged".
    :vartype account_type: str or ~azure.mgmt.programmableconnectivity.models.AccountType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or
     ~azure.mgmt.programmableconnectivity.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "gateway_id": {"key": "properties.gatewayId", "type": "str"},
        "open_api_gateway_offering_id": {"key": "properties.openApiGatewayOfferingId", "type": "str"},
        "features": {"key": "properties.features", "type": "[str]"},
        "account_type": {"key": "properties.accountType", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        gateway_id: Optional[str] = None,
        open_api_gateway_offering_id: Optional[str] = None,
        features: Optional[List[str]] = None,
        account_type: Optional[Union[str, "_models.AccountType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword gateway_id: APC Gateway resource ID linked to this Open API Gateway.
        :paramtype gateway_id: str
        :keyword open_api_gateway_offering_id: Reference to the Open API Gateway Offering Resource ID.
        :paramtype open_api_gateway_offering_id: str
        :keyword features: List of features the user has selected for the current operator in the
         country provided in the Offering.
        :paramtype features: list[str]
        :keyword account_type: Type of the account the user has with the Operator's Network API
         infrastructure. AzureManaged | UserManaged. Known values are: "AzureManaged" and "UserManaged".
        :paramtype account_type: str or ~azure.mgmt.programmableconnectivity.models.AccountType
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.gateway_id = gateway_id
        self.open_api_gateway_offering_id = open_api_gateway_offering_id
        self.features = features
        self.account_type = account_type
        self.provisioning_state = None


class OpenApiGatewayListResult(_serialization.Model):
    """The response of a OpenApiGateway list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The OpenApiGateway items on this page. Required.
    :vartype value: list[~azure.mgmt.programmableconnectivity.models.OpenApiGateway]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[OpenApiGateway]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.OpenApiGateway"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The OpenApiGateway items on this page. Required.
        :paramtype value: list[~azure.mgmt.programmableconnectivity.models.OpenApiGateway]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.programmableconnectivity.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class OpenApiGatewayOffering(ProxyResource):
    """A Programmable Connectivity Open API Gateway Offerings resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.programmableconnectivity.models.SystemData
    :ivar offer_name: Open Gateway Offering Display Name.
    :vartype offer_name: str
    :ivar operator_name: Name of the Operator this offering belongs to.
    :vartype operator_name: str
    :ivar endpoint: Endpoint (Base URL) for the Operator's Network API in current region/country.
    :vartype endpoint: str
    :ivar country: Name of the country where this offering is being supported.
    :vartype country: str
    :ivar features: List of Network API features supported in this offering. The features are
     specific to a country/region.
    :vartype features: list[str]
    :ivar provisioning_state: The provisioning state of the resource. Known values are:
     "Succeeded", "Failed", and "Canceled".
    :vartype provisioning_state: str or
     ~azure.mgmt.programmableconnectivity.models.ResourceProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "offer_name": {"key": "properties.offerName", "type": "str"},
        "operator_name": {"key": "properties.operatorName", "type": "str"},
        "endpoint": {"key": "properties.endpoint", "type": "str"},
        "country": {"key": "properties.country", "type": "str"},
        "features": {"key": "properties.features", "type": "[str]"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        offer_name: Optional[str] = None,
        operator_name: Optional[str] = None,
        endpoint: Optional[str] = None,
        country: Optional[str] = None,
        features: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword offer_name: Open Gateway Offering Display Name.
        :paramtype offer_name: str
        :keyword operator_name: Name of the Operator this offering belongs to.
        :paramtype operator_name: str
        :keyword endpoint: Endpoint (Base URL) for the Operator's Network API in current
         region/country.
        :paramtype endpoint: str
        :keyword country: Name of the country where this offering is being supported.
        :paramtype country: str
        :keyword features: List of Network API features supported in this offering. The features are
         specific to a country/region.
        :paramtype features: list[str]
        """
        super().__init__(**kwargs)
        self.offer_name = offer_name
        self.operator_name = operator_name
        self.endpoint = endpoint
        self.country = country
        self.features = features
        self.provisioning_state = None


class OpenApiGatewayOfferingListResult(_serialization.Model):
    """The response of a OpenApiGatewayOffering list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The OpenApiGatewayOffering items on this page. Required.
    :vartype value: list[~azure.mgmt.programmableconnectivity.models.OpenApiGatewayOffering]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[OpenApiGatewayOffering]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.OpenApiGatewayOffering"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The OpenApiGatewayOffering items on this page. Required.
        :paramtype value: list[~azure.mgmt.programmableconnectivity.models.OpenApiGatewayOffering]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class OpenApiGatewayUpdate(_serialization.Model):
    """The type used for update operations of the OpenApiGateway.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar gateway_id: APC Gateway resource ID linked to this Open API Gateway.
    :vartype gateway_id: str
    :ivar open_api_gateway_offering_id: Reference to the Open API Gateway Offering Resource ID.
    :vartype open_api_gateway_offering_id: str
    :ivar features: List of features the user has selected for the current operator in the country
     provided in the Offering.
    :vartype features: list[str]
    :ivar account_type: Type of the account the user has with the Operator's Network API
     infrastructure. AzureManaged | UserManaged. Known values are: "AzureManaged" and "UserManaged".
    :vartype account_type: str or ~azure.mgmt.programmableconnectivity.models.AccountType
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "gateway_id": {"key": "properties.gatewayId", "type": "str"},
        "open_api_gateway_offering_id": {"key": "properties.openApiGatewayOfferingId", "type": "str"},
        "features": {"key": "properties.features", "type": "[str]"},
        "account_type": {"key": "properties.accountType", "type": "str"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        gateway_id: Optional[str] = None,
        open_api_gateway_offering_id: Optional[str] = None,
        features: Optional[List[str]] = None,
        account_type: Optional[Union[str, "_models.AccountType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword gateway_id: APC Gateway resource ID linked to this Open API Gateway.
        :paramtype gateway_id: str
        :keyword open_api_gateway_offering_id: Reference to the Open API Gateway Offering Resource ID.
        :paramtype open_api_gateway_offering_id: str
        :keyword features: List of features the user has selected for the current operator in the
         country provided in the Offering.
        :paramtype features: list[str]
        :keyword account_type: Type of the account the user has with the Operator's Network API
         infrastructure. AzureManaged | UserManaged. Known values are: "AzureManaged" and "UserManaged".
        :paramtype account_type: str or ~azure.mgmt.programmableconnectivity.models.AccountType
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.gateway_id = gateway_id
        self.open_api_gateway_offering_id = open_api_gateway_offering_id
        self.features = features
        self.account_type = account_type


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.programmableconnectivity.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.programmableconnectivity.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.programmableconnectivity.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.programmableconnectivity.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.programmableconnectivity.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.programmableconnectivity.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or
     ~azure.mgmt.programmableconnectivity.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.programmableconnectivity.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or
         ~azure.mgmt.programmableconnectivity.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
