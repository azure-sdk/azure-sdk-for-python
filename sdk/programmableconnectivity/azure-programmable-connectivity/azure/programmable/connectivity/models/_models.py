# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Mapping, Optional, TYPE_CHECKING, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class LocationVerifyRequest(_model_base.Model):
    """Request to verify Location.

    All required parameters must be populated in order to send to server.

    :ivar network: Network to query for this device. Required.
    :vartype network: ~azure.programmable.connectivity.models.Network
    :ivar latitude: Latitude of location to be verified. Required.
    :vartype latitude: float
    :ivar longitude: Longitude of location to be verified. Required.
    :vartype longitude: float
    :ivar accuracy: Accuracy expected for location verification in kilometers. Required.
    :vartype accuracy: int
    :ivar network_access_identifier: External identifier or network access identifier of the
     device.
    :vartype network_access_identifier: str
    :ivar phone_number: Phone number in E.164 format (starting with country code), and optionally
     prefixed with '+'.
    :vartype phone_number: str
    :ivar ipv4_address: IPv4 address and port of the device, in the form address:port.
    :vartype ipv4_address: str
    :ivar ipv6_address: IPv6 address of the device.
    :vartype ipv6_address: str
    """

    network: "_models.Network" = rest_field()
    """Network to query for this device. Required."""
    latitude: float = rest_field()
    """Latitude of location to be verified. Required."""
    longitude: float = rest_field()
    """Longitude of location to be verified. Required."""
    accuracy: int = rest_field()
    """Accuracy expected for location verification in kilometers. Required."""
    network_access_identifier: Optional[str] = rest_field(name="networkAccessIdentifier")
    """External identifier or network access identifier of the device."""
    phone_number: Optional[str] = rest_field(name="phoneNumber")
    """Phone number in E.164 format (starting with country code), and optionally prefixed with '+'."""
    ipv4_address: Optional[str] = rest_field(name="ipv4Address")
    """IPv4 address and port of the device, in the form address:port."""
    ipv6_address: Optional[str] = rest_field(name="ipv6Address")
    """IPv6 address of the device."""

    @overload
    def __init__(
        self,
        *,
        network: "_models.Network",
        latitude: float,
        longitude: float,
        accuracy: int,
        network_access_identifier: Optional[str] = None,
        phone_number: Optional[str] = None,
        ipv4_address: Optional[str] = None,
        ipv6_address: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class LocationVerifyResponse(_model_base.Model):
    """Response verifying location.

    All required parameters must be populated in order to send to server.

    :ivar verified: True if the location is verified, False otherwise. Required.
    :vartype verified: bool
    """

    verified: bool = rest_field()
    """True if the location is verified, False otherwise. Required."""

    @overload
    def __init__(
        self,
        *,
        verified: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Network(_model_base.Model):
    """Resource representing an Operator Network.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar network_id: The ID of the network. Required.
    :vartype network_id: str
    """

    network_id: str = rest_field(name="networkId", visibility=["read"])
    """The ID of the network. Required."""


class NetworkDevice(_model_base.Model):
    """Represents a Device whose Network is searched for.

    All required parameters must be populated in order to send to server.

    :ivar phone_number: Phone number in E.164 format (starting with country code), and optionally
     prefixed with '+'. Required.
    :vartype phone_number: str
    """

    phone_number: str = rest_field(name="phoneNumber")
    """Phone number in E.164 format (starting with country code), and optionally prefixed with '+'.
     Required."""

    @overload
    def __init__(
        self,
        *,
        phone_number: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class NumberRetrieveResponse(_model_base.Model):
    """Response with number of device.

    All required parameters must be populated in order to send to server.

    :ivar phone_number: Phone number in E.164 format (starting with country code), and optionally
     prefixed with '+'. Required.
    :vartype phone_number: str
    """

    phone_number: str = rest_field(name="phoneNumber")
    """Phone number in E.164 format (starting with country code), and optionally prefixed with '+'.
     Required."""

    @overload
    def __init__(
        self,
        *,
        phone_number: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class NumberVerifyRequest(_model_base.Model):
    """Request to verify number of device.

    All required parameters must be populated in order to send to server.

    :ivar network: Network to query for this device. Required.
    :vartype network: ~azure.programmable.connectivity.models.Network
    :ivar phone_number: Phone number in E.164 format (starting with country code), and optionally
     prefixed with '+'.
    :vartype phone_number: str
    :ivar hashed_phone_number: Hashed phone number. SHA-256 (in hexadecimal representation) of the
     mobile phone number in **E.164 format (starting with country code)**. Optionally prefixed with
     '+'.
    :vartype hashed_phone_number: str
    """

    network: "_models.Network" = rest_field()
    """Network to query for this device. Required."""
    phone_number: Optional[str] = rest_field(name="phoneNumber")
    """Phone number in E.164 format (starting with country code), and optionally prefixed with '+'."""
    hashed_phone_number: Optional[str] = rest_field(name="hashedPhoneNumber")
    """Hashed phone number. SHA-256 (in hexadecimal representation) of the mobile phone number in
     **E.164 format (starting with country code)**. Optionally prefixed with '+'."""

    @overload
    def __init__(
        self,
        *,
        network: "_models.Network",
        phone_number: Optional[str] = None,
        hashed_phone_number: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class NumberVerifyResponse(_model_base.Model):
    """Response verifying number of device.

    All required parameters must be populated in order to send to server.

    :ivar verified: True if number is verified, False otherwise. Required.
    :vartype verified: bool
    """

    verified: bool = rest_field()
    """True if number is verified, False otherwise. Required."""

    @overload
    def __init__(
        self,
        *,
        verified: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class SimSwapRetrieveRequest(_model_base.Model):
    """Request to retrieve SimSwap date.

    All required parameters must be populated in order to send to server.

    :ivar network: Network to query for this device. Required.
    :vartype network: ~azure.programmable.connectivity.models.Network
    :ivar phone_number: Phone number in E.164 format (starting with country code), and optionally
     prefixed with '+'. Required.
    :vartype phone_number: str
    """

    network: "_models.Network" = rest_field()
    """Network to query for this device. Required."""
    phone_number: str = rest_field(name="phoneNumber")
    """Phone number in E.164 format (starting with country code), and optionally prefixed with '+'.
     Required."""

    @overload
    def __init__(
        self,
        *,
        network: "_models.Network",
        phone_number: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class SimSwapRetrieveResponse(_model_base.Model):
    """Response with SimSwap date.

    All required parameters must be populated in order to send to server.

    :ivar date: Datetime of most recent swap for SIM. Required.
    :vartype date: ~datetime.datetime
    """

    date: datetime.datetime = rest_field(format="rfc3339")
    """Datetime of most recent swap for SIM. Required."""

    @overload
    def __init__(
        self,
        *,
        date: datetime.datetime,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class SimSwapVerifyRequest(_model_base.Model):
    """Request to verify SimSwap in period.

    All required parameters must be populated in order to send to server.

    :ivar max_age: Maximum lookback for SimSwap verification.
    :vartype max_age: int
    :ivar network: Network to query for this device. Required.
    :vartype network: ~azure.programmable.connectivity.models.Network
    :ivar phone_number: Phone number in E.164 format (starting with country code), and optionally
     prefixed with '+'. Required.
    :vartype phone_number: str
    """

    max_age: Optional[int] = rest_field(name="maxAge")
    """Maximum lookback for SimSwap verification."""
    network: "_models.Network" = rest_field()
    """Network to query for this device. Required."""
    phone_number: str = rest_field(name="phoneNumber")
    """Phone number in E.164 format (starting with country code), and optionally prefixed with '+'.
     Required."""

    @overload
    def __init__(
        self,
        *,
        network: "_models.Network",
        phone_number: str,
        max_age: Optional[int] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class SimSwapVerifyResponse(_model_base.Model):
    """Response verifying SimSwap in period.

    All required parameters must be populated in order to send to server.

    :ivar verified: True if the SIM has swapped in the specified period, False otherwise. Required.
    :vartype verified: bool
    """

    verified: bool = rest_field()
    """True if the SIM has swapped in the specified period, False otherwise. Required."""

    @overload
    def __init__(
        self,
        *,
        verified: bool,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
