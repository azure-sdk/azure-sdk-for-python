# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._availability_statuses_operations import AvailabilityStatusesOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._metadata_operations import MetadataOperations  # type: ignore
from ._impacted_resources_operations import ImpactedResourcesOperations  # type: ignore
from ._security_advisory_impacted_resources_operations import SecurityAdvisoryImpactedResourcesOperations  # type: ignore
from ._events_operations import EventsOperations  # type: ignore
from ._event_operations import EventOperations  # type: ignore
from ._child_availability_statuses_operations import ChildAvailabilityStatusesOperations  # type: ignore
from ._child_resources_operations import ChildResourcesOperations  # type: ignore
from ._emerging_issues_operations import EmergingIssuesOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AvailabilityStatusesOperations",
    "Operations",
    "MetadataOperations",
    "ImpactedResourcesOperations",
    "SecurityAdvisoryImpactedResourcesOperations",
    "EventsOperations",
    "EventOperations",
    "ChildAvailabilityStatusesOperations",
    "ChildResourcesOperations",
    "EmergingIssuesOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
