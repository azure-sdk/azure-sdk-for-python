# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import DynamicSessionsClientTestBase, DynamicSessionsPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestDynamicSessionsSessionResourceFilesOperations(DynamicSessionsClientTestBase):
    @DynamicSessionsPreparer()
    @recorded_by_proxy
    def test_session_resource_files_list(self, dynamicsessions_endpoint):
        client = self.create_client(endpoint=dynamicsessions_endpoint)
        response = client.session_resource_files.list(
            identifier="str",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @DynamicSessionsPreparer()
    @recorded_by_proxy
    def test_session_resource_files_get(self, dynamicsessions_endpoint):
        client = self.create_client(endpoint=dynamicsessions_endpoint)
        response = client.session_resource_files.get(
            name="str",
            identifier="str",
        )

        # please add some check logic here by yourself
        # ...

    @DynamicSessionsPreparer()
    @recorded_by_proxy
    def test_session_resource_files_delete(self, dynamicsessions_endpoint):
        client = self.create_client(endpoint=dynamicsessions_endpoint)
        response = client.session_resource_files.delete(
            name="str",
            identifier="str",
        )

        # please add some check logic here by yourself
        # ...

    @DynamicSessionsPreparer()
    @recorded_by_proxy
    def test_session_resource_files_upload(self, dynamicsessions_endpoint):
        client = self.create_client(endpoint=dynamicsessions_endpoint)
        response = client.session_resource_files.upload(
            body={"file": "filetype"},
            identifier="str",
            file="filetype",
        )

        # please add some check logic here by yourself
        # ...

    @DynamicSessionsPreparer()
    @recorded_by_proxy
    def test_session_resource_files_get_content(self, dynamicsessions_endpoint):
        client = self.create_client(endpoint=dynamicsessions_endpoint)
        response = client.session_resource_files.get_content(
            name="str",
            identifier="str",
        )

        # please add some check logic here by yourself
        # ...
