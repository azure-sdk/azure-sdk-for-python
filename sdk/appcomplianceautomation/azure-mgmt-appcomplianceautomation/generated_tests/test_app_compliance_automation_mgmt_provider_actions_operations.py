# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.appcomplianceautomation import AppComplianceAutomationMgmtClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAppComplianceAutomationMgmtProviderActionsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AppComplianceAutomationMgmtClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_check_name_availability(self, resource_group):
        response = self.client.provider_actions.check_name_availability(
            body={"name": "str", "type": "str"},
            api_version="2024-06-27",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_collection_count(self, resource_group):
        response = self.client.provider_actions.get_collection_count(
            body={"type": "str"},
            api_version="2024-06-27",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_overview_status(self, resource_group):
        response = self.client.provider_actions.get_overview_status(
            body={"type": "str"},
            api_version="2024-06-27",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_in_use_storage_accounts(self, resource_group):
        response = self.client.provider_actions.list_in_use_storage_accounts(
            body={"subscriptionIds": ["str"]},
            api_version="2024-06-27",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_begin_onboard(self, resource_group):
        response = self.client.provider_actions.begin_onboard(
            body={"subscriptionIds": ["str"]},
            api_version="2024-06-27",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_begin_trigger_evaluation(self, resource_group):
        response = self.client.provider_actions.begin_trigger_evaluation(
            body={"resourceIds": ["str"]},
            api_version="2024-06-27",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
