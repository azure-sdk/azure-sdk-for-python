# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.resourcegraph import ResourceGraphClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestResourceGraph(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(ResourceGraphClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_resources(self, resource_group):
        response = self.client.resources(
            query={
                "query": "str",
                "facets": [
                    {"expression": "str", "options": {"$top": 0, "filter": "str", "sortBy": "str", "sortOrder": "desc"}}
                ],
                "managementGroups": ["str"],
                "options": {
                    "$skip": 0,
                    "$skipToken": "str",
                    "$top": 0,
                    "allowPartialScopes": False,
                    "authorizationScopeFilter": "AtScopeAndBelow",
                    "resultFormat": "str",
                },
                "subscriptions": ["str"],
            },
            api_version="2023-09-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_resources_history(self, resource_group):
        response = self.client.resources_history(
            request={
                "managementGroups": ["str"],
                "options": {
                    "$skip": 0,
                    "$skipToken": "str",
                    "$top": 0,
                    "interval": {"end": "2020-02-20 00:00:00", "start": "2020-02-20 00:00:00"},
                    "resultFormat": "str",
                },
                "query": "str",
                "subscriptions": ["str"],
            },
            api_version="2021-06-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_resource_changes(self, resource_group):
        response = self.client.resource_changes(
            parameters={
                "interval": {"end": "2020-02-20 00:00:00", "start": "2020-02-20 00:00:00"},
                "$skipToken": "str",
                "$top": 0,
                "fetchPropertyChanges": bool,
                "fetchSnapshots": bool,
                "resourceIds": ["str"],
                "subscriptionId": "str",
                "table": "str",
            },
            api_version="2020-09-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_resource_change_details(self, resource_group):
        response = self.client.resource_change_details(
            parameters={"changeIds": ["str"], "resourceIds": ["str"]},
            api_version="2020-09-01-preview",
        )

        # please add some check logic here by yourself
        # ...
