# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.astro import AstroMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-astro
# USAGE
    python organizations_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = AstroMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.organizations.begin_update(
        resource_group_name="rgastronomer",
        organization_name="org-name",
        properties={
            "identity": {"type": "None", "userAssignedIdentities": {"key9286": {}}},
            "properties": {
                "marketplace": {
                    "offerDetails": {
                        "offerId": "xsta",
                        "planId": "fqqucecxoevhjlxqcdgjwmmsrzttbp",
                        "planName": "gvinyrhjmpbggxyloat",
                        "publisherId": "lmwmclwdsecdpbpq",
                        "renewalMode": "Auto",
                        "termId": "hmdexaapsrqrhmxmbofhwvr",
                        "termUnit": "vaomfejhbskxuhmocluwoettfib",
                    },
                    "subscriptionId": "nkcsegq",
                    "subscriptionStatus": "PendingFulfillmentStart",
                },
                "partnerOrganizationProperties": {
                    "organizationId": "wncyfiaz",
                    "organizationName": "org-name",
                    "singleSignOnProperties": {
                        "aadDomains": ["mpf"],
                        "enterpriseAppId": "rmlbwbbfwoaqauafgwhlvuics",
                        "provisioningState": "Succeeded",
                        "singleSignOnState": "Initial",
                        "singleSignOnUrl": "kfwqhhftpdaveuwloqs",
                    },
                    "workspaceId": "qjomwrywxxydravkumubtqh",
                    "workspaceName": "org-name",
                },
                "user": {
                    "emailAddress": "test@microsoft.com",
                    "firstName": "udtkhkmlnbfklcbbl",
                    "lastName": "fuqkvskj",
                    "phoneNumber": "dugfmdmvhibsqeankiafs",
                    "upn": "pwqvhwqmerlshgkuxyctzmry",
                },
            },
            "tags": {"key9852": "q"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2024-11-01-preview/Organizations_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()
