# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils.aio import recorded_by_proxy_async
from testpreparer import MachineLearningServicesPreparer
from testpreparer_async import MachineLearningServicesClientTestBaseAsync


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestMachineLearningServicesConnectionsOperationsAsync(MachineLearningServicesClientTestBaseAsync):
    @MachineLearningServicesPreparer()
    @recorded_by_proxy_async
    async def test_connections_get(self, machinelearningservices_endpoint):
        client = self.create_async_client(endpoint=machinelearningservices_endpoint)
        response = await client.connections.get(
            name="str",
        )

        # please add some check logic here by yourself
        # ...

    @MachineLearningServicesPreparer()
    @recorded_by_proxy_async
    async def test_connections_post(self, machinelearningservices_endpoint):
        client = self.create_async_client(endpoint=machinelearningservices_endpoint)
        response = await client.connections.post(
            name="str",
        )

        # please add some check logic here by yourself
        # ...

    @MachineLearningServicesPreparer()
    @recorded_by_proxy_async
    async def test_connections_list(self, machinelearningservices_endpoint):
        client = self.create_async_client(endpoint=machinelearningservices_endpoint)
        response = client.connections.list()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @MachineLearningServicesPreparer()
    @recorded_by_proxy_async
    async def test_connections_list_with_credentials(self, machinelearningservices_endpoint):
        client = self.create_async_client(endpoint=machinelearningservices_endpoint)
        response = client.connections.list_with_credentials()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...
