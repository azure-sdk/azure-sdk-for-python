# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ConnectorProperties(_serialization.Model):
    """Basic info for Connector.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    BitCoinSourceConnectorProperties, ConfluentSourceConnectorProperties,
    CosmosDbSourceConnectorProperties, GooglePubSubSourceConnectorProperties,
    KinesisSourceConnectorProperties, PostgreSqlSourceConnectorProperties,
    SqlServerSourceConnectorProperties

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    _subtype_map = {
        "connector_type": {
            "BitCoinSource": "BitCoinSourceConnectorProperties",
            "ConfluentSource": "ConfluentSourceConnectorProperties",
            "CosmosDbSource": "CosmosDbSourceConnectorProperties",
            "GooglePubSubSource": "GooglePubSubSourceConnectorProperties",
            "KinesisSource": "KinesisSourceConnectorProperties",
            "PostgreSqlSource": "PostgreSqlSourceConnectorProperties",
            "SqlServerSource": "SqlServerSourceConnectorProperties",
        }
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        """
        super().__init__(**kwargs)
        self.max_tasks = max_tasks
        self.value_converter = value_converter
        self.connector_direction = None
        self.connector_type: Optional[str] = None
        self.event_hub_config = event_hub_config
        self.connector_state = None
        self.provisioning_state = None


class BitCoinSourceConnectorProperties(ConnectorProperties):
    """Configuration for BitCoinSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "BitCoinSource"


class ConfluentSourceConnectorProperties(ConnectorProperties):  # pylint: disable=too-many-instance-attributes
    """Configuration for ConfluentSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    :ivar bootstrap_servers: bootstrapServers of the Confluent server. Required.
    :vartype bootstrap_servers: str
    :ivar topic: Topic of the Confluent. Required.
    :vartype topic: str
    :ivar consumer_group: ConsumerGroup of the Confluent. Required.
    :vartype consumer_group: str
    :ivar auto_offset_reset: AutoOffsetReset policy of the Confluent consume. Required.
    :vartype auto_offset_reset: str
    :ivar user: User of the Confluent. Required.
    :vartype user: str
    :ivar password: Password of the Confluent. Required.
    :vartype password: str
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
        "bootstrap_servers": {"required": True},
        "topic": {"required": True},
        "consumer_group": {"required": True},
        "auto_offset_reset": {"required": True},
        "user": {"required": True},
        "password": {"required": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "bootstrap_servers": {"key": "bootstrapServers", "type": "str"},
        "topic": {"key": "topic", "type": "str"},
        "consumer_group": {"key": "consumerGroup", "type": "str"},
        "auto_offset_reset": {"key": "autoOffsetReset", "type": "str"},
        "user": {"key": "user", "type": "str"},
        "password": {"key": "password", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        bootstrap_servers: str,
        topic: str,
        consumer_group: str,
        auto_offset_reset: str,
        user: str,
        password: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        :keyword bootstrap_servers: bootstrapServers of the Confluent server. Required.
        :paramtype bootstrap_servers: str
        :keyword topic: Topic of the Confluent. Required.
        :paramtype topic: str
        :keyword consumer_group: ConsumerGroup of the Confluent. Required.
        :paramtype consumer_group: str
        :keyword auto_offset_reset: AutoOffsetReset policy of the Confluent consume. Required.
        :paramtype auto_offset_reset: str
        :keyword user: User of the Confluent. Required.
        :paramtype user: str
        :keyword password: Password of the Confluent. Required.
        :paramtype password: str
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "ConfluentSource"
        self.bootstrap_servers = bootstrap_servers
        self.topic = topic
        self.consumer_group = consumer_group
        self.auto_offset_reset = auto_offset_reset
        self.user = user
        self.password = password


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.messagingconnectors.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.messagingconnectors.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class ConnectorInstance(TrackedResource):
    """A Connector resource Azure.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.messagingconnectors.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.messagingconnectors.models.ConnectorProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "ConnectorProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ConnectorProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.messagingconnectors.models.ConnectorProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class ConnectorInstanceListResult(_serialization.Model):
    """The response of a ConnectorInstance list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The ConnectorInstance items on this page. Required.
    :vartype value: list[~azure.mgmt.messagingconnectors.models.ConnectorInstance]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ConnectorInstance]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ConnectorInstance"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ConnectorInstance items on this page. Required.
        :paramtype value: list[~azure.mgmt.messagingconnectors.models.ConnectorInstance]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ConnectorInstanceTagsUpdate(_serialization.Model):
    """The type used for updating tags in ConnectorInstance resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class CosmosDbSourceConnectorProperties(ConnectorProperties):  # pylint: disable=too-many-instance-attributes
    """Configuration for CosmosDbSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    :ivar poll_interval_in_ms: PollIntervalInMs policy. Required.
    :vartype poll_interval_in_ms: int
    :ivar cosmos_endpoint: Endpoint of CosmosDB. Required.
    :vartype cosmos_endpoint: str
    :ivar database_name: DatabaseName for CosmosDB server. Required.
    :vartype database_name: str
    :ivar container: Container for CosmosDB server. Required.
    :vartype container: str
    :ivar master_key: masterKey for CosmosDB server. Required.
    :vartype master_key: str
    :ivar offset_policy: useLatestOffset policy. Required. Known values are:
     "UseLatestSourceOffset" and "UseEarliestRecordedOffset".
    :vartype offset_policy: str or ~azure.mgmt.messagingconnectors.models.OffsetPolicyForCosmosDB
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
        "poll_interval_in_ms": {"required": True},
        "cosmos_endpoint": {"required": True},
        "database_name": {"required": True},
        "container": {"required": True},
        "master_key": {"required": True},
        "offset_policy": {"required": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "poll_interval_in_ms": {"key": "pollIntervalInMs", "type": "int"},
        "cosmos_endpoint": {"key": "cosmosEndpoint", "type": "str"},
        "database_name": {"key": "databaseName", "type": "str"},
        "container": {"key": "container", "type": "str"},
        "master_key": {"key": "masterKey", "type": "str"},
        "offset_policy": {"key": "offsetPolicy", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        poll_interval_in_ms: int,
        cosmos_endpoint: str,
        database_name: str,
        container: str,
        master_key: str,
        offset_policy: Union[str, "_models.OffsetPolicyForCosmosDB"],
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        :keyword poll_interval_in_ms: PollIntervalInMs policy. Required.
        :paramtype poll_interval_in_ms: int
        :keyword cosmos_endpoint: Endpoint of CosmosDB. Required.
        :paramtype cosmos_endpoint: str
        :keyword database_name: DatabaseName for CosmosDB server. Required.
        :paramtype database_name: str
        :keyword container: Container for CosmosDB server. Required.
        :paramtype container: str
        :keyword master_key: masterKey for CosmosDB server. Required.
        :paramtype master_key: str
        :keyword offset_policy: useLatestOffset policy. Required. Known values are:
         "UseLatestSourceOffset" and "UseEarliestRecordedOffset".
        :paramtype offset_policy: str or ~azure.mgmt.messagingconnectors.models.OffsetPolicyForCosmosDB
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "CosmosDbSource"
        self.poll_interval_in_ms = poll_interval_in_ms
        self.cosmos_endpoint = cosmos_endpoint
        self.database_name = database_name
        self.container = container
        self.master_key = master_key
        self.offset_policy = offset_policy


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.messagingconnectors.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.messagingconnectors.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.messagingconnectors.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.messagingconnectors.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class EventHubConfig(_serialization.Model):
    """Basic info for EventHub.

    All required parameters must be populated in order to send to Azure.

    :ivar namespace_host_name: namespace of the EventHub. Required.
    :vartype namespace_host_name: str
    :ivar event_hub_name: name of the EventHub. Required.
    :vartype event_hub_name: str
    :ivar connection_string: connectionString of the EventHub. Required.
    :vartype connection_string: str
    """

    _validation = {
        "namespace_host_name": {"required": True},
        "event_hub_name": {"required": True},
        "connection_string": {"required": True},
    }

    _attribute_map = {
        "namespace_host_name": {"key": "namespaceHostName", "type": "str"},
        "event_hub_name": {"key": "eventHubName", "type": "str"},
        "connection_string": {"key": "connectionString", "type": "str"},
    }

    def __init__(self, *, namespace_host_name: str, event_hub_name: str, connection_string: str, **kwargs: Any) -> None:
        """
        :keyword namespace_host_name: namespace of the EventHub. Required.
        :paramtype namespace_host_name: str
        :keyword event_hub_name: name of the EventHub. Required.
        :paramtype event_hub_name: str
        :keyword connection_string: connectionString of the EventHub. Required.
        :paramtype connection_string: str
        """
        super().__init__(**kwargs)
        self.namespace_host_name = namespace_host_name
        self.event_hub_name = event_hub_name
        self.connection_string = connection_string


class GooglePubSubSourceConnectorProperties(ConnectorProperties):
    """Configuration for GooglePubSubSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    :ivar project_id: ProjectId for pubsub server. Required.
    :vartype project_id: str
    :ivar subscription_name: SubscriptionName for pubsub server. Required.
    :vartype subscription_name: str
    :ivar account_key: AccountKey for pubsub server. Required.
    :vartype account_key: str
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
        "project_id": {"required": True},
        "subscription_name": {"required": True},
        "account_key": {"required": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "project_id": {"key": "projectId", "type": "str"},
        "subscription_name": {"key": "subscriptionName", "type": "str"},
        "account_key": {"key": "accountKey", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        project_id: str,
        subscription_name: str,
        account_key: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        :keyword project_id: ProjectId for pubsub server. Required.
        :paramtype project_id: str
        :keyword subscription_name: SubscriptionName for pubsub server. Required.
        :paramtype subscription_name: str
        :keyword account_key: AccountKey for pubsub server. Required.
        :paramtype account_key: str
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "GooglePubSubSource"
        self.project_id = project_id
        self.subscription_name = subscription_name
        self.account_key = account_key


class KinesisSourceConnectorProperties(ConnectorProperties):  # pylint: disable=too-many-instance-attributes
    """Configuration for KinesisSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    :ivar aws_access_key_id: AccessKeyId for AWS Kinesis Server. Required.
    :vartype aws_access_key_id: str
    :ivar aws_secret_access_key: SecretAccessKey for AWS Kinesis Server. Required.
    :vartype aws_secret_access_key: str
    :ivar aws_kinesis_region: Region of AWS Kinesis Server. Required.
    :vartype aws_kinesis_region: str
    :ivar aws_kinesis_stream_name: StreamName in AWS Kinesis Server. Required.
    :vartype aws_kinesis_stream_name: str
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
        "aws_access_key_id": {"required": True},
        "aws_secret_access_key": {"required": True},
        "aws_kinesis_region": {"required": True},
        "aws_kinesis_stream_name": {"required": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "aws_access_key_id": {"key": "awsAccessKeyId", "type": "str"},
        "aws_secret_access_key": {"key": "awsSecretAccessKey", "type": "str"},
        "aws_kinesis_region": {"key": "awsKinesisRegion", "type": "str"},
        "aws_kinesis_stream_name": {"key": "awsKinesisStreamName", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        aws_access_key_id: str,
        aws_secret_access_key: str,
        aws_kinesis_region: str,
        aws_kinesis_stream_name: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        :keyword aws_access_key_id: AccessKeyId for AWS Kinesis Server. Required.
        :paramtype aws_access_key_id: str
        :keyword aws_secret_access_key: SecretAccessKey for AWS Kinesis Server. Required.
        :paramtype aws_secret_access_key: str
        :keyword aws_kinesis_region: Region of AWS Kinesis Server. Required.
        :paramtype aws_kinesis_region: str
        :keyword aws_kinesis_stream_name: StreamName in AWS Kinesis Server. Required.
        :paramtype aws_kinesis_stream_name: str
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "KinesisSource"
        self.aws_access_key_id = aws_access_key_id
        self.aws_secret_access_key = aws_secret_access_key
        self.aws_kinesis_region = aws_kinesis_region
        self.aws_kinesis_stream_name = aws_kinesis_stream_name


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.messagingconnectors.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.messagingconnectors.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.messagingconnectors.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.messagingconnectors.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.messagingconnectors.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PostgreSqlSourceConnectorProperties(ConnectorProperties):  # pylint: disable=too-many-instance-attributes
    """Configuration for PostgreSqlSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    :ivar host_name: HostName for PostgreSql Server. Required.
    :vartype host_name: str
    :ivar port: Port for PostgreSql Server. Required.
    :vartype port: int
    :ivar database_name: DatabaseName for PostgreSql Server. Required.
    :vartype database_name: str
    :ivar username: Username for PostgreSql Server. Required.
    :vartype username: str
    :ivar password: Password for PostgreSql Server. Required.
    :vartype password: str
    :ivar replication_slot_name: ReplicationSlotName for PostgreSql Server. Required.
    :vartype replication_slot_name: str
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
        "host_name": {"required": True},
        "port": {"required": True},
        "database_name": {"required": True},
        "username": {"required": True},
        "password": {"required": True},
        "replication_slot_name": {"required": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "port": {"key": "port", "type": "int"},
        "database_name": {"key": "databaseName", "type": "str"},
        "username": {"key": "username", "type": "str"},
        "password": {"key": "password", "type": "str"},
        "replication_slot_name": {"key": "replicationSlotName", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        host_name: str,
        port: int,
        database_name: str,
        username: str,
        password: str,
        replication_slot_name: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        :keyword host_name: HostName for PostgreSql Server. Required.
        :paramtype host_name: str
        :keyword port: Port for PostgreSql Server. Required.
        :paramtype port: int
        :keyword database_name: DatabaseName for PostgreSql Server. Required.
        :paramtype database_name: str
        :keyword username: Username for PostgreSql Server. Required.
        :paramtype username: str
        :keyword password: Password for PostgreSql Server. Required.
        :paramtype password: str
        :keyword replication_slot_name: ReplicationSlotName for PostgreSql Server. Required.
        :paramtype replication_slot_name: str
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "PostgreSqlSource"
        self.host_name = host_name
        self.port = port
        self.database_name = database_name
        self.username = username
        self.password = password
        self.replication_slot_name = replication_slot_name


class SqlServerSourceConnectorProperties(ConnectorProperties):  # pylint: disable=too-many-instance-attributes
    """Configuration for SqlServerSqlSourceConnector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar max_tasks: Max Tasks count of the Connector. Required.
    :vartype max_tasks: int
    :ivar value_converter: Type of the Connector. Required. Known values are: "Unknown",
     "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
    :vartype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
    :ivar connector_direction: Direction of the Connector. Known values are: "Unknown", "Source",
     and "Sink".
    :vartype connector_direction: str or ~azure.mgmt.messagingconnectors.models.Direction
    :ivar connector_type: Type of the Connector. Required. Known values are: "Unknown",
     "GooglePubSubSource", "KinesisSource", "PostgreSqlSource", "SqlServerSource", "CosmosDbSource",
     "BitCoinSource", "KafkaSource", and "ConfluentSource".
    :vartype connector_type: str or ~azure.mgmt.messagingconnectors.models.ConnectorType
    :ivar event_hub_config: connectionString of the EventHub. Required.
    :vartype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
    :ivar connector_state: State of the MessagingConnector. Required. Known values are: "Unknown",
     "Creating", "Initializing", "Running", "Updating", "Degraded", "Stopped", "Paused", "Deleting",
     and "Failed".
    :vartype connector_state: str or ~azure.mgmt.messagingconnectors.models.ConnectorState
    :ivar provisioning_state: State of provisioning of the MessagingConnector ARM Resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", "Creating", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.messagingconnectors.models.ConnectorProvisioningState
    :ivar host_name: HostName for SqlServer. Required.
    :vartype host_name: str
    :ivar port: Port for SqlServer. Required.
    :vartype port: int
    :ivar database_name: DatabaseName for SqlServer. Required.
    :vartype database_name: str
    :ivar username: Username for SqlServer. Required.
    :vartype username: str
    :ivar password: Password for SqlServer. Required.
    :vartype password: str
    """

    _validation = {
        "max_tasks": {"required": True},
        "value_converter": {"required": True},
        "connector_direction": {"readonly": True},
        "connector_type": {"required": True, "readonly": True},
        "event_hub_config": {"required": True},
        "connector_state": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
        "host_name": {"required": True},
        "port": {"required": True},
        "database_name": {"required": True},
        "username": {"required": True},
        "password": {"required": True},
    }

    _attribute_map = {
        "max_tasks": {"key": "maxTasks", "type": "int"},
        "value_converter": {"key": "valueConverter", "type": "str"},
        "connector_direction": {"key": "connectorDirection", "type": "str"},
        "connector_type": {"key": "connectorType", "type": "str"},
        "event_hub_config": {"key": "eventHubConfig", "type": "EventHubConfig"},
        "connector_state": {"key": "connectorState", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "port": {"key": "port", "type": "int"},
        "database_name": {"key": "databaseName", "type": "str"},
        "username": {"key": "username", "type": "str"},
        "password": {"key": "password", "type": "str"},
    }

    def __init__(
        self,
        *,
        max_tasks: int,
        value_converter: Union[str, "_models.ConverterType"],
        event_hub_config: "_models.EventHubConfig",
        host_name: str,
        port: int,
        database_name: str,
        username: str,
        password: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword max_tasks: Max Tasks count of the Connector. Required.
        :paramtype max_tasks: int
        :keyword value_converter: Type of the Connector. Required. Known values are: "Unknown",
         "ByteArrayConverter", "StringConverter", "JsonConverter", "AvroConverter", and "CsvConverter".
        :paramtype value_converter: str or ~azure.mgmt.messagingconnectors.models.ConverterType
        :keyword event_hub_config: connectionString of the EventHub. Required.
        :paramtype event_hub_config: ~azure.mgmt.messagingconnectors.models.EventHubConfig
        :keyword host_name: HostName for SqlServer. Required.
        :paramtype host_name: str
        :keyword port: Port for SqlServer. Required.
        :paramtype port: int
        :keyword database_name: DatabaseName for SqlServer. Required.
        :paramtype database_name: str
        :keyword username: Username for SqlServer. Required.
        :paramtype username: str
        :keyword password: Password for SqlServer. Required.
        :paramtype password: str
        """
        super().__init__(
            max_tasks=max_tasks, value_converter=value_converter, event_hub_config=event_hub_config, **kwargs
        )
        self.connector_type: str = "SqlServerSource"
        self.host_name = host_name
        self.port = port
        self.database_name = database_name
        self.username = username
        self.password = password


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.messagingconnectors.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.messagingconnectors.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.messagingconnectors.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.messagingconnectors.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
