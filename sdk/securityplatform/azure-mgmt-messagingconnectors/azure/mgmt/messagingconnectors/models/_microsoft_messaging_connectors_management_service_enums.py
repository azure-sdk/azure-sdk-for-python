# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class ConnectorProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Provisioning states of Connector ARM Resource."""

    SUCCEEDED = "Succeeded"
    """Resource has been created."""
    FAILED = "Failed"
    """Resource creation failed."""
    CANCELED = "Canceled"
    """Resource creation was canceled."""
    ACCEPTED = "Accepted"
    """Accepted State"""
    CREATING = "Creating"
    """Creating State"""
    UPDATING = "Updating"
    """Updating State"""


class ConnectorState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Business State of Connector."""

    UNKNOWN = "Unknown"
    """Unknown State"""
    CREATING = "Creating"
    """Creating State"""
    INITIALIZING = "Initializing"
    """Initializing State"""
    RUNNING = "Running"
    """Running State"""
    UPDATING = "Updating"
    """Updating State"""
    DEGRADED = "Degraded"
    """Degraded State"""
    STOPPED = "Stopped"
    """Stopped State"""
    PAUSED = "Paused"
    """Paused State"""
    DELETING = "Deleting"
    """Deleting State"""
    FAILED = "Failed"
    """Failed State"""


class ConnectorType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum of the type of Connector."""

    UNKNOWN = "Unknown"
    """Unknown source connector."""
    GOOGLE_PUB_SUB_SOURCE = "GooglePubSubSource"
    """Google pub sub source connector."""
    KINESIS_SOURCE = "KinesisSource"
    """Amazon kinesis source connector."""
    POSTGRE_SQL_SOURCE = "PostgreSqlSource"
    """Postgre sql source connector."""
    SQL_SERVER_SOURCE = "SqlServerSource"
    """Sql server source connector."""
    COSMOS_DB_SOURCE = "CosmosDbSource"
    """Cosmos db source connector."""
    BIT_COIN_SOURCE = "BitCoinSource"
    """BitCoin source connector."""
    KAFKA_SOURCE = "KafkaSource"
    """Kafka source connector."""
    CONFLUENT_SOURCE = "ConfluentSource"
    """confluent source connector."""


class ConverterType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum of the type of Converter."""

    UNKNOWN = "Unknown"
    """Unknown converter."""
    BYTE_ARRAY_CONVERTER = "ByteArrayConverter"
    """This represents a converter for byte arrays format."""
    STRING_CONVERTER = "StringConverter"
    """This represents a converter for string format."""
    JSON_CONVERTER = "JsonConverter"
    """This represents a converter for json format."""
    AVRO_CONVERTER = "AvroConverter"
    """This represents a converter for Avro format."""
    CSV_CONVERTER = "CsvConverter"
    """This represents a converter for csv format."""


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class Direction(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Direction of the Source Connector."""

    UNKNOWN = "Unknown"
    """Unknown direction"""
    SOURCE = "Source"
    """Source Connector"""
    SINK = "Sink"
    """Sink Connector"""


class OffsetPolicyForCosmosDB(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum of the OffsetPolicy for CosmosDB connector."""

    USE_LATEST_SOURCE_OFFSET = "UseLatestSourceOffset"
    """use the latest (most recent) source offset,"""
    USE_EARLIEST_RECORDED_OFFSET = "UseEarliestRecordedOffset"
    """use the earliest recorded offset"""


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class Versions(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Microsoft.MessagingConnectors api versions."""

    V2024_01_20_PREVIEW = "2024-01-20-preview"
    """2024-01-20-preview version"""
