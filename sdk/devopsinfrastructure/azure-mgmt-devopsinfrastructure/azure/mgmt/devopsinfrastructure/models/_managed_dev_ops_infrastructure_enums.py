# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class AzureDevOpsPermissionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Determines who has admin permissions to the Azure DevOps pool."""

    INHERIT = "Inherit"
    """Pool will inherit permissions from the project or organization."""
    CREATOR_ONLY = "CreatorOnly"
    """Only the pool creator will be an admin of the pool."""
    SPECIFIC_ACCOUNTS = "SpecificAccounts"
    """Only the specified accounts will be admins of the pool."""


class CachingType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of caching in a data disk."""

    NONE = "None"
    """Don't use host caching."""
    READ_ONLY = "ReadOnly"
    """For workloads that only do read operations."""
    READ_WRITE = "ReadWrite"
    """For workloads that do a balance of read and write operations."""


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class LogonType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Determines how the service should be run."""

    SERVICE = "Service"
    """Run as a service."""
    INTERACTIVE = "Interactive"
    """Run in interactive mode."""


class ManagedServiceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class OsDiskStorageAccountType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The storage account type of the OS disk."""

    STANDARD = "Standard"
    """Standard OS disk type."""
    PREMIUM = "Premium"
    """Premium OS disk type."""
    STANDARD_SSD = "StandardSSD"
    """Standard SSD OS disk type."""


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the current operation."""

    SUCCEEDED = "Succeeded"
    """Represents a succeeded operation."""
    FAILED = "Failed"
    """Represents a failed operation."""
    CANCELED = "Canceled"
    """Represents a canceled operation."""
    PROVISIONING = "Provisioning"
    """Represents a pending operation."""
    UPDATING = "Updating"
    """Represents a pending operation."""
    DELETING = "Deleting"
    """Represents an operation under deletion."""
    ACCEPTED = "Accepted"
    """Represents an accepted operation."""


class StorageAccountType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """StorageAccountType enums."""

    STANDARD_LRS = "standard_lrs"
    """The data disk should use standard locally redundant storage."""
    PREMIUM_LRS = "premium_lrs"
    """The data disk should use premium locally redundant storage."""
    STANDARD_SSDLRS = "standardssd_lrs"
    """The data disk should use standard SSD locally redundant storage."""
    PREMIUM_ZRS = "premium_zrs"
    """The data disk should use premium SSD zonal redundant storage."""
    STANDARD_SSDZRS = "standardssd_zrs"
    """The data disk should use standard SSD zonal redundant storage."""
