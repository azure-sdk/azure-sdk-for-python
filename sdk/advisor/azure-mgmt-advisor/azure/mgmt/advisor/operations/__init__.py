# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._recommendation_metadata_operations import RecommendationMetadataOperations  # type: ignore
from ._configurations_operations import ConfigurationsOperations  # type: ignore
from ._recommendations_operations import RecommendationsOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._suppressions_operations import SuppressionsOperations  # type: ignore
from ._advisor_management_client_operations import AdvisorManagementClientOperationsMixin  # type: ignore
from ._advisor_scores_operations import AdvisorScoresOperations  # type: ignore
from ._assessments_operations import AssessmentsOperations  # type: ignore
from ._assessment_types_operations import AssessmentTypesOperations  # type: ignore
from ._workloads_operations import WorkloadsOperations  # type: ignore
from ._resiliency_reviews_operations import ResiliencyReviewsOperations  # type: ignore
from ._triage_recommendations_operations import TriageRecommendationsOperations  # type: ignore
from ._triage_resources_operations import TriageResourcesOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "RecommendationMetadataOperations",
    "ConfigurationsOperations",
    "RecommendationsOperations",
    "Operations",
    "SuppressionsOperations",
    "AdvisorManagementClientOperationsMixin",
    "AdvisorScoresOperations",
    "AssessmentsOperations",
    "AssessmentTypesOperations",
    "WorkloadsOperations",
    "ResiliencyReviewsOperations",
    "TriageRecommendationsOperations",
    "TriageResourcesOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
