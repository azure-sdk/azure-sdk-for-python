# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import Asset
from ._models_py3 import AssetEndpointProfile
from ._models_py3 import AssetEndpointProfileListResult
from ._models_py3 import AssetEndpointProfileProperties
from ._models_py3 import AssetListResult
from ._models_py3 import AssetProperties
from ._models_py3 import AssetStatus
from ._models_py3 import AssetStatusError
from ._models_py3 import DataPoint
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorDetail
from ._models_py3 import ErrorResponse
from ._models_py3 import Event
from ._models_py3 import ExtendedLocation
from ._models_py3 import Operation
from ._models_py3 import OperationDisplay
from ._models_py3 import OperationListResult
from ._models_py3 import OperationStatusResult
from ._models_py3 import OwnCertificate
from ._models_py3 import Resource
from ._models_py3 import SystemData
from ._models_py3 import TrackedResource
from ._models_py3 import TransportAuthentication
from ._models_py3 import UserAuthentication
from ._models_py3 import UsernamePasswordCredentials
from ._models_py3 import X509Credentials

from ._device_registry_mgmt_client_enums import ActionType
from ._device_registry_mgmt_client_enums import CreatedByType
from ._device_registry_mgmt_client_enums import DataPointsObservabilityMode
from ._device_registry_mgmt_client_enums import EventsObservabilityMode
from ._device_registry_mgmt_client_enums import Origin
from ._device_registry_mgmt_client_enums import ProvisioningState
from ._device_registry_mgmt_client_enums import UserAuthenticationMode
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Asset",
    "AssetEndpointProfile",
    "AssetEndpointProfileListResult",
    "AssetEndpointProfileProperties",
    "AssetListResult",
    "AssetProperties",
    "AssetStatus",
    "AssetStatusError",
    "DataPoint",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "Event",
    "ExtendedLocation",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "OperationStatusResult",
    "OwnCertificate",
    "Resource",
    "SystemData",
    "TrackedResource",
    "TransportAuthentication",
    "UserAuthentication",
    "UsernamePasswordCredentials",
    "X509Credentials",
    "ActionType",
    "CreatedByType",
    "DataPointsObservabilityMode",
    "EventsObservabilityMode",
    "Origin",
    "ProvisioningState",
    "UserAuthenticationMode",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
