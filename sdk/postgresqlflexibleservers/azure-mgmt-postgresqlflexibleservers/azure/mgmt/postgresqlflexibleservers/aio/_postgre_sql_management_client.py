# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, Awaitable, Optional, TYPE_CHECKING, cast
from typing_extensions import Self

from azure.core.pipeline import policies
from azure.core.rest import AsyncHttpResponse, HttpRequest
from azure.core.settings import settings
from azure.mgmt.core import AsyncARMPipelineClient
from azure.mgmt.core.policies import AsyncARMAutoResourceProviderRegistrationPolicy
from azure.mgmt.core.tools import get_arm_endpoints

from .. import models as _models
from .._utils.serialization import Deserializer, Serializer
from ._configuration import PostgreSQLManagementClientConfiguration
from .operations import (
    AdministratorsMicrosoftEntraOperations,
    AdvancedThreatProtectionSettingsOperations,
    BackupsAutomaticAndOnDemandOperations,
    BackupsLongTermRetentionOperations,
    CapabilitiesByLocationOperations,
    CapabilitiesByServerOperations,
    CapturedLogsOperations,
    ConfigurationsOperations,
    DatabasesOperations,
    FirewallRulesOperations,
    MigrationsOperations,
    NameAvailabilityOperations,
    Operations,
    PrivateDnsZoneSuffixOperations,
    PrivateEndpointConnectionsOperations,
    PrivateLinkResourcesOperations,
    QuotaUsagesOperations,
    ReplicasOperations,
    ServerThreatProtectionSettingsOperations,
    ServersOperations,
    TuningOptionsOperations,
    VirtualEndpointsOperations,
    VirtualNetworkSubnetUsageOperations,
)

if TYPE_CHECKING:
    from azure.core import AzureClouds
    from azure.core.credentials_async import AsyncTokenCredential


class PostgreSQLManagementClient:  # pylint: disable=too-many-instance-attributes
    """The Azure Database for PostgreSQL management API provides create, read, update, and delete
    functionality for Azure PostgreSQL resources including servers, databases, firewall rules,
    network configuration, security alert policies, log files and configurations with new business
    model.

    :ivar administrators_microsoft_entra: AdministratorsMicrosoftEntraOperations operations
    :vartype administrators_microsoft_entra:
     azure.mgmt.postgresqlflexibleservers.aio.operations.AdministratorsMicrosoftEntraOperations
    :ivar advanced_threat_protection_settings: AdvancedThreatProtectionSettingsOperations
     operations
    :vartype advanced_threat_protection_settings:
     azure.mgmt.postgresqlflexibleservers.aio.operations.AdvancedThreatProtectionSettingsOperations
    :ivar server_threat_protection_settings: ServerThreatProtectionSettingsOperations operations
    :vartype server_threat_protection_settings:
     azure.mgmt.postgresqlflexibleservers.aio.operations.ServerThreatProtectionSettingsOperations
    :ivar backups_automatic_and_on_demand: BackupsAutomaticAndOnDemandOperations operations
    :vartype backups_automatic_and_on_demand:
     azure.mgmt.postgresqlflexibleservers.aio.operations.BackupsAutomaticAndOnDemandOperations
    :ivar capabilities_by_location: CapabilitiesByLocationOperations operations
    :vartype capabilities_by_location:
     azure.mgmt.postgresqlflexibleservers.aio.operations.CapabilitiesByLocationOperations
    :ivar capabilities_by_server: CapabilitiesByServerOperations operations
    :vartype capabilities_by_server:
     azure.mgmt.postgresqlflexibleservers.aio.operations.CapabilitiesByServerOperations
    :ivar captured_logs: CapturedLogsOperations operations
    :vartype captured_logs:
     azure.mgmt.postgresqlflexibleservers.aio.operations.CapturedLogsOperations
    :ivar configurations: ConfigurationsOperations operations
    :vartype configurations:
     azure.mgmt.postgresqlflexibleservers.aio.operations.ConfigurationsOperations
    :ivar databases: DatabasesOperations operations
    :vartype databases: azure.mgmt.postgresqlflexibleservers.aio.operations.DatabasesOperations
    :ivar firewall_rules: FirewallRulesOperations operations
    :vartype firewall_rules:
     azure.mgmt.postgresqlflexibleservers.aio.operations.FirewallRulesOperations
    :ivar backups_long_term_retention: BackupsLongTermRetentionOperations operations
    :vartype backups_long_term_retention:
     azure.mgmt.postgresqlflexibleservers.aio.operations.BackupsLongTermRetentionOperations
    :ivar migrations: MigrationsOperations operations
    :vartype migrations: azure.mgmt.postgresqlflexibleservers.aio.operations.MigrationsOperations
    :ivar name_availability: NameAvailabilityOperations operations
    :vartype name_availability:
     azure.mgmt.postgresqlflexibleservers.aio.operations.NameAvailabilityOperations
    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.postgresqlflexibleservers.aio.operations.Operations
    :ivar private_dns_zone_suffix: PrivateDnsZoneSuffixOperations operations
    :vartype private_dns_zone_suffix:
     azure.mgmt.postgresqlflexibleservers.aio.operations.PrivateDnsZoneSuffixOperations
    :ivar private_endpoint_connections: PrivateEndpointConnectionsOperations operations
    :vartype private_endpoint_connections:
     azure.mgmt.postgresqlflexibleservers.aio.operations.PrivateEndpointConnectionsOperations
    :ivar private_link_resources: PrivateLinkResourcesOperations operations
    :vartype private_link_resources:
     azure.mgmt.postgresqlflexibleservers.aio.operations.PrivateLinkResourcesOperations
    :ivar quota_usages: QuotaUsagesOperations operations
    :vartype quota_usages:
     azure.mgmt.postgresqlflexibleservers.aio.operations.QuotaUsagesOperations
    :ivar replicas: ReplicasOperations operations
    :vartype replicas: azure.mgmt.postgresqlflexibleservers.aio.operations.ReplicasOperations
    :ivar servers: ServersOperations operations
    :vartype servers: azure.mgmt.postgresqlflexibleservers.aio.operations.ServersOperations
    :ivar tuning_options: TuningOptionsOperations operations
    :vartype tuning_options:
     azure.mgmt.postgresqlflexibleservers.aio.operations.TuningOptionsOperations
    :ivar virtual_endpoints: VirtualEndpointsOperations operations
    :vartype virtual_endpoints:
     azure.mgmt.postgresqlflexibleservers.aio.operations.VirtualEndpointsOperations
    :ivar virtual_network_subnet_usage: VirtualNetworkSubnetUsageOperations operations
    :vartype virtual_network_subnet_usage:
     azure.mgmt.postgresqlflexibleservers.aio.operations.VirtualNetworkSubnetUsageOperations
    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param subscription_id: The ID of the target subscription. The value must be an UUID. Required.
    :type subscription_id: str
    :param base_url: Service URL. Default value is None.
    :type base_url: str
    :keyword cloud_setting: The cloud setting for which to get the ARM endpoint. Default value is
     None.
    :paramtype cloud_setting: ~azure.core.AzureClouds
    :keyword api_version: Api Version. Default value is "2025-08-01". Note that overriding this
     default value may result in unsupported behavior.
    :paramtype api_version: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        subscription_id: str,
        base_url: Optional[str] = None,
        *,
        cloud_setting: Optional["AzureClouds"] = None,
        **kwargs: Any
    ) -> None:
        _cloud = cloud_setting or settings.current.azure_cloud  # type: ignore
        _endpoints = get_arm_endpoints(_cloud)
        if not base_url:
            base_url = _endpoints["resource_manager"]
        credential_scopes = kwargs.pop("credential_scopes", _endpoints["credential_scopes"])
        self._config = PostgreSQLManagementClientConfiguration(
            credential=credential,
            subscription_id=subscription_id,
            cloud_setting=cloud_setting,
            credential_scopes=credential_scopes,
            **kwargs
        )

        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                AsyncARMAutoResourceProviderRegistrationPolicy(),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.DistributedTracingPolicy(**kwargs),
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: AsyncARMPipelineClient = AsyncARMPipelineClient(
            base_url=cast(str, base_url), policies=_policies, **kwargs
        )

        client_models = {k: v for k, v in _models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False
        self.administrators_microsoft_entra = AdministratorsMicrosoftEntraOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.advanced_threat_protection_settings = AdvancedThreatProtectionSettingsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.server_threat_protection_settings = ServerThreatProtectionSettingsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.backups_automatic_and_on_demand = BackupsAutomaticAndOnDemandOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.capabilities_by_location = CapabilitiesByLocationOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.capabilities_by_server = CapabilitiesByServerOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.captured_logs = CapturedLogsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.configurations = ConfigurationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.databases = DatabasesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.firewall_rules = FirewallRulesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.backups_long_term_retention = BackupsLongTermRetentionOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.migrations = MigrationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.name_availability = NameAvailabilityOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.private_dns_zone_suffix = PrivateDnsZoneSuffixOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.private_endpoint_connections = PrivateEndpointConnectionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.private_link_resources = PrivateLinkResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.quota_usages = QuotaUsagesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.replicas = ReplicasOperations(self._client, self._config, self._serialize, self._deserialize)
        self.servers = ServersOperations(self._client, self._config, self._serialize, self._deserialize)
        self.tuning_options = TuningOptionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.virtual_endpoints = VirtualEndpointsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.virtual_network_subnet_usage = VirtualNetworkSubnetUsageOperations(
            self._client, self._config, self._serialize, self._deserialize
        )

    def _send_request(
        self, request: HttpRequest, *, stream: bool = False, **kwargs: Any
    ) -> Awaitable[AsyncHttpResponse]:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = await client._send_request(request)
        <AsyncHttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.AsyncHttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> Self:
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details: Any) -> None:
        await self._client.__aexit__(*exc_details)
