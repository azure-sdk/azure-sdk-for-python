# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, IO, List, Union

from azure.identity import DefaultAzureCredential

from azure.mgmt.hybridonboarding import HybridOnboardingMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-hybridonboarding
# USAGE
    python extension_managers_add_custom_location_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = HybridOnboardingMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="5D8BB6DA-AB36-4AF4-9550-913DFEA2F536",
    )

    response = client.extension_managers.begin_add_custom_location(
        resource_group_name="rgopenapi",
        extension_manager_name="3_-E_--O_T_q-O_HH_C_E2cN-_j_4_KuMNj_5fPs_Bp-Ca-__tj__2R104",
        body=[{"name": "ndevecxlpfctiqeimgi"}],
    ).result()
    print(response)


# x-ms-original-file: specification/hybridonboarding/resource-manager/Microsoft.HybridOnboarding/preview/2024-06-01-preview/examples/ExtensionManagers_AddCustomLocation_MaximumSet_Gen.json
if __name__ == "__main__":
    main()
