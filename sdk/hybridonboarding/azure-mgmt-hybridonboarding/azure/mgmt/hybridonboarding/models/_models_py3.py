# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AddCustomLocationDetails(_serialization.Model):
    """Request body for adding new custom location to an extension.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the extension. Required.
    :vartype name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: str, **kwargs: Any) -> None:
        """
        :keyword name: Name of the extension. Required.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.name = name


class DisableExtensionsRequestDetails(_serialization.Model):
    """Request body details for disabling extension POST action.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the extension. Required.
    :vartype name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: str, **kwargs: Any) -> None:
        """
        :keyword name: Name of the extension. Required.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.name = name


class EnableExtensionsRequestDetails(_serialization.Model):
    """Request body details for enabling extension POST action.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the extension. Required.
    :vartype name: str
    :ivar configuration_settings: Configuration settings, as name-value pairs for configuring this
     extension.
    :vartype configuration_settings: dict[str, str]
    :ivar configuration_protected_settings: Configuration settings that are sensitive, as
     name-value pairs for configuring this extension.
    :vartype configuration_protected_settings: dict[str, str]
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "configuration_settings": {"key": "configurationSettings", "type": "{str}"},
        "configuration_protected_settings": {"key": "configurationProtectedSettings", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        name: str,
        configuration_settings: Optional[Dict[str, str]] = None,
        configuration_protected_settings: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Name of the extension. Required.
        :paramtype name: str
        :keyword configuration_settings: Configuration settings, as name-value pairs for configuring
         this extension.
        :paramtype configuration_settings: dict[str, str]
        :keyword configuration_protected_settings: Configuration settings that are sensitive, as
         name-value pairs for configuring this extension.
        :paramtype configuration_protected_settings: dict[str, str]
        """
        super().__init__(**kwargs)
        self.name = name
        self.configuration_settings = configuration_settings
        self.configuration_protected_settings = configuration_protected_settings


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.hybridonboarding.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.hybridonboarding.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.hybridonboarding.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.hybridonboarding.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridonboarding.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridonboarding.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class ExtensionManager(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Extension Manager Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridonboarding.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar identity: Managed Identity of extension manager resource. Required.
    :vartype identity: ~azure.mgmt.hybridonboarding.models.ManagedIdentity
    :ivar provisioning_state: Provisioning state of Extension Manager resource. Known values are:
     "Succeeded", "Failed", "Canceled", "Creating", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.hybridonboarding.models.ProvisioningState
    :ivar extended_location: ARM ID of the custom location resource deployed on the Onboarding
     Appliance.
    :vartype extended_location: str
    :ivar host_resource_id: ARM ID of the host associated with the extended location.
    :vartype host_resource_id: str
    :ivar scenario_profile: Scenario profile of the extension manager resource.
    :vartype scenario_profile: list[~azure.mgmt.hybridonboarding.models.ScenarioProfileObject]
    :ivar extension_profile: Extension profile of the extension manager resource.
    :vartype extension_profile: list[~azure.mgmt.hybridonboarding.models.ExtensionObject]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "identity": {"required": True},
        "provisioning_state": {"readonly": True},
        "host_resource_id": {"readonly": True},
        "extension_profile": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "identity": {"key": "identity", "type": "ManagedIdentity"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "extended_location": {"key": "properties.extendedLocation", "type": "str"},
        "host_resource_id": {"key": "properties.hostResourceId", "type": "str"},
        "scenario_profile": {"key": "properties.scenarioProfile", "type": "[ScenarioProfileObject]"},
        "extension_profile": {"key": "properties.extensionProfile", "type": "[ExtensionObject]"},
    }

    def __init__(
        self,
        *,
        location: str,
        identity: "_models.ManagedIdentity",
        tags: Optional[Dict[str, str]] = None,
        extended_location: Optional[str] = None,
        scenario_profile: Optional[List["_models.ScenarioProfileObject"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword identity: Managed Identity of extension manager resource. Required.
        :paramtype identity: ~azure.mgmt.hybridonboarding.models.ManagedIdentity
        :keyword extended_location: ARM ID of the custom location resource deployed on the Onboarding
         Appliance.
        :paramtype extended_location: str
        :keyword scenario_profile: Scenario profile of the extension manager resource.
        :paramtype scenario_profile: list[~azure.mgmt.hybridonboarding.models.ScenarioProfileObject]
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.identity = identity
        self.provisioning_state = None
        self.extended_location = extended_location
        self.host_resource_id = None
        self.scenario_profile = scenario_profile
        self.extension_profile = None


class ExtensionManagerListResult(_serialization.Model):
    """The response of a ExtensionManager list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: The ExtensionManager items on this page. Required.
    :vartype value: list[~azure.mgmt.hybridonboarding.models.ExtensionManager]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ExtensionManager]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ExtensionManager"], **kwargs: Any) -> None:
        """
        :keyword value: The ExtensionManager items on this page. Required.
        :paramtype value: list[~azure.mgmt.hybridonboarding.models.ExtensionManager]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ExtensionManagerPatch(_serialization.Model):
    """Properties of a Extension Manager that can be patched.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar identity: Managed Identity of extension manager resource.
    :vartype identity: ~azure.mgmt.hybridonboarding.models.ManagedIdentityUpdate
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "identity": {"key": "identity", "type": "ManagedIdentityUpdate"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        identity: Optional["_models.ManagedIdentityUpdate"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword identity: Managed Identity of extension manager resource.
        :paramtype identity: ~azure.mgmt.hybridonboarding.models.ManagedIdentityUpdate
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.identity = identity


class ExtensionObject(_serialization.Model):
    """Extension object inside the extension profile.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the extension. Required.
    :vartype name: str
    :ivar custom_locations: List of custom locations associated with the extension. All entries
     will be unique.
    :vartype custom_locations: list[str]
    :ivar state: Flag to enable/disable the extension. Required. Known values are: "Enabled" and
     "Disabled".
    :vartype state: str or ~azure.mgmt.hybridonboarding.models.ExtensionState
    :ivar configuration_settings: Configuration settings, as name-value pairs for configuring this
     extension.
    :vartype configuration_settings: dict[str, str]
    :ivar configuration_protected_settings: Configuration settings that are sensitive, as
     name-value pairs for configuring this extension.
    :vartype configuration_protected_settings: dict[str, str]
    """

    _validation = {
        "name": {"required": True},
        "custom_locations": {"readonly": True},
        "state": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "custom_locations": {"key": "customLocations", "type": "[str]"},
        "state": {"key": "state", "type": "str"},
        "configuration_settings": {"key": "configurationSettings", "type": "{str}"},
        "configuration_protected_settings": {"key": "configurationProtectedSettings", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        name: str,
        state: Union[str, "_models.ExtensionState"],
        configuration_settings: Optional[Dict[str, str]] = None,
        configuration_protected_settings: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Name of the extension. Required.
        :paramtype name: str
        :keyword state: Flag to enable/disable the extension. Required. Known values are: "Enabled" and
         "Disabled".
        :paramtype state: str or ~azure.mgmt.hybridonboarding.models.ExtensionState
        :keyword configuration_settings: Configuration settings, as name-value pairs for configuring
         this extension.
        :paramtype configuration_settings: dict[str, str]
        :keyword configuration_protected_settings: Configuration settings that are sensitive, as
         name-value pairs for configuring this extension.
        :paramtype configuration_protected_settings: dict[str, str]
        """
        super().__init__(**kwargs)
        self.name = name
        self.custom_locations = None
        self.state = state
        self.configuration_settings = configuration_settings
        self.configuration_protected_settings = configuration_protected_settings


class ManagedIdentity(_serialization.Model):
    """Managed Identity of extension manager resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar principal_id: The service principal ID of the system assigned identity. This property
     will only be provided for a system assigned identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of the system assigned identity. This property will only be
     provided for a system assigned identity.
    :vartype tenant_id: str
    :ivar type: Type of managed service identity. Required. "SystemAssigned"
    :vartype type: str or ~azure.mgmt.hybridonboarding.models.ManagedIdentityType
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, type: Union[str, "_models.ManagedIdentityType"], **kwargs: Any) -> None:
        """
        :keyword type: Type of managed service identity. Required. "SystemAssigned"
        :paramtype type: str or ~azure.mgmt.hybridonboarding.models.ManagedIdentityType
        """
        super().__init__(**kwargs)
        self.principal_id = None
        self.tenant_id = None
        self.type = type


class ManagedIdentityUpdate(_serialization.Model):
    """Managed Identity of extension manager resource.

    :ivar type: Type of managed service identity. "SystemAssigned"
    :vartype type: str or ~azure.mgmt.hybridonboarding.models.ManagedIdentityType
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, type: Optional[Union[str, "_models.ManagedIdentityType"]] = None, **kwargs: Any) -> None:
        """
        :keyword type: Type of managed service identity. "SystemAssigned"
        :paramtype type: str or ~azure.mgmt.hybridonboarding.models.ManagedIdentityType
        """
        super().__init__(**kwargs)
        self.type = type


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.hybridonboarding.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.hybridonboarding.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.hybridonboarding.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.hybridonboarding.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.hybridonboarding.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class RemoveCustomLocationDetails(_serialization.Model):
    """Request body for removing custom location from extension.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the extension. Required.
    :vartype name: str
    :ivar custom_location_id: ARM ID of the custom location. Required.
    :vartype custom_location_id: str
    """

    _validation = {
        "name": {"required": True},
        "custom_location_id": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "custom_location_id": {"key": "customLocationId", "type": "str"},
    }

    def __init__(self, *, name: str, custom_location_id: str, **kwargs: Any) -> None:
        """
        :keyword name: Name of the extension. Required.
        :paramtype name: str
        :keyword custom_location_id: ARM ID of the custom location. Required.
        :paramtype custom_location_id: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.custom_location_id = custom_location_id


class ScenarioProfileObject(_serialization.Model):
    """Scenario profile object of the extension manager resource.

    All required parameters must be populated in order to send to server.

    :ivar infrastructure: Infrastructure associated with extension manager resource. Required.
    :vartype infrastructure: str
    :ivar scenario: Scenario associated with extension manager resource. Required.
    :vartype scenario: str
    """

    _validation = {
        "infrastructure": {"required": True},
        "scenario": {"required": True},
    }

    _attribute_map = {
        "infrastructure": {"key": "infrastructure", "type": "str"},
        "scenario": {"key": "scenario", "type": "str"},
    }

    def __init__(self, *, infrastructure: str, scenario: str, **kwargs: Any) -> None:
        """
        :keyword infrastructure: Infrastructure associated with extension manager resource. Required.
        :paramtype infrastructure: str
        :keyword scenario: Scenario associated with extension manager resource. Required.
        :paramtype scenario: str
        """
        super().__init__(**kwargs)
        self.infrastructure = infrastructure
        self.scenario = scenario


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.hybridonboarding.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.hybridonboarding.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.hybridonboarding.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.hybridonboarding.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
