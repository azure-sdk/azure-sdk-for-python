# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AccountSku(_serialization.Model):
    """SKU of the trusted signing account.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the SKU. Required. Known values are: "Basic" and "Premium".
    :vartype name: str or ~azure.mgmt.trustedsigning.models.SkuName
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: Union[str, "_models.SkuName"], **kwargs: Any) -> None:
        """
        :keyword name: Name of the SKU. Required. Known values are: "Basic" and "Premium".
        :paramtype name: str or ~azure.mgmt.trustedsigning.models.SkuName
        """
        super().__init__(**kwargs)
        self.name = name


class AccountSkuPatch(_serialization.Model):
    """SKU of the trusted signing account.

    :ivar name: Name of the SKU. Known values are: "Basic" and "Premium".
    :vartype name: str or ~azure.mgmt.trustedsigning.models.SkuName
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: Optional[Union[str, "_models.SkuName"]] = None, **kwargs: Any) -> None:
        """
        :keyword name: Name of the SKU. Known values are: "Basic" and "Premium".
        :paramtype name: str or ~azure.mgmt.trustedsigning.models.SkuName
        """
        super().__init__(**kwargs)
        self.name = name


class Certificate(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Properties of the certificate.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar serial_number: Serial number of the certificate.
    :vartype serial_number: str
    :ivar enhanced_key_usage: Enhanced key usage of the certificate.
    :vartype enhanced_key_usage: str
    :ivar subject_name: Subject name of the certificate.
    :vartype subject_name: str
    :ivar thumbprint: Thumbprint of the certificate.
    :vartype thumbprint: str
    :ivar created_date: Certificate created date.
    :vartype created_date: str
    :ivar expiry_date: Certificate expiry date.
    :vartype expiry_date: str
    :ivar status: Status of the certificate. Known values are: "Active", "Expired", and "Revoked".
    :vartype status: str or ~azure.mgmt.trustedsigning.models.CertificateStatus
    :ivar requested_at: The timestamp when the revocation is requested.
    :vartype requested_at: ~datetime.datetime
    :ivar effective_at: The timestamp when the revocation is effective.
    :vartype effective_at: ~datetime.datetime
    :ivar reason: Reason for revocation.
    :vartype reason: str
    :ivar remarks: Remarks for the revocation.
    :vartype remarks: str
    :ivar status_revocation_status: Status of the revocation. Known values are: "Succeeded",
     "InProgress", and "Failed".
    :vartype status_revocation_status: str or ~azure.mgmt.trustedsigning.models.RevocationStatus
    :ivar failure_reason: Reason for the revocation failure.
    :vartype failure_reason: str
    """

    _validation = {
        "status_revocation_status": {"readonly": True},
    }

    _attribute_map = {
        "serial_number": {"key": "serialNumber", "type": "str"},
        "enhanced_key_usage": {"key": "enhancedKeyUsage", "type": "str"},
        "subject_name": {"key": "subjectName", "type": "str"},
        "thumbprint": {"key": "thumbprint", "type": "str"},
        "created_date": {"key": "createdDate", "type": "str"},
        "expiry_date": {"key": "expiryDate", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "requested_at": {"key": "revocation.requestedAt", "type": "iso-8601"},
        "effective_at": {"key": "revocation.effectiveAt", "type": "iso-8601"},
        "reason": {"key": "revocation.reason", "type": "str"},
        "remarks": {"key": "revocation.remarks", "type": "str"},
        "status_revocation_status": {"key": "revocation.status", "type": "str"},
        "failure_reason": {"key": "revocation.failureReason", "type": "str"},
    }

    def __init__(
        self,
        *,
        serial_number: Optional[str] = None,
        enhanced_key_usage: Optional[str] = None,
        subject_name: Optional[str] = None,
        thumbprint: Optional[str] = None,
        created_date: Optional[str] = None,
        expiry_date: Optional[str] = None,
        status: Optional[Union[str, "_models.CertificateStatus"]] = None,
        requested_at: Optional[datetime.datetime] = None,
        effective_at: Optional[datetime.datetime] = None,
        reason: Optional[str] = None,
        remarks: Optional[str] = None,
        failure_reason: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword serial_number: Serial number of the certificate.
        :paramtype serial_number: str
        :keyword enhanced_key_usage: Enhanced key usage of the certificate.
        :paramtype enhanced_key_usage: str
        :keyword subject_name: Subject name of the certificate.
        :paramtype subject_name: str
        :keyword thumbprint: Thumbprint of the certificate.
        :paramtype thumbprint: str
        :keyword created_date: Certificate created date.
        :paramtype created_date: str
        :keyword expiry_date: Certificate expiry date.
        :paramtype expiry_date: str
        :keyword status: Status of the certificate. Known values are: "Active", "Expired", and
         "Revoked".
        :paramtype status: str or ~azure.mgmt.trustedsigning.models.CertificateStatus
        :keyword requested_at: The timestamp when the revocation is requested.
        :paramtype requested_at: ~datetime.datetime
        :keyword effective_at: The timestamp when the revocation is effective.
        :paramtype effective_at: ~datetime.datetime
        :keyword reason: Reason for revocation.
        :paramtype reason: str
        :keyword remarks: Remarks for the revocation.
        :paramtype remarks: str
        :keyword failure_reason: Reason for the revocation failure.
        :paramtype failure_reason: str
        """
        super().__init__(**kwargs)
        self.serial_number = serial_number
        self.enhanced_key_usage = enhanced_key_usage
        self.subject_name = subject_name
        self.thumbprint = thumbprint
        self.created_date = created_date
        self.expiry_date = expiry_date
        self.status = status
        self.requested_at = requested_at
        self.effective_at = effective_at
        self.reason = reason
        self.remarks = remarks
        self.status_revocation_status = None
        self.failure_reason = failure_reason


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.trustedsigning.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.trustedsigning.models.SystemData
    """


class CertificateProfile(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Certificate profile resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.trustedsigning.models.SystemData
    :ivar profile_type: Profile type of the certificate. Known values are: "PublicTrust",
     "PrivateTrust", "PrivateTrustCIPolicy", "VBSEnclave", and "PublicTrustTest".
    :vartype profile_type: str or ~azure.mgmt.trustedsigning.models.ProfileType
    :ivar include_street_address: Whether to include STREET in the certificate subject name.
    :vartype include_street_address: bool
    :ivar include_city: Whether to include L in the certificate subject name. Applicable only for
     private trust, private trust ci profile types.
    :vartype include_city: bool
    :ivar include_state: Whether to include S in the certificate subject name. Applicable only for
     private trust, private trust ci profile types.
    :vartype include_state: bool
    :ivar include_country: Whether to include C in the certificate subject name. Applicable only
     for private trust, private trust ci profile types.
    :vartype include_country: bool
    :ivar include_postal_code: Whether to include PC in the certificate subject name.
    :vartype include_postal_code: bool
    :ivar identity_validation_id: Identity validation id used for the certificate subject name.
    :vartype identity_validation_id: str
    :ivar provisioning_state: Status of the current operation on certificate profile. Known values
     are: "Succeeded", "Failed", "Canceled", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.trustedsigning.models.ProvisioningState
    :ivar status: Status of the certificate profile. Known values are: "Active", "Disabled", and
     "Suspended".
    :vartype status: str or ~azure.mgmt.trustedsigning.models.CertificateProfileStatus
    :ivar certificates: List of renewed certificates.
    :vartype certificates: list[~azure.mgmt.trustedsigning.models.Certificate]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
        "certificates": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "profile_type": {"key": "properties.profileType", "type": "str"},
        "include_street_address": {"key": "properties.includeStreetAddress", "type": "bool"},
        "include_city": {"key": "properties.includeCity", "type": "bool"},
        "include_state": {"key": "properties.includeState", "type": "bool"},
        "include_country": {"key": "properties.includeCountry", "type": "bool"},
        "include_postal_code": {"key": "properties.includePostalCode", "type": "bool"},
        "identity_validation_id": {"key": "properties.identityValidationId", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "certificates": {"key": "properties.certificates", "type": "[Certificate]"},
    }

    def __init__(
        self,
        *,
        profile_type: Optional[Union[str, "_models.ProfileType"]] = None,
        include_street_address: bool = False,
        include_city: bool = False,
        include_state: bool = False,
        include_country: bool = False,
        include_postal_code: bool = False,
        identity_validation_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword profile_type: Profile type of the certificate. Known values are: "PublicTrust",
         "PrivateTrust", "PrivateTrustCIPolicy", "VBSEnclave", and "PublicTrustTest".
        :paramtype profile_type: str or ~azure.mgmt.trustedsigning.models.ProfileType
        :keyword include_street_address: Whether to include STREET in the certificate subject name.
        :paramtype include_street_address: bool
        :keyword include_city: Whether to include L in the certificate subject name. Applicable only
         for private trust, private trust ci profile types.
        :paramtype include_city: bool
        :keyword include_state: Whether to include S in the certificate subject name. Applicable only
         for private trust, private trust ci profile types.
        :paramtype include_state: bool
        :keyword include_country: Whether to include C in the certificate subject name. Applicable only
         for private trust, private trust ci profile types.
        :paramtype include_country: bool
        :keyword include_postal_code: Whether to include PC in the certificate subject name.
        :paramtype include_postal_code: bool
        :keyword identity_validation_id: Identity validation id used for the certificate subject name.
        :paramtype identity_validation_id: str
        """
        super().__init__(**kwargs)
        self.profile_type = profile_type
        self.include_street_address = include_street_address
        self.include_city = include_city
        self.include_state = include_state
        self.include_country = include_country
        self.include_postal_code = include_postal_code
        self.identity_validation_id = identity_validation_id
        self.provisioning_state = None
        self.status = None
        self.certificates = None


class CertificateProfileListResult(_serialization.Model):
    """The response of a CertificateProfile list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The CertificateProfile items on this page. Required.
    :vartype value: list[~azure.mgmt.trustedsigning.models.CertificateProfile]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CertificateProfile]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.CertificateProfile"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The CertificateProfile items on this page. Required.
        :paramtype value: list[~azure.mgmt.trustedsigning.models.CertificateProfile]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CheckNameAvailability(_serialization.Model):
    """The parameters used to check the availability of the trusted signing account name.

    All required parameters must be populated in order to send to server.

    :ivar name: Trusted signing account name. Required.
    :vartype name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: str, **kwargs: Any) -> None:
        """
        :keyword name: Trusted signing account name. Required.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.name = name


class CheckNameAvailabilityResult(_serialization.Model):
    """The CheckNameAvailability operation response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name_available: A boolean value that indicates whether the name is available for you to
     use. If true, the name is available. If false, the name has already been taken or is invalid
     and cannot be used.
    :vartype name_available: bool
    :ivar reason: The reason that a trusted signing account name could not be used. The Reason
     element is only returned if nameAvailable is false. Known values are: "AccountNameInvalid" and
     "AlreadyExists".
    :vartype reason: str or ~azure.mgmt.trustedsigning.models.NameUnavailabilityReason
    :ivar message: An error message explaining the Reason value in more detail.
    :vartype message: str
    """

    _validation = {
        "name_available": {"readonly": True},
        "reason": {"readonly": True},
        "message": {"readonly": True},
    }

    _attribute_map = {
        "name_available": {"key": "nameAvailable", "type": "bool"},
        "reason": {"key": "reason", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name_available = None
        self.reason = None
        self.message = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.trustedsigning.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class CodeSigningAccount(TrackedResource):
    """Trusted signing account resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.trustedsigning.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar account_uri: The URI of the trusted signing account which is used during signing files.
    :vartype account_uri: str
    :ivar sku: SKU of the trusted signing account.
    :vartype sku: ~azure.mgmt.trustedsigning.models.AccountSku
    :ivar provisioning_state: Status of the current operation on trusted signing account. Known
     values are: "Succeeded", "Failed", "Canceled", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.trustedsigning.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "account_uri": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "account_uri": {"key": "properties.accountUri", "type": "str"},
        "sku": {"key": "properties.sku", "type": "AccountSku"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional["_models.AccountSku"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword sku: SKU of the trusted signing account.
        :paramtype sku: ~azure.mgmt.trustedsigning.models.AccountSku
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.account_uri = None
        self.sku = sku
        self.provisioning_state = None


class CodeSigningAccountListResult(_serialization.Model):
    """The response of a CodeSigningAccount list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The CodeSigningAccount items on this page. Required.
    :vartype value: list[~azure.mgmt.trustedsigning.models.CodeSigningAccount]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CodeSigningAccount]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.CodeSigningAccount"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The CodeSigningAccount items on this page. Required.
        :paramtype value: list[~azure.mgmt.trustedsigning.models.CodeSigningAccount]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CodeSigningAccountPatch(_serialization.Model):
    """Parameters for creating or updating a trusted signing account.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar sku: SKU of the trusted signing account.
    :vartype sku: ~azure.mgmt.trustedsigning.models.AccountSkuPatch
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "sku": {"key": "properties.sku", "type": "AccountSkuPatch"},
    }

    def __init__(
        self, *, tags: Optional[Dict[str, str]] = None, sku: Optional["_models.AccountSkuPatch"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: SKU of the trusted signing account.
        :paramtype sku: ~azure.mgmt.trustedsigning.models.AccountSkuPatch
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.sku = sku


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.trustedsigning.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.trustedsigning.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.trustedsigning.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.trustedsigning.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.trustedsigning.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.trustedsigning.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.trustedsigning.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.trustedsigning.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.trustedsigning.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class RevokeCertificate(_serialization.Model):
    """Defines the certificate revocation properties.

    All required parameters must be populated in order to send to server.

    :ivar serial_number: Serial number of the certificate. Required.
    :vartype serial_number: str
    :ivar thumbprint: Thumbprint of the certificate. Required.
    :vartype thumbprint: str
    :ivar effective_at: The timestamp when the revocation is effective. Required.
    :vartype effective_at: ~datetime.datetime
    :ivar reason: Reason for the revocation. Required.
    :vartype reason: str
    :ivar remarks: Remarks for the revocation.
    :vartype remarks: str
    """

    _validation = {
        "serial_number": {"required": True},
        "thumbprint": {"required": True},
        "effective_at": {"required": True},
        "reason": {"required": True},
    }

    _attribute_map = {
        "serial_number": {"key": "serialNumber", "type": "str"},
        "thumbprint": {"key": "thumbprint", "type": "str"},
        "effective_at": {"key": "effectiveAt", "type": "iso-8601"},
        "reason": {"key": "reason", "type": "str"},
        "remarks": {"key": "remarks", "type": "str"},
    }

    def __init__(
        self,
        *,
        serial_number: str,
        thumbprint: str,
        effective_at: datetime.datetime,
        reason: str,
        remarks: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword serial_number: Serial number of the certificate. Required.
        :paramtype serial_number: str
        :keyword thumbprint: Thumbprint of the certificate. Required.
        :paramtype thumbprint: str
        :keyword effective_at: The timestamp when the revocation is effective. Required.
        :paramtype effective_at: ~datetime.datetime
        :keyword reason: Reason for the revocation. Required.
        :paramtype reason: str
        :keyword remarks: Remarks for the revocation.
        :paramtype remarks: str
        """
        super().__init__(**kwargs)
        self.serial_number = serial_number
        self.thumbprint = thumbprint
        self.effective_at = effective_at
        self.reason = reason
        self.remarks = remarks


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.trustedsigning.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.trustedsigning.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.trustedsigning.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.trustedsigning.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
