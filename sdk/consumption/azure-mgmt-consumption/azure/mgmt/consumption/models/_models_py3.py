# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Optional, TYPE_CHECKING

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class DownloadProperties(_serialization.Model):
    """The properties of the price sheet download.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar download_url: The link (url) to download the pricesheet.
    :vartype download_url: str
    :ivar valid_till: Download link validity.
    :vartype valid_till: str
    """

    _validation = {
        "download_url": {"readonly": True},
        "valid_till": {"readonly": True},
    }

    _attribute_map = {
        "download_url": {"key": "downloadUrl", "type": "str"},
        "valid_till": {"key": "validTill", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.download_url = None
        self.valid_till = None


class ErrorDetails(_serialization.Model):
    """The details of the error.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Error code.
    :vartype code: str
    :ivar message: Error message indicating why the operation failed.
    :vartype message: str
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None


class ErrorResponse(_serialization.Model):
    """Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.

    Some Error responses:


    *
      429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the "x-ms-ratelimit-microsoft.consumption-retry-after" header.

    *
      503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the "Retry-After" header.

        :ivar error: The details of the error.
        :vartype error: ~azure.mgmt.consumption.models.ErrorDetails
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetails"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetails"] = None, **kwargs):
        """
        :keyword error: The details of the error.
        :paramtype error: ~azure.mgmt.consumption.models.ErrorDetails
        """
        super().__init__(**kwargs)
        self.error = error


class MeterDetails(_serialization.Model):
    """The properties of the meter detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar meter_name: The name of the meter, within the given meter category.
    :vartype meter_name: str
    :ivar meter_category: The category of the meter, for example, 'Cloud services', 'Networking',
     etc..
    :vartype meter_category: str
    :ivar meter_sub_category: The subcategory of the meter, for example, 'A6 Cloud services',
     'ExpressRoute (IXP)', etc..
    :vartype meter_sub_category: str
    :ivar unit: The unit in which the meter consumption is charged, for example, 'Hours', 'GB',
     etc.
    :vartype unit: str
    :ivar meter_location: The location in which the Azure service is available.
    :vartype meter_location: str
    :ivar total_included_quantity: The total included quantity associated with the offer.
    :vartype total_included_quantity: float
    :ivar pretax_standard_rate: The pretax listing price.
    :vartype pretax_standard_rate: float
    :ivar service_name: The name of the service.
    :vartype service_name: str
    :ivar service_tier: The service tier.
    :vartype service_tier: str
    """

    _validation = {
        "meter_name": {"readonly": True},
        "meter_category": {"readonly": True},
        "meter_sub_category": {"readonly": True},
        "unit": {"readonly": True},
        "meter_location": {"readonly": True},
        "total_included_quantity": {"readonly": True},
        "pretax_standard_rate": {"readonly": True},
        "service_name": {"readonly": True},
        "service_tier": {"readonly": True},
    }

    _attribute_map = {
        "meter_name": {"key": "meterName", "type": "str"},
        "meter_category": {"key": "meterCategory", "type": "str"},
        "meter_sub_category": {"key": "meterSubCategory", "type": "str"},
        "unit": {"key": "unit", "type": "str"},
        "meter_location": {"key": "meterLocation", "type": "str"},
        "total_included_quantity": {"key": "totalIncludedQuantity", "type": "float"},
        "pretax_standard_rate": {"key": "pretaxStandardRate", "type": "float"},
        "service_name": {"key": "serviceName", "type": "str"},
        "service_tier": {"key": "serviceTier", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.meter_name = None
        self.meter_category = None
        self.meter_sub_category = None
        self.unit = None
        self.meter_location = None
        self.total_included_quantity = None
        self.pretax_standard_rate = None
        self.service_name = None
        self.service_tier = None


class Operation(_serialization.Model):
    """A Consumption REST API operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Operation Id.
    :vartype id: str
    :ivar name: Operation name: {provider}/{resource}/{operation}.
    :vartype name: str
    :ivar display: The object that represents the operation.
    :vartype display: ~azure.mgmt.consumption.models.OperationDisplay
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display": {"key": "display", "type": "OperationDisplay"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs):
        """
        :keyword display: The object that represents the operation.
        :paramtype display: ~azure.mgmt.consumption.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.display = display


class OperationDisplay(_serialization.Model):
    """The object that represents the operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: Service provider: Microsoft.Consumption.
    :vartype provider: str
    :ivar resource: Resource on which the operation is performed: UsageDetail, etc.
    :vartype resource: str
    :ivar operation: Operation type: Read, write, delete, etc.
    :vartype operation: str
    :ivar description: Description of the operation.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of consumption operations supported by the Microsoft.Consumption resource
     provider.
    :vartype value: list[~azure.mgmt.consumption.models.Operation]
    :ivar next_link: URL to get the next set of operation list results if there are any.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PriceSheetProperties(_serialization.Model):
    """The properties of the price sheet.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar billing_period_id: The id of the billing period resource that the usage belongs to.
    :vartype billing_period_id: str
    :ivar meter_id: The meter id (GUID).
    :vartype meter_id: str
    :ivar meter_details: The details about the meter. By default this is not populated, unless it's
     specified in $expand.
    :vartype meter_details: ~azure.mgmt.consumption.models.MeterDetails
    :ivar unit_of_measure: Unit of measure.
    :vartype unit_of_measure: str
    :ivar included_quantity: Included quality for an offer.
    :vartype included_quantity: float
    :ivar part_number: Part Number.
    :vartype part_number: str
    :ivar unit_price: Unit Price.
    :vartype unit_price: float
    :ivar currency_code: Currency Code.
    :vartype currency_code: str
    :ivar offer_id: Offer Id.
    :vartype offer_id: str
    """

    _validation = {
        "billing_period_id": {"readonly": True},
        "meter_id": {"readonly": True},
        "meter_details": {"readonly": True},
        "unit_of_measure": {"readonly": True},
        "included_quantity": {"readonly": True},
        "part_number": {"readonly": True},
        "unit_price": {"readonly": True},
        "currency_code": {"readonly": True},
        "offer_id": {"readonly": True},
    }

    _attribute_map = {
        "billing_period_id": {"key": "billingPeriodId", "type": "str"},
        "meter_id": {"key": "meterId", "type": "str"},
        "meter_details": {"key": "meterDetails", "type": "MeterDetails"},
        "unit_of_measure": {"key": "unitOfMeasure", "type": "str"},
        "included_quantity": {"key": "includedQuantity", "type": "float"},
        "part_number": {"key": "partNumber", "type": "str"},
        "unit_price": {"key": "unitPrice", "type": "float"},
        "currency_code": {"key": "currencyCode", "type": "str"},
        "offer_id": {"key": "offerId", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.billing_period_id = None
        self.meter_id = None
        self.meter_details = None
        self.unit_of_measure = None
        self.included_quantity = None
        self.part_number = None
        self.unit_price = None
        self.currency_code = None
        self.offer_id = None


class Resource(_serialization.Model):
    """The Resource model definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The full qualified ARM ID of an event.
    :vartype id: str
    :ivar name: The ID that uniquely identifies an event.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar etag: The etag for the resource.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "etag": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.etag = None
        self.tags = None


class PriceSheetResult(Resource):
    """An pricesheet resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The full qualified ARM ID of an event.
    :vartype id: str
    :ivar name: The ID that uniquely identifies an event.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar etag: The etag for the resource.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar pricesheets: Price sheet.
    :vartype pricesheets: list[~azure.mgmt.consumption.models.PriceSheetProperties]
    :ivar next_link: The link (url) to the next page of results.
    :vartype next_link: str
    :ivar download: Pricesheet download details.
    :vartype download: ~azure.mgmt.consumption.models.MeterDetails
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "etag": {"readonly": True},
        "tags": {"readonly": True},
        "pricesheets": {"readonly": True},
        "next_link": {"readonly": True},
        "download": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "pricesheets": {"key": "properties.pricesheets", "type": "[PriceSheetProperties]"},
        "next_link": {"key": "properties.nextLink", "type": "str"},
        "download": {"key": "properties.download", "type": "MeterDetails"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.pricesheets = None
        self.next_link = None
        self.download = None
