# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import RaiPolicyClientTestBase, RaiPolicyPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestRaiPolicy(RaiPolicyClientTestBase):
    @RaiPolicyPreparer()
    @recorded_by_proxy
    def test_create_or_update_rai_policy(self, raipolicy_endpoint):
        client = self.create_client(endpoint=raipolicy_endpoint)
        response = client.create_or_update_rai_policy(
            rai_policy_name="str",
            options={
                "name": "str",
                "taskSettings": [
                    {
                        "appliedFor": [{"role": "str", "source": "str"}],
                        "blockingCriteria": {
                            "allowedRiskLevel": "str",
                            "allowedSeverity": 0,
                            "enabled": bool,
                            "isDetected": bool,
                            "kind": "str",
                        },
                        "kind": "str",
                        "settingEnabled": bool,
                        "settingId": "str",
                        "blocklistTaskSetting": {"name": "str"},
                        "customHarmCategoryTaskSetting": {"name": "str"},
                        "harmCategoryTaskSetting": {"harmCategory": "str", "harmConfigId": "str"},
                        "safetyIncidentTaskSetting": {"name": "str"},
                    }
                ],
            },
        )

        # please add some check logic here by yourself
        # ...

    @RaiPolicyPreparer()
    @recorded_by_proxy
    def test_delete_rai_policy(self, raipolicy_endpoint):
        client = self.create_client(endpoint=raipolicy_endpoint)
        response = client.delete_rai_policy(
            rai_policy_name="str",
        )

        # please add some check logic here by yourself
        # ...

    @RaiPolicyPreparer()
    @recorded_by_proxy
    def test_get_rai_policy(self, raipolicy_endpoint):
        client = self.create_client(endpoint=raipolicy_endpoint)
        response = client.get_rai_policy(
            rai_policy_name="str",
        )

        # please add some check logic here by yourself
        # ...

    @RaiPolicyPreparer()
    @recorded_by_proxy
    def test_list_rai_policies(self, raipolicy_endpoint):
        client = self.create_client(endpoint=raipolicy_endpoint)
        response = client.list_rai_policies()
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...
