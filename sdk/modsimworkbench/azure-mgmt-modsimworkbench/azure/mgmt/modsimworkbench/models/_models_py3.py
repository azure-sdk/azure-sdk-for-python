# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class AccessConfiguration(_serialization.Model):
    """Access configuration properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar access_type: Gets or sets the AccessType. "GUI"
    :vartype access_type: str or ~azure.mgmt.modsimworkbench.models.AccessType
    :ivar gateway_type: Gets or sets the GatewayType. Known values are: "ExpressRoute", "None", and
     "Vpn".
    :vartype gateway_type: str or ~azure.mgmt.modsimworkbench.models.GatewayType
    :ivar gateway_vnet_id: Gets or sets the GatewayVnetId.
    :vartype gateway_vnet_id: str
    :ivar access_url: Gets or sets the AccessUrl.
    :vartype access_url: str
    :ivar ip_address: Gets or sets the IpAddress.
    :vartype ip_address: str
    """

    _validation = {
        "access_type": {"readonly": True},
        "access_url": {"readonly": True},
        "ip_address": {"readonly": True},
    }

    _attribute_map = {
        "access_type": {"key": "accessType", "type": "str"},
        "gateway_type": {"key": "gatewayType", "type": "str"},
        "gateway_vnet_id": {"key": "gatewayVnetId", "type": "str"},
        "access_url": {"key": "accessUrl", "type": "str"},
        "ip_address": {"key": "ipAddress", "type": "str"},
    }

    def __init__(
        self,
        *,
        gateway_type: Optional[Union[str, "_models.GatewayType"]] = None,
        gateway_vnet_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword gateway_type: Gets or sets the GatewayType. Known values are: "ExpressRoute", "None",
         and "Vpn".
        :paramtype gateway_type: str or ~azure.mgmt.modsimworkbench.models.GatewayType
        :keyword gateway_vnet_id: Gets or sets the GatewayVnetId.
        :paramtype gateway_vnet_id: str
        """
        super().__init__(**kwargs)
        self.access_type = None
        self.gateway_type = gateway_type
        self.gateway_vnet_id = gateway_vnet_id
        self.access_url = None
        self.ip_address = None


class AppOidc(_serialization.Model):
    """Workbench properties.

    :ivar client_id: Client Id.
    :vartype client_id: str
    :ivar secret_uri: Client secret.
    :vartype secret_uri: str
    """

    _attribute_map = {
        "client_id": {"key": "clientId", "type": "str"},
        "secret_uri": {"key": "secretUri", "type": "str"},
    }

    def __init__(self, *, client_id: Optional[str] = None, secret_uri: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword client_id: Client Id.
        :paramtype client_id: str
        :keyword secret_uri: Client secret.
        :paramtype secret_uri: str
        """
        super().__init__(**kwargs)
        self.client_id = client_id
        self.secret_uri = secret_uri


class Resource(_serialization.Model):
    """Common resource representation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.location = location
        self.tags = tags
        self.system_data = None
        self.sku = sku


class Chamber(Resource):  # pylint: disable=too-many-instance-attributes
    """Chamber resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar provisioning_state: Gets the status of the Chamber at the time the operation was called.
     Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted", "Canceled",
     "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    :ivar enable_properties_license_services_synopsys_enable: Switch to show if License Service is
     activated.
    :vartype enable_properties_license_services_synopsys_enable: bool
    :ivar server_properties_license_services_synopsys_server: License Service server.
    :vartype server_properties_license_services_synopsys_server: str
    :ivar vm_uuid: Virtual machine universal unique identifier of ModSim Workbench chamber license
     servers used by FlexNet Licensing Service.
    :vartype vm_uuid: list[str]
    :ivar enable_properties_license_services_siemens_enable: Switch to show if License Service is
     activated.
    :vartype enable_properties_license_services_siemens_enable: bool
    :ivar server_properties_license_services_siemens_server: License Service server.
    :vartype server_properties_license_services_siemens_server: str
    :ivar lmhost_id_properties_license_services_siemens_lmhost_id: Unique identifier of ModSim
     Workbench chamber license servers used by FlexNet Licensing Service.
    :vartype lmhost_id_properties_license_services_siemens_lmhost_id: list[str]
    :ivar enable_properties_license_services_ansys_enable: Switch to show if License Service is
     activated.
    :vartype enable_properties_license_services_ansys_enable: bool
    :ivar server_properties_license_services_ansys_server: License Service server.
    :vartype server_properties_license_services_ansys_server: str
    :ivar lmhost_id_properties_license_services_ansys_lmhost_id: Unique identifier of ModSim
     Workbench chamber license servers used by FlexNet Licensing Service.
    :vartype lmhost_id_properties_license_services_ansys_lmhost_id: list[str]
    :ivar enable_properties_license_services_cadence_enable: Switch to show if License Service is
     activated.
    :vartype enable_properties_license_services_cadence_enable: bool
    :ivar server_properties_license_services_cadence_server: License Service server.
    :vartype server_properties_license_services_cadence_server: str
    :ivar lmhost_id_properties_license_services_cadence_lmhost_id: Unique identifier of ModSim
     Workbench chamber license servers used by FlexNet Licensing Service.
    :vartype lmhost_id_properties_license_services_cadence_lmhost_id: list[str]
    :ivar mfp: License server information for Cadence License Manager.
    :vartype mfp: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "enable_properties_license_services_synopsys_enable": {
            "key": "properties.licenseServices.synopsys.enable",
            "type": "bool",
        },
        "server_properties_license_services_synopsys_server": {
            "key": "properties.licenseServices.synopsys.server",
            "type": "str",
        },
        "vm_uuid": {"key": "properties.licenseServices.synopsys.vmUuid", "type": "[str]"},
        "enable_properties_license_services_siemens_enable": {
            "key": "properties.licenseServices.siemens.enable",
            "type": "bool",
        },
        "server_properties_license_services_siemens_server": {
            "key": "properties.licenseServices.siemens.server",
            "type": "str",
        },
        "lmhost_id_properties_license_services_siemens_lmhost_id": {
            "key": "properties.licenseServices.siemens.lmhostId",
            "type": "[str]",
        },
        "enable_properties_license_services_ansys_enable": {
            "key": "properties.licenseServices.ansys.enable",
            "type": "bool",
        },
        "server_properties_license_services_ansys_server": {
            "key": "properties.licenseServices.ansys.server",
            "type": "str",
        },
        "lmhost_id_properties_license_services_ansys_lmhost_id": {
            "key": "properties.licenseServices.ansys.lmhostId",
            "type": "[str]",
        },
        "enable_properties_license_services_cadence_enable": {
            "key": "properties.licenseServices.cadence.enable",
            "type": "bool",
        },
        "server_properties_license_services_cadence_server": {
            "key": "properties.licenseServices.cadence.server",
            "type": "str",
        },
        "lmhost_id_properties_license_services_cadence_lmhost_id": {
            "key": "properties.licenseServices.cadence.lmhostId",
            "type": "[str]",
        },
        "mfp": {"key": "properties.licenseServices.cadence.mfp", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        enable_properties_license_services_synopsys_enable: Optional[bool] = None,
        server_properties_license_services_synopsys_server: Optional[str] = None,
        vm_uuid: Optional[List[str]] = None,
        enable_properties_license_services_siemens_enable: Optional[bool] = None,
        server_properties_license_services_siemens_server: Optional[str] = None,
        lmhost_id_properties_license_services_siemens_lmhost_id: Optional[List[str]] = None,
        enable_properties_license_services_ansys_enable: Optional[bool] = None,
        server_properties_license_services_ansys_server: Optional[str] = None,
        lmhost_id_properties_license_services_ansys_lmhost_id: Optional[List[str]] = None,
        enable_properties_license_services_cadence_enable: Optional[bool] = None,
        server_properties_license_services_cadence_server: Optional[str] = None,
        lmhost_id_properties_license_services_cadence_lmhost_id: Optional[List[str]] = None,
        mfp: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword enable_properties_license_services_synopsys_enable: Switch to show if License Service
         is activated.
        :paramtype enable_properties_license_services_synopsys_enable: bool
        :keyword server_properties_license_services_synopsys_server: License Service server.
        :paramtype server_properties_license_services_synopsys_server: str
        :keyword vm_uuid: Virtual machine universal unique identifier of ModSim Workbench chamber
         license servers used by FlexNet Licensing Service.
        :paramtype vm_uuid: list[str]
        :keyword enable_properties_license_services_siemens_enable: Switch to show if License Service
         is activated.
        :paramtype enable_properties_license_services_siemens_enable: bool
        :keyword server_properties_license_services_siemens_server: License Service server.
        :paramtype server_properties_license_services_siemens_server: str
        :keyword lmhost_id_properties_license_services_siemens_lmhost_id: Unique identifier of ModSim
         Workbench chamber license servers used by FlexNet Licensing Service.
        :paramtype lmhost_id_properties_license_services_siemens_lmhost_id: list[str]
        :keyword enable_properties_license_services_ansys_enable: Switch to show if License Service is
         activated.
        :paramtype enable_properties_license_services_ansys_enable: bool
        :keyword server_properties_license_services_ansys_server: License Service server.
        :paramtype server_properties_license_services_ansys_server: str
        :keyword lmhost_id_properties_license_services_ansys_lmhost_id: Unique identifier of ModSim
         Workbench chamber license servers used by FlexNet Licensing Service.
        :paramtype lmhost_id_properties_license_services_ansys_lmhost_id: list[str]
        :keyword enable_properties_license_services_cadence_enable: Switch to show if License Service
         is activated.
        :paramtype enable_properties_license_services_cadence_enable: bool
        :keyword server_properties_license_services_cadence_server: License Service server.
        :paramtype server_properties_license_services_cadence_server: str
        :keyword lmhost_id_properties_license_services_cadence_lmhost_id: Unique identifier of ModSim
         Workbench chamber license servers used by FlexNet Licensing Service.
        :paramtype lmhost_id_properties_license_services_cadence_lmhost_id: list[str]
        :keyword mfp: License server information for Cadence License Manager.
        :paramtype mfp: list[str]
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.provisioning_state = None
        self.enable_properties_license_services_synopsys_enable = enable_properties_license_services_synopsys_enable
        self.server_properties_license_services_synopsys_server = server_properties_license_services_synopsys_server
        self.vm_uuid = vm_uuid
        self.enable_properties_license_services_siemens_enable = enable_properties_license_services_siemens_enable
        self.server_properties_license_services_siemens_server = server_properties_license_services_siemens_server
        self.lmhost_id_properties_license_services_siemens_lmhost_id = (
            lmhost_id_properties_license_services_siemens_lmhost_id
        )
        self.enable_properties_license_services_ansys_enable = enable_properties_license_services_ansys_enable
        self.server_properties_license_services_ansys_server = server_properties_license_services_ansys_server
        self.lmhost_id_properties_license_services_ansys_lmhost_id = (
            lmhost_id_properties_license_services_ansys_lmhost_id
        )
        self.enable_properties_license_services_cadence_enable = enable_properties_license_services_cadence_enable
        self.server_properties_license_services_cadence_server = server_properties_license_services_cadence_server
        self.lmhost_id_properties_license_services_cadence_lmhost_id = (
            lmhost_id_properties_license_services_cadence_lmhost_id
        )
        self.mfp = mfp


class ChamberPageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.Chamber]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Chamber]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.Chamber"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.Chamber]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value


class Connector(Resource):  # pylint: disable=too-many-instance-attributes
    """Connector resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar access_configurations: Gets or sets the Access Configuration.
    :vartype access_configurations: JSON
    :ivar remote_desktop: Gets or sets the Remote Desktop.
    :vartype remote_desktop: JSON
    :ivar network_acls: Specifies set of source IP address ranges to allow access the ModSim
     Workbench workbench.
    :vartype network_acls: JSON
    :ivar provisioning_state: Gets the status of the connector at the time the operation was
     called. Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted",
     "Canceled", "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "access_configurations": {"key": "properties.accessConfigurations", "type": "object"},
        "remote_desktop": {"key": "properties.remoteDesktop", "type": "object"},
        "network_acls": {"key": "properties.networkAcls", "type": "object"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        access_configurations: Optional[JSON] = None,
        remote_desktop: Optional[JSON] = None,
        network_acls: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword access_configurations: Gets or sets the Access Configuration.
        :paramtype access_configurations: JSON
        :keyword remote_desktop: Gets or sets the Remote Desktop.
        :paramtype remote_desktop: JSON
        :keyword network_acls: Specifies set of source IP address ranges to allow access the ModSim
         Workbench workbench.
        :paramtype network_acls: JSON
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.access_configurations = access_configurations
        self.remote_desktop = remote_desktop
        self.network_acls = network_acls
        self.provisioning_state = None


class ConnectorPageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.Connector]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Connector]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.Connector"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.Connector]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value


class DownloadRequest(_serialization.Model):
    """Request to download files from an chamber data pipeline.

    :ivar result: Request to download files from an ModSim Workbench chamber data pipeline action.
    :vartype result: str
    """

    _attribute_map = {
        "result": {"key": "result", "type": "str"},
    }

    def __init__(self, *, result: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword result: Request to download files from an ModSim Workbench chamber data pipeline
         action.
        :paramtype result: str
        """
        super().__init__(**kwargs)
        self.result = result


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.modsimworkbench.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.modsimworkbench.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorDetailAutoGenerated(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.modsimworkbench.models.ErrorDetailAutoGenerated]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.modsimworkbench.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetailAutoGenerated]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.modsimworkbench.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.modsimworkbench.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class ErrorResponseAutoGenerated(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.modsimworkbench.models.ErrorDetailAutoGenerated
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetailAutoGenerated"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetailAutoGenerated"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.modsimworkbench.models.ErrorDetailAutoGenerated
        """
        super().__init__(**kwargs)
        self.error = error


class Etx(_serialization.Model):
    """Etx properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar connection_node_count: The connection node count.
    :vartype connection_node_count: int
    :ivar license_activated: The license activated. Known values are: "True" and "False".
    :vartype license_activated: str or ~azure.mgmt.modsimworkbench.models.LicenseActivated
    :ivar reply_url_etx: The reply URL of ETX Server for Azure AD app.
    :vartype reply_url_etx: str
    :ivar reply_url_otds: The reply URL of OTDS for Azure AD app.
    :vartype reply_url_otds: str
    :ivar license_key_uri: The license key uri.
    :vartype license_key_uri: str
    """

    _validation = {
        "connection_node_count": {"readonly": True},
        "license_activated": {"readonly": True},
        "reply_url_etx": {"readonly": True},
        "reply_url_otds": {"readonly": True},
    }

    _attribute_map = {
        "connection_node_count": {"key": "connectionNodeCount", "type": "int"},
        "license_activated": {"key": "licenseActivated", "type": "str"},
        "reply_url_etx": {"key": "replyUrlEtx", "type": "str"},
        "reply_url_otds": {"key": "replyUrlOtds", "type": "str"},
        "license_key_uri": {"key": "licenseKeyUri", "type": "str"},
    }

    def __init__(self, *, license_key_uri: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword license_key_uri: The license key uri.
        :paramtype license_key_uri: str
        """
        super().__init__(**kwargs)
        self.connection_node_count = None
        self.license_activated = None
        self.reply_url_etx = None
        self.reply_url_otds = None
        self.license_key_uri = license_key_uri


class File(Resource):  # pylint: disable=too-many-instance-attributes
    """File resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar provisioning_state: Gets the status of the file at the time the operation was called.
     Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted", "Canceled",
     "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    :ivar timestamp: The modified timestamp of the file.
    :vartype timestamp: ~datetime.datetime
    :ivar data_pipeline: The direction of ModSim Workbench chamber data pipeline where the file
     located.
    :vartype data_pipeline: str
    :ivar request_id: The resource ID of ModSim Workbench chamber data pipeline request Works and
     required only if requested is true.
    :vartype request_id: str
    :ivar file_path: The Linux File System path for the ModSim Workbench chamber data pipeline
     file.
    :vartype file_path: str
    :ivar size: The size of the file.
    :vartype size: int
    :ivar checksum: The MD5 hash of the file.
    :vartype checksum: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "timestamp": {"key": "properties.timestamp", "type": "iso-8601"},
        "data_pipeline": {"key": "properties.dataPipeline", "type": "str"},
        "request_id": {"key": "properties.requestId", "type": "str"},
        "file_path": {"key": "properties.filePath", "type": "str"},
        "size": {"key": "properties.size", "type": "int"},
        "checksum": {"key": "properties.checksum", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        timestamp: Optional[datetime.datetime] = None,
        data_pipeline: Optional[str] = None,
        request_id: Optional[str] = None,
        file_path: Optional[str] = None,
        size: Optional[int] = None,
        checksum: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword timestamp: The modified timestamp of the file.
        :paramtype timestamp: ~datetime.datetime
        :keyword data_pipeline: The direction of ModSim Workbench chamber data pipeline where the file
         located.
        :paramtype data_pipeline: str
        :keyword request_id: The resource ID of ModSim Workbench chamber data pipeline request Works
         and required only if requested is true.
        :paramtype request_id: str
        :keyword file_path: The Linux File System path for the ModSim Workbench chamber data pipeline
         file.
        :paramtype file_path: str
        :keyword size: The size of the file.
        :paramtype size: int
        :keyword checksum: The MD5 hash of the file.
        :paramtype checksum: str
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.provisioning_state = None
        self.timestamp = timestamp
        self.data_pipeline = data_pipeline
        self.request_id = request_id
        self.file_path = file_path
        self.size = size
        self.checksum = checksum


class FileDownloadSasUri(_serialization.Model):
    """Get SAS URI to download a file from an chamber data pipeline.

    :ivar result: Get SAS URI to download a file action.
    :vartype result: str
    """

    _attribute_map = {
        "result": {"key": "result", "type": "str"},
    }

    def __init__(self, *, result: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword result: Get SAS URI to download a file action.
        :paramtype result: str
        """
        super().__init__(**kwargs)
        self.result = result


class FilePageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.File]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[File]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.File"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.File]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value


class FileRequestsManage(_serialization.Model):
    """Manage download file requests in an chamber Data pipeline.

    :ivar result: Manage download file requests in an chamber Data pipeline action.
    :vartype result: str
    """

    _attribute_map = {
        "result": {"key": "result", "type": "str"},
    }

    def __init__(self, *, result: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword result: Manage download file requests in an chamber Data pipeline action.
        :paramtype result: str
        """
        super().__init__(**kwargs)
        self.result = result


class FileRequestsManageParameters(_serialization.Model):
    """Manage files in an ModSim Workbench chamber data pipeline.

    :ivar action: Specifies the file management action. Known values are: "Approve" and "Reject".
    :vartype action: str or ~azure.mgmt.modsimworkbench.models.FileRequestsAction
    :ivar description: Specifies the reason for the action.
    :vartype description: str
    """

    _attribute_map = {
        "action": {"key": "action", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(
        self,
        *,
        action: Optional[Union[str, "_models.FileRequestsAction"]] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword action: Specifies the file management action. Known values are: "Approve" and
         "Reject".
        :paramtype action: str or ~azure.mgmt.modsimworkbench.models.FileRequestsAction
        :keyword description: Specifies the reason for the action.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.action = action
        self.description = description


class FilesDownloadRequestParameters(_serialization.Model):
    """Request to download files from an ModSim Workbench chamber data pipeline.

    :ivar description: Specifies the reason for the download request.
    :vartype description: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword description: Specifies the reason for the download request.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.description = description


class FilesManage(_serialization.Model):
    """Manage files in an chamber data pipeline.

    :ivar result: Manage files in an ModSim Workbench chamber data pipeline action.
    :vartype result: str
    """

    _attribute_map = {
        "result": {"key": "result", "type": "str"},
    }

    def __init__(self, *, result: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword result: Manage files in an ModSim Workbench chamber data pipeline action.
        :paramtype result: str
        """
        super().__init__(**kwargs)
        self.result = result


class FilesManageParameters(_serialization.Model):
    """Manage files in an ModSim Workbench chamber data pipeline.

    :ivar data_pipeline: Inbound or outbound of the ModSim Workbench chamber Data pipeline. Known
     values are: "Inbound" and "Outbound".
    :vartype data_pipeline: str or ~azure.mgmt.modsimworkbench.models.DataPipeline
    :ivar action: Specifies the file management action. Known values are: "Delete" and "Archive".
    :vartype action: str or ~azure.mgmt.modsimworkbench.models.Action
    :ivar force: Specifies whether to force delete. Works if action is Delete. Known values are:
     "True" and "False".
    :vartype force: str or ~azure.mgmt.modsimworkbench.models.Force
    """

    _attribute_map = {
        "data_pipeline": {"key": "dataPipeline", "type": "str"},
        "action": {"key": "action", "type": "str"},
        "force": {"key": "force", "type": "str"},
    }

    def __init__(
        self,
        *,
        data_pipeline: Optional[Union[str, "_models.DataPipeline"]] = None,
        action: Optional[Union[str, "_models.Action"]] = None,
        force: Optional[Union[str, "_models.Force"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword data_pipeline: Inbound or outbound of the ModSim Workbench chamber Data pipeline.
         Known values are: "Inbound" and "Outbound".
        :paramtype data_pipeline: str or ~azure.mgmt.modsimworkbench.models.DataPipeline
        :keyword action: Specifies the file management action. Known values are: "Delete" and
         "Archive".
        :paramtype action: str or ~azure.mgmt.modsimworkbench.models.Action
        :keyword force: Specifies whether to force delete. Works if action is Delete. Known values are:
         "True" and "False".
        :paramtype force: str or ~azure.mgmt.modsimworkbench.models.Force
        """
        super().__init__(**kwargs)
        self.data_pipeline = data_pipeline
        self.action = action
        self.force = force


class FileUploadParameters(_serialization.Model):
    """File Upload Parameters DTO.

    :ivar file_size: Gets or sets the size of the file being uploaded.
    :vartype file_size: int
    """

    _attribute_map = {
        "file_size": {"key": "fileSize", "type": "int"},
    }

    def __init__(self, *, file_size: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword file_size: Gets or sets the size of the file being uploaded.
        :paramtype file_size: int
        """
        super().__init__(**kwargs)
        self.file_size = file_size


class GetUploadUri(_serialization.Model):
    """Datasync file upload SAS token.

    :ivar result: Datasync file upload SAS token.
    :vartype result: str
    """

    _attribute_map = {
        "result": {"key": "result", "type": "str"},
    }

    def __init__(self, *, result: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword result: Datasync file upload SAS token.
        :paramtype result: str
        """
        super().__init__(**kwargs)
        self.result = result


class LicenseKeyParameters(_serialization.Model):
    """License Key Parameters.

    :ivar license_key: Value of License Key.
    :vartype license_key: str
    """

    _attribute_map = {
        "license_key": {"key": "licenseKey", "type": "str"},
    }

    def __init__(self, *, license_key: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword license_key: Value of License Key.
        :paramtype license_key: str
        """
        super().__init__(**kwargs)
        self.license_key = license_key


class NetworkAcls(_serialization.Model):
    """Access configuration properties.

    :ivar allowed_address_spaces: Gets or sets the AllowedAddressSpaces.
    :vartype allowed_address_spaces: list[str]
    """

    _attribute_map = {
        "allowed_address_spaces": {"key": "allowedAddressSpaces", "type": "[str]"},
    }

    def __init__(self, *, allowed_address_spaces: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword allowed_address_spaces: Gets or sets the AllowedAddressSpaces.
        :paramtype allowed_address_spaces: list[str]
        """
        super().__init__(**kwargs)
        self.allowed_address_spaces = allowed_address_spaces


class RemoteDesktop(_serialization.Model):
    """Remote Desktop properties.

    :ivar etx: The etx object.
    :vartype etx: ~azure.mgmt.modsimworkbench.models.Etx
    """

    _attribute_map = {
        "etx": {"key": "etx", "type": "Etx"},
    }

    def __init__(self, *, etx: Optional["_models.Etx"] = None, **kwargs: Any) -> None:
        """
        :keyword etx: The etx object.
        :paramtype etx: ~azure.mgmt.modsimworkbench.models.Etx
        """
        super().__init__(**kwargs)
        self.etx = etx


class Request(Resource):  # pylint: disable=too-many-instance-attributes
    """Request resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar timestamp: The timestamp for the resource creation.
    :vartype timestamp: ~datetime.datetime
    :ivar file_id: FileId for the operation.
    :vartype file_id: str
    :ivar request_user_id: Specifies the principal ID of Azure Active Directory User who requested
     to download.
    :vartype request_user_id: str
    :ivar linux_username: The ModSim Workbench chamber workloads local username used when login.
    :vartype linux_username: str
    :ivar status: The status of ModSim Workbench chamber data pipeline request.
    :vartype status: str
    :ivar description: Description for the operation.
    :vartype description: str
    :ivar approve:
    :vartype approve: ~azure.mgmt.modsimworkbench.models.RequestPropertiesFormatApprove
    :ivar download:
    :vartype download: ~azure.mgmt.modsimworkbench.models.RequestPropertiesFormatDownload
    :ivar internal_metadata:
    :vartype internal_metadata:
     ~azure.mgmt.modsimworkbench.models.RequestPropertiesFormatInternalMetadata
    :ivar provisioning_state: Gets the status of the request at the time the operation was called.
     Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted", "Canceled",
     "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "timestamp": {"key": "properties.timestamp", "type": "iso-8601"},
        "file_id": {"key": "properties.fileId", "type": "str"},
        "request_user_id": {"key": "properties.requestUserId", "type": "str"},
        "linux_username": {"key": "properties.linuxUsername", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "approve": {"key": "properties.approve", "type": "RequestPropertiesFormatApprove"},
        "download": {"key": "properties.download", "type": "RequestPropertiesFormatDownload"},
        "internal_metadata": {"key": "properties.internalMetadata", "type": "RequestPropertiesFormatInternalMetadata"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        timestamp: Optional[datetime.datetime] = None,
        file_id: Optional[str] = None,
        request_user_id: Optional[str] = None,
        linux_username: Optional[str] = None,
        status: Optional[str] = None,
        description: Optional[str] = None,
        approve: Optional["_models.RequestPropertiesFormatApprove"] = None,
        download: Optional["_models.RequestPropertiesFormatDownload"] = None,
        internal_metadata: Optional["_models.RequestPropertiesFormatInternalMetadata"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword timestamp: The timestamp for the resource creation.
        :paramtype timestamp: ~datetime.datetime
        :keyword file_id: FileId for the operation.
        :paramtype file_id: str
        :keyword request_user_id: Specifies the principal ID of Azure Active Directory User who
         requested to download.
        :paramtype request_user_id: str
        :keyword linux_username: The ModSim Workbench chamber workloads local username used when login.
        :paramtype linux_username: str
        :keyword status: The status of ModSim Workbench chamber data pipeline request.
        :paramtype status: str
        :keyword description: Description for the operation.
        :paramtype description: str
        :keyword approve:
        :paramtype approve: ~azure.mgmt.modsimworkbench.models.RequestPropertiesFormatApprove
        :keyword download:
        :paramtype download: ~azure.mgmt.modsimworkbench.models.RequestPropertiesFormatDownload
        :keyword internal_metadata:
        :paramtype internal_metadata:
         ~azure.mgmt.modsimworkbench.models.RequestPropertiesFormatInternalMetadata
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.timestamp = timestamp
        self.file_id = file_id
        self.request_user_id = request_user_id
        self.linux_username = linux_username
        self.status = status
        self.description = description
        self.approve = approve
        self.download = download
        self.internal_metadata = internal_metadata
        self.provisioning_state = None


class RequestPageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.Request]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Request]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.Request"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.Request]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value


class RequestPropertiesFormatApprove(_serialization.Model):
    """RequestPropertiesFormatApprove.

    :ivar id: The globally unique identifier for the approval.
    :vartype id: str
    :ivar description: Description of approval.
    :vartype description: str
    :ivar user_id: Specifies the principal ID of Azure Active Directory User who approved to
     download.
    :vartype user_id: str
    :ivar timestamp: The timestamp for the approval.
    :vartype timestamp: ~datetime.datetime
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "user_id": {"key": "userId", "type": "str"},
        "timestamp": {"key": "timestamp", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        description: Optional[str] = None,
        user_id: Optional[str] = None,
        timestamp: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: The globally unique identifier for the approval.
        :paramtype id: str
        :keyword description: Description of approval.
        :paramtype description: str
        :keyword user_id: Specifies the principal ID of Azure Active Directory User who approved to
         download.
        :paramtype user_id: str
        :keyword timestamp: The timestamp for the approval.
        :paramtype timestamp: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.id = id
        self.description = description
        self.user_id = user_id
        self.timestamp = timestamp


class RequestPropertiesFormatDownload(_serialization.Model):
    """RequestPropertiesFormatDownload.

    :ivar location: Download destination location.
    :vartype location: str
    :ivar start_time: The timestamp for the start of download.
    :vartype start_time: ~datetime.datetime
    :ivar complete_time: The timestamp for the completion of download.
    :vartype complete_time: ~datetime.datetime
    """

    _attribute_map = {
        "location": {"key": "location", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "complete_time": {"key": "completeTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        start_time: Optional[datetime.datetime] = None,
        complete_time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Download destination location.
        :paramtype location: str
        :keyword start_time: The timestamp for the start of download.
        :paramtype start_time: ~datetime.datetime
        :keyword complete_time: The timestamp for the completion of download.
        :paramtype complete_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.location = location
        self.start_time = start_time
        self.complete_time = complete_time


class RequestPropertiesFormatInternalMetadata(_serialization.Model):
    """RequestPropertiesFormatInternalMetadata.

    :ivar sas_uri_id: sas uri id.
    :vartype sas_uri_id: str
    """

    _attribute_map = {
        "sas_uri_id": {"key": "sasUriId", "type": "str"},
    }

    def __init__(self, *, sas_uri_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword sas_uri_id: sas uri id.
        :paramtype sas_uri_id: str
        """
        super().__init__(**kwargs)
        self.sas_uri_id = sas_uri_id


class RestartLicenseParameters(_serialization.Model):
    """File Upload Parameters DTO.

    :ivar license_service: Gets or sets the license service to update. Known values are: "ansys",
     "cadence", "siemens", and "synopsys".
    :vartype license_service: str or ~azure.mgmt.modsimworkbench.models.LicenseService
    """

    _attribute_map = {
        "license_service": {"key": "licenseService", "type": "str"},
    }

    def __init__(
        self, *, license_service: Optional[Union[str, "_models.LicenseService"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword license_service: Gets or sets the license service to update. Known values are:
         "ansys", "cadence", "siemens", and "synopsys".
        :paramtype license_service: str or ~azure.mgmt.modsimworkbench.models.LicenseService
        """
        super().__init__(**kwargs)
        self.license_service = license_service


class Storage(Resource):  # pylint: disable=too-many-instance-attributes
    """Storage resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar provisioning_state: Gets the status of the storage at the time the operation was called.
     Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted", "Canceled",
     "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    :ivar capacity_allocated: Provisioned size of the ModSim Workbench chamber storage in
     terabytes.
    :vartype capacity_allocated: int
    :ivar performance_tier: Specifies performance tier of the ModSim Workbench chamber storage.
     Known values are: "Standard", "Premium", and "Ultra".
    :vartype performance_tier: str or ~azure.mgmt.modsimworkbench.models.PerformanceTier
    :ivar local_mount_path: Directory where the SDW Private Storage volume mounted.
    :vartype local_mount_path: str
    :ivar data_pipeline_inbound_path: Directory for the ModSim Workbench chamber data pipeline
     inbound.
    :vartype data_pipeline_inbound_path: str
    :ivar data_pipeline_outbound_path: Directory for the ModSim Workbench chamber data pipeline
     outbound.
    :vartype data_pipeline_outbound_path: str
    :ivar capacity_used: Capacity used in the SDW Private Storage volume in gigabytes.
    :vartype capacity_used: int
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "capacity_allocated": {"key": "properties.capacityAllocated", "type": "int"},
        "performance_tier": {"key": "properties.performanceTier", "type": "str"},
        "local_mount_path": {"key": "properties.localMountPath", "type": "str"},
        "data_pipeline_inbound_path": {"key": "properties.dataPipelineInboundPath", "type": "str"},
        "data_pipeline_outbound_path": {"key": "properties.dataPipelineOutboundPath", "type": "str"},
        "capacity_used": {"key": "properties.capacityUsed", "type": "int"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        capacity_allocated: Optional[int] = None,
        performance_tier: Union[str, "_models.PerformanceTier"] = "Premium",
        local_mount_path: Optional[str] = None,
        data_pipeline_inbound_path: Optional[str] = None,
        data_pipeline_outbound_path: Optional[str] = None,
        capacity_used: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword capacity_allocated: Provisioned size of the ModSim Workbench chamber storage in
         terabytes.
        :paramtype capacity_allocated: int
        :keyword performance_tier: Specifies performance tier of the ModSim Workbench chamber storage.
         Known values are: "Standard", "Premium", and "Ultra".
        :paramtype performance_tier: str or ~azure.mgmt.modsimworkbench.models.PerformanceTier
        :keyword local_mount_path: Directory where the SDW Private Storage volume mounted.
        :paramtype local_mount_path: str
        :keyword data_pipeline_inbound_path: Directory for the ModSim Workbench chamber data pipeline
         inbound.
        :paramtype data_pipeline_inbound_path: str
        :keyword data_pipeline_outbound_path: Directory for the ModSim Workbench chamber data pipeline
         outbound.
        :paramtype data_pipeline_outbound_path: str
        :keyword capacity_used: Capacity used in the SDW Private Storage volume in gigabytes.
        :paramtype capacity_used: int
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.provisioning_state = None
        self.capacity_allocated = capacity_allocated
        self.performance_tier = performance_tier
        self.local_mount_path = local_mount_path
        self.data_pipeline_inbound_path = data_pipeline_inbound_path
        self.data_pipeline_outbound_path = data_pipeline_outbound_path
        self.capacity_used = capacity_used


class StoragePageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.Storage]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Storage]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.Storage"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.Storage]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.modsimworkbench.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.modsimworkbench.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.modsimworkbench.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.modsimworkbench.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class UpdateLicenseParameters(_serialization.Model):
    """File Upload Parameters DTO.

    :ivar license_service: Gets or sets the license service to update. Known values are: "ansys",
     "cadence", "siemens", and "synopsys".
    :vartype license_service: str or ~azure.mgmt.modsimworkbench.models.LicenseService
    :ivar enable: Switch to show if License Service is activated.
    :vartype enable: bool
    :ivar license_key: EDA License file contents.
    :vartype license_key: str
    """

    _attribute_map = {
        "license_service": {"key": "licenseService", "type": "str"},
        "enable": {"key": "enable", "type": "bool"},
        "license_key": {"key": "licenseKey", "type": "str"},
    }

    def __init__(
        self,
        *,
        license_service: Optional[Union[str, "_models.LicenseService"]] = None,
        enable: Optional[bool] = None,
        license_key: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword license_service: Gets or sets the license service to update. Known values are:
         "ansys", "cadence", "siemens", and "synopsys".
        :paramtype license_service: str or ~azure.mgmt.modsimworkbench.models.LicenseService
        :keyword enable: Switch to show if License Service is activated.
        :paramtype enable: bool
        :keyword license_key: EDA License file contents.
        :paramtype license_key: str
        """
        super().__init__(**kwargs)
        self.license_service = license_service
        self.enable = enable
        self.license_key = license_key


class Workbench(Resource):  # pylint: disable=too-many-instance-attributes
    """Workbench resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar address_space: .. role:: raw-html-m2r(raw)
        :format: html


     this is an extension of IPAddress which includes logic related to Classes Interdomain Routing
     (CIDR) formatted IP Addresses.\ :raw-html-m2r:`<br>`
     E.g. 192.168.0.0/24, most people's default class C RFC 1918 IP space for their home router.
    :vartype address_space: str
    :ivar app_oidc: Workbench properties.
    :vartype app_oidc: ~azure.mgmt.modsimworkbench.models.AppOidc
    :ivar sku_properties_sku: Name of SKU.
    :vartype sku_properties_sku: str
    :ivar provisioning_state: Gets the status of the workbench at the time the operation was
     called. Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted",
     "Canceled", "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "address_space": {"key": "properties.addressSpace", "type": "str"},
        "app_oidc": {"key": "properties.appOidc", "type": "AppOidc"},
        "sku_properties_sku": {"key": "properties.sku", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        address_space: Optional[str] = None,
        app_oidc: Optional["_models.AppOidc"] = None,
        sku_properties_sku: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword address_space: .. role:: raw-html-m2r(raw)
            :format: html


         this is an extension of IPAddress which includes logic related to Classes Interdomain Routing
         (CIDR) formatted IP Addresses.\ :raw-html-m2r:`<br>`
         E.g. 192.168.0.0/24, most people's default class C RFC 1918 IP space for their home router.
        :paramtype address_space: str
        :keyword app_oidc: Workbench properties.
        :paramtype app_oidc: ~azure.mgmt.modsimworkbench.models.AppOidc
        :keyword sku_properties_sku: Name of SKU.
        :paramtype sku_properties_sku: str
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.address_space = address_space
        self.app_oidc = app_oidc
        self.sku_properties_sku = sku_properties_sku
        self.provisioning_state = None


class WorkbenchPageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.Workbench]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Workbench]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.Workbench"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.Workbench]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value


class Workload(Resource):  # pylint: disable=too-many-instance-attributes
    """Workload resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar system_data: system data.
    :vartype system_data: ~azure.mgmt.modsimworkbench.models.SystemData
    :ivar sku: Name of SKU.
    :vartype sku: str
    :ivar provisioning_state: Gets the status of the workload at the time the operation was called.
     Known values are: "Unknown", "Validating", "Processing", "Deleting", "Accepted", "Canceled",
     "Completed", "Succeeded", "Failed", and "Deleted".
    :vartype provisioning_state: str or ~azure.mgmt.modsimworkbench.models.ProvisioningState
    :ivar vm_size: Gets or sets the VmSize.
    :vartype vm_size: str
    :ivar eda_type: Gets or sets the edaType.
    :vartype eda_type: str
    :ivar status: Gets or sets the status.
    :vartype status: str
    :ivar private_ip: Gets or sets the private IpAddress of workload.
    :vartype private_ip: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
        "private_ip": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "sku": {"key": "sku", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "vm_size": {"key": "properties.vmSize", "type": "str"},
        "eda_type": {"key": "properties.edaType", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "private_ip": {"key": "properties.privateIP", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional[str] = None,
        vm_size: Optional[str] = None,
        eda_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword sku: Name of SKU.
        :paramtype sku: str
        :keyword vm_size: Gets or sets the VmSize.
        :paramtype vm_size: str
        :keyword eda_type: Gets or sets the edaType.
        :paramtype eda_type: str
        """
        super().__init__(location=location, tags=tags, sku=sku, **kwargs)
        self.provisioning_state = None
        self.vm_size = vm_size
        self.eda_type = eda_type
        self.status = None
        self.private_ip = None


class WorkloadPageableList(_serialization.Model):
    """Microsoft.Sdw.Core.ResourceMetadata.PageableList implementation specific to pageable lists of
    Microsoft.Sdw.Core.ResourceMetadata.AzureResource`1.

    :ivar next_link: Gets or sets the URL (link) to the next result set.
    :vartype next_link: str
    :ivar value: Gets or sets the values to emit from this list.
    :vartype value: list[~azure.mgmt.modsimworkbench.models.Workload]
    """

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Workload]"},
    }

    def __init__(
        self, *, next_link: Optional[str] = None, value: Optional[List["_models.Workload"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword next_link: Gets or sets the URL (link) to the next result set.
        :paramtype next_link: str
        :keyword value: Gets or sets the values to emit from this list.
        :paramtype value: list[~azure.mgmt.modsimworkbench.models.Workload]
        """
        super().__init__(**kwargs)
        self.next_link = next_link
        self.value = value
