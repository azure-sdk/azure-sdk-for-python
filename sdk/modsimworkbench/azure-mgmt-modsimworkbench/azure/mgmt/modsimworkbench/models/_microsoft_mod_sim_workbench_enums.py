# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AccessType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the AccessType."""

    GUI = "GUI"


class Action(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Specifies the file management action."""

    DELETE = "Delete"
    ARCHIVE = "Archive"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class DataPipeline(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Inbound or outbound of the ModSim Workbench chamber Data pipeline."""

    INBOUND = "Inbound"
    OUTBOUND = "Outbound"


class FileRequestsAction(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Specifies the file management action."""

    APPROVE = "Approve"
    REJECT = "Reject"


class Force(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Specifies whether to force delete. Works if action is Delete."""

    TRUE = "True"
    FALSE = "False"


class GatewayType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the GatewayType."""

    EXPRESS_ROUTE = "ExpressRoute"
    NONE = "None"
    VPN = "Vpn"


class LicenseActivated(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The license activated."""

    TRUE = "True"
    FALSE = "False"


class LicenseService(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets the license service to update."""

    ANSYS = "ansys"
    CADENCE = "cadence"
    SIEMENS = "siemens"
    SYNOPSYS = "synopsys"


class PerformanceTier(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Specifies performance tier of the ModSim Workbench chamber storage."""

    STANDARD = "Standard"
    PREMIUM = "Premium"
    ULTRA = "Ultra"


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The provisioning state of resource."""

    UNKNOWN = "Unknown"
    VALIDATING = "Validating"
    PROCESSING = "Processing"
    DELETING = "Deleting"
    ACCEPTED = "Accepted"
    CANCELED = "Canceled"
    COMPLETED = "Completed"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    DELETED = "Deleted"
