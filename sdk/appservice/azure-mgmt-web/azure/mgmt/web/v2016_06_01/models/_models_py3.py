# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from ... import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore

if TYPE_CHECKING:
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class ResourceDefinition(_serialization.Model):
    """A resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.location = location
        self.etag = etag
        self.tags = tags


class ApiConnectionDefinition(ResourceDefinition):
    """API connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties:
    :vartype properties: ~azure.mgmt.web.v2016_06_01.models.ApiConnectionDefinitionProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "ApiConnectionDefinitionProperties"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ApiConnectionDefinitionProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties:
        :paramtype properties: ~azure.mgmt.web.v2016_06_01.models.ApiConnectionDefinitionProperties
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.properties = properties


class ApiConnectionDefinitionCollection(_serialization.Model):
    """A list of API connection definitions.

    :ivar value: Collection of API connections.
    :vartype value: list[~azure.mgmt.web.v2016_06_01.models.ApiConnectionDefinition]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ApiConnectionDefinition]"},
    }

    def __init__(self, *, value: Optional[List["_models.ApiConnectionDefinition"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Collection of API connections.
        :paramtype value: list[~azure.mgmt.web.v2016_06_01.models.ApiConnectionDefinition]
        """
        super().__init__(**kwargs)
        self.value = value


class ApiConnectionDefinitionProperties(_serialization.Model):
    """ApiConnectionDefinitionProperties.

    :ivar display_name: Display name.
    :vartype display_name: str
    :ivar statuses: Status of the connection.
    :vartype statuses: list[~azure.mgmt.web.v2016_06_01.models.ConnectionStatusDefinition]
    :ivar parameter_values: Dictionary of parameter values.
    :vartype parameter_values: dict[str, str]
    :ivar custom_parameter_values: Dictionary of custom parameter values.
    :vartype custom_parameter_values: dict[str, str]
    :ivar non_secret_parameter_values: Dictionary of nonsecret parameter values.
    :vartype non_secret_parameter_values: dict[str, str]
    :ivar created_time: Timestamp of the connection creation.
    :vartype created_time: ~datetime.datetime
    :ivar changed_time: Timestamp of last connection change.
    :vartype changed_time: ~datetime.datetime
    :ivar api:
    :vartype api: ~azure.mgmt.web.v2016_06_01.models.ApiReference
    :ivar test_links: Links to test the API connection.
    :vartype test_links: list[~azure.mgmt.web.v2016_06_01.models.ApiConnectionTestLink]
    """

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "statuses": {"key": "statuses", "type": "[ConnectionStatusDefinition]"},
        "parameter_values": {"key": "parameterValues", "type": "{str}"},
        "custom_parameter_values": {"key": "customParameterValues", "type": "{str}"},
        "non_secret_parameter_values": {"key": "nonSecretParameterValues", "type": "{str}"},
        "created_time": {"key": "createdTime", "type": "iso-8601"},
        "changed_time": {"key": "changedTime", "type": "iso-8601"},
        "api": {"key": "api", "type": "ApiReference"},
        "test_links": {"key": "testLinks", "type": "[ApiConnectionTestLink]"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        statuses: Optional[List["_models.ConnectionStatusDefinition"]] = None,
        parameter_values: Optional[Dict[str, str]] = None,
        custom_parameter_values: Optional[Dict[str, str]] = None,
        non_secret_parameter_values: Optional[Dict[str, str]] = None,
        created_time: Optional[datetime.datetime] = None,
        changed_time: Optional[datetime.datetime] = None,
        api: Optional["_models.ApiReference"] = None,
        test_links: Optional[List["_models.ApiConnectionTestLink"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: Display name.
        :paramtype display_name: str
        :keyword statuses: Status of the connection.
        :paramtype statuses: list[~azure.mgmt.web.v2016_06_01.models.ConnectionStatusDefinition]
        :keyword parameter_values: Dictionary of parameter values.
        :paramtype parameter_values: dict[str, str]
        :keyword custom_parameter_values: Dictionary of custom parameter values.
        :paramtype custom_parameter_values: dict[str, str]
        :keyword non_secret_parameter_values: Dictionary of nonsecret parameter values.
        :paramtype non_secret_parameter_values: dict[str, str]
        :keyword created_time: Timestamp of the connection creation.
        :paramtype created_time: ~datetime.datetime
        :keyword changed_time: Timestamp of last connection change.
        :paramtype changed_time: ~datetime.datetime
        :keyword api:
        :paramtype api: ~azure.mgmt.web.v2016_06_01.models.ApiReference
        :keyword test_links: Links to test the API connection.
        :paramtype test_links: list[~azure.mgmt.web.v2016_06_01.models.ApiConnectionTestLink]
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.statuses = statuses
        self.parameter_values = parameter_values
        self.custom_parameter_values = custom_parameter_values
        self.non_secret_parameter_values = non_secret_parameter_values
        self.created_time = created_time
        self.changed_time = changed_time
        self.api = api
        self.test_links = test_links


class ApiConnectionTestLink(_serialization.Model):
    """API connection properties.

    :ivar request_uri: Test link request URI.
    :vartype request_uri: str
    :ivar method: HTTP Method.
    :vartype method: str
    """

    _attribute_map = {
        "request_uri": {"key": "requestUri", "type": "str"},
        "method": {"key": "method", "type": "str"},
    }

    def __init__(self, *, request_uri: Optional[str] = None, method: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword request_uri: Test link request URI.
        :paramtype request_uri: str
        :keyword method: HTTP Method.
        :paramtype method: str
        """
        super().__init__(**kwargs)
        self.request_uri = request_uri
        self.method = method


class ApiOAuthSettings(_serialization.Model):
    """OAuth settings for the connection provider.

    :ivar identity_provider: Identity provider.
    :vartype identity_provider: str
    :ivar client_id: Resource provider client id.
    :vartype client_id: str
    :ivar client_secret: Client Secret needed for OAuth.
    :vartype client_secret: str
    :ivar scopes: OAuth scopes.
    :vartype scopes: list[str]
    :ivar redirect_url: Url.
    :vartype redirect_url: str
    :ivar properties: Read only properties for this oauth setting.
    :vartype properties: JSON
    :ivar custom_parameters: OAuth parameters key is the name of parameter.
    :vartype custom_parameters: dict[str,
     ~azure.mgmt.web.v2016_06_01.models.ApiOAuthSettingsParameter]
    """

    _attribute_map = {
        "identity_provider": {"key": "identityProvider", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "client_secret": {"key": "clientSecret", "type": "str"},
        "scopes": {"key": "scopes", "type": "[str]"},
        "redirect_url": {"key": "redirectUrl", "type": "str"},
        "properties": {"key": "properties", "type": "object"},
        "custom_parameters": {"key": "customParameters", "type": "{ApiOAuthSettingsParameter}"},
    }

    def __init__(
        self,
        *,
        identity_provider: Optional[str] = None,
        client_id: Optional[str] = None,
        client_secret: Optional[str] = None,
        scopes: Optional[List[str]] = None,
        redirect_url: Optional[str] = None,
        properties: Optional[JSON] = None,
        custom_parameters: Optional[Dict[str, "_models.ApiOAuthSettingsParameter"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword identity_provider: Identity provider.
        :paramtype identity_provider: str
        :keyword client_id: Resource provider client id.
        :paramtype client_id: str
        :keyword client_secret: Client Secret needed for OAuth.
        :paramtype client_secret: str
        :keyword scopes: OAuth scopes.
        :paramtype scopes: list[str]
        :keyword redirect_url: Url.
        :paramtype redirect_url: str
        :keyword properties: Read only properties for this oauth setting.
        :paramtype properties: JSON
        :keyword custom_parameters: OAuth parameters key is the name of parameter.
        :paramtype custom_parameters: dict[str,
         ~azure.mgmt.web.v2016_06_01.models.ApiOAuthSettingsParameter]
        """
        super().__init__(**kwargs)
        self.identity_provider = identity_provider
        self.client_id = client_id
        self.client_secret = client_secret
        self.scopes = scopes
        self.redirect_url = redirect_url
        self.properties = properties
        self.custom_parameters = custom_parameters


class ApiOAuthSettingsParameter(_serialization.Model):
    """OAuth settings for the API.

    :ivar value: Value of the setting.
    :vartype value: str
    :ivar options: Options available to this parameter.
    :vartype options: JSON
    :ivar ui_definition: UI definitions per culture as caller can specify the culture.
    :vartype ui_definition: JSON
    """

    _attribute_map = {
        "value": {"key": "value", "type": "str"},
        "options": {"key": "options", "type": "object"},
        "ui_definition": {"key": "uiDefinition", "type": "object"},
    }

    def __init__(
        self,
        *,
        value: Optional[str] = None,
        options: Optional[JSON] = None,
        ui_definition: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Value of the setting.
        :paramtype value: str
        :keyword options: Options available to this parameter.
        :paramtype options: JSON
        :keyword ui_definition: UI definitions per culture as caller can specify the culture.
        :paramtype ui_definition: JSON
        """
        super().__init__(**kwargs)
        self.value = value
        self.options = options
        self.ui_definition = ui_definition


class ResourceReference(_serialization.Model):
    """ResourceReference.

    :ivar id: Resource reference id.
    :vartype id: str
    :ivar type: Resource reference type.
    :vartype type: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource reference id.
        :paramtype id: str
        :keyword type: Resource reference type.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.type = type


class ApiReference(ResourceReference):
    """ApiReference.

    :ivar id: Resource reference id.
    :vartype id: str
    :ivar type: Resource reference type.
    :vartype type: str
    :ivar swagger: The JSON representation of the swagger.
    :vartype swagger: JSON
    :ivar brand_color: Brand color.
    :vartype brand_color: str
    :ivar description: The custom API description.
    :vartype description: str
    :ivar display_name: The display name.
    :vartype display_name: str
    :ivar icon_uri: The icon URI.
    :vartype icon_uri: str
    :ivar name: The name of the API.
    :vartype name: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "swagger": {"key": "swagger", "type": "object"},
        "brand_color": {"key": "brandColor", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "icon_uri": {"key": "iconUri", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        type: Optional[str] = None,
        swagger: Optional[JSON] = None,
        brand_color: Optional[str] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        icon_uri: Optional[str] = None,
        name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource reference id.
        :paramtype id: str
        :keyword type: Resource reference type.
        :paramtype type: str
        :keyword swagger: The JSON representation of the swagger.
        :paramtype swagger: JSON
        :keyword brand_color: Brand color.
        :paramtype brand_color: str
        :keyword description: The custom API description.
        :paramtype description: str
        :keyword display_name: The display name.
        :paramtype display_name: str
        :keyword icon_uri: The icon URI.
        :paramtype icon_uri: str
        :keyword name: The name of the API.
        :paramtype name: str
        """
        super().__init__(id=id, type=type, **kwargs)
        self.swagger = swagger
        self.brand_color = brand_color
        self.description = description
        self.display_name = display_name
        self.icon_uri = icon_uri
        self.name = name


class ApiResourceBackendService(_serialization.Model):
    """The API backend service.

    :ivar service_url: The service URL.
    :vartype service_url: str
    """

    _attribute_map = {
        "service_url": {"key": "serviceUrl", "type": "str"},
    }

    def __init__(self, *, service_url: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword service_url: The service URL.
        :paramtype service_url: str
        """
        super().__init__(**kwargs)
        self.service_url = service_url


class ApiResourceDefinitions(_serialization.Model):
    """API Definitions.

    :ivar original_swagger_url: The original swagger URL.
    :vartype original_swagger_url: str
    :ivar modified_swagger_url: The modified swagger URL.
    :vartype modified_swagger_url: str
    """

    _attribute_map = {
        "original_swagger_url": {"key": "originalSwaggerUrl", "type": "str"},
        "modified_swagger_url": {"key": "modifiedSwaggerUrl", "type": "str"},
    }

    def __init__(
        self, *, original_swagger_url: Optional[str] = None, modified_swagger_url: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword original_swagger_url: The original swagger URL.
        :paramtype original_swagger_url: str
        :keyword modified_swagger_url: The modified swagger URL.
        :paramtype modified_swagger_url: str
        """
        super().__init__(**kwargs)
        self.original_swagger_url = original_swagger_url
        self.modified_swagger_url = modified_swagger_url


class ApiResourceGeneralInformation(_serialization.Model):
    """General information about the API.

    :ivar icon_url: The icon URL.
    :vartype icon_url: str
    :ivar display_name: Display name.
    :vartype display_name: str
    :ivar description: The API description.
    :vartype description: str
    :ivar terms_of_use_url: URL to the Terms of Use.
    :vartype terms_of_use_url: str
    :ivar release_tag: Release tag.
    :vartype release_tag: str
    """

    _attribute_map = {
        "icon_url": {"key": "iconUrl", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "terms_of_use_url": {"key": "termsOfUseUrl", "type": "str"},
        "release_tag": {"key": "releaseTag", "type": "str"},
    }

    def __init__(
        self,
        *,
        icon_url: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        terms_of_use_url: Optional[str] = None,
        release_tag: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword icon_url: The icon URL.
        :paramtype icon_url: str
        :keyword display_name: Display name.
        :paramtype display_name: str
        :keyword description: The API description.
        :paramtype description: str
        :keyword terms_of_use_url: URL to the Terms of Use.
        :paramtype terms_of_use_url: str
        :keyword release_tag: Release tag.
        :paramtype release_tag: str
        """
        super().__init__(**kwargs)
        self.icon_url = icon_url
        self.display_name = display_name
        self.description = description
        self.terms_of_use_url = terms_of_use_url
        self.release_tag = release_tag


class ApiResourceMetadata(_serialization.Model):
    """ApiResourceMetadata.

    :ivar source: The source.
    :vartype source: str
    :ivar brand_color: Brand color.
    :vartype brand_color: str
    :ivar hide_key: Hide key.
    :vartype hide_key: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar api_type: The API type. Known values are: "NotSpecified", "Rest", and "Soap".
    :vartype api_type: str or ~azure.mgmt.web.v2016_06_01.models.ApiType
    :ivar wsdl_service: The service with name and endpoint names.
    :vartype wsdl_service: ~azure.mgmt.web.v2016_06_01.models.WsdlService
    :ivar wsdl_import_method: The WSDL import method. Known values are: "NotSpecified",
     "SoapToRest", and "SoapPassThrough".
    :vartype wsdl_import_method: str or ~azure.mgmt.web.v2016_06_01.models.WsdlImportMethod
    :ivar connection_type: The connection type.
    :vartype connection_type: str
    """

    _attribute_map = {
        "source": {"key": "source", "type": "str"},
        "brand_color": {"key": "brandColor", "type": "str"},
        "hide_key": {"key": "hideKey", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "api_type": {"key": "apiType", "type": "str"},
        "wsdl_service": {"key": "wsdlService", "type": "WsdlService"},
        "wsdl_import_method": {"key": "wsdlImportMethod", "type": "str"},
        "connection_type": {"key": "connectionType", "type": "str"},
    }

    def __init__(
        self,
        *,
        source: Optional[str] = None,
        brand_color: Optional[str] = None,
        hide_key: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        api_type: Optional[Union[str, "_models.ApiType"]] = None,
        wsdl_service: Optional["_models.WsdlService"] = None,
        wsdl_import_method: Optional[Union[str, "_models.WsdlImportMethod"]] = None,
        connection_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword source: The source.
        :paramtype source: str
        :keyword brand_color: Brand color.
        :paramtype brand_color: str
        :keyword hide_key: Hide key.
        :paramtype hide_key: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword api_type: The API type. Known values are: "NotSpecified", "Rest", and "Soap".
        :paramtype api_type: str or ~azure.mgmt.web.v2016_06_01.models.ApiType
        :keyword wsdl_service: The service with name and endpoint names.
        :paramtype wsdl_service: ~azure.mgmt.web.v2016_06_01.models.WsdlService
        :keyword wsdl_import_method: The WSDL import method. Known values are: "NotSpecified",
         "SoapToRest", and "SoapPassThrough".
        :paramtype wsdl_import_method: str or ~azure.mgmt.web.v2016_06_01.models.WsdlImportMethod
        :keyword connection_type: The connection type.
        :paramtype connection_type: str
        """
        super().__init__(**kwargs)
        self.source = source
        self.brand_color = brand_color
        self.hide_key = hide_key
        self.tags = tags
        self.api_type = api_type
        self.wsdl_service = wsdl_service
        self.wsdl_import_method = wsdl_import_method
        self.connection_type = connection_type


class ApiResourcePolicies(_serialization.Model):
    """Describes the API policies either as embedded content or as a link to uploaded content.

    :ivar content: API level policies as XML.
    :vartype content: str
    :ivar content_link: Link to the JSON of the policies.
    :vartype content_link: str
    """

    _attribute_map = {
        "content": {"key": "content", "type": "str"},
        "content_link": {"key": "contentLink", "type": "str"},
    }

    def __init__(self, *, content: Optional[str] = None, content_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword content: API level policies as XML.
        :paramtype content: str
        :keyword content_link: Link to the JSON of the policies.
        :paramtype content_link: str
        """
        super().__init__(**kwargs)
        self.content = content
        self.content_link = content_link


class ApiResourceProperties(_serialization.Model):
    """API resource properties.

    :ivar name:
    :vartype name: str
    :ivar connection_parameters: Connection parameters.
    :vartype connection_parameters: dict[str,
     ~azure.mgmt.web.v2016_06_01.models.ConnectionParameter]
    :ivar metadata:
    :vartype metadata: ~azure.mgmt.web.v2016_06_01.models.ApiResourceMetadata
    :ivar runtime_urls: Runtime URLs.
    :vartype runtime_urls: list[str]
    :ivar general_information: General information about the API.
    :vartype general_information: ~azure.mgmt.web.v2016_06_01.models.ApiResourceGeneralInformation
    :ivar capabilities: The managed API capabilities.
    :vartype capabilities: list[str]
    :ivar swagger: The JSON representation of the swagger.
    :vartype swagger: JSON
    :ivar backend_service: The API backend service.
    :vartype backend_service: ~azure.mgmt.web.v2016_06_01.models.ApiResourceBackendService
    :ivar policies: Describes the API policies either as embedded content or as a link to uploaded
     content.
    :vartype policies: ~azure.mgmt.web.v2016_06_01.models.ApiResourcePolicies
    :ivar api_definition_url: URL where the swagger can be downloaded from.
    :vartype api_definition_url: str
    :ivar api_definitions: API Definitions.
    :vartype api_definitions: ~azure.mgmt.web.v2016_06_01.models.ApiResourceDefinitions
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "connection_parameters": {"key": "connectionParameters", "type": "{ConnectionParameter}"},
        "metadata": {"key": "metadata", "type": "ApiResourceMetadata"},
        "runtime_urls": {"key": "runtimeUrls", "type": "[str]"},
        "general_information": {"key": "generalInformation", "type": "ApiResourceGeneralInformation"},
        "capabilities": {"key": "capabilities", "type": "[str]"},
        "swagger": {"key": "swagger", "type": "object"},
        "backend_service": {"key": "backendService", "type": "ApiResourceBackendService"},
        "policies": {"key": "policies", "type": "ApiResourcePolicies"},
        "api_definition_url": {"key": "apiDefinitionUrl", "type": "str"},
        "api_definitions": {"key": "apiDefinitions", "type": "ApiResourceDefinitions"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        connection_parameters: Optional[Dict[str, "_models.ConnectionParameter"]] = None,
        metadata: Optional["_models.ApiResourceMetadata"] = None,
        runtime_urls: Optional[List[str]] = None,
        general_information: Optional["_models.ApiResourceGeneralInformation"] = None,
        capabilities: Optional[List[str]] = None,
        swagger: Optional[JSON] = None,
        backend_service: Optional["_models.ApiResourceBackendService"] = None,
        policies: Optional["_models.ApiResourcePolicies"] = None,
        api_definition_url: Optional[str] = None,
        api_definitions: Optional["_models.ApiResourceDefinitions"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name:
        :paramtype name: str
        :keyword connection_parameters: Connection parameters.
        :paramtype connection_parameters: dict[str,
         ~azure.mgmt.web.v2016_06_01.models.ConnectionParameter]
        :keyword metadata:
        :paramtype metadata: ~azure.mgmt.web.v2016_06_01.models.ApiResourceMetadata
        :keyword runtime_urls: Runtime URLs.
        :paramtype runtime_urls: list[str]
        :keyword general_information: General information about the API.
        :paramtype general_information:
         ~azure.mgmt.web.v2016_06_01.models.ApiResourceGeneralInformation
        :keyword capabilities: The managed API capabilities.
        :paramtype capabilities: list[str]
        :keyword swagger: The JSON representation of the swagger.
        :paramtype swagger: JSON
        :keyword backend_service: The API backend service.
        :paramtype backend_service: ~azure.mgmt.web.v2016_06_01.models.ApiResourceBackendService
        :keyword policies: Describes the API policies either as embedded content or as a link to
         uploaded content.
        :paramtype policies: ~azure.mgmt.web.v2016_06_01.models.ApiResourcePolicies
        :keyword api_definition_url: URL where the swagger can be downloaded from.
        :paramtype api_definition_url: str
        :keyword api_definitions: API Definitions.
        :paramtype api_definitions: ~azure.mgmt.web.v2016_06_01.models.ApiResourceDefinitions
        """
        super().__init__(**kwargs)
        self.name = name
        self.connection_parameters = connection_parameters
        self.metadata = metadata
        self.runtime_urls = runtime_urls
        self.general_information = general_information
        self.capabilities = capabilities
        self.swagger = swagger
        self.backend_service = backend_service
        self.policies = policies
        self.api_definition_url = api_definition_url
        self.api_definitions = api_definitions


class ConfirmConsentCodeDefinition(_serialization.Model):
    """Confirm consent code request.

    :ivar tenant_id: Tenant Id.
    :vartype tenant_id: str
    :ivar object_id: AAD object ID. This is userId.
    :vartype object_id: str
    :ivar code: Code that was returned during consent flow.
    :vartype code: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "code": {"key": "code", "type": "str"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        object_id: Optional[str] = None,
        code: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: Tenant Id.
        :paramtype tenant_id: str
        :keyword object_id: AAD object ID. This is userId.
        :paramtype object_id: str
        :keyword code: Code that was returned during consent flow.
        :paramtype code: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.object_id = object_id
        self.code = code


class ConnectionError(ResourceDefinition):
    """Connection error.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar code: Code of the status.
    :vartype code: str
    :ivar message: Description of the status.
    :vartype message: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "code": {"key": "properties.code", "type": "str"},
        "message": {"key": "properties.message", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        code: Optional[str] = None,
        message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword code: Code of the status.
        :paramtype code: str
        :keyword message: Description of the status.
        :paramtype message: str
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.code = code
        self.message = message


class ConnectionGatewayDefinition(ResourceDefinition):
    """The gateway definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties:
    :vartype properties: ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayDefinitionProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "ConnectionGatewayDefinitionProperties"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ConnectionGatewayDefinitionProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties:
        :paramtype properties: ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayDefinitionProperties
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.properties = properties


class ConnectionGatewayDefinitionCollection(_serialization.Model):
    """A list of connection gateway definitions.

    :ivar value: Collection of connection gateways.
    :vartype value: list[~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayDefinition]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ConnectionGatewayDefinition]"},
    }

    def __init__(self, *, value: Optional[List["_models.ConnectionGatewayDefinition"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Collection of connection gateways.
        :paramtype value: list[~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayDefinition]
        """
        super().__init__(**kwargs)
        self.value = value


class ConnectionGatewayDefinitionProperties(_serialization.Model):
    """ConnectionGatewayDefinitionProperties.

    :ivar connection_gateway_installation: The gateway installation reference.
    :vartype connection_gateway_installation:
     ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayReference
    :ivar contact_information: The gateway admin.
    :vartype contact_information: list[str]
    :ivar display_name: The gateway display name.
    :vartype display_name: str
    :ivar description: The gateway description.
    :vartype description: str
    :ivar machine_name: The machine name of the gateway.
    :vartype machine_name: str
    :ivar status: The gateway status.
    :vartype status: JSON
    :ivar backend_uri: The URI of the backend.
    :vartype backend_uri: str
    """

    _attribute_map = {
        "connection_gateway_installation": {
            "key": "connectionGatewayInstallation",
            "type": "ConnectionGatewayReference",
        },
        "contact_information": {"key": "contactInformation", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "machine_name": {"key": "machineName", "type": "str"},
        "status": {"key": "status", "type": "object"},
        "backend_uri": {"key": "backendUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        connection_gateway_installation: Optional["_models.ConnectionGatewayReference"] = None,
        contact_information: Optional[List[str]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        machine_name: Optional[str] = None,
        status: Optional[JSON] = None,
        backend_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword connection_gateway_installation: The gateway installation reference.
        :paramtype connection_gateway_installation:
         ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayReference
        :keyword contact_information: The gateway admin.
        :paramtype contact_information: list[str]
        :keyword display_name: The gateway display name.
        :paramtype display_name: str
        :keyword description: The gateway description.
        :paramtype description: str
        :keyword machine_name: The machine name of the gateway.
        :paramtype machine_name: str
        :keyword status: The gateway status.
        :paramtype status: JSON
        :keyword backend_uri: The URI of the backend.
        :paramtype backend_uri: str
        """
        super().__init__(**kwargs)
        self.connection_gateway_installation = connection_gateway_installation
        self.contact_information = contact_information
        self.display_name = display_name
        self.description = description
        self.machine_name = machine_name
        self.status = status
        self.backend_uri = backend_uri


class ConnectionGatewayInstallationDefinition(ResourceDefinition):
    """The gateway installation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties:
    :vartype properties:
     ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayInstallationDefinitionProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "ConnectionGatewayInstallationDefinitionProperties"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ConnectionGatewayInstallationDefinitionProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties:
        :paramtype properties:
         ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayInstallationDefinitionProperties
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.properties = properties


class ConnectionGatewayInstallationDefinitionCollection(_serialization.Model):  # pylint: disable=name-too-long
    """A list of connection gateway installation definitions.

    :ivar value: Collection of connection gateway installations.
    :vartype value:
     list[~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayInstallationDefinition]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ConnectionGatewayInstallationDefinition]"},
    }

    def __init__(
        self, *, value: Optional[List["_models.ConnectionGatewayInstallationDefinition"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Collection of connection gateway installations.
        :paramtype value:
         list[~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayInstallationDefinition]
        """
        super().__init__(**kwargs)
        self.value = value


class ConnectionGatewayInstallationDefinitionProperties(_serialization.Model):  # pylint: disable=name-too-long
    """ConnectionGatewayInstallationDefinitionProperties.

    :ivar connection_gateway: The gateway installation reference.
    :vartype connection_gateway: ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayReference
    :ivar contact_information: The gateway admin.
    :vartype contact_information: list[str]
    :ivar display_name: The gateway display name.
    :vartype display_name: str
    :ivar description: The gateway description.
    :vartype description: str
    :ivar machine_name: The machine name of the gateway.
    :vartype machine_name: str
    :ivar status: The gateway status.
    :vartype status: JSON
    :ivar backend_uri: The URI of the backend.
    :vartype backend_uri: str
    """

    _attribute_map = {
        "connection_gateway": {"key": "connectionGateway", "type": "ConnectionGatewayReference"},
        "contact_information": {"key": "contactInformation", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "machine_name": {"key": "machineName", "type": "str"},
        "status": {"key": "status", "type": "object"},
        "backend_uri": {"key": "backendUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        connection_gateway: Optional["_models.ConnectionGatewayReference"] = None,
        contact_information: Optional[List[str]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        machine_name: Optional[str] = None,
        status: Optional[JSON] = None,
        backend_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword connection_gateway: The gateway installation reference.
        :paramtype connection_gateway: ~azure.mgmt.web.v2016_06_01.models.ConnectionGatewayReference
        :keyword contact_information: The gateway admin.
        :paramtype contact_information: list[str]
        :keyword display_name: The gateway display name.
        :paramtype display_name: str
        :keyword description: The gateway description.
        :paramtype description: str
        :keyword machine_name: The machine name of the gateway.
        :paramtype machine_name: str
        :keyword status: The gateway status.
        :paramtype status: JSON
        :keyword backend_uri: The URI of the backend.
        :paramtype backend_uri: str
        """
        super().__init__(**kwargs)
        self.connection_gateway = connection_gateway
        self.contact_information = contact_information
        self.display_name = display_name
        self.description = description
        self.machine_name = machine_name
        self.status = status
        self.backend_uri = backend_uri


class ConnectionGatewayReference(ResourceReference):
    """The gateway installation reference.

    :ivar id: Resource reference id.
    :vartype id: str
    :ivar type: Resource reference type.
    :vartype type: str
    :ivar location: Resource reference location.
    :vartype location: str
    :ivar name: Resource reference name.
    :vartype name: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        type: Optional[str] = None,
        location: Optional[str] = None,
        name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource reference id.
        :paramtype id: str
        :keyword type: Resource reference type.
        :paramtype type: str
        :keyword location: Resource reference location.
        :paramtype location: str
        :keyword name: Resource reference name.
        :paramtype name: str
        """
        super().__init__(id=id, type=type, **kwargs)
        self.location = location
        self.name = name


class ConnectionParameter(_serialization.Model):
    """Connection provider parameters.

    :ivar type: Type of the parameter. Known values are: "string", "securestring", "secureobject",
     "int", "bool", "object", "array", "oauthSetting", "connection", and "int".
    :vartype type: str or ~azure.mgmt.web.v2016_06_01.models.ConnectionParameterType
    :ivar o_auth_settings: OAuth settings for the connection provider.
    :vartype o_auth_settings: ~azure.mgmt.web.v2016_06_01.models.ApiOAuthSettings
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "o_auth_settings": {"key": "oAuthSettings", "type": "ApiOAuthSettings"},
    }

    def __init__(
        self,
        *,
        type: Optional[Union[str, "_models.ConnectionParameterType"]] = None,
        o_auth_settings: Optional["_models.ApiOAuthSettings"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Type of the parameter. Known values are: "string", "securestring",
         "secureobject", "int", "bool", "object", "array", "oauthSetting", "connection", and "int".
        :paramtype type: str or ~azure.mgmt.web.v2016_06_01.models.ConnectionParameterType
        :keyword o_auth_settings: OAuth settings for the connection provider.
        :paramtype o_auth_settings: ~azure.mgmt.web.v2016_06_01.models.ApiOAuthSettings
        """
        super().__init__(**kwargs)
        self.type = type
        self.o_auth_settings = o_auth_settings


class ConnectionStatusDefinition(_serialization.Model):
    """Connection status.

    :ivar status: The gateway status.
    :vartype status: str
    :ivar target: Target of the error.
    :vartype target: str
    :ivar error: Connection error.
    :vartype error: ~azure.mgmt.web.v2016_06_01.models.ConnectionError
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "error": {"key": "error", "type": "ConnectionError"},
    }

    def __init__(
        self,
        *,
        status: Optional[str] = None,
        target: Optional[str] = None,
        error: Optional["_models.ConnectionError"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: The gateway status.
        :paramtype status: str
        :keyword target: Target of the error.
        :paramtype target: str
        :keyword error: Connection error.
        :paramtype error: ~azure.mgmt.web.v2016_06_01.models.ConnectionError
        """
        super().__init__(**kwargs)
        self.status = status
        self.target = target
        self.error = error


class ConsentLinkCollection(_serialization.Model):
    """Collection of consent links.

    :ivar value: Collection of resources.
    :vartype value: list[~azure.mgmt.web.v2016_06_01.models.ConsentLinkDefinition]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ConsentLinkDefinition]"},
    }

    def __init__(self, *, value: Optional[List["_models.ConsentLinkDefinition"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Collection of resources.
        :paramtype value: list[~azure.mgmt.web.v2016_06_01.models.ConsentLinkDefinition]
        """
        super().__init__(**kwargs)
        self.value = value


class ConsentLinkDefinition(_serialization.Model):
    """A consent link.

    :ivar link: URI for the consent link.
    :vartype link: str
    :ivar first_party_login_uri: URI for first party login.
    :vartype first_party_login_uri: str
    :ivar display_name: Display name of the parameter in the connection provider's OAuth settings.
    :vartype display_name: str
    :ivar status: Status of the link. Known values are: "Unauthenticated", "Authenticated", and
     "Error".
    :vartype status: str or ~azure.mgmt.web.v2016_06_01.models.LinkState
    """

    _attribute_map = {
        "link": {"key": "link", "type": "str"},
        "first_party_login_uri": {"key": "firstPartyLoginUri", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(
        self,
        *,
        link: Optional[str] = None,
        first_party_login_uri: Optional[str] = None,
        display_name: Optional[str] = None,
        status: Optional[Union[str, "_models.LinkState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword link: URI for the consent link.
        :paramtype link: str
        :keyword first_party_login_uri: URI for first party login.
        :paramtype first_party_login_uri: str
        :keyword display_name: Display name of the parameter in the connection provider's OAuth
         settings.
        :paramtype display_name: str
        :keyword status: Status of the link. Known values are: "Unauthenticated", "Authenticated", and
         "Error".
        :paramtype status: str or ~azure.mgmt.web.v2016_06_01.models.LinkState
        """
        super().__init__(**kwargs)
        self.link = link
        self.first_party_login_uri = first_party_login_uri
        self.display_name = display_name
        self.status = status


class ConsentLinkParameterDefinition(_serialization.Model):
    """Consent link definition.

    :ivar parameter_name: Name of the parameter in the connection provider's OAuth settings.
    :vartype parameter_name: str
    :ivar redirect_url: Name of the parameter in the connection provider's OAuth settings.
    :vartype redirect_url: str
    :ivar object_id: AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if
     the principal type is MicrosoftAccount.
    :vartype object_id: str
    :ivar tenant_id: The tenant id.
    :vartype tenant_id: str
    """

    _attribute_map = {
        "parameter_name": {"key": "parameterName", "type": "str"},
        "redirect_url": {"key": "redirectUrl", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
    }

    def __init__(
        self,
        *,
        parameter_name: Optional[str] = None,
        redirect_url: Optional[str] = None,
        object_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword parameter_name: Name of the parameter in the connection provider's OAuth settings.
        :paramtype parameter_name: str
        :keyword redirect_url: Name of the parameter in the connection provider's OAuth settings.
        :paramtype redirect_url: str
        :keyword object_id: AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID
         if the principal type is MicrosoftAccount.
        :paramtype object_id: str
        :keyword tenant_id: The tenant id.
        :paramtype tenant_id: str
        """
        super().__init__(**kwargs)
        self.parameter_name = parameter_name
        self.redirect_url = redirect_url
        self.object_id = object_id
        self.tenant_id = tenant_id


class CustomApiDefinition(ResourceDefinition):
    """A custom API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: Custom API properties.
    :vartype properties: ~azure.mgmt.web.v2016_06_01.models.CustomApiPropertiesDefinition
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "CustomApiPropertiesDefinition"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.CustomApiPropertiesDefinition"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: Custom API properties.
        :paramtype properties: ~azure.mgmt.web.v2016_06_01.models.CustomApiPropertiesDefinition
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.properties = properties


class CustomApiDefinitionCollection(_serialization.Model):
    """A list of custom API definitions.

    :ivar value: Collection of custom APIs.
    :vartype value: list[~azure.mgmt.web.v2016_06_01.models.CustomApiDefinition]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[CustomApiDefinition]"},
    }

    def __init__(self, *, value: Optional[List["_models.CustomApiDefinition"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Collection of custom APIs.
        :paramtype value: list[~azure.mgmt.web.v2016_06_01.models.CustomApiDefinition]
        """
        super().__init__(**kwargs)
        self.value = value


class CustomApiPropertiesDefinition(_serialization.Model):
    """Custom API properties.

    :ivar connection_parameters: Connection parameters.
    :vartype connection_parameters: dict[str,
     ~azure.mgmt.web.v2016_06_01.models.ConnectionParameter]
    :ivar runtime_urls: Runtime URLs.
    :vartype runtime_urls: list[str]
    :ivar capabilities: The custom API capabilities.
    :vartype capabilities: list[str]
    :ivar swagger: The JSON representation of the swagger.
    :vartype swagger: JSON
    :ivar brand_color: Brand color.
    :vartype brand_color: str
    :ivar description: The custom API description.
    :vartype description: str
    :ivar display_name: The display name.
    :vartype display_name: str
    :ivar icon_uri: The icon URI.
    :vartype icon_uri: str
    :ivar backend_service: The API backend service.
    :vartype backend_service: ~azure.mgmt.web.v2016_06_01.models.ApiResourceBackendService
    :ivar api_definitions: API Definitions.
    :vartype api_definitions: ~azure.mgmt.web.v2016_06_01.models.ApiResourceDefinitions
    :ivar api_type: The API type. Known values are: "NotSpecified", "Rest", and "Soap".
    :vartype api_type: str or ~azure.mgmt.web.v2016_06_01.models.ApiType
    :ivar wsdl_definition: The WSDL definition.
    :vartype wsdl_definition: ~azure.mgmt.web.v2016_06_01.models.WsdlDefinition
    """

    _attribute_map = {
        "connection_parameters": {"key": "connectionParameters", "type": "{ConnectionParameter}"},
        "runtime_urls": {"key": "runtimeUrls", "type": "[str]"},
        "capabilities": {"key": "capabilities", "type": "[str]"},
        "swagger": {"key": "swagger", "type": "object"},
        "brand_color": {"key": "brandColor", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "icon_uri": {"key": "iconUri", "type": "str"},
        "backend_service": {"key": "backendService", "type": "ApiResourceBackendService"},
        "api_definitions": {"key": "apiDefinitions", "type": "ApiResourceDefinitions"},
        "api_type": {"key": "apiType", "type": "str"},
        "wsdl_definition": {"key": "wsdlDefinition", "type": "WsdlDefinition"},
    }

    def __init__(
        self,
        *,
        connection_parameters: Optional[Dict[str, "_models.ConnectionParameter"]] = None,
        runtime_urls: Optional[List[str]] = None,
        capabilities: Optional[List[str]] = None,
        swagger: Optional[JSON] = None,
        brand_color: Optional[str] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        icon_uri: Optional[str] = None,
        backend_service: Optional["_models.ApiResourceBackendService"] = None,
        api_definitions: Optional["_models.ApiResourceDefinitions"] = None,
        api_type: Optional[Union[str, "_models.ApiType"]] = None,
        wsdl_definition: Optional["_models.WsdlDefinition"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword connection_parameters: Connection parameters.
        :paramtype connection_parameters: dict[str,
         ~azure.mgmt.web.v2016_06_01.models.ConnectionParameter]
        :keyword runtime_urls: Runtime URLs.
        :paramtype runtime_urls: list[str]
        :keyword capabilities: The custom API capabilities.
        :paramtype capabilities: list[str]
        :keyword swagger: The JSON representation of the swagger.
        :paramtype swagger: JSON
        :keyword brand_color: Brand color.
        :paramtype brand_color: str
        :keyword description: The custom API description.
        :paramtype description: str
        :keyword display_name: The display name.
        :paramtype display_name: str
        :keyword icon_uri: The icon URI.
        :paramtype icon_uri: str
        :keyword backend_service: The API backend service.
        :paramtype backend_service: ~azure.mgmt.web.v2016_06_01.models.ApiResourceBackendService
        :keyword api_definitions: API Definitions.
        :paramtype api_definitions: ~azure.mgmt.web.v2016_06_01.models.ApiResourceDefinitions
        :keyword api_type: The API type. Known values are: "NotSpecified", "Rest", and "Soap".
        :paramtype api_type: str or ~azure.mgmt.web.v2016_06_01.models.ApiType
        :keyword wsdl_definition: The WSDL definition.
        :paramtype wsdl_definition: ~azure.mgmt.web.v2016_06_01.models.WsdlDefinition
        """
        super().__init__(**kwargs)
        self.connection_parameters = connection_parameters
        self.runtime_urls = runtime_urls
        self.capabilities = capabilities
        self.swagger = swagger
        self.brand_color = brand_color
        self.description = description
        self.display_name = display_name
        self.icon_uri = icon_uri
        self.backend_service = backend_service
        self.api_definitions = api_definitions
        self.api_type = api_type
        self.wsdl_definition = wsdl_definition


class CustomApiReference(ApiReference):
    """The custom API reference.

    :ivar id: Resource reference id.
    :vartype id: str
    :ivar type: Resource reference type.
    :vartype type: str
    :ivar swagger: The JSON representation of the swagger.
    :vartype swagger: JSON
    :ivar brand_color: Brand color.
    :vartype brand_color: str
    :ivar description: The custom API description.
    :vartype description: str
    :ivar display_name: The display name.
    :vartype display_name: str
    :ivar icon_uri: The icon URI.
    :vartype icon_uri: str
    :ivar name: The name of the API.
    :vartype name: str
    """


class ListConnectionKeysDefinition(ResourceDefinition):
    """List connection keys.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar validity_time_span: Time span for how long the keys will be valid.
    :vartype validity_time_span: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "validity_time_span": {"key": "properties.validityTimeSpan", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        validity_time_span: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword validity_time_span: Time span for how long the keys will be valid.
        :paramtype validity_time_span: str
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.validity_time_span = validity_time_span


class ListConsentLinksDefinition(_serialization.Model):
    """Request for a list of consent links.

    :ivar parameters: Collection of resources.
    :vartype parameters: list[~azure.mgmt.web.v2016_06_01.models.ConsentLinkParameterDefinition]
    """

    _attribute_map = {
        "parameters": {"key": "parameters", "type": "[ConsentLinkParameterDefinition]"},
    }

    def __init__(
        self, *, parameters: Optional[List["_models.ConsentLinkParameterDefinition"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword parameters: Collection of resources.
        :paramtype parameters: list[~azure.mgmt.web.v2016_06_01.models.ConsentLinkParameterDefinition]
        """
        super().__init__(**kwargs)
        self.parameters = parameters


class ManagedApiDefinition(ResourceDefinition):
    """A managed API definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar etag: Resource ETag.
    :vartype etag: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: API resource properties.
    :vartype properties: ~azure.mgmt.web.v2016_06_01.models.ApiResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "ApiResourceProperties"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        etag: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.ApiResourceProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Resource location.
        :paramtype location: str
        :keyword etag: Resource ETag.
        :paramtype etag: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: API resource properties.
        :paramtype properties: ~azure.mgmt.web.v2016_06_01.models.ApiResourceProperties
        """
        super().__init__(location=location, etag=etag, tags=tags, **kwargs)
        self.properties = properties


class ManagedApiDefinitionCollection(_serialization.Model):
    """A list of managed API definitions.

    :ivar value: Collection of managed APIs.
    :vartype value: list[~azure.mgmt.web.v2016_06_01.models.ManagedApiDefinition]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ManagedApiDefinition]"},
    }

    def __init__(self, *, value: Optional[List["_models.ManagedApiDefinition"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Collection of managed APIs.
        :paramtype value: list[~azure.mgmt.web.v2016_06_01.models.ManagedApiDefinition]
        """
        super().__init__(**kwargs)
        self.value = value


class WsdlDefinition(_serialization.Model):
    """The WSDL definition.

    :ivar url: The WSDL URL.
    :vartype url: str
    :ivar content: The WSDL content.
    :vartype content: str
    :ivar service: The service with name and endpoint names.
    :vartype service: ~azure.mgmt.web.v2016_06_01.models.WsdlService
    :ivar import_method: The WSDL import method. Known values are: "NotSpecified", "SoapToRest",
     and "SoapPassThrough".
    :vartype import_method: str or ~azure.mgmt.web.v2016_06_01.models.WsdlImportMethod
    """

    _attribute_map = {
        "url": {"key": "url", "type": "str"},
        "content": {"key": "content", "type": "str"},
        "service": {"key": "service", "type": "WsdlService"},
        "import_method": {"key": "importMethod", "type": "str"},
    }

    def __init__(
        self,
        *,
        url: Optional[str] = None,
        content: Optional[str] = None,
        service: Optional["_models.WsdlService"] = None,
        import_method: Optional[Union[str, "_models.WsdlImportMethod"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword url: The WSDL URL.
        :paramtype url: str
        :keyword content: The WSDL content.
        :paramtype content: str
        :keyword service: The service with name and endpoint names.
        :paramtype service: ~azure.mgmt.web.v2016_06_01.models.WsdlService
        :keyword import_method: The WSDL import method. Known values are: "NotSpecified", "SoapToRest",
         and "SoapPassThrough".
        :paramtype import_method: str or ~azure.mgmt.web.v2016_06_01.models.WsdlImportMethod
        """
        super().__init__(**kwargs)
        self.url = url
        self.content = content
        self.service = service
        self.import_method = import_method


class WsdlService(_serialization.Model):
    """The service with name and endpoint names.

    All required parameters must be populated in order to send to server.

    :ivar qualified_name: The service's qualified name. Required.
    :vartype qualified_name: str
    :ivar endpoint_qualified_names: List of the endpoints' qualified names.
    :vartype endpoint_qualified_names: list[str]
    """

    _validation = {
        "qualified_name": {"required": True},
    }

    _attribute_map = {
        "qualified_name": {"key": "qualifiedName", "type": "str"},
        "endpoint_qualified_names": {"key": "endpointQualifiedNames", "type": "[str]"},
    }

    def __init__(
        self, *, qualified_name: str, endpoint_qualified_names: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword qualified_name: The service's qualified name. Required.
        :paramtype qualified_name: str
        :keyword endpoint_qualified_names: List of the endpoints' qualified names.
        :paramtype endpoint_qualified_names: list[str]
        """
        super().__init__(**kwargs)
        self.qualified_name = qualified_name
        self.endpoint_qualified_names = endpoint_qualified_names


class WsdlServiceCollection(_serialization.Model):
    """A list of custom API WSDL interfaces.

    :ivar value: Collection of WSDL interfaces.
    :vartype value: list[~azure.mgmt.web.v2016_06_01.models.WsdlService]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[WsdlService]"},
    }

    def __init__(self, *, value: Optional[List["_models.WsdlService"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Collection of WSDL interfaces.
        :paramtype value: list[~azure.mgmt.web.v2016_06_01.models.WsdlService]
        """
        super().__init__(**kwargs)
        self.value = value
