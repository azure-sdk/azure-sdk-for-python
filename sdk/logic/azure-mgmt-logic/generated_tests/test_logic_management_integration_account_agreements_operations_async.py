# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.logic.aio import LogicManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestLogicManagementIntegrationAccountAgreementsOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(LogicManagementClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_integration_account_agreements_list(self, resource_group):
        response = self.client.integration_account_agreements.list(
            resource_group_name=resource_group.name,
            integration_account_name="str",
            api_version="2019-05-01",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_integration_account_agreements_get(self, resource_group):
        response = await self.client.integration_account_agreements.get(
            resource_group_name=resource_group.name,
            integration_account_name="str",
            agreement_name="str",
            api_version="2019-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_integration_account_agreements_create_or_update(self, resource_group):
        response = await self.client.integration_account_agreements.create_or_update(
            resource_group_name=resource_group.name,
            integration_account_name="str",
            agreement_name="str",
            agreement={
                "agreementType": "str",
                "content": {
                    "aS2": {
                        "receiveAgreement": {
                            "protocolSettings": {
                                "acknowledgementConnectionSettings": {
                                    "ignoreCertificateNameMismatch": bool,
                                    "keepHttpConnectionAlive": bool,
                                    "supportHttpStatusCodeContinue": bool,
                                    "unfoldHttpHeaders": bool,
                                },
                                "envelopeSettings": {
                                    "autogenerateFileName": bool,
                                    "fileNameTemplate": "str",
                                    "messageContentType": "str",
                                    "suspendMessageOnFileNameGenerationError": bool,
                                    "transmitFileNameInMimeHeader": bool,
                                },
                                "errorSettings": {"resendIfMDNNotReceived": bool, "suspendDuplicateMessage": bool},
                                "mdnSettings": {
                                    "micHashingAlgorithm": "str",
                                    "needMDN": bool,
                                    "sendInboundMDNToMessageBox": bool,
                                    "sendMDNAsynchronously": bool,
                                    "signMDN": bool,
                                    "signOutboundMDNIfOptional": bool,
                                    "dispositionNotificationTo": "str",
                                    "mdnText": "str",
                                    "receiptDeliveryUrl": "str",
                                },
                                "messageConnectionSettings": {
                                    "ignoreCertificateNameMismatch": bool,
                                    "keepHttpConnectionAlive": bool,
                                    "supportHttpStatusCodeContinue": bool,
                                    "unfoldHttpHeaders": bool,
                                },
                                "securitySettings": {
                                    "enableNRRForInboundDecodedMessages": bool,
                                    "enableNRRForInboundEncodedMessages": bool,
                                    "enableNRRForInboundMDN": bool,
                                    "enableNRRForOutboundDecodedMessages": bool,
                                    "enableNRRForOutboundEncodedMessages": bool,
                                    "enableNRRForOutboundMDN": bool,
                                    "overrideGroupSigningCertificate": bool,
                                    "encryptionCertificateName": "str",
                                    "sha2AlgorithmFormat": "str",
                                    "signingCertificateName": "str",
                                },
                                "validationSettings": {
                                    "checkCertificateRevocationListOnReceive": bool,
                                    "checkCertificateRevocationListOnSend": bool,
                                    "checkDuplicateMessage": bool,
                                    "compressMessage": bool,
                                    "encryptMessage": bool,
                                    "encryptionAlgorithm": "str",
                                    "interchangeDuplicatesValidityDays": 0,
                                    "overrideMessageProperties": bool,
                                    "signMessage": bool,
                                    "signingAlgorithm": "str",
                                },
                            },
                            "receiverBusinessIdentity": {"qualifier": "str", "value": "str"},
                            "senderBusinessIdentity": {"qualifier": "str", "value": "str"},
                        },
                        "sendAgreement": {
                            "protocolSettings": {
                                "acknowledgementConnectionSettings": {
                                    "ignoreCertificateNameMismatch": bool,
                                    "keepHttpConnectionAlive": bool,
                                    "supportHttpStatusCodeContinue": bool,
                                    "unfoldHttpHeaders": bool,
                                },
                                "envelopeSettings": {
                                    "autogenerateFileName": bool,
                                    "fileNameTemplate": "str",
                                    "messageContentType": "str",
                                    "suspendMessageOnFileNameGenerationError": bool,
                                    "transmitFileNameInMimeHeader": bool,
                                },
                                "errorSettings": {"resendIfMDNNotReceived": bool, "suspendDuplicateMessage": bool},
                                "mdnSettings": {
                                    "micHashingAlgorithm": "str",
                                    "needMDN": bool,
                                    "sendInboundMDNToMessageBox": bool,
                                    "sendMDNAsynchronously": bool,
                                    "signMDN": bool,
                                    "signOutboundMDNIfOptional": bool,
                                    "dispositionNotificationTo": "str",
                                    "mdnText": "str",
                                    "receiptDeliveryUrl": "str",
                                },
                                "messageConnectionSettings": {
                                    "ignoreCertificateNameMismatch": bool,
                                    "keepHttpConnectionAlive": bool,
                                    "supportHttpStatusCodeContinue": bool,
                                    "unfoldHttpHeaders": bool,
                                },
                                "securitySettings": {
                                    "enableNRRForInboundDecodedMessages": bool,
                                    "enableNRRForInboundEncodedMessages": bool,
                                    "enableNRRForInboundMDN": bool,
                                    "enableNRRForOutboundDecodedMessages": bool,
                                    "enableNRRForOutboundEncodedMessages": bool,
                                    "enableNRRForOutboundMDN": bool,
                                    "overrideGroupSigningCertificate": bool,
                                    "encryptionCertificateName": "str",
                                    "sha2AlgorithmFormat": "str",
                                    "signingCertificateName": "str",
                                },
                                "validationSettings": {
                                    "checkCertificateRevocationListOnReceive": bool,
                                    "checkCertificateRevocationListOnSend": bool,
                                    "checkDuplicateMessage": bool,
                                    "compressMessage": bool,
                                    "encryptMessage": bool,
                                    "encryptionAlgorithm": "str",
                                    "interchangeDuplicatesValidityDays": 0,
                                    "overrideMessageProperties": bool,
                                    "signMessage": bool,
                                    "signingAlgorithm": "str",
                                },
                            },
                            "receiverBusinessIdentity": {"qualifier": "str", "value": "str"},
                            "senderBusinessIdentity": {"qualifier": "str", "value": "str"},
                        },
                    },
                    "edifact": {
                        "receiveAgreement": {
                            "protocolSettings": {
                                "acknowledgementSettings": {
                                    "acknowledgementControlNumberLowerBound": 0,
                                    "acknowledgementControlNumberUpperBound": 0,
                                    "batchFunctionalAcknowledgements": bool,
                                    "batchTechnicalAcknowledgements": bool,
                                    "needFunctionalAcknowledgement": bool,
                                    "needLoopForValidMessages": bool,
                                    "needTechnicalAcknowledgement": bool,
                                    "rolloverAcknowledgementControlNumber": bool,
                                    "sendSynchronousAcknowledgement": bool,
                                    "acknowledgementControlNumberPrefix": "str",
                                    "acknowledgementControlNumberSuffix": "str",
                                },
                                "envelopeSettings": {
                                    "applyDelimiterStringAdvice": bool,
                                    "createGroupingSegments": bool,
                                    "enableDefaultGroupHeaders": bool,
                                    "groupControlNumberLowerBound": 0,
                                    "groupControlNumberUpperBound": 0,
                                    "interchangeControlNumberLowerBound": 0,
                                    "interchangeControlNumberUpperBound": 0,
                                    "isTestInterchange": bool,
                                    "overwriteExistingTransactionSetControlNumber": bool,
                                    "rolloverGroupControlNumber": bool,
                                    "rolloverInterchangeControlNumber": bool,
                                    "rolloverTransactionSetControlNumber": bool,
                                    "transactionSetControlNumberLowerBound": 0,
                                    "transactionSetControlNumberUpperBound": 0,
                                    "applicationReferenceId": "str",
                                    "communicationAgreementId": "str",
                                    "functionalGroupId": "str",
                                    "groupApplicationPassword": "str",
                                    "groupApplicationReceiverId": "str",
                                    "groupApplicationReceiverQualifier": "str",
                                    "groupApplicationSenderId": "str",
                                    "groupApplicationSenderQualifier": "str",
                                    "groupAssociationAssignedCode": "str",
                                    "groupControlNumberPrefix": "str",
                                    "groupControlNumberSuffix": "str",
                                    "groupControllingAgencyCode": "str",
                                    "groupMessageRelease": "str",
                                    "groupMessageVersion": "str",
                                    "interchangeControlNumberPrefix": "str",
                                    "interchangeControlNumberSuffix": "str",
                                    "processingPriorityCode": "str",
                                    "receiverInternalIdentification": "str",
                                    "receiverInternalSubIdentification": "str",
                                    "receiverReverseRoutingAddress": "str",
                                    "recipientReferencePasswordQualifier": "str",
                                    "recipientReferencePasswordValue": "str",
                                    "senderInternalIdentification": "str",
                                    "senderInternalSubIdentification": "str",
                                    "senderReverseRoutingAddress": "str",
                                    "transactionSetControlNumberPrefix": "str",
                                    "transactionSetControlNumberSuffix": "str",
                                },
                                "framingSettings": {
                                    "characterSet": "str",
                                    "componentSeparator": 0,
                                    "dataElementSeparator": 0,
                                    "decimalPointIndicator": "str",
                                    "protocolVersion": 0,
                                    "releaseIndicator": 0,
                                    "repetitionSeparator": 0,
                                    "segmentTerminator": 0,
                                    "segmentTerminatorSuffix": "str",
                                    "characterEncoding": "str",
                                    "serviceCodeListDirectoryVersion": "str",
                                },
                                "messageFilter": {"messageFilterType": "str"},
                                "processingSettings": {
                                    "createEmptyXmlTagsForTrailingSeparators": bool,
                                    "maskSecurityInfo": bool,
                                    "preserveInterchange": bool,
                                    "suspendInterchangeOnError": bool,
                                    "useDotAsDecimalSeparator": bool,
                                },
                                "schemaReferences": [
                                    {
                                        "messageId": "str",
                                        "messageRelease": "str",
                                        "messageVersion": "str",
                                        "schemaName": "str",
                                        "associationAssignedCode": "str",
                                        "senderApplicationId": "str",
                                        "senderApplicationQualifier": "str",
                                    }
                                ],
                                "validationSettings": {
                                    "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                    "checkDuplicateGroupControlNumber": bool,
                                    "checkDuplicateInterchangeControlNumber": bool,
                                    "checkDuplicateTransactionSetControlNumber": bool,
                                    "interchangeControlNumberValidityDays": 0,
                                    "trailingSeparatorPolicy": "str",
                                    "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                    "validateCharacterSet": bool,
                                    "validateEDITypes": bool,
                                    "validateXSDTypes": bool,
                                },
                                "edifactDelimiterOverrides": [
                                    {
                                        "componentSeparator": 0,
                                        "dataElementSeparator": 0,
                                        "decimalPointIndicator": "str",
                                        "releaseIndicator": 0,
                                        "repetitionSeparator": 0,
                                        "segmentTerminator": 0,
                                        "segmentTerminatorSuffix": "str",
                                        "messageAssociationAssignedCode": "str",
                                        "messageId": "str",
                                        "messageRelease": "str",
                                        "messageVersion": "str",
                                        "targetNamespace": "str",
                                    }
                                ],
                                "envelopeOverrides": [
                                    {
                                        "applicationPassword": "str",
                                        "associationAssignedCode": "str",
                                        "controllingAgencyCode": "str",
                                        "functionalGroupId": "str",
                                        "groupHeaderMessageRelease": "str",
                                        "groupHeaderMessageVersion": "str",
                                        "messageAssociationAssignedCode": "str",
                                        "messageId": "str",
                                        "messageRelease": "str",
                                        "messageVersion": "str",
                                        "receiverApplicationId": "str",
                                        "receiverApplicationQualifier": "str",
                                        "senderApplicationId": "str",
                                        "senderApplicationQualifier": "str",
                                        "targetNamespace": "str",
                                    }
                                ],
                                "messageFilterList": [{"messageId": "str"}],
                                "validationOverrides": [
                                    {
                                        "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                        "enforceCharacterSet": bool,
                                        "messageId": "str",
                                        "trailingSeparatorPolicy": "str",
                                        "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                        "validateEDITypes": bool,
                                        "validateXSDTypes": bool,
                                    }
                                ],
                            },
                            "receiverBusinessIdentity": {"qualifier": "str", "value": "str"},
                            "senderBusinessIdentity": {"qualifier": "str", "value": "str"},
                        },
                        "sendAgreement": {
                            "protocolSettings": {
                                "acknowledgementSettings": {
                                    "acknowledgementControlNumberLowerBound": 0,
                                    "acknowledgementControlNumberUpperBound": 0,
                                    "batchFunctionalAcknowledgements": bool,
                                    "batchTechnicalAcknowledgements": bool,
                                    "needFunctionalAcknowledgement": bool,
                                    "needLoopForValidMessages": bool,
                                    "needTechnicalAcknowledgement": bool,
                                    "rolloverAcknowledgementControlNumber": bool,
                                    "sendSynchronousAcknowledgement": bool,
                                    "acknowledgementControlNumberPrefix": "str",
                                    "acknowledgementControlNumberSuffix": "str",
                                },
                                "envelopeSettings": {
                                    "applyDelimiterStringAdvice": bool,
                                    "createGroupingSegments": bool,
                                    "enableDefaultGroupHeaders": bool,
                                    "groupControlNumberLowerBound": 0,
                                    "groupControlNumberUpperBound": 0,
                                    "interchangeControlNumberLowerBound": 0,
                                    "interchangeControlNumberUpperBound": 0,
                                    "isTestInterchange": bool,
                                    "overwriteExistingTransactionSetControlNumber": bool,
                                    "rolloverGroupControlNumber": bool,
                                    "rolloverInterchangeControlNumber": bool,
                                    "rolloverTransactionSetControlNumber": bool,
                                    "transactionSetControlNumberLowerBound": 0,
                                    "transactionSetControlNumberUpperBound": 0,
                                    "applicationReferenceId": "str",
                                    "communicationAgreementId": "str",
                                    "functionalGroupId": "str",
                                    "groupApplicationPassword": "str",
                                    "groupApplicationReceiverId": "str",
                                    "groupApplicationReceiverQualifier": "str",
                                    "groupApplicationSenderId": "str",
                                    "groupApplicationSenderQualifier": "str",
                                    "groupAssociationAssignedCode": "str",
                                    "groupControlNumberPrefix": "str",
                                    "groupControlNumberSuffix": "str",
                                    "groupControllingAgencyCode": "str",
                                    "groupMessageRelease": "str",
                                    "groupMessageVersion": "str",
                                    "interchangeControlNumberPrefix": "str",
                                    "interchangeControlNumberSuffix": "str",
                                    "processingPriorityCode": "str",
                                    "receiverInternalIdentification": "str",
                                    "receiverInternalSubIdentification": "str",
                                    "receiverReverseRoutingAddress": "str",
                                    "recipientReferencePasswordQualifier": "str",
                                    "recipientReferencePasswordValue": "str",
                                    "senderInternalIdentification": "str",
                                    "senderInternalSubIdentification": "str",
                                    "senderReverseRoutingAddress": "str",
                                    "transactionSetControlNumberPrefix": "str",
                                    "transactionSetControlNumberSuffix": "str",
                                },
                                "framingSettings": {
                                    "characterSet": "str",
                                    "componentSeparator": 0,
                                    "dataElementSeparator": 0,
                                    "decimalPointIndicator": "str",
                                    "protocolVersion": 0,
                                    "releaseIndicator": 0,
                                    "repetitionSeparator": 0,
                                    "segmentTerminator": 0,
                                    "segmentTerminatorSuffix": "str",
                                    "characterEncoding": "str",
                                    "serviceCodeListDirectoryVersion": "str",
                                },
                                "messageFilter": {"messageFilterType": "str"},
                                "processingSettings": {
                                    "createEmptyXmlTagsForTrailingSeparators": bool,
                                    "maskSecurityInfo": bool,
                                    "preserveInterchange": bool,
                                    "suspendInterchangeOnError": bool,
                                    "useDotAsDecimalSeparator": bool,
                                },
                                "schemaReferences": [
                                    {
                                        "messageId": "str",
                                        "messageRelease": "str",
                                        "messageVersion": "str",
                                        "schemaName": "str",
                                        "associationAssignedCode": "str",
                                        "senderApplicationId": "str",
                                        "senderApplicationQualifier": "str",
                                    }
                                ],
                                "validationSettings": {
                                    "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                    "checkDuplicateGroupControlNumber": bool,
                                    "checkDuplicateInterchangeControlNumber": bool,
                                    "checkDuplicateTransactionSetControlNumber": bool,
                                    "interchangeControlNumberValidityDays": 0,
                                    "trailingSeparatorPolicy": "str",
                                    "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                    "validateCharacterSet": bool,
                                    "validateEDITypes": bool,
                                    "validateXSDTypes": bool,
                                },
                                "edifactDelimiterOverrides": [
                                    {
                                        "componentSeparator": 0,
                                        "dataElementSeparator": 0,
                                        "decimalPointIndicator": "str",
                                        "releaseIndicator": 0,
                                        "repetitionSeparator": 0,
                                        "segmentTerminator": 0,
                                        "segmentTerminatorSuffix": "str",
                                        "messageAssociationAssignedCode": "str",
                                        "messageId": "str",
                                        "messageRelease": "str",
                                        "messageVersion": "str",
                                        "targetNamespace": "str",
                                    }
                                ],
                                "envelopeOverrides": [
                                    {
                                        "applicationPassword": "str",
                                        "associationAssignedCode": "str",
                                        "controllingAgencyCode": "str",
                                        "functionalGroupId": "str",
                                        "groupHeaderMessageRelease": "str",
                                        "groupHeaderMessageVersion": "str",
                                        "messageAssociationAssignedCode": "str",
                                        "messageId": "str",
                                        "messageRelease": "str",
                                        "messageVersion": "str",
                                        "receiverApplicationId": "str",
                                        "receiverApplicationQualifier": "str",
                                        "senderApplicationId": "str",
                                        "senderApplicationQualifier": "str",
                                        "targetNamespace": "str",
                                    }
                                ],
                                "messageFilterList": [{"messageId": "str"}],
                                "validationOverrides": [
                                    {
                                        "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                        "enforceCharacterSet": bool,
                                        "messageId": "str",
                                        "trailingSeparatorPolicy": "str",
                                        "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                        "validateEDITypes": bool,
                                        "validateXSDTypes": bool,
                                    }
                                ],
                            },
                            "receiverBusinessIdentity": {"qualifier": "str", "value": "str"},
                            "senderBusinessIdentity": {"qualifier": "str", "value": "str"},
                        },
                    },
                    "x12": {
                        "receiveAgreement": {
                            "protocolSettings": {
                                "acknowledgementSettings": {
                                    "acknowledgementControlNumberLowerBound": 0,
                                    "acknowledgementControlNumberUpperBound": 0,
                                    "batchFunctionalAcknowledgements": bool,
                                    "batchImplementationAcknowledgements": bool,
                                    "batchTechnicalAcknowledgements": bool,
                                    "needFunctionalAcknowledgement": bool,
                                    "needImplementationAcknowledgement": bool,
                                    "needLoopForValidMessages": bool,
                                    "needTechnicalAcknowledgement": bool,
                                    "rolloverAcknowledgementControlNumber": bool,
                                    "sendSynchronousAcknowledgement": bool,
                                    "acknowledgementControlNumberPrefix": "str",
                                    "acknowledgementControlNumberSuffix": "str",
                                    "functionalAcknowledgementVersion": "str",
                                    "implementationAcknowledgementVersion": "str",
                                },
                                "envelopeSettings": {
                                    "controlStandardsId": 0,
                                    "controlVersionNumber": "str",
                                    "enableDefaultGroupHeaders": bool,
                                    "groupControlNumberLowerBound": 0,
                                    "groupControlNumberUpperBound": 0,
                                    "groupHeaderAgencyCode": "str",
                                    "groupHeaderDateFormat": "str",
                                    "groupHeaderTimeFormat": "str",
                                    "groupHeaderVersion": "str",
                                    "interchangeControlNumberLowerBound": 0,
                                    "interchangeControlNumberUpperBound": 0,
                                    "overwriteExistingTransactionSetControlNumber": bool,
                                    "receiverApplicationId": "str",
                                    "rolloverGroupControlNumber": bool,
                                    "rolloverInterchangeControlNumber": bool,
                                    "rolloverTransactionSetControlNumber": bool,
                                    "senderApplicationId": "str",
                                    "transactionSetControlNumberLowerBound": 0,
                                    "transactionSetControlNumberUpperBound": 0,
                                    "usageIndicator": "str",
                                    "useControlStandardsIdAsRepetitionCharacter": bool,
                                    "functionalGroupId": "str",
                                    "transactionSetControlNumberPrefix": "str",
                                    "transactionSetControlNumberSuffix": "str",
                                },
                                "framingSettings": {
                                    "characterSet": "str",
                                    "componentSeparator": 0,
                                    "dataElementSeparator": 0,
                                    "replaceCharacter": 0,
                                    "replaceSeparatorsInPayload": bool,
                                    "segmentTerminator": 0,
                                    "segmentTerminatorSuffix": "str",
                                },
                                "messageFilter": {"messageFilterType": "str"},
                                "processingSettings": {
                                    "convertImpliedDecimal": bool,
                                    "createEmptyXmlTagsForTrailingSeparators": bool,
                                    "maskSecurityInfo": bool,
                                    "preserveInterchange": bool,
                                    "suspendInterchangeOnError": bool,
                                    "useDotAsDecimalSeparator": bool,
                                },
                                "schemaReferences": [
                                    {
                                        "messageId": "str",
                                        "schemaName": "str",
                                        "schemaVersion": "str",
                                        "senderApplicationId": "str",
                                    }
                                ],
                                "securitySettings": {
                                    "authorizationQualifier": "str",
                                    "securityQualifier": "str",
                                    "authorizationValue": "str",
                                    "passwordValue": "str",
                                },
                                "validationSettings": {
                                    "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                    "checkDuplicateGroupControlNumber": bool,
                                    "checkDuplicateInterchangeControlNumber": bool,
                                    "checkDuplicateTransactionSetControlNumber": bool,
                                    "interchangeControlNumberValidityDays": 0,
                                    "trailingSeparatorPolicy": "str",
                                    "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                    "validateCharacterSet": bool,
                                    "validateEDITypes": bool,
                                    "validateXSDTypes": bool,
                                },
                                "envelopeOverrides": [
                                    {
                                        "dateFormat": "str",
                                        "headerVersion": "str",
                                        "messageId": "str",
                                        "protocolVersion": "str",
                                        "receiverApplicationId": "str",
                                        "responsibleAgencyCode": "str",
                                        "senderApplicationId": "str",
                                        "targetNamespace": "str",
                                        "timeFormat": "str",
                                        "functionalIdentifierCode": "str",
                                    }
                                ],
                                "messageFilterList": [{"messageId": "str"}],
                                "validationOverrides": [
                                    {
                                        "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                        "messageId": "str",
                                        "trailingSeparatorPolicy": "str",
                                        "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                        "validateCharacterSet": bool,
                                        "validateEDITypes": bool,
                                        "validateXSDTypes": bool,
                                    }
                                ],
                                "x12DelimiterOverrides": [
                                    {
                                        "componentSeparator": 0,
                                        "dataElementSeparator": 0,
                                        "replaceCharacter": 0,
                                        "replaceSeparatorsInPayload": bool,
                                        "segmentTerminator": 0,
                                        "segmentTerminatorSuffix": "str",
                                        "messageId": "str",
                                        "protocolVersion": "str",
                                        "targetNamespace": "str",
                                    }
                                ],
                            },
                            "receiverBusinessIdentity": {"qualifier": "str", "value": "str"},
                            "senderBusinessIdentity": {"qualifier": "str", "value": "str"},
                        },
                        "sendAgreement": {
                            "protocolSettings": {
                                "acknowledgementSettings": {
                                    "acknowledgementControlNumberLowerBound": 0,
                                    "acknowledgementControlNumberUpperBound": 0,
                                    "batchFunctionalAcknowledgements": bool,
                                    "batchImplementationAcknowledgements": bool,
                                    "batchTechnicalAcknowledgements": bool,
                                    "needFunctionalAcknowledgement": bool,
                                    "needImplementationAcknowledgement": bool,
                                    "needLoopForValidMessages": bool,
                                    "needTechnicalAcknowledgement": bool,
                                    "rolloverAcknowledgementControlNumber": bool,
                                    "sendSynchronousAcknowledgement": bool,
                                    "acknowledgementControlNumberPrefix": "str",
                                    "acknowledgementControlNumberSuffix": "str",
                                    "functionalAcknowledgementVersion": "str",
                                    "implementationAcknowledgementVersion": "str",
                                },
                                "envelopeSettings": {
                                    "controlStandardsId": 0,
                                    "controlVersionNumber": "str",
                                    "enableDefaultGroupHeaders": bool,
                                    "groupControlNumberLowerBound": 0,
                                    "groupControlNumberUpperBound": 0,
                                    "groupHeaderAgencyCode": "str",
                                    "groupHeaderDateFormat": "str",
                                    "groupHeaderTimeFormat": "str",
                                    "groupHeaderVersion": "str",
                                    "interchangeControlNumberLowerBound": 0,
                                    "interchangeControlNumberUpperBound": 0,
                                    "overwriteExistingTransactionSetControlNumber": bool,
                                    "receiverApplicationId": "str",
                                    "rolloverGroupControlNumber": bool,
                                    "rolloverInterchangeControlNumber": bool,
                                    "rolloverTransactionSetControlNumber": bool,
                                    "senderApplicationId": "str",
                                    "transactionSetControlNumberLowerBound": 0,
                                    "transactionSetControlNumberUpperBound": 0,
                                    "usageIndicator": "str",
                                    "useControlStandardsIdAsRepetitionCharacter": bool,
                                    "functionalGroupId": "str",
                                    "transactionSetControlNumberPrefix": "str",
                                    "transactionSetControlNumberSuffix": "str",
                                },
                                "framingSettings": {
                                    "characterSet": "str",
                                    "componentSeparator": 0,
                                    "dataElementSeparator": 0,
                                    "replaceCharacter": 0,
                                    "replaceSeparatorsInPayload": bool,
                                    "segmentTerminator": 0,
                                    "segmentTerminatorSuffix": "str",
                                },
                                "messageFilter": {"messageFilterType": "str"},
                                "processingSettings": {
                                    "convertImpliedDecimal": bool,
                                    "createEmptyXmlTagsForTrailingSeparators": bool,
                                    "maskSecurityInfo": bool,
                                    "preserveInterchange": bool,
                                    "suspendInterchangeOnError": bool,
                                    "useDotAsDecimalSeparator": bool,
                                },
                                "schemaReferences": [
                                    {
                                        "messageId": "str",
                                        "schemaName": "str",
                                        "schemaVersion": "str",
                                        "senderApplicationId": "str",
                                    }
                                ],
                                "securitySettings": {
                                    "authorizationQualifier": "str",
                                    "securityQualifier": "str",
                                    "authorizationValue": "str",
                                    "passwordValue": "str",
                                },
                                "validationSettings": {
                                    "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                    "checkDuplicateGroupControlNumber": bool,
                                    "checkDuplicateInterchangeControlNumber": bool,
                                    "checkDuplicateTransactionSetControlNumber": bool,
                                    "interchangeControlNumberValidityDays": 0,
                                    "trailingSeparatorPolicy": "str",
                                    "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                    "validateCharacterSet": bool,
                                    "validateEDITypes": bool,
                                    "validateXSDTypes": bool,
                                },
                                "envelopeOverrides": [
                                    {
                                        "dateFormat": "str",
                                        "headerVersion": "str",
                                        "messageId": "str",
                                        "protocolVersion": "str",
                                        "receiverApplicationId": "str",
                                        "responsibleAgencyCode": "str",
                                        "senderApplicationId": "str",
                                        "targetNamespace": "str",
                                        "timeFormat": "str",
                                        "functionalIdentifierCode": "str",
                                    }
                                ],
                                "messageFilterList": [{"messageId": "str"}],
                                "validationOverrides": [
                                    {
                                        "allowLeadingAndTrailingSpacesAndZeroes": bool,
                                        "messageId": "str",
                                        "trailingSeparatorPolicy": "str",
                                        "trimLeadingAndTrailingSpacesAndZeroes": bool,
                                        "validateCharacterSet": bool,
                                        "validateEDITypes": bool,
                                        "validateXSDTypes": bool,
                                    }
                                ],
                                "x12DelimiterOverrides": [
                                    {
                                        "componentSeparator": 0,
                                        "dataElementSeparator": 0,
                                        "replaceCharacter": 0,
                                        "replaceSeparatorsInPayload": bool,
                                        "segmentTerminator": 0,
                                        "segmentTerminatorSuffix": "str",
                                        "messageId": "str",
                                        "protocolVersion": "str",
                                        "targetNamespace": "str",
                                    }
                                ],
                            },
                            "receiverBusinessIdentity": {"qualifier": "str", "value": "str"},
                            "senderBusinessIdentity": {"qualifier": "str", "value": "str"},
                        },
                    },
                },
                "guestIdentity": {"qualifier": "str", "value": "str"},
                "guestPartner": "str",
                "hostIdentity": {"qualifier": "str", "value": "str"},
                "hostPartner": "str",
                "changedTime": "2020-02-20 00:00:00",
                "createdTime": "2020-02-20 00:00:00",
                "id": "str",
                "location": "str",
                "metadata": {},
                "name": "str",
                "tags": {"str": "str"},
                "type": "str",
            },
            api_version="2019-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_integration_account_agreements_delete(self, resource_group):
        response = await self.client.integration_account_agreements.delete(
            resource_group_name=resource_group.name,
            integration_account_name="str",
            agreement_name="str",
            api_version="2019-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_integration_account_agreements_list_content_callback_url(self, resource_group):
        response = await self.client.integration_account_agreements.list_content_callback_url(
            resource_group_name=resource_group.name,
            integration_account_name="str",
            agreement_name="str",
            list_content_callback_url={"keyType": "str", "notAfter": "2020-02-20 00:00:00"},
            api_version="2019-05-01",
        )

        # please add some check logic here by yourself
        # ...
