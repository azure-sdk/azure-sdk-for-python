# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    from .. import models as _models


class CancelOperationsRequest(_serialization.Model):
    """This is the request to cancel running operations in scheduled actions using the operation ids.

    All required parameters must be populated in order to send to server.

    :ivar operation_ids: The list of operation ids to cancel operations on. Required.
    :vartype operation_ids: list[str]
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "operation_ids": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "operation_ids": {"key": "operationIds", "type": "[str]"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(self, *, operation_ids: List[str], correlationid: str, **kwargs: Any) -> None:
        """
        :keyword operation_ids: The list of operation ids to cancel operations on. Required.
        :paramtype operation_ids: list[str]
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.operation_ids = operation_ids
        self.correlationid = correlationid


class CancelOperationsResponse(_serialization.Model):
    """This is the response from a cancel operations request.

    All required parameters must be populated in order to send to server.

    :ivar results: An array of resource operations that were successfully cancelled. Required.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    _validation = {
        "results": {"required": True},
    }

    _attribute_map = {
        "results": {"key": "results", "type": "[ResourceOperation]"},
    }

    def __init__(self, *, results: List["_models.ResourceOperation"], **kwargs: Any) -> None:
        """
        :keyword results: An array of resource operations that were successfully cancelled. Required.
        :paramtype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
        """
        super().__init__(**kwargs)
        self.results = results


class DeallocateResourceOperationResponse(_serialization.Model):
    """The response from a deallocate request.

    All required parameters must be populated in order to send to server.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the deallocate request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the deallocate request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the deallocate request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    _validation = {
        "description": {"required": True},
        "type": {"required": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "results": {"key": "results", "type": "[ResourceOperation]"},
    }

    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the operation response. Required.
        :paramtype description: str
        :keyword type: The type of resources used in the deallocate request eg virtual machines.
         Required.
        :paramtype type: str
        :keyword location: The location of the deallocate request eg westus. Required.
        :paramtype location: str
        :keyword results: The results from the deallocate request if no errors exist.
        :paramtype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
        """
        super().__init__(**kwargs)
        self.description = description
        self.type = type
        self.location = location
        self.results = results


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: Optional[str] = None
        self.info: Optional[JSON] = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.computeschedule.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.computeschedule.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code: Optional[str] = None
        self.message: Optional[str] = None
        self.target: Optional[str] = None
        self.details: Optional[List["_models.ErrorDetail"]] = None
        self.additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.computeschedule.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.computeschedule.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class ExecuteDeallocateRequest(_serialization.Model):
    """The ExecuteDeallocateRequest request for executeDeallocate operations.

    All required parameters must be populated in order to send to server.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "execution_parameters": {"required": True},
        "resources": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "execution_parameters": {"key": "executionParameters", "type": "ExecutionParameters"},
        "resources": {"key": "resources", "type": "Resources"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword execution_parameters: The execution parameters for the request. Required.
        :paramtype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
        :keyword resources: The resources for the request. Required.
        :paramtype resources: ~azure.mgmt.computeschedule.models.Resources
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.execution_parameters = execution_parameters
        self.resources = resources
        self.correlationid = correlationid


class ExecuteHibernateRequest(_serialization.Model):
    """The ExecuteHibernateRequest request for executeHibernate operations.

    All required parameters must be populated in order to send to server.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "execution_parameters": {"required": True},
        "resources": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "execution_parameters": {"key": "executionParameters", "type": "ExecutionParameters"},
        "resources": {"key": "resources", "type": "Resources"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword execution_parameters: The execution parameters for the request. Required.
        :paramtype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
        :keyword resources: The resources for the request. Required.
        :paramtype resources: ~azure.mgmt.computeschedule.models.Resources
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.execution_parameters = execution_parameters
        self.resources = resources
        self.correlationid = correlationid


class ExecuteStartRequest(_serialization.Model):
    """The ExecuteStartRequest request for executeStart operations.

    All required parameters must be populated in order to send to server.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "execution_parameters": {"required": True},
        "resources": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "execution_parameters": {"key": "executionParameters", "type": "ExecutionParameters"},
        "resources": {"key": "resources", "type": "Resources"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword execution_parameters: The execution parameters for the request. Required.
        :paramtype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
        :keyword resources: The resources for the request. Required.
        :paramtype resources: ~azure.mgmt.computeschedule.models.Resources
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.execution_parameters = execution_parameters
        self.resources = resources
        self.correlationid = correlationid


class ExecutionParameters(_serialization.Model):
    """Extra details needed to run the user's request.

    :ivar optimization_preference: Details that could optimize the user's request. Known values
     are: "Cost", "Availability", and "CostAvailabilityBalanced".
    :vartype optimization_preference: str or
     ~azure.mgmt.computeschedule.models.OptimizationPreference
    :ivar retry_policy: Retry policy the user can pass.
    :vartype retry_policy: ~azure.mgmt.computeschedule.models.RetryPolicy
    """

    _attribute_map = {
        "optimization_preference": {"key": "optimizationPreference", "type": "str"},
        "retry_policy": {"key": "retryPolicy", "type": "RetryPolicy"},
    }

    def __init__(
        self,
        *,
        optimization_preference: Optional[Union[str, "_models.OptimizationPreference"]] = None,
        retry_policy: Optional["_models.RetryPolicy"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword optimization_preference: Details that could optimize the user's request. Known values
         are: "Cost", "Availability", and "CostAvailabilityBalanced".
        :paramtype optimization_preference: str or
         ~azure.mgmt.computeschedule.models.OptimizationPreference
        :keyword retry_policy: Retry policy the user can pass.
        :paramtype retry_policy: ~azure.mgmt.computeschedule.models.RetryPolicy
        """
        super().__init__(**kwargs)
        self.optimization_preference = optimization_preference
        self.retry_policy = retry_policy


class GetOperationErrorsRequest(_serialization.Model):
    """This is the request to get errors per vm operations.

    All required parameters must be populated in order to send to server.

    :ivar operation_ids: The list of operation ids to query errors of. Required.
    :vartype operation_ids: list[str]
    """

    _validation = {
        "operation_ids": {"required": True},
    }

    _attribute_map = {
        "operation_ids": {"key": "operationIds", "type": "[str]"},
    }

    def __init__(self, *, operation_ids: List[str], **kwargs: Any) -> None:
        """
        :keyword operation_ids: The list of operation ids to query errors of. Required.
        :paramtype operation_ids: list[str]
        """
        super().__init__(**kwargs)
        self.operation_ids = operation_ids


class GetOperationErrorsResponse(_serialization.Model):
    """This is the response from a get operations errors request.

    All required parameters must be populated in order to send to server.

    :ivar results: An array of operationids and their corresponding errors if any. Required.
    :vartype results: list[~azure.mgmt.computeschedule.models.OperationErrorsResult]
    """

    _validation = {
        "results": {"required": True},
    }

    _attribute_map = {
        "results": {"key": "results", "type": "[OperationErrorsResult]"},
    }

    def __init__(self, *, results: List["_models.OperationErrorsResult"], **kwargs: Any) -> None:
        """
        :keyword results: An array of operationids and their corresponding errors if any. Required.
        :paramtype results: list[~azure.mgmt.computeschedule.models.OperationErrorsResult]
        """
        super().__init__(**kwargs)
        self.results = results


class GetOperationStatusRequest(_serialization.Model):
    """This is the request to get operation status using operationids.

    All required parameters must be populated in order to send to server.

    :ivar operation_ids: The list of operation ids to get the status of. Required.
    :vartype operation_ids: list[str]
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "operation_ids": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "operation_ids": {"key": "operationIds", "type": "[str]"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(self, *, operation_ids: List[str], correlationid: str, **kwargs: Any) -> None:
        """
        :keyword operation_ids: The list of operation ids to get the status of. Required.
        :paramtype operation_ids: list[str]
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.operation_ids = operation_ids
        self.correlationid = correlationid


class GetOperationStatusResponse(_serialization.Model):
    """This is the response from a get operations status request.

    All required parameters must be populated in order to send to server.

    :ivar results: An array of resource operations based on their operation ids. Required.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    _validation = {
        "results": {"required": True},
    }

    _attribute_map = {
        "results": {"key": "results", "type": "[ResourceOperation]"},
    }

    def __init__(self, *, results: List["_models.ResourceOperation"], **kwargs: Any) -> None:
        """
        :keyword results: An array of resource operations based on their operation ids. Required.
        :paramtype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
        """
        super().__init__(**kwargs)
        self.results = results


class HibernateResourceOperationResponse(_serialization.Model):
    """The response from a Hibernate request.

    All required parameters must be populated in order to send to server.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the Hibernate request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the Hibernate request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the Hibernate request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    _validation = {
        "description": {"required": True},
        "type": {"required": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "results": {"key": "results", "type": "[ResourceOperation]"},
    }

    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the operation response. Required.
        :paramtype description: str
        :keyword type: The type of resources used in the Hibernate request eg virtual machines.
         Required.
        :paramtype type: str
        :keyword location: The location of the Hibernate request eg westus. Required.
        :paramtype location: str
        :keyword results: The results from the Hibernate request if no errors exist.
        :paramtype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
        """
        super().__init__(**kwargs)
        self.description = description
        self.type = type
        self.location = location
        self.results = results


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.computeschedule.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.computeschedule.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.computeschedule.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.computeschedule.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name: Optional[str] = None
        self.is_data_action: Optional[bool] = None
        self.display = display
        self.origin: Optional[Union[str, "_models.Origin"]] = None
        self.action_type: Optional[Union[str, "_models.ActionType"]] = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider: Optional[str] = None
        self.resource: Optional[str] = None
        self.operation: Optional[str] = None
        self.description: Optional[str] = None


class OperationErrorDetails(_serialization.Model):
    """This defines a list of operation errors associated with a unique operationId.

    All required parameters must be populated in order to send to server.

    :ivar error_code: The error code of the operation. Required.
    :vartype error_code: str
    :ivar error_details: The error details of the operation. Required.
    :vartype error_details: str
    :ivar timestamp: The timestamp of the error occurence.
    :vartype timestamp: ~datetime.datetime
    :ivar time_stamp: The timestamp of the error occurence.
    :vartype time_stamp: ~datetime.datetime
    :ivar azure_operation_name: The compute operationid of the Start/Deallocate/Hibernate request.
    :vartype azure_operation_name: str
    :ivar crp_operation_id: The compute operationid of the Start/Deallocate/Hibernate request.
    :vartype crp_operation_id: str
    """

    _validation = {
        "error_code": {"required": True},
        "error_details": {"required": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_details": {"key": "errorDetails", "type": "str"},
        "timestamp": {"key": "timestamp", "type": "iso-8601"},
        "time_stamp": {"key": "timeStamp", "type": "iso-8601"},
        "azure_operation_name": {"key": "azureOperationName", "type": "str"},
        "crp_operation_id": {"key": "crpOperationId", "type": "str"},
    }

    def __init__(
        self,
        *,
        error_code: str,
        error_details: str,
        timestamp: Optional[datetime.datetime] = None,
        time_stamp: Optional[datetime.datetime] = None,
        azure_operation_name: Optional[str] = None,
        crp_operation_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: The error code of the operation. Required.
        :paramtype error_code: str
        :keyword error_details: The error details of the operation. Required.
        :paramtype error_details: str
        :keyword timestamp: The timestamp of the error occurence.
        :paramtype timestamp: ~datetime.datetime
        :keyword time_stamp: The timestamp of the error occurence.
        :paramtype time_stamp: ~datetime.datetime
        :keyword azure_operation_name: The compute operationid of the Start/Deallocate/Hibernate
         request.
        :paramtype azure_operation_name: str
        :keyword crp_operation_id: The compute operationid of the Start/Deallocate/Hibernate request.
        :paramtype crp_operation_id: str
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_details = error_details
        self.timestamp = timestamp
        self.time_stamp = time_stamp
        self.azure_operation_name = azure_operation_name
        self.crp_operation_id = crp_operation_id


class OperationErrorsResult(_serialization.Model):
    """This is the first level of operation errors from the request when clients get errors per vm
    operation.

    :ivar operation_id: The operationId identifying a vm operation.
    :vartype operation_id: str
    :ivar creation_time: The creation time of the error result.
    :vartype creation_time: ~datetime.datetime
    :ivar activation_time: The activation time of a vm operation.
    :vartype activation_time: ~datetime.datetime
    :ivar completed_at: The completion time of the operation if the operation was completed.
    :vartype completed_at: ~datetime.datetime
    :ivar operation_errors: A list of errors associated with the operationid.
    :vartype operation_errors: list[~azure.mgmt.computeschedule.models.OperationErrorDetails]
    :ivar request_error_code: Request level error code.
    :vartype request_error_code: str
    :ivar request_error_details: Request level error details.
    :vartype request_error_details: str
    """

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "activation_time": {"key": "activationTime", "type": "iso-8601"},
        "completed_at": {"key": "completedAt", "type": "iso-8601"},
        "operation_errors": {"key": "operationErrors", "type": "[OperationErrorDetails]"},
        "request_error_code": {"key": "requestErrorCode", "type": "str"},
        "request_error_details": {"key": "requestErrorDetails", "type": "str"},
    }

    def __init__(
        self,
        *,
        operation_id: Optional[str] = None,
        creation_time: Optional[datetime.datetime] = None,
        activation_time: Optional[datetime.datetime] = None,
        completed_at: Optional[datetime.datetime] = None,
        operation_errors: Optional[List["_models.OperationErrorDetails"]] = None,
        request_error_code: Optional[str] = None,
        request_error_details: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword operation_id: The operationId identifying a vm operation.
        :paramtype operation_id: str
        :keyword creation_time: The creation time of the error result.
        :paramtype creation_time: ~datetime.datetime
        :keyword activation_time: The activation time of a vm operation.
        :paramtype activation_time: ~datetime.datetime
        :keyword completed_at: The completion time of the operation if the operation was completed.
        :paramtype completed_at: ~datetime.datetime
        :keyword operation_errors: A list of errors associated with the operationid.
        :paramtype operation_errors: list[~azure.mgmt.computeschedule.models.OperationErrorDetails]
        :keyword request_error_code: Request level error code.
        :paramtype request_error_code: str
        :keyword request_error_details: Request level error details.
        :paramtype request_error_details: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.creation_time = creation_time
        self.activation_time = activation_time
        self.completed_at = completed_at
        self.operation_errors = operation_errors
        self.request_error_code = request_error_code
        self.request_error_details = request_error_details


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.computeschedule.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value: Optional[List["_models.Operation"]] = None
        self.next_link: Optional[str] = None


class ResourceOperation(_serialization.Model):
    """High level response from an operation on a resource.

    :ivar resource_id: Unique identifier for the resource involved in the operation, eg ArmId.
    :vartype resource_id: str
    :ivar error_code: Resource level error code if it exists.
    :vartype error_code: str
    :ivar error_details: Resource level error details if they exist.
    :vartype error_details: str
    :ivar operation: Details of the operation performed on a resource.
    :vartype operation: ~azure.mgmt.computeschedule.models.ResourceOperationDetails
    """

    _attribute_map = {
        "resource_id": {"key": "resourceId", "type": "str"},
        "error_code": {"key": "errorCode", "type": "str"},
        "error_details": {"key": "errorDetails", "type": "str"},
        "operation": {"key": "operation", "type": "ResourceOperationDetails"},
    }

    def __init__(
        self,
        *,
        resource_id: Optional[str] = None,
        error_code: Optional[str] = None,
        error_details: Optional[str] = None,
        operation: Optional["_models.ResourceOperationDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword resource_id: Unique identifier for the resource involved in the operation, eg ArmId.
        :paramtype resource_id: str
        :keyword error_code: Resource level error code if it exists.
        :paramtype error_code: str
        :keyword error_details: Resource level error details if they exist.
        :paramtype error_details: str
        :keyword operation: Details of the operation performed on a resource.
        :paramtype operation: ~azure.mgmt.computeschedule.models.ResourceOperationDetails
        """
        super().__init__(**kwargs)
        self.resource_id = resource_id
        self.error_code = error_code
        self.error_details = error_details
        self.operation = operation


class ResourceOperationDetails(_serialization.Model):
    """The details of a response from an operation on a resource.

    All required parameters must be populated in order to send to server.

    :ivar operation_id: Operation identifier for the unique operation. Required.
    :vartype operation_id: str
    :ivar resource_id: Unique identifier for the resource involved in the operation, eg ArmId.
    :vartype resource_id: str
    :ivar op_type: Type of operation performed on the resources. Known values are: "Unknown",
     "Start", "Deallocate", and "Hibernate".
    :vartype op_type: str or ~azure.mgmt.computeschedule.models.ResourceOperationType
    :ivar subscription_id: Subscription id attached to the request.
    :vartype subscription_id: str
    :ivar deadline: Deadline for the operation.
    :vartype deadline: ~datetime.datetime
    :ivar deadline_type: Type of deadline of the operation. Known values are: "Unknown",
     "InitiateAt", and "CompleteBy".
    :vartype deadline_type: str or ~azure.mgmt.computeschedule.models.DeadlineType
    :ivar state: Current state of the operation. Known values are: "Unknown", "PendingScheduling",
     "Scheduled", "PendingExecution", "Executing", "Succeeded", "Failed", "Cancelled", and
     "Blocked".
    :vartype state: str or ~azure.mgmt.computeschedule.models.OperationState
    :ivar timezone: Timezone for the operation.
    :vartype timezone: str
    :ivar time_zone: Timezone for the operation.
    :vartype time_zone: str
    :ivar resource_operation_error: Operation level errors if they exist.
    :vartype resource_operation_error: ~azure.mgmt.computeschedule.models.ResourceOperationError
    :ivar completed_at: Time the operation was complete if errors are null.
    :vartype completed_at: ~datetime.datetime
    :ivar retry_policy: Retry policy the user can pass.
    :vartype retry_policy: ~azure.mgmt.computeschedule.models.RetryPolicy
    """

    _validation = {
        "operation_id": {"required": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "resource_id": {"key": "resourceId", "type": "str"},
        "op_type": {"key": "opType", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "deadline": {"key": "deadline", "type": "iso-8601"},
        "deadline_type": {"key": "deadlineType", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "timezone": {"key": "timezone", "type": "str"},
        "time_zone": {"key": "timeZone", "type": "str"},
        "resource_operation_error": {"key": "resourceOperationError", "type": "ResourceOperationError"},
        "completed_at": {"key": "completedAt", "type": "iso-8601"},
        "retry_policy": {"key": "retryPolicy", "type": "RetryPolicy"},
    }

    def __init__(
        self,
        *,
        operation_id: str,
        resource_id: Optional[str] = None,
        op_type: Optional[Union[str, "_models.ResourceOperationType"]] = None,
        subscription_id: Optional[str] = None,
        deadline: Optional[datetime.datetime] = None,
        deadline_type: Optional[Union[str, "_models.DeadlineType"]] = None,
        state: Optional[Union[str, "_models.OperationState"]] = None,
        timezone: Optional[str] = None,
        time_zone: Optional[str] = None,
        resource_operation_error: Optional["_models.ResourceOperationError"] = None,
        completed_at: Optional[datetime.datetime] = None,
        retry_policy: Optional["_models.RetryPolicy"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword operation_id: Operation identifier for the unique operation. Required.
        :paramtype operation_id: str
        :keyword resource_id: Unique identifier for the resource involved in the operation, eg ArmId.
        :paramtype resource_id: str
        :keyword op_type: Type of operation performed on the resources. Known values are: "Unknown",
         "Start", "Deallocate", and "Hibernate".
        :paramtype op_type: str or ~azure.mgmt.computeschedule.models.ResourceOperationType
        :keyword subscription_id: Subscription id attached to the request.
        :paramtype subscription_id: str
        :keyword deadline: Deadline for the operation.
        :paramtype deadline: ~datetime.datetime
        :keyword deadline_type: Type of deadline of the operation. Known values are: "Unknown",
         "InitiateAt", and "CompleteBy".
        :paramtype deadline_type: str or ~azure.mgmt.computeschedule.models.DeadlineType
        :keyword state: Current state of the operation. Known values are: "Unknown",
         "PendingScheduling", "Scheduled", "PendingExecution", "Executing", "Succeeded", "Failed",
         "Cancelled", and "Blocked".
        :paramtype state: str or ~azure.mgmt.computeschedule.models.OperationState
        :keyword timezone: Timezone for the operation.
        :paramtype timezone: str
        :keyword time_zone: Timezone for the operation.
        :paramtype time_zone: str
        :keyword resource_operation_error: Operation level errors if they exist.
        :paramtype resource_operation_error: ~azure.mgmt.computeschedule.models.ResourceOperationError
        :keyword completed_at: Time the operation was complete if errors are null.
        :paramtype completed_at: ~datetime.datetime
        :keyword retry_policy: Retry policy the user can pass.
        :paramtype retry_policy: ~azure.mgmt.computeschedule.models.RetryPolicy
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.resource_id = resource_id
        self.op_type = op_type
        self.subscription_id = subscription_id
        self.deadline = deadline
        self.deadline_type = deadline_type
        self.state = state
        self.timezone = timezone
        self.time_zone = time_zone
        self.resource_operation_error = resource_operation_error
        self.completed_at = completed_at
        self.retry_policy = retry_policy


class ResourceOperationError(_serialization.Model):
    """These describe errors that occur at the resource level.

    All required parameters must be populated in order to send to server.

    :ivar error_code: Code for the error eg 404, 500. Required.
    :vartype error_code: str
    :ivar error_details: Detailed message about the error. Required.
    :vartype error_details: str
    """

    _validation = {
        "error_code": {"required": True},
        "error_details": {"required": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_details": {"key": "errorDetails", "type": "str"},
    }

    def __init__(self, *, error_code: str, error_details: str, **kwargs: Any) -> None:
        """
        :keyword error_code: Code for the error eg 404, 500. Required.
        :paramtype error_code: str
        :keyword error_details: Detailed message about the error. Required.
        :paramtype error_details: str
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_details = error_details


class Resources(_serialization.Model):
    """The resources needed for the user request.

    All required parameters must be populated in order to send to server.

    :ivar ids: The resource ids used for the request. Required.
    :vartype ids: list[str]
    """

    _validation = {
        "ids": {"required": True},
    }

    _attribute_map = {
        "ids": {"key": "ids", "type": "[str]"},
    }

    def __init__(self, *, ids: List[str], **kwargs: Any) -> None:
        """
        :keyword ids: The resource ids used for the request. Required.
        :paramtype ids: list[str]
        """
        super().__init__(**kwargs)
        self.ids = ids


class RetryPolicy(_serialization.Model):
    """The retry policy for the user request.

    :ivar retry_count: Retry count for user request.
    :vartype retry_count: int
    :ivar retry_window_in_minutes: Retry window in minutes for user request.
    :vartype retry_window_in_minutes: int
    """

    _attribute_map = {
        "retry_count": {"key": "retryCount", "type": "int"},
        "retry_window_in_minutes": {"key": "retryWindowInMinutes", "type": "int"},
    }

    def __init__(
        self, *, retry_count: Optional[int] = None, retry_window_in_minutes: Optional[int] = None, **kwargs: Any
    ) -> None:
        """
        :keyword retry_count: Retry count for user request.
        :paramtype retry_count: int
        :keyword retry_window_in_minutes: Retry window in minutes for user request.
        :paramtype retry_window_in_minutes: int
        """
        super().__init__(**kwargs)
        self.retry_count = retry_count
        self.retry_window_in_minutes = retry_window_in_minutes


class Schedule(_serialization.Model):
    """The schedule details for the user request.

    All required parameters must be populated in order to send to server.

    :ivar deadline: The deadline for the operation.
    :vartype deadline: ~datetime.datetime
    :ivar dead_line: The deadline for the operation.
    :vartype dead_line: ~datetime.datetime
    :ivar timezone: The timezone for the operation.
    :vartype timezone: str
    :ivar time_zone: The timezone for the operation.
    :vartype time_zone: str
    :ivar deadline_type: The deadlinetype of the operation, this can either be InitiateAt or
     CompleteBy. Required. Known values are: "Unknown", "InitiateAt", and "CompleteBy".
    :vartype deadline_type: str or ~azure.mgmt.computeschedule.models.DeadlineType
    """

    _validation = {
        "deadline_type": {"required": True},
    }

    _attribute_map = {
        "deadline": {"key": "deadline", "type": "iso-8601"},
        "dead_line": {"key": "deadLine", "type": "iso-8601"},
        "timezone": {"key": "timezone", "type": "str"},
        "time_zone": {"key": "timeZone", "type": "str"},
        "deadline_type": {"key": "deadlineType", "type": "str"},
    }

    def __init__(
        self,
        *,
        deadline_type: Union[str, "_models.DeadlineType"],
        deadline: Optional[datetime.datetime] = None,
        dead_line: Optional[datetime.datetime] = None,
        timezone: Optional[str] = None,
        time_zone: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword deadline: The deadline for the operation.
        :paramtype deadline: ~datetime.datetime
        :keyword dead_line: The deadline for the operation.
        :paramtype dead_line: ~datetime.datetime
        :keyword timezone: The timezone for the operation.
        :paramtype timezone: str
        :keyword time_zone: The timezone for the operation.
        :paramtype time_zone: str
        :keyword deadline_type: The deadlinetype of the operation, this can either be InitiateAt or
         CompleteBy. Required. Known values are: "Unknown", "InitiateAt", and "CompleteBy".
        :paramtype deadline_type: str or ~azure.mgmt.computeschedule.models.DeadlineType
        """
        super().__init__(**kwargs)
        self.deadline = deadline
        self.dead_line = dead_line
        self.timezone = timezone
        self.time_zone = time_zone
        self.deadline_type = deadline_type


class StartResourceOperationResponse(_serialization.Model):
    """The response from a start request.

    All required parameters must be populated in order to send to server.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the start request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the start request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the start request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    _validation = {
        "description": {"required": True},
        "type": {"required": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "results": {"key": "results", "type": "[ResourceOperation]"},
    }

    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the operation response. Required.
        :paramtype description: str
        :keyword type: The type of resources used in the start request eg virtual machines. Required.
        :paramtype type: str
        :keyword location: The location of the start request eg westus. Required.
        :paramtype location: str
        :keyword results: The results from the start request if no errors exist.
        :paramtype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
        """
        super().__init__(**kwargs)
        self.description = description
        self.type = type
        self.location = location
        self.results = results


class SubmitDeallocateRequest(_serialization.Model):
    """The deallocate request for resources.

    All required parameters must be populated in order to send to server.

    :ivar schedule: The schedule for the request. Required.
    :vartype schedule: ~azure.mgmt.computeschedule.models.Schedule
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "schedule": {"required": True},
        "execution_parameters": {"required": True},
        "resources": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "schedule": {"key": "schedule", "type": "Schedule"},
        "execution_parameters": {"key": "executionParameters", "type": "ExecutionParameters"},
        "resources": {"key": "resources", "type": "Resources"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(
        self,
        *,
        schedule: "_models.Schedule",
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword schedule: The schedule for the request. Required.
        :paramtype schedule: ~azure.mgmt.computeschedule.models.Schedule
        :keyword execution_parameters: The execution parameters for the request. Required.
        :paramtype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
        :keyword resources: The resources for the request. Required.
        :paramtype resources: ~azure.mgmt.computeschedule.models.Resources
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.schedule = schedule
        self.execution_parameters = execution_parameters
        self.resources = resources
        self.correlationid = correlationid


class SubmitHibernateRequest(_serialization.Model):
    """This is the request for hibernate.

    All required parameters must be populated in order to send to server.

    :ivar schedule: The schedule for the request. Required.
    :vartype schedule: ~azure.mgmt.computeschedule.models.Schedule
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "schedule": {"required": True},
        "execution_parameters": {"required": True},
        "resources": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "schedule": {"key": "schedule", "type": "Schedule"},
        "execution_parameters": {"key": "executionParameters", "type": "ExecutionParameters"},
        "resources": {"key": "resources", "type": "Resources"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(
        self,
        *,
        schedule: "_models.Schedule",
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword schedule: The schedule for the request. Required.
        :paramtype schedule: ~azure.mgmt.computeschedule.models.Schedule
        :keyword execution_parameters: The execution parameters for the request. Required.
        :paramtype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
        :keyword resources: The resources for the request. Required.
        :paramtype resources: ~azure.mgmt.computeschedule.models.Resources
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.schedule = schedule
        self.execution_parameters = execution_parameters
        self.resources = resources
        self.correlationid = correlationid


class SubmitStartRequest(_serialization.Model):
    """This is the request for start.

    All required parameters must be populated in order to send to server.

    :ivar schedule: The schedule for the request. Required.
    :vartype schedule: ~azure.mgmt.computeschedule.models.Schedule
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    _validation = {
        "schedule": {"required": True},
        "execution_parameters": {"required": True},
        "resources": {"required": True},
        "correlationid": {"required": True},
    }

    _attribute_map = {
        "schedule": {"key": "schedule", "type": "Schedule"},
        "execution_parameters": {"key": "executionParameters", "type": "ExecutionParameters"},
        "resources": {"key": "resources", "type": "Resources"},
        "correlationid": {"key": "correlationid", "type": "str"},
    }

    def __init__(
        self,
        *,
        schedule: "_models.Schedule",
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword schedule: The schedule for the request. Required.
        :paramtype schedule: ~azure.mgmt.computeschedule.models.Schedule
        :keyword execution_parameters: The execution parameters for the request. Required.
        :paramtype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
        :keyword resources: The resources for the request. Required.
        :paramtype resources: ~azure.mgmt.computeschedule.models.Resources
        :keyword correlationid: CorrelationId item. Required.
        :paramtype correlationid: str
        """
        super().__init__(**kwargs)
        self.schedule = schedule
        self.execution_parameters = execution_parameters
        self.resources = resources
        self.correlationid = correlationid
