# pylint: disable=line-too-long,useless-suppression,too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Literal, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    from .. import models as _models


class AzStackHCIClusterProperties(_serialization.Model):
    """AzStackHCI cluster properties.

    All required parameters must be populated in order to send to server.

    :ivar cluster_name: Gets or sets the AzStackHCICluster FQDN name. Required.
    :vartype cluster_name: str
    :ivar resource_name: Gets or sets the AzStackHCICluster resource name. Required.
    :vartype resource_name: str
    :ivar storage_account_name: Gets or sets the Storage account name. Required.
    :vartype storage_account_name: str
    :ivar storage_containers: Gets or sets the list of AzStackHCICluster Storage Container.
     Required.
    :vartype storage_containers:
     list[~azure.mgmt.recoveryservicesdatareplication.models.StorageContainerProperties]
    """

    _validation = {
        "cluster_name": {"required": True, "min_length": 1},
        "resource_name": {"required": True, "min_length": 1},
        "storage_account_name": {"required": True, "min_length": 1},
        "storage_containers": {"required": True},
    }

    _attribute_map = {
        "cluster_name": {"key": "clusterName", "type": "str"},
        "resource_name": {"key": "resourceName", "type": "str"},
        "storage_account_name": {"key": "storageAccountName", "type": "str"},
        "storage_containers": {"key": "storageContainers", "type": "[StorageContainerProperties]"},
    }

    def __init__(
        self,
        *,
        cluster_name: str,
        resource_name: str,
        storage_account_name: str,
        storage_containers: List["_models.StorageContainerProperties"],
        **kwargs: Any
    ) -> None:
        """
        :keyword cluster_name: Gets or sets the AzStackHCICluster FQDN name. Required.
        :paramtype cluster_name: str
        :keyword resource_name: Gets or sets the AzStackHCICluster resource name. Required.
        :paramtype resource_name: str
        :keyword storage_account_name: Gets or sets the Storage account name. Required.
        :paramtype storage_account_name: str
        :keyword storage_containers: Gets or sets the list of AzStackHCICluster Storage Container.
         Required.
        :paramtype storage_containers:
         list[~azure.mgmt.recoveryservicesdatareplication.models.StorageContainerProperties]
        """
        super().__init__(**kwargs)
        self.cluster_name = cluster_name
        self.resource_name = resource_name
        self.storage_account_name = storage_account_name
        self.storage_containers = storage_containers


class FabricModelCustomProperties(_serialization.Model):
    """Fabric model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    AzStackHCIFabricModelCustomProperties, HyperVMigrateFabricModelCustomProperties,
    VMwareMigrateFabricModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for FabricModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "AzStackHCI": "AzStackHCIFabricModelCustomProperties",
            "HyperVMigrate": "HyperVMigrateFabricModelCustomProperties",
            "VMwareMigrate": "VMwareMigrateFabricModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class AzStackHCIFabricModelCustomProperties(FabricModelCustomProperties):
    """AzStackHCI fabric model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for FabricModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar az_stack_hci_site_id: Gets or sets the ARM Id of the AzStackHCI site. Required.
    :vartype az_stack_hci_site_id: str
    :ivar appliance_name: Gets or sets the Appliance name.
    :vartype appliance_name: list[str]
    :ivar cluster: AzStackHCI cluster properties. Required.
    :vartype cluster:
     ~azure.mgmt.recoveryservicesdatareplication.models.AzStackHCIClusterProperties
    :ivar fabric_resource_id: Gets or sets the fabric resource Id.
    :vartype fabric_resource_id: str
    :ivar fabric_container_id: Gets or sets the fabric container Id.
    :vartype fabric_container_id: str
    :ivar migration_solution_id: Gets or sets the Migration solution ARM Id. Required.
    :vartype migration_solution_id: str
    :ivar migration_hub_uri: Gets or sets the migration hub Uri.
    :vartype migration_hub_uri: str
    """

    _validation = {
        "instance_type": {"required": True},
        "az_stack_hci_site_id": {"required": True},
        "appliance_name": {"readonly": True},
        "cluster": {"required": True},
        "fabric_resource_id": {"readonly": True},
        "fabric_container_id": {"readonly": True},
        "migration_solution_id": {"required": True},
        "migration_hub_uri": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "az_stack_hci_site_id": {"key": "azStackHciSiteId", "type": "str"},
        "appliance_name": {"key": "applianceName", "type": "[str]"},
        "cluster": {"key": "cluster", "type": "AzStackHCIClusterProperties"},
        "fabric_resource_id": {"key": "fabricResourceId", "type": "str"},
        "fabric_container_id": {"key": "fabricContainerId", "type": "str"},
        "migration_solution_id": {"key": "migrationSolutionId", "type": "str"},
        "migration_hub_uri": {"key": "migrationHubUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        az_stack_hci_site_id: str,
        cluster: "_models.AzStackHCIClusterProperties",
        migration_solution_id: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword az_stack_hci_site_id: Gets or sets the ARM Id of the AzStackHCI site. Required.
        :paramtype az_stack_hci_site_id: str
        :keyword cluster: AzStackHCI cluster properties. Required.
        :paramtype cluster:
         ~azure.mgmt.recoveryservicesdatareplication.models.AzStackHCIClusterProperties
        :keyword migration_solution_id: Gets or sets the Migration solution ARM Id. Required.
        :paramtype migration_solution_id: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "AzStackHCI"
        self.az_stack_hci_site_id = az_stack_hci_site_id
        self.appliance_name: Optional[List[str]] = None
        self.cluster = cluster
        self.fabric_resource_id: Optional[str] = None
        self.fabric_container_id: Optional[str] = None
        self.migration_solution_id = migration_solution_id
        self.migration_hub_uri: Optional[str] = None


class CheckNameAvailabilityModel(_serialization.Model):
    """Check name availability model.

    :ivar name: Gets or sets the resource name.
    :vartype name: str
    :ivar type: Gets or sets the resource type.
    :vartype type: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, type: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: Gets or sets the resource name.
        :paramtype name: str
        :keyword type: Gets or sets the resource type.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.type = type


class CheckNameAvailabilityResponseModel(_serialization.Model):
    """Check name availability response model.

    :ivar name_available: Gets or sets a value indicating whether resource name is available or
     not.
    :vartype name_available: bool
    :ivar reason: Gets or sets the reason for resource name unavailability.
    :vartype reason: str
    :ivar message: Gets or sets the message for resource name unavailability.
    :vartype message: str
    """

    _attribute_map = {
        "name_available": {"key": "nameAvailable", "type": "bool"},
        "reason": {"key": "reason", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(
        self,
        *,
        name_available: Optional[bool] = None,
        reason: Optional[str] = None,
        message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name_available: Gets or sets a value indicating whether resource name is available or
         not.
        :paramtype name_available: bool
        :keyword reason: Gets or sets the reason for resource name unavailability.
        :paramtype reason: str
        :keyword message: Gets or sets the message for resource name unavailability.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.name_available = name_available
        self.reason = reason
        self.message = message


class ConnectionDetails(_serialization.Model):
    """Private endpoint connection details at member level.

    :ivar id: Gets or sets id.
    :vartype id: str
    :ivar private_ip_address: Gets or sets private IP address.
    :vartype private_ip_address: str
    :ivar link_identifier: Gets or sets link identifier.
    :vartype link_identifier: str
    :ivar group_id: Gets or sets group id.
    :vartype group_id: str
    :ivar member_name: Gets or sets member name.
    :vartype member_name: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "private_ip_address": {"key": "privateIpAddress", "type": "str"},
        "link_identifier": {"key": "linkIdentifier", "type": "str"},
        "group_id": {"key": "groupId", "type": "str"},
        "member_name": {"key": "memberName", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        private_ip_address: Optional[str] = None,
        link_identifier: Optional[str] = None,
        group_id: Optional[str] = None,
        member_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets id.
        :paramtype id: str
        :keyword private_ip_address: Gets or sets private IP address.
        :paramtype private_ip_address: str
        :keyword link_identifier: Gets or sets link identifier.
        :paramtype link_identifier: str
        :keyword group_id: Gets or sets group id.
        :paramtype group_id: str
        :keyword member_name: Gets or sets member name.
        :paramtype member_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.private_ip_address = private_ip_address
        self.link_identifier = link_identifier
        self.group_id = group_id
        self.member_name = member_name


class DeploymentPreflightModel(_serialization.Model):
    """Deployment preflight model.

    :ivar resources: Gets or sets the list of resources.
    :vartype resources:
     list[~azure.mgmt.recoveryservicesdatareplication.models.DeploymentPreflightResource]
    """

    _attribute_map = {
        "resources": {"key": "resources", "type": "[DeploymentPreflightResource]"},
    }

    def __init__(
        self, *, resources: Optional[List["_models.DeploymentPreflightResource"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword resources: Gets or sets the list of resources.
        :paramtype resources:
         list[~azure.mgmt.recoveryservicesdatareplication.models.DeploymentPreflightResource]
        """
        super().__init__(**kwargs)
        self.resources = resources


class DeploymentPreflightResource(_serialization.Model):
    """Deployment preflight resource.

    :ivar name: Gets or sets the resource name.
    :vartype name: str
    :ivar type: Gets or sets the resource type.
    :vartype type: str
    :ivar location: Gets or sets the location of the resource.
    :vartype location: str
    :ivar api_version: Gets or sets the Api version.
    :vartype api_version: str
    :ivar properties: Gets or sets the properties of the resource.
    :vartype properties: any
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "api_version": {"key": "apiVersion", "type": "str"},
        "properties": {"key": "properties", "type": "object"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        type: Optional[str] = None,
        location: Optional[str] = None,
        api_version: Optional[str] = None,
        properties: Optional[Any] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets the resource name.
        :paramtype name: str
        :keyword type: Gets or sets the resource type.
        :paramtype type: str
        :keyword location: Gets or sets the location of the resource.
        :paramtype location: str
        :keyword api_version: Gets or sets the Api version.
        :paramtype api_version: str
        :keyword properties: Gets or sets the properties of the resource.
        :paramtype properties: any
        """
        super().__init__(**kwargs)
        self.name = name
        self.type = type
        self.location = location
        self.api_version = api_version
        self.properties = properties


class DiskControllerInputs(_serialization.Model):
    """Disk controller.

    All required parameters must be populated in order to send to server.

    :ivar controller_name: Gets or sets the controller name (IDE,SCSI). Required.
    :vartype controller_name: str
    :ivar controller_id: Gets or sets the controller ID. Required.
    :vartype controller_id: int
    :ivar controller_location: Gets or sets the controller Location. Required.
    :vartype controller_location: int
    """

    _validation = {
        "controller_name": {"required": True, "min_length": 1},
        "controller_id": {"required": True},
        "controller_location": {"required": True},
    }

    _attribute_map = {
        "controller_name": {"key": "controllerName", "type": "str"},
        "controller_id": {"key": "controllerId", "type": "int"},
        "controller_location": {"key": "controllerLocation", "type": "int"},
    }

    def __init__(self, *, controller_name: str, controller_id: int, controller_location: int, **kwargs: Any) -> None:
        """
        :keyword controller_name: Gets or sets the controller name (IDE,SCSI). Required.
        :paramtype controller_name: str
        :keyword controller_id: Gets or sets the controller ID. Required.
        :paramtype controller_id: int
        :keyword controller_location: Gets or sets the controller Location. Required.
        :paramtype controller_location: int
        """
        super().__init__(**kwargs)
        self.controller_name = controller_name
        self.controller_id = controller_id
        self.controller_location = controller_location


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.type: Optional[str] = None
        self.system_data: Optional["_models.SystemData"] = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    """


class EmailConfigurationModel(ProxyResource):
    """Email configuration model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.EmailConfigurationModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "EmailConfigurationModelProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.EmailConfigurationModelProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.EmailConfigurationModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class EmailConfigurationModelListResult(_serialization.Model):
    """The response of a EmailConfigurationModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The EmailConfigurationModel items on this page. Required.
    :vartype value:
     list[~azure.mgmt.recoveryservicesdatareplication.models.EmailConfigurationModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[EmailConfigurationModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.EmailConfigurationModel"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The EmailConfigurationModel items on this page. Required.
        :paramtype value:
         list[~azure.mgmt.recoveryservicesdatareplication.models.EmailConfigurationModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class EmailConfigurationModelProperties(_serialization.Model):
    """Email configuration model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar send_to_owners: Gets or sets a value indicating whether to send email to subscription
     administrator. Required.
    :vartype send_to_owners: bool
    :ivar custom_email_addresses: Gets or sets the custom email address for sending emails.
    :vartype custom_email_addresses: list[str]
    :ivar locale: Gets or sets the locale for the email notification.
    :vartype locale: str
    :ivar provisioning_state: Gets or sets the provisioning state of the email configuration. Known
     values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    """

    _validation = {
        "send_to_owners": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "send_to_owners": {"key": "sendToOwners", "type": "bool"},
        "custom_email_addresses": {"key": "customEmailAddresses", "type": "[str]"},
        "locale": {"key": "locale", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        send_to_owners: bool,
        custom_email_addresses: Optional[List[str]] = None,
        locale: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword send_to_owners: Gets or sets a value indicating whether to send email to subscription
         administrator. Required.
        :paramtype send_to_owners: bool
        :keyword custom_email_addresses: Gets or sets the custom email address for sending emails.
        :paramtype custom_email_addresses: list[str]
        :keyword locale: Gets or sets the locale for the email notification.
        :paramtype locale: str
        """
        super().__init__(**kwargs)
        self.send_to_owners = send_to_owners
        self.custom_email_addresses = custom_email_addresses
        self.locale = locale
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: Optional[str] = None
        self.info: Optional[JSON] = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.recoveryservicesdatareplication.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info:
     list[~azure.mgmt.recoveryservicesdatareplication.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code: Optional[str] = None
        self.message: Optional[str] = None
        self.target: Optional[str] = None
        self.details: Optional[List["_models.ErrorDetail"]] = None
        self.additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = None


class ErrorModel(_serialization.Model):
    """Error model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Gets or sets the error code.
    :vartype code: str
    :ivar type: Gets or sets the error type.
    :vartype type: str
    :ivar severity: Gets or sets the error severity.
    :vartype severity: str
    :ivar creation_time: Gets or sets the creation time of error.
    :vartype creation_time: ~datetime.datetime
    :ivar message: Gets or sets the error message.
    :vartype message: str
    :ivar causes: Gets or sets the possible causes of error.
    :vartype causes: str
    :ivar recommendation: Gets or sets the recommended action to resolve error.
    :vartype recommendation: str
    """

    _validation = {
        "code": {"readonly": True},
        "type": {"readonly": True},
        "severity": {"readonly": True},
        "creation_time": {"readonly": True},
        "message": {"readonly": True},
        "causes": {"readonly": True},
        "recommendation": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "message": {"key": "message", "type": "str"},
        "causes": {"key": "causes", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code: Optional[str] = None
        self.type: Optional[str] = None
        self.severity: Optional[str] = None
        self.creation_time: Optional[datetime.datetime] = None
        self.message: Optional[str] = None
        self.causes: Optional[str] = None
        self.recommendation: Optional[str] = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.recoveryservicesdatareplication.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.recoveryservicesdatareplication.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class EventModel(ProxyResource):
    """Event model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.EventModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "EventModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.EventModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.EventModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class EventModelCustomProperties(_serialization.Model):
    """Event model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIEventModelCustomProperties, VMwareToAzStackHCIEventModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for EventModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIEventModelCustomProperties",
            "VMwareToAzStackHCI": "VMwareToAzStackHCIEventModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class EventModelListResult(_serialization.Model):
    """The response of a EventModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The EventModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.EventModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[EventModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.EventModel"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The EventModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.EventModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class EventModelProperties(_serialization.Model):
    """Event model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar resource_type: Gets or sets the resource type.
    :vartype resource_type: str
    :ivar resource_name: Gets or sets the resource name.
    :vartype resource_name: str
    :ivar event_type: Gets or sets the event type.
    :vartype event_type: str
    :ivar event_name: Gets or sets the event name.
    :vartype event_name: str
    :ivar time_of_occurrence: Gets or sets the time at which the event occurred at source.
    :vartype time_of_occurrence: ~datetime.datetime
    :ivar severity: Gets or sets the event severity.
    :vartype severity: str
    :ivar description: Gets or sets the event description.
    :vartype description: str
    :ivar correlation_id: Gets or sets the event correlation Id.
    :vartype correlation_id: str
    :ivar health_errors: Gets or sets the errors associated with this event.
    :vartype health_errors:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HealthErrorModel]
    :ivar custom_properties: Event model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.EventModelCustomProperties
    :ivar provisioning_state: Gets or sets the provisioning state of the event. Known values are:
     "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    """

    _validation = {
        "resource_type": {"readonly": True},
        "resource_name": {"readonly": True},
        "event_type": {"readonly": True},
        "event_name": {"readonly": True},
        "time_of_occurrence": {"readonly": True},
        "severity": {"readonly": True},
        "description": {"readonly": True},
        "correlation_id": {"readonly": True},
        "health_errors": {"readonly": True},
        "custom_properties": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "resource_name": {"key": "resourceName", "type": "str"},
        "event_type": {"key": "eventType", "type": "str"},
        "event_name": {"key": "eventName", "type": "str"},
        "time_of_occurrence": {"key": "timeOfOccurrence", "type": "iso-8601"},
        "severity": {"key": "severity", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "correlation_id": {"key": "correlationId", "type": "str"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "EventModelCustomProperties"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, custom_properties: "_models.EventModelCustomProperties", **kwargs: Any) -> None:
        """
        :keyword custom_properties: Event model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.EventModelCustomProperties
        """
        super().__init__(**kwargs)
        self.resource_type: Optional[str] = None
        self.resource_name: Optional[str] = None
        self.event_type: Optional[str] = None
        self.event_name: Optional[str] = None
        self.time_of_occurrence: Optional[datetime.datetime] = None
        self.severity: Optional[str] = None
        self.description: Optional[str] = None
        self.correlation_id: Optional[str] = None
        self.health_errors: Optional[List["_models.HealthErrorModel"]] = None
        self.custom_properties = custom_properties
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None


class FabricAgentModel(ProxyResource):
    """Fabric agent model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.FabricAgentModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "FabricAgentModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.FabricAgentModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.FabricAgentModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class FabricAgentModelCustomProperties(_serialization.Model):
    """Fabric agent model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    VMwareFabricAgentModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for FabricAgentModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {"instance_type": {"VMware": "VMwareFabricAgentModelCustomProperties"}}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class FabricAgentModelListResult(_serialization.Model):
    """The response of a FabricAgentModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The FabricAgentModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.FabricAgentModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[FabricAgentModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.FabricAgentModel"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The FabricAgentModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.FabricAgentModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class FabricAgentModelProperties(_serialization.Model):
    """Fabric agent model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar correlation_id: Gets or sets the fabric agent correlation Id.
    :vartype correlation_id: str
    :ivar machine_id: Gets or sets the machine Id where fabric agent is running. Required.
    :vartype machine_id: str
    :ivar machine_name: Gets or sets the machine name where fabric agent is running. Required.
    :vartype machine_name: str
    :ivar authentication_identity: Identity model. Required.
    :vartype authentication_identity:
     ~azure.mgmt.recoveryservicesdatareplication.models.IdentityModel
    :ivar resource_access_identity: Identity model. Required.
    :vartype resource_access_identity:
     ~azure.mgmt.recoveryservicesdatareplication.models.IdentityModel
    :ivar is_responsive: Gets or sets a value indicating whether the fabric agent is responsive.
    :vartype is_responsive: bool
    :ivar last_heartbeat: Gets or sets the time when last heartbeat was sent by the fabric agent.
    :vartype last_heartbeat: ~datetime.datetime
    :ivar version_number: Gets or sets the fabric agent version.
    :vartype version_number: str
    :ivar provisioning_state: Gets or sets the provisioning state of the fabric agent. Known values
     are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HealthErrorModel]
    :ivar custom_properties: Fabric agent model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.FabricAgentModelCustomProperties
    """

    _validation = {
        "correlation_id": {"readonly": True},
        "machine_id": {"required": True, "min_length": 1},
        "machine_name": {"required": True, "min_length": 1},
        "authentication_identity": {"required": True},
        "resource_access_identity": {"required": True},
        "is_responsive": {"readonly": True},
        "last_heartbeat": {"readonly": True},
        "version_number": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "health_errors": {"readonly": True},
        "custom_properties": {"required": True},
    }

    _attribute_map = {
        "correlation_id": {"key": "correlationId", "type": "str"},
        "machine_id": {"key": "machineId", "type": "str"},
        "machine_name": {"key": "machineName", "type": "str"},
        "authentication_identity": {"key": "authenticationIdentity", "type": "IdentityModel"},
        "resource_access_identity": {"key": "resourceAccessIdentity", "type": "IdentityModel"},
        "is_responsive": {"key": "isResponsive", "type": "bool"},
        "last_heartbeat": {"key": "lastHeartbeat", "type": "iso-8601"},
        "version_number": {"key": "versionNumber", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "FabricAgentModelCustomProperties"},
    }

    def __init__(
        self,
        *,
        machine_id: str,
        machine_name: str,
        authentication_identity: "_models.IdentityModel",
        resource_access_identity: "_models.IdentityModel",
        custom_properties: "_models.FabricAgentModelCustomProperties",
        **kwargs: Any
    ) -> None:
        """
        :keyword machine_id: Gets or sets the machine Id where fabric agent is running. Required.
        :paramtype machine_id: str
        :keyword machine_name: Gets or sets the machine name where fabric agent is running. Required.
        :paramtype machine_name: str
        :keyword authentication_identity: Identity model. Required.
        :paramtype authentication_identity:
         ~azure.mgmt.recoveryservicesdatareplication.models.IdentityModel
        :keyword resource_access_identity: Identity model. Required.
        :paramtype resource_access_identity:
         ~azure.mgmt.recoveryservicesdatareplication.models.IdentityModel
        :keyword custom_properties: Fabric agent model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.FabricAgentModelCustomProperties
        """
        super().__init__(**kwargs)
        self.correlation_id: Optional[str] = None
        self.machine_id = machine_id
        self.machine_name = machine_name
        self.authentication_identity = authentication_identity
        self.resource_access_identity = resource_access_identity
        self.is_responsive: Optional[bool] = None
        self.last_heartbeat: Optional[datetime.datetime] = None
        self.version_number: Optional[str] = None
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.health_errors: Optional[List["_models.HealthErrorModel"]] = None
        self.custom_properties = custom_properties


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class FabricModel(TrackedResource):
    """Fabric model.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.FabricModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "FabricModelProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.FabricModelProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.FabricModelProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class FabricModelListResult(_serialization.Model):
    """The response of a FabricModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The FabricModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.FabricModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[FabricModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.FabricModel"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The FabricModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.FabricModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class FabricModelProperties(_serialization.Model):
    """Fabric model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar provisioning_state: Gets or sets the provisioning state of the fabric. Known values are:
     "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar service_endpoint: Gets or sets the service endpoint.
    :vartype service_endpoint: str
    :ivar service_resource_id: Gets or sets the service resource Id.
    :vartype service_resource_id: str
    :ivar health: Gets or sets the fabric health. Known values are: "Normal", "Warning", and
     "Critical".
    :vartype health: str or ~azure.mgmt.recoveryservicesdatareplication.models.HealthStatus
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HealthErrorModel]
    :ivar custom_properties: Fabric model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.FabricModelCustomProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "service_endpoint": {"readonly": True},
        "service_resource_id": {"readonly": True},
        "health": {"readonly": True},
        "health_errors": {"readonly": True},
        "custom_properties": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "service_endpoint": {"key": "serviceEndpoint", "type": "str"},
        "service_resource_id": {"key": "serviceResourceId", "type": "str"},
        "health": {"key": "health", "type": "str"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "FabricModelCustomProperties"},
    }

    def __init__(self, *, custom_properties: "_models.FabricModelCustomProperties", **kwargs: Any) -> None:
        """
        :keyword custom_properties: Fabric model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.FabricModelCustomProperties
        """
        super().__init__(**kwargs)
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.service_endpoint: Optional[str] = None
        self.service_resource_id: Optional[str] = None
        self.health: Optional[Union[str, "_models.HealthStatus"]] = None
        self.health_errors: Optional[List["_models.HealthErrorModel"]] = None
        self.custom_properties = custom_properties


class FabricModelUpdate(_serialization.Model):
    """Fabric model update.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: Fabric model properties.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.FabricModelProperties
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "FabricModelProperties"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.FabricModelProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: Fabric model properties.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.FabricModelProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.type: Optional[str] = None
        self.system_data: Optional["_models.SystemData"] = None


class JobModelCustomProperties(_serialization.Model):
    """Job model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    FailoverJobModelCustomProperties, TestFailoverCleanupJobModelCustomProperties,
    TestFailoverJobModelCustomProperties

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for JobModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details:
     ~azure.mgmt.recoveryservicesdatareplication.models.JobModelCustomPropertiesAffectedObjectDetails
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {
            "key": "affectedObjectDetails",
            "type": "JobModelCustomPropertiesAffectedObjectDetails",
        },
    }

    _subtype_map = {
        "instance_type": {
            "FailoverJobDetails": "FailoverJobModelCustomProperties",
            "TestFailoverCleanupJobDetails": "TestFailoverCleanupJobModelCustomProperties",
            "TestFailoverJobDetails": "TestFailoverJobModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None
        self.affected_object_details: Optional["_models.JobModelCustomPropertiesAffectedObjectDetails"] = None


class FailoverJobModelCustomProperties(JobModelCustomProperties):
    """Failover job model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for JobModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details:
     ~azure.mgmt.recoveryservicesdatareplication.models.JobModelCustomPropertiesAffectedObjectDetails
    :ivar protected_item_details: Gets or sets the failed over protected item details.
    :vartype protected_item_details:
     list[~azure.mgmt.recoveryservicesdatareplication.models.FailoverProtectedItemProperties]
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "protected_item_details": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {
            "key": "affectedObjectDetails",
            "type": "JobModelCustomPropertiesAffectedObjectDetails",
        },
        "protected_item_details": {"key": "protectedItemDetails", "type": "[FailoverProtectedItemProperties]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "FailoverJobDetails"
        self.protected_item_details: Optional[List["_models.FailoverProtectedItemProperties"]] = None


class FailoverProtectedItemProperties(_serialization.Model):
    """Failover properties of the protected item.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar protected_item_name: Gets or sets the protected item name.
    :vartype protected_item_name: str
    :ivar vm_name: Gets or sets the VM name.
    :vartype vm_name: str
    :ivar test_vm_name: Gets or sets the test VM name.
    :vartype test_vm_name: str
    :ivar recovery_point_id: Gets or sets the recovery point Id.
    :vartype recovery_point_id: str
    :ivar recovery_point_time: Gets or sets the recovery point time.
    :vartype recovery_point_time: ~datetime.datetime
    :ivar network_name: Gets or sets the network name.
    :vartype network_name: str
    :ivar subnet: Gets or sets the network subnet.
    :vartype subnet: str
    """

    _validation = {
        "protected_item_name": {"readonly": True},
        "vm_name": {"readonly": True},
        "test_vm_name": {"readonly": True},
        "recovery_point_id": {"readonly": True},
        "recovery_point_time": {"readonly": True},
        "network_name": {"readonly": True},
        "subnet": {"readonly": True},
    }

    _attribute_map = {
        "protected_item_name": {"key": "protectedItemName", "type": "str"},
        "vm_name": {"key": "vmName", "type": "str"},
        "test_vm_name": {"key": "testVmName", "type": "str"},
        "recovery_point_id": {"key": "recoveryPointId", "type": "str"},
        "recovery_point_time": {"key": "recoveryPointTime", "type": "iso-8601"},
        "network_name": {"key": "networkName", "type": "str"},
        "subnet": {"key": "subnet", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.protected_item_name: Optional[str] = None
        self.vm_name: Optional[str] = None
        self.test_vm_name: Optional[str] = None
        self.recovery_point_id: Optional[str] = None
        self.recovery_point_time: Optional[datetime.datetime] = None
        self.network_name: Optional[str] = None
        self.subnet: Optional[str] = None


class GroupConnectivityInformation(_serialization.Model):
    """Represents of a connection's group information.

    :ivar group_id: Gets or sets group id.
    :vartype group_id: str
    :ivar member_name: Gets or sets member name.
    :vartype member_name: str
    :ivar customer_visible_fqdns: Gets or sets customer visible FQDNs.
    :vartype customer_visible_fqdns: list[str]
    :ivar internal_fqdn: Gets or sets Internal Fqdn.
    :vartype internal_fqdn: str
    :ivar redirect_map_id: Gets or sets the redirect map id.
    :vartype redirect_map_id: str
    :ivar private_link_service_arm_region: Gets or sets the private link service arm region.
    :vartype private_link_service_arm_region: str
    """

    _attribute_map = {
        "group_id": {"key": "groupId", "type": "str"},
        "member_name": {"key": "memberName", "type": "str"},
        "customer_visible_fqdns": {"key": "customerVisibleFqdns", "type": "[str]"},
        "internal_fqdn": {"key": "internalFqdn", "type": "str"},
        "redirect_map_id": {"key": "redirectMapId", "type": "str"},
        "private_link_service_arm_region": {"key": "privateLinkServiceArmRegion", "type": "str"},
    }

    def __init__(
        self,
        *,
        group_id: Optional[str] = None,
        member_name: Optional[str] = None,
        customer_visible_fqdns: Optional[List[str]] = None,
        internal_fqdn: Optional[str] = None,
        redirect_map_id: Optional[str] = None,
        private_link_service_arm_region: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword group_id: Gets or sets group id.
        :paramtype group_id: str
        :keyword member_name: Gets or sets member name.
        :paramtype member_name: str
        :keyword customer_visible_fqdns: Gets or sets customer visible FQDNs.
        :paramtype customer_visible_fqdns: list[str]
        :keyword internal_fqdn: Gets or sets Internal Fqdn.
        :paramtype internal_fqdn: str
        :keyword redirect_map_id: Gets or sets the redirect map id.
        :paramtype redirect_map_id: str
        :keyword private_link_service_arm_region: Gets or sets the private link service arm region.
        :paramtype private_link_service_arm_region: str
        """
        super().__init__(**kwargs)
        self.group_id = group_id
        self.member_name = member_name
        self.customer_visible_fqdns = customer_visible_fqdns
        self.internal_fqdn = internal_fqdn
        self.redirect_map_id = redirect_map_id
        self.private_link_service_arm_region = private_link_service_arm_region


class HealthErrorModel(_serialization.Model):
    """Health error model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar affected_resource_type: Gets or sets the type of affected resource type.
    :vartype affected_resource_type: str
    :ivar affected_resource_correlation_ids: Gets or sets the list of affected resource correlation
     Ids. This can be used to uniquely identify the count of items affected by a specific category
     and severity as well as count of item affected by an specific issue.
    :vartype affected_resource_correlation_ids: list[str]
    :ivar child_errors: Gets or sets a list of child health errors associated with this error.
    :vartype child_errors:
     list[~azure.mgmt.recoveryservicesdatareplication.models.InnerHealthErrorModel]
    :ivar code: Gets or sets the error code.
    :vartype code: str
    :ivar health_category: Gets or sets the health category.
    :vartype health_category: str
    :ivar category: Gets or sets the error category.
    :vartype category: str
    :ivar severity: Gets or sets the error severity.
    :vartype severity: str
    :ivar source: Gets or sets the error source.
    :vartype source: str
    :ivar creation_time: Gets or sets the error creation time.
    :vartype creation_time: ~datetime.datetime
    :ivar is_customer_resolvable: Gets or sets a value indicating whether the error is customer
     resolvable.
    :vartype is_customer_resolvable: bool
    :ivar summary: Gets or sets the error summary.
    :vartype summary: str
    :ivar message: Gets or sets the error message.
    :vartype message: str
    :ivar causes: Gets or sets possible causes of the error.
    :vartype causes: str
    :ivar recommendation: Gets or sets recommended action to resolve the error.
    :vartype recommendation: str
    """

    _validation = {
        "code": {"readonly": True},
        "health_category": {"readonly": True},
        "category": {"readonly": True},
        "severity": {"readonly": True},
        "source": {"readonly": True},
        "creation_time": {"readonly": True},
        "is_customer_resolvable": {"readonly": True},
        "summary": {"readonly": True},
        "message": {"readonly": True},
        "causes": {"readonly": True},
        "recommendation": {"readonly": True},
    }

    _attribute_map = {
        "affected_resource_type": {"key": "affectedResourceType", "type": "str"},
        "affected_resource_correlation_ids": {"key": "affectedResourceCorrelationIds", "type": "[str]"},
        "child_errors": {"key": "childErrors", "type": "[InnerHealthErrorModel]"},
        "code": {"key": "code", "type": "str"},
        "health_category": {"key": "healthCategory", "type": "str"},
        "category": {"key": "category", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "is_customer_resolvable": {"key": "isCustomerResolvable", "type": "bool"},
        "summary": {"key": "summary", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "causes": {"key": "causes", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
    }

    def __init__(
        self,
        *,
        affected_resource_type: Optional[str] = None,
        affected_resource_correlation_ids: Optional[List[str]] = None,
        child_errors: Optional[List["_models.InnerHealthErrorModel"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword affected_resource_type: Gets or sets the type of affected resource type.
        :paramtype affected_resource_type: str
        :keyword affected_resource_correlation_ids: Gets or sets the list of affected resource
         correlation Ids. This can be used to uniquely identify the count of items affected by a
         specific category and severity as well as count of item affected by an specific issue.
        :paramtype affected_resource_correlation_ids: list[str]
        :keyword child_errors: Gets or sets a list of child health errors associated with this error.
        :paramtype child_errors:
         list[~azure.mgmt.recoveryservicesdatareplication.models.InnerHealthErrorModel]
        """
        super().__init__(**kwargs)
        self.affected_resource_type = affected_resource_type
        self.affected_resource_correlation_ids = affected_resource_correlation_ids
        self.child_errors = child_errors
        self.code: Optional[str] = None
        self.health_category: Optional[str] = None
        self.category: Optional[str] = None
        self.severity: Optional[str] = None
        self.source: Optional[str] = None
        self.creation_time: Optional[datetime.datetime] = None
        self.is_customer_resolvable: Optional[bool] = None
        self.summary: Optional[str] = None
        self.message: Optional[str] = None
        self.causes: Optional[str] = None
        self.recommendation: Optional[str] = None


class HyperVMigrateFabricModelCustomProperties(FabricModelCustomProperties):
    """HyperV migrate fabric model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for FabricModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar hyper_v_site_id: Gets or sets the ARM Id of the HyperV site. Required.
    :vartype hyper_v_site_id: str
    :ivar fabric_resource_id: Gets or sets the fabric resource Id.
    :vartype fabric_resource_id: str
    :ivar fabric_container_id: Gets or sets the fabric container Id.
    :vartype fabric_container_id: str
    :ivar migration_solution_id: Gets or sets the migration solution ARM Id. Required.
    :vartype migration_solution_id: str
    :ivar migration_hub_uri: Gets or sets the migration hub Uri.
    :vartype migration_hub_uri: str
    """

    _validation = {
        "instance_type": {"required": True},
        "hyper_v_site_id": {"required": True},
        "fabric_resource_id": {"readonly": True},
        "fabric_container_id": {"readonly": True},
        "migration_solution_id": {"required": True},
        "migration_hub_uri": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "hyper_v_site_id": {"key": "hyperVSiteId", "type": "str"},
        "fabric_resource_id": {"key": "fabricResourceId", "type": "str"},
        "fabric_container_id": {"key": "fabricContainerId", "type": "str"},
        "migration_solution_id": {"key": "migrationSolutionId", "type": "str"},
        "migration_hub_uri": {"key": "migrationHubUri", "type": "str"},
    }

    def __init__(self, *, hyper_v_site_id: str, migration_solution_id: str, **kwargs: Any) -> None:
        """
        :keyword hyper_v_site_id: Gets or sets the ARM Id of the HyperV site. Required.
        :paramtype hyper_v_site_id: str
        :keyword migration_solution_id: Gets or sets the migration solution ARM Id. Required.
        :paramtype migration_solution_id: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVMigrate"
        self.hyper_v_site_id = hyper_v_site_id
        self.fabric_resource_id: Optional[str] = None
        self.fabric_container_id: Optional[str] = None
        self.migration_solution_id = migration_solution_id
        self.migration_hub_uri: Optional[str] = None


class HyperVToAzStackHCIDiskInput(_serialization.Model):
    """HyperVToAzStack disk input.

    All required parameters must be populated in order to send to server.

    :ivar disk_id: Gets or sets the disk Id. Required.
    :vartype disk_id: str
    :ivar storage_container_id: Gets or sets the target storage account ARM Id.
    :vartype storage_container_id: str
    :ivar is_dynamic: Gets or sets a value indicating whether dynamic sizing is enabled on the
     virtual hard disk.
    :vartype is_dynamic: bool
    :ivar disk_size_gb: Gets or sets the disk size in GB. Required.
    :vartype disk_size_gb: int
    :ivar disk_file_format: Gets or sets the type of the virtual hard disk, vhd or vhdx. Required.
    :vartype disk_file_format: str
    :ivar is_os_disk: Gets or sets a value indicating whether disk is os disk. Required.
    :vartype is_os_disk: bool
    :ivar disk_block_size: Gets or sets a value of disk block size.
    :vartype disk_block_size: int
    :ivar disk_logical_sector_size: Gets or sets a value of disk logical sector size.
    :vartype disk_logical_sector_size: int
    :ivar disk_physical_sector_size: Gets or sets a value of disk physical sector size.
    :vartype disk_physical_sector_size: int
    :ivar disk_identifier: Gets or sets a value of disk identifier.
    :vartype disk_identifier: str
    :ivar disk_controller: Disk controller.
    :vartype disk_controller:
     ~azure.mgmt.recoveryservicesdatareplication.models.DiskControllerInputs
    """

    _validation = {
        "disk_id": {"required": True, "min_length": 1},
        "disk_size_gb": {"required": True},
        "disk_file_format": {"required": True, "min_length": 1},
        "is_os_disk": {"required": True},
    }

    _attribute_map = {
        "disk_id": {"key": "diskId", "type": "str"},
        "storage_container_id": {"key": "storageContainerId", "type": "str"},
        "is_dynamic": {"key": "isDynamic", "type": "bool"},
        "disk_size_gb": {"key": "diskSizeGB", "type": "int"},
        "disk_file_format": {"key": "diskFileFormat", "type": "str"},
        "is_os_disk": {"key": "isOsDisk", "type": "bool"},
        "disk_block_size": {"key": "diskBlockSize", "type": "int"},
        "disk_logical_sector_size": {"key": "diskLogicalSectorSize", "type": "int"},
        "disk_physical_sector_size": {"key": "diskPhysicalSectorSize", "type": "int"},
        "disk_identifier": {"key": "diskIdentifier", "type": "str"},
        "disk_controller": {"key": "diskController", "type": "DiskControllerInputs"},
    }

    def __init__(
        self,
        *,
        disk_id: str,
        disk_size_gb: int,
        disk_file_format: str,
        is_os_disk: bool,
        storage_container_id: Optional[str] = None,
        is_dynamic: Optional[bool] = None,
        disk_block_size: Optional[int] = None,
        disk_logical_sector_size: Optional[int] = None,
        disk_physical_sector_size: Optional[int] = None,
        disk_identifier: Optional[str] = None,
        disk_controller: Optional["_models.DiskControllerInputs"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword disk_id: Gets or sets the disk Id. Required.
        :paramtype disk_id: str
        :keyword storage_container_id: Gets or sets the target storage account ARM Id.
        :paramtype storage_container_id: str
        :keyword is_dynamic: Gets or sets a value indicating whether dynamic sizing is enabled on the
         virtual hard disk.
        :paramtype is_dynamic: bool
        :keyword disk_size_gb: Gets or sets the disk size in GB. Required.
        :paramtype disk_size_gb: int
        :keyword disk_file_format: Gets or sets the type of the virtual hard disk, vhd or vhdx.
         Required.
        :paramtype disk_file_format: str
        :keyword is_os_disk: Gets or sets a value indicating whether disk is os disk. Required.
        :paramtype is_os_disk: bool
        :keyword disk_block_size: Gets or sets a value of disk block size.
        :paramtype disk_block_size: int
        :keyword disk_logical_sector_size: Gets or sets a value of disk logical sector size.
        :paramtype disk_logical_sector_size: int
        :keyword disk_physical_sector_size: Gets or sets a value of disk physical sector size.
        :paramtype disk_physical_sector_size: int
        :keyword disk_identifier: Gets or sets a value of disk identifier.
        :paramtype disk_identifier: str
        :keyword disk_controller: Disk controller.
        :paramtype disk_controller:
         ~azure.mgmt.recoveryservicesdatareplication.models.DiskControllerInputs
        """
        super().__init__(**kwargs)
        self.disk_id = disk_id
        self.storage_container_id = storage_container_id
        self.is_dynamic = is_dynamic
        self.disk_size_gb = disk_size_gb
        self.disk_file_format = disk_file_format
        self.is_os_disk = is_os_disk
        self.disk_block_size = disk_block_size
        self.disk_logical_sector_size = disk_logical_sector_size
        self.disk_physical_sector_size = disk_physical_sector_size
        self.disk_identifier = disk_identifier
        self.disk_controller = disk_controller


class HyperVToAzStackHCIEventModelCustomProperties(EventModelCustomProperties):  # pylint: disable=name-too-long
    """HyperV to  AzStackHCI event model custom properties. This class provides provider specific
    details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and
    DataContract.HealthEvents.HealthEventType.AgentHealth.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for EventModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar event_source_friendly_name: Gets or sets the friendly name of the source which has raised
     this health event.
    :vartype event_source_friendly_name: str
    :ivar protected_item_friendly_name: Gets or sets the protected item friendly name.
    :vartype protected_item_friendly_name: str
    :ivar source_appliance_name: Gets or sets the source appliance name.
    :vartype source_appliance_name: str
    :ivar target_appliance_name: Gets or sets the source target name.
    :vartype target_appliance_name: str
    :ivar server_type: Gets or sets the server type.
    :vartype server_type: str
    """

    _validation = {
        "instance_type": {"required": True},
        "event_source_friendly_name": {"readonly": True},
        "protected_item_friendly_name": {"readonly": True},
        "source_appliance_name": {"readonly": True},
        "target_appliance_name": {"readonly": True},
        "server_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "event_source_friendly_name": {"key": "eventSourceFriendlyName", "type": "str"},
        "protected_item_friendly_name": {"key": "protectedItemFriendlyName", "type": "str"},
        "source_appliance_name": {"key": "sourceApplianceName", "type": "str"},
        "target_appliance_name": {"key": "targetApplianceName", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.event_source_friendly_name: Optional[str] = None
        self.protected_item_friendly_name: Optional[str] = None
        self.source_appliance_name: Optional[str] = None
        self.target_appliance_name: Optional[str] = None
        self.server_type: Optional[str] = None


class HyperVToAzStackHCINicInput(_serialization.Model):
    """HyperVToAzStackHCI NIC properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar nic_id: Gets or sets the NIC Id. Required.
    :vartype nic_id: str
    :ivar network_name: Gets or sets the network name.
    :vartype network_name: str
    :ivar target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
    :vartype target_network_id: str
    :ivar test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
    :vartype test_network_id: str
    :ivar selection_type_for_failover: Gets or sets the selection type of the NIC. Required. Known
     values are: "NotSelected", "SelectedByUser", "SelectedByDefault", and "SelectedByUserOverride".
    :vartype selection_type_for_failover: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.VMNicSelection
    :ivar is_static_ip_migration_enabled: Gets or sets a value indicating whether static ip
     migration is enabled.
    :vartype is_static_ip_migration_enabled: bool
    :ivar is_mac_migration_enabled: Gets or sets a value indicating whether mac address migration
     is enabled.
    :vartype is_mac_migration_enabled: bool
    """

    _validation = {
        "nic_id": {"required": True, "min_length": 1},
        "network_name": {"readonly": True},
        "selection_type_for_failover": {"required": True},
    }

    _attribute_map = {
        "nic_id": {"key": "nicId", "type": "str"},
        "network_name": {"key": "networkName", "type": "str"},
        "target_network_id": {"key": "targetNetworkId", "type": "str"},
        "test_network_id": {"key": "testNetworkId", "type": "str"},
        "selection_type_for_failover": {"key": "selectionTypeForFailover", "type": "str"},
        "is_static_ip_migration_enabled": {"key": "isStaticIpMigrationEnabled", "type": "bool"},
        "is_mac_migration_enabled": {"key": "isMacMigrationEnabled", "type": "bool"},
    }

    def __init__(
        self,
        *,
        nic_id: str,
        selection_type_for_failover: Union[str, "_models.VMNicSelection"],
        target_network_id: Optional[str] = None,
        test_network_id: Optional[str] = None,
        is_static_ip_migration_enabled: Optional[bool] = None,
        is_mac_migration_enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nic_id: Gets or sets the NIC Id. Required.
        :paramtype nic_id: str
        :keyword target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
        :paramtype target_network_id: str
        :keyword test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
        :paramtype test_network_id: str
        :keyword selection_type_for_failover: Gets or sets the selection type of the NIC. Required.
         Known values are: "NotSelected", "SelectedByUser", "SelectedByDefault", and
         "SelectedByUserOverride".
        :paramtype selection_type_for_failover: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.VMNicSelection
        :keyword is_static_ip_migration_enabled: Gets or sets a value indicating whether static ip
         migration is enabled.
        :paramtype is_static_ip_migration_enabled: bool
        :keyword is_mac_migration_enabled: Gets or sets a value indicating whether mac address
         migration is enabled.
        :paramtype is_mac_migration_enabled: bool
        """
        super().__init__(**kwargs)
        self.nic_id = nic_id
        self.network_name: Optional[str] = None
        self.target_network_id = target_network_id
        self.test_network_id = test_network_id
        self.selection_type_for_failover = selection_type_for_failover
        self.is_static_ip_migration_enabled = is_static_ip_migration_enabled
        self.is_mac_migration_enabled = is_mac_migration_enabled


class PlannedFailoverModelCustomProperties(_serialization.Model):
    """Planned failover model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIPlannedFailoverModelCustomProperties,
    VMwareToAzStackHCIPlannedFailoverModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for PlannedFailoverModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIPlannedFailoverModelCustomProperties",
            "VMwareToAzStackHCI": "VMwareToAzStackHCIPlannedFailoverModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class HyperVToAzStackHCIPlannedFailoverModelCustomProperties(
    PlannedFailoverModelCustomProperties
):  # pylint: disable=name-too-long
    """HyperV to AzStackHCI planned failover model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for PlannedFailoverModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar shutdown_source_vm: Gets or sets a value indicating whether VM needs to be shut down.
     Required.
    :vartype shutdown_source_vm: bool
    """

    _validation = {
        "instance_type": {"required": True},
        "shutdown_source_vm": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "shutdown_source_vm": {"key": "shutdownSourceVM", "type": "bool"},
    }

    def __init__(self, *, shutdown_source_vm: bool, **kwargs: Any) -> None:
        """
        :keyword shutdown_source_vm: Gets or sets a value indicating whether VM needs to be shut down.
         Required.
        :paramtype shutdown_source_vm: bool
        """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.shutdown_source_vm = shutdown_source_vm


class PolicyModelCustomProperties(_serialization.Model):
    """Policy model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIPolicyModelCustomProperties, VMwareToAzStackHCIPolicyModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for PolicyModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIPolicyModelCustomProperties",
            "VMwareToAzStackHCI": "VMwareToAzStackHCIPolicyModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class HyperVToAzStackHCIPolicyModelCustomProperties(PolicyModelCustomProperties):  # pylint: disable=name-too-long
    """HyperV To AzStackHCI Policy model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for PolicyModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar recovery_point_history_in_minutes: Gets or sets the duration in minutes until which the
     recovery points need to be stored. Required.
    :vartype recovery_point_history_in_minutes: int
    :ivar crash_consistent_frequency_in_minutes: Gets or sets the crash consistent snapshot
     frequency (in minutes). Required.
    :vartype crash_consistent_frequency_in_minutes: int
    :ivar app_consistent_frequency_in_minutes: Gets or sets the app consistent snapshot frequency
     (in minutes). Required.
    :vartype app_consistent_frequency_in_minutes: int
    """

    _validation = {
        "instance_type": {"required": True},
        "recovery_point_history_in_minutes": {"required": True},
        "crash_consistent_frequency_in_minutes": {"required": True},
        "app_consistent_frequency_in_minutes": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "recovery_point_history_in_minutes": {"key": "recoveryPointHistoryInMinutes", "type": "int"},
        "crash_consistent_frequency_in_minutes": {"key": "crashConsistentFrequencyInMinutes", "type": "int"},
        "app_consistent_frequency_in_minutes": {"key": "appConsistentFrequencyInMinutes", "type": "int"},
    }

    def __init__(
        self,
        *,
        recovery_point_history_in_minutes: int,
        crash_consistent_frequency_in_minutes: int,
        app_consistent_frequency_in_minutes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword recovery_point_history_in_minutes: Gets or sets the duration in minutes until which
         the recovery points need to be stored. Required.
        :paramtype recovery_point_history_in_minutes: int
        :keyword crash_consistent_frequency_in_minutes: Gets or sets the crash consistent snapshot
         frequency (in minutes). Required.
        :paramtype crash_consistent_frequency_in_minutes: int
        :keyword app_consistent_frequency_in_minutes: Gets or sets the app consistent snapshot
         frequency (in minutes). Required.
        :paramtype app_consistent_frequency_in_minutes: int
        """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.recovery_point_history_in_minutes = recovery_point_history_in_minutes
        self.crash_consistent_frequency_in_minutes = crash_consistent_frequency_in_minutes
        self.app_consistent_frequency_in_minutes = app_consistent_frequency_in_minutes


class HyperVToAzStackHCIProtectedDiskProperties(_serialization.Model):  # pylint: disable=name-too-long
    """HyperVToAzStackHCI protected disk properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar storage_container_id: Gets or sets the ARM Id of the storage container.
    :vartype storage_container_id: str
    :ivar storage_container_local_path: Gets or sets the local path of the storage container.
    :vartype storage_container_local_path: str
    :ivar source_disk_id: Gets or sets the source disk Id.
    :vartype source_disk_id: str
    :ivar source_disk_name: Gets or sets the source disk Name.
    :vartype source_disk_name: str
    :ivar seed_disk_name: Gets or sets the seed disk name.
    :vartype seed_disk_name: str
    :ivar test_migrate_disk_name: Gets or sets the test failover clone disk.
    :vartype test_migrate_disk_name: str
    :ivar migrate_disk_name: Gets or sets the failover clone disk.
    :vartype migrate_disk_name: str
    :ivar is_os_disk: Gets or sets a value indicating whether the disk is the OS disk.
    :vartype is_os_disk: bool
    :ivar capacity_in_bytes: Gets or sets the disk capacity in bytes.
    :vartype capacity_in_bytes: int
    :ivar is_dynamic: Gets or sets a value indicating whether dynamic sizing is enabled on the
     virtual hard disk.
    :vartype is_dynamic: bool
    :ivar disk_type: Gets or sets the disk type.
    :vartype disk_type: str
    :ivar disk_block_size: Gets or sets a value of disk block size.
    :vartype disk_block_size: int
    :ivar disk_logical_sector_size: Gets or sets a value of disk logical sector size.
    :vartype disk_logical_sector_size: int
    :ivar disk_physical_sector_size: Gets or sets a value of disk physical sector size.
    :vartype disk_physical_sector_size: int
    """

    _validation = {
        "storage_container_id": {"readonly": True},
        "storage_container_local_path": {"readonly": True},
        "source_disk_id": {"readonly": True},
        "source_disk_name": {"readonly": True},
        "seed_disk_name": {"readonly": True},
        "test_migrate_disk_name": {"readonly": True},
        "migrate_disk_name": {"readonly": True},
        "is_os_disk": {"readonly": True},
        "capacity_in_bytes": {"readonly": True},
        "is_dynamic": {"readonly": True},
        "disk_type": {"readonly": True},
        "disk_block_size": {"readonly": True},
        "disk_logical_sector_size": {"readonly": True},
        "disk_physical_sector_size": {"readonly": True},
    }

    _attribute_map = {
        "storage_container_id": {"key": "storageContainerId", "type": "str"},
        "storage_container_local_path": {"key": "storageContainerLocalPath", "type": "str"},
        "source_disk_id": {"key": "sourceDiskId", "type": "str"},
        "source_disk_name": {"key": "sourceDiskName", "type": "str"},
        "seed_disk_name": {"key": "seedDiskName", "type": "str"},
        "test_migrate_disk_name": {"key": "testMigrateDiskName", "type": "str"},
        "migrate_disk_name": {"key": "migrateDiskName", "type": "str"},
        "is_os_disk": {"key": "isOsDisk", "type": "bool"},
        "capacity_in_bytes": {"key": "capacityInBytes", "type": "int"},
        "is_dynamic": {"key": "isDynamic", "type": "bool"},
        "disk_type": {"key": "diskType", "type": "str"},
        "disk_block_size": {"key": "diskBlockSize", "type": "int"},
        "disk_logical_sector_size": {"key": "diskLogicalSectorSize", "type": "int"},
        "disk_physical_sector_size": {"key": "diskPhysicalSectorSize", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.storage_container_id: Optional[str] = None
        self.storage_container_local_path: Optional[str] = None
        self.source_disk_id: Optional[str] = None
        self.source_disk_name: Optional[str] = None
        self.seed_disk_name: Optional[str] = None
        self.test_migrate_disk_name: Optional[str] = None
        self.migrate_disk_name: Optional[str] = None
        self.is_os_disk: Optional[bool] = None
        self.capacity_in_bytes: Optional[int] = None
        self.is_dynamic: Optional[bool] = None
        self.disk_type: Optional[str] = None
        self.disk_block_size: Optional[int] = None
        self.disk_logical_sector_size: Optional[int] = None
        self.disk_physical_sector_size: Optional[int] = None


class ProtectedItemModelCustomProperties(_serialization.Model):
    """Protected item model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIProtectedItemModelCustomProperties,
    VMwareToAzStackHCIProtectedItemModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ProtectedItemModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIProtectedItemModelCustomProperties",
            "VMwareToAzStackHCI": "VMwareToAzStackHCIProtectedItemModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class HyperVToAzStackHCIProtectedItemModelCustomProperties(
    ProtectedItemModelCustomProperties
):  # pylint: disable=name-too-long
    """HyperV to AzStackHCI Protected item model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ProtectedItemModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar active_location: Gets or sets the location of the protected item. Known values are:
     "Primary" and "Recovery".
    :vartype active_location: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemActiveLocation
    :ivar target_hci_cluster_id: Gets or sets the Target HCI Cluster ARM Id. Required.
    :vartype target_hci_cluster_id: str
    :ivar target_arc_cluster_custom_location_id: Gets or sets the Target Arc Cluster Custom
     Location ARM Id. Required.
    :vartype target_arc_cluster_custom_location_id: str
    :ivar target_az_stack_hci_cluster_name: Gets or sets the Target AzStackHCI cluster name.
    :vartype target_az_stack_hci_cluster_name: str
    :ivar fabric_discovery_machine_id: Gets or sets the ARM Id of the discovered machine. Required.
    :vartype fabric_discovery_machine_id: str
    :ivar disks_to_include: Gets or sets the list of disks to replicate. Required.
    :vartype disks_to_include:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCIDiskInput]
    :ivar nics_to_include: Gets or sets the list of VM NIC to replicate. Required.
    :vartype nics_to_include:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCINicInput]
    :ivar source_vm_name: Gets or sets the source VM display name.
    :vartype source_vm_name: str
    :ivar source_cpu_cores: Gets or sets the source VM CPU cores.
    :vartype source_cpu_cores: int
    :ivar source_memory_in_mega_bytes: Gets or sets the source VM ram memory size in megabytes.
    :vartype source_memory_in_mega_bytes: float
    :ivar target_vm_name: Gets or sets the target VM display name.
    :vartype target_vm_name: str
    :ivar target_resource_group_id: Gets or sets the target resource group ARM Id. Required.
    :vartype target_resource_group_id: str
    :ivar storage_container_id: Gets or sets the target storage container ARM Id. Required.
    :vartype storage_container_id: str
    :ivar hyper_v_generation: Gets or sets the hypervisor generation of the virtual machine.
     Required.
    :vartype hyper_v_generation: str
    :ivar target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
    :vartype target_network_id: str
    :ivar test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
    :vartype test_network_id: str
    :ivar target_cpu_cores: Gets or sets the target CPU cores.
    :vartype target_cpu_cores: int
    :ivar is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
    :vartype is_dynamic_ram: bool
    :ivar dynamic_memory_config: Protected item dynamic memory config.
    :vartype dynamic_memory_config:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
    :ivar target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
    :vartype target_memory_in_mega_bytes: int
    :ivar run_as_account_id: Gets or sets the Run As account Id. Required.
    :vartype run_as_account_id: str
    :ivar source_fabric_agent_name: Gets or sets the source fabric agent name. Required.
    :vartype source_fabric_agent_name: str
    :ivar target_fabric_agent_name: Gets or sets the target fabric agent name. Required.
    :vartype target_fabric_agent_name: str
    :ivar source_appliance_name: Gets or sets the source appliance name.
    :vartype source_appliance_name: str
    :ivar target_appliance_name: Gets or sets the target appliance name.
    :vartype target_appliance_name: str
    :ivar os_type: Gets or sets the type of the OS.
    :vartype os_type: str
    :ivar os_name: Gets or sets the name of the OS.
    :vartype os_name: str
    :ivar firmware_type: Gets or sets the firmware type.
    :vartype firmware_type: str
    :ivar target_location: Gets or sets the target location.
    :vartype target_location: str
    :ivar custom_location_region: Gets or sets the location of Azure Arc HCI custom location
     resource. Required.
    :vartype custom_location_region: str
    :ivar failover_recovery_point_id: Gets or sets the recovery point Id to which the VM was failed
     over.
    :vartype failover_recovery_point_id: str
    :ivar last_recovery_point_received: Gets or sets the last recovery point received time.
    :vartype last_recovery_point_received: ~datetime.datetime
    :ivar last_recovery_point_id: Gets or sets the last recovery point Id.
    :vartype last_recovery_point_id: str
    :ivar initial_replication_progress_percentage: Gets or sets the initial replication progress
     percentage. This is calculated based on total bytes processed for all disks in the source VM.
    :vartype initial_replication_progress_percentage: int
    :ivar resync_progress_percentage: Gets or sets the resync progress percentage. This is
     calculated based on total bytes processed for all disks in the source VM.
    :vartype resync_progress_percentage: int
    :ivar protected_disks: Gets or sets the list of protected disks.
    :vartype protected_disks:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCIProtectedDiskProperties]
    :ivar protected_nics: Gets or sets the VM NIC details.
    :vartype protected_nics:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCIProtectedNicProperties]
    :ivar target_vm_bios_id: Gets or sets the BIOS Id of the target AzStackHCI VM.
    :vartype target_vm_bios_id: str
    :ivar last_replication_update_time: Gets or sets the latest timestamp that replication status
     is updated.
    :vartype last_replication_update_time: ~datetime.datetime
    """

    _validation = {
        "instance_type": {"required": True},
        "active_location": {"readonly": True},
        "target_hci_cluster_id": {"required": True},
        "target_arc_cluster_custom_location_id": {"required": True},
        "target_az_stack_hci_cluster_name": {"readonly": True},
        "fabric_discovery_machine_id": {"required": True},
        "disks_to_include": {"required": True},
        "nics_to_include": {"required": True},
        "source_vm_name": {"readonly": True},
        "source_cpu_cores": {"readonly": True},
        "source_memory_in_mega_bytes": {"readonly": True},
        "target_resource_group_id": {"required": True},
        "storage_container_id": {"required": True},
        "hyper_v_generation": {"required": True, "min_length": 1},
        "run_as_account_id": {"required": True, "min_length": 1},
        "source_fabric_agent_name": {"required": True, "min_length": 1},
        "target_fabric_agent_name": {"required": True, "min_length": 1},
        "source_appliance_name": {"readonly": True},
        "target_appliance_name": {"readonly": True},
        "os_type": {"readonly": True},
        "os_name": {"readonly": True},
        "firmware_type": {"readonly": True},
        "target_location": {"readonly": True},
        "custom_location_region": {"required": True, "min_length": 1},
        "failover_recovery_point_id": {"readonly": True},
        "last_recovery_point_received": {"readonly": True},
        "last_recovery_point_id": {"readonly": True},
        "initial_replication_progress_percentage": {"readonly": True},
        "resync_progress_percentage": {"readonly": True},
        "protected_disks": {"readonly": True},
        "protected_nics": {"readonly": True},
        "target_vm_bios_id": {"readonly": True},
        "last_replication_update_time": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "active_location": {"key": "activeLocation", "type": "str"},
        "target_hci_cluster_id": {"key": "targetHciClusterId", "type": "str"},
        "target_arc_cluster_custom_location_id": {"key": "targetArcClusterCustomLocationId", "type": "str"},
        "target_az_stack_hci_cluster_name": {"key": "targetAzStackHciClusterName", "type": "str"},
        "fabric_discovery_machine_id": {"key": "fabricDiscoveryMachineId", "type": "str"},
        "disks_to_include": {"key": "disksToInclude", "type": "[HyperVToAzStackHCIDiskInput]"},
        "nics_to_include": {"key": "nicsToInclude", "type": "[HyperVToAzStackHCINicInput]"},
        "source_vm_name": {"key": "sourceVmName", "type": "str"},
        "source_cpu_cores": {"key": "sourceCpuCores", "type": "int"},
        "source_memory_in_mega_bytes": {"key": "sourceMemoryInMegaBytes", "type": "float"},
        "target_vm_name": {"key": "targetVmName", "type": "str"},
        "target_resource_group_id": {"key": "targetResourceGroupId", "type": "str"},
        "storage_container_id": {"key": "storageContainerId", "type": "str"},
        "hyper_v_generation": {"key": "hyperVGeneration", "type": "str"},
        "target_network_id": {"key": "targetNetworkId", "type": "str"},
        "test_network_id": {"key": "testNetworkId", "type": "str"},
        "target_cpu_cores": {"key": "targetCpuCores", "type": "int"},
        "is_dynamic_ram": {"key": "isDynamicRam", "type": "bool"},
        "dynamic_memory_config": {"key": "dynamicMemoryConfig", "type": "ProtectedItemDynamicMemoryConfig"},
        "target_memory_in_mega_bytes": {"key": "targetMemoryInMegaBytes", "type": "int"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "source_fabric_agent_name": {"key": "sourceFabricAgentName", "type": "str"},
        "target_fabric_agent_name": {"key": "targetFabricAgentName", "type": "str"},
        "source_appliance_name": {"key": "sourceApplianceName", "type": "str"},
        "target_appliance_name": {"key": "targetApplianceName", "type": "str"},
        "os_type": {"key": "osType", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "firmware_type": {"key": "firmwareType", "type": "str"},
        "target_location": {"key": "targetLocation", "type": "str"},
        "custom_location_region": {"key": "customLocationRegion", "type": "str"},
        "failover_recovery_point_id": {"key": "failoverRecoveryPointId", "type": "str"},
        "last_recovery_point_received": {"key": "lastRecoveryPointReceived", "type": "iso-8601"},
        "last_recovery_point_id": {"key": "lastRecoveryPointId", "type": "str"},
        "initial_replication_progress_percentage": {"key": "initialReplicationProgressPercentage", "type": "int"},
        "resync_progress_percentage": {"key": "resyncProgressPercentage", "type": "int"},
        "protected_disks": {"key": "protectedDisks", "type": "[HyperVToAzStackHCIProtectedDiskProperties]"},
        "protected_nics": {"key": "protectedNics", "type": "[HyperVToAzStackHCIProtectedNicProperties]"},
        "target_vm_bios_id": {"key": "targetVmBiosId", "type": "str"},
        "last_replication_update_time": {"key": "lastReplicationUpdateTime", "type": "iso-8601"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        target_hci_cluster_id: str,
        target_arc_cluster_custom_location_id: str,
        fabric_discovery_machine_id: str,
        disks_to_include: List["_models.HyperVToAzStackHCIDiskInput"],
        nics_to_include: List["_models.HyperVToAzStackHCINicInput"],
        target_resource_group_id: str,
        storage_container_id: str,
        hyper_v_generation: str,
        run_as_account_id: str,
        source_fabric_agent_name: str,
        target_fabric_agent_name: str,
        custom_location_region: str,
        target_vm_name: Optional[str] = None,
        target_network_id: Optional[str] = None,
        test_network_id: Optional[str] = None,
        target_cpu_cores: Optional[int] = None,
        is_dynamic_ram: Optional[bool] = None,
        dynamic_memory_config: Optional["_models.ProtectedItemDynamicMemoryConfig"] = None,
        target_memory_in_mega_bytes: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword target_hci_cluster_id: Gets or sets the Target HCI Cluster ARM Id. Required.
        :paramtype target_hci_cluster_id: str
        :keyword target_arc_cluster_custom_location_id: Gets or sets the Target Arc Cluster Custom
         Location ARM Id. Required.
        :paramtype target_arc_cluster_custom_location_id: str
        :keyword fabric_discovery_machine_id: Gets or sets the ARM Id of the discovered machine.
         Required.
        :paramtype fabric_discovery_machine_id: str
        :keyword disks_to_include: Gets or sets the list of disks to replicate. Required.
        :paramtype disks_to_include:
         list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCIDiskInput]
        :keyword nics_to_include: Gets or sets the list of VM NIC to replicate. Required.
        :paramtype nics_to_include:
         list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCINicInput]
        :keyword target_vm_name: Gets or sets the target VM display name.
        :paramtype target_vm_name: str
        :keyword target_resource_group_id: Gets or sets the target resource group ARM Id. Required.
        :paramtype target_resource_group_id: str
        :keyword storage_container_id: Gets or sets the target storage container ARM Id. Required.
        :paramtype storage_container_id: str
        :keyword hyper_v_generation: Gets or sets the hypervisor generation of the virtual machine.
         Required.
        :paramtype hyper_v_generation: str
        :keyword target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
        :paramtype target_network_id: str
        :keyword test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
        :paramtype test_network_id: str
        :keyword target_cpu_cores: Gets or sets the target CPU cores.
        :paramtype target_cpu_cores: int
        :keyword is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
        :paramtype is_dynamic_ram: bool
        :keyword dynamic_memory_config: Protected item dynamic memory config.
        :paramtype dynamic_memory_config:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
        :keyword target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
        :paramtype target_memory_in_mega_bytes: int
        :keyword run_as_account_id: Gets or sets the Run As account Id. Required.
        :paramtype run_as_account_id: str
        :keyword source_fabric_agent_name: Gets or sets the source fabric agent name. Required.
        :paramtype source_fabric_agent_name: str
        :keyword target_fabric_agent_name: Gets or sets the target fabric agent name. Required.
        :paramtype target_fabric_agent_name: str
        :keyword custom_location_region: Gets or sets the location of Azure Arc HCI custom location
         resource. Required.
        :paramtype custom_location_region: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.active_location: Optional[Union[str, "_models.ProtectedItemActiveLocation"]] = None
        self.target_hci_cluster_id = target_hci_cluster_id
        self.target_arc_cluster_custom_location_id = target_arc_cluster_custom_location_id
        self.target_az_stack_hci_cluster_name: Optional[str] = None
        self.fabric_discovery_machine_id = fabric_discovery_machine_id
        self.disks_to_include = disks_to_include
        self.nics_to_include = nics_to_include
        self.source_vm_name: Optional[str] = None
        self.source_cpu_cores: Optional[int] = None
        self.source_memory_in_mega_bytes: Optional[float] = None
        self.target_vm_name = target_vm_name
        self.target_resource_group_id = target_resource_group_id
        self.storage_container_id = storage_container_id
        self.hyper_v_generation = hyper_v_generation
        self.target_network_id = target_network_id
        self.test_network_id = test_network_id
        self.target_cpu_cores = target_cpu_cores
        self.is_dynamic_ram = is_dynamic_ram
        self.dynamic_memory_config = dynamic_memory_config
        self.target_memory_in_mega_bytes = target_memory_in_mega_bytes
        self.run_as_account_id = run_as_account_id
        self.source_fabric_agent_name = source_fabric_agent_name
        self.target_fabric_agent_name = target_fabric_agent_name
        self.source_appliance_name: Optional[str] = None
        self.target_appliance_name: Optional[str] = None
        self.os_type: Optional[str] = None
        self.os_name: Optional[str] = None
        self.firmware_type: Optional[str] = None
        self.target_location: Optional[str] = None
        self.custom_location_region = custom_location_region
        self.failover_recovery_point_id: Optional[str] = None
        self.last_recovery_point_received: Optional[datetime.datetime] = None
        self.last_recovery_point_id: Optional[str] = None
        self.initial_replication_progress_percentage: Optional[int] = None
        self.resync_progress_percentage: Optional[int] = None
        self.protected_disks: Optional[List["_models.HyperVToAzStackHCIProtectedDiskProperties"]] = None
        self.protected_nics: Optional[List["_models.HyperVToAzStackHCIProtectedNicProperties"]] = None
        self.target_vm_bios_id: Optional[str] = None
        self.last_replication_update_time: Optional[datetime.datetime] = None


class ProtectedItemModelCustomPropertiesUpdate(_serialization.Model):
    """Protected item model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIProtectedItemModelCustomPropertiesUpdate,
    VMwareToAzStackHCIProtectedItemModelCustomPropertiesUpdate

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ProtectedItemModelCustomPropertiesUpdate.
     Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIProtectedItemModelCustomPropertiesUpdate",
            "VMwareToAzStackHCI": "VMwareToAzStackHCIProtectedItemModelCustomPropertiesUpdate",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class HyperVToAzStackHCIProtectedItemModelCustomPropertiesUpdate(
    ProtectedItemModelCustomPropertiesUpdate
):  # pylint: disable=name-too-long
    """HyperV to AzStackHCI Protected item model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ProtectedItemModelCustomPropertiesUpdate.
     Required.
    :vartype instance_type: str
    :ivar nics_to_include: Gets or sets the list of VM NIC to replicate.
    :vartype nics_to_include:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCINicInput]
    :ivar target_cpu_cores: Gets or sets the target CPU cores.
    :vartype target_cpu_cores: int
    :ivar is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
    :vartype is_dynamic_ram: bool
    :ivar dynamic_memory_config: Protected item dynamic memory config.
    :vartype dynamic_memory_config:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
    :ivar target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
    :vartype target_memory_in_mega_bytes: int
    :ivar os_type: Gets or sets the type of the OS.
    :vartype os_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "nics_to_include": {"key": "nicsToInclude", "type": "[HyperVToAzStackHCINicInput]"},
        "target_cpu_cores": {"key": "targetCpuCores", "type": "int"},
        "is_dynamic_ram": {"key": "isDynamicRam", "type": "bool"},
        "dynamic_memory_config": {"key": "dynamicMemoryConfig", "type": "ProtectedItemDynamicMemoryConfig"},
        "target_memory_in_mega_bytes": {"key": "targetMemoryInMegaBytes", "type": "int"},
        "os_type": {"key": "osType", "type": "str"},
    }

    def __init__(
        self,
        *,
        nics_to_include: Optional[List["_models.HyperVToAzStackHCINicInput"]] = None,
        target_cpu_cores: Optional[int] = None,
        is_dynamic_ram: Optional[bool] = None,
        dynamic_memory_config: Optional["_models.ProtectedItemDynamicMemoryConfig"] = None,
        target_memory_in_mega_bytes: Optional[int] = None,
        os_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nics_to_include: Gets or sets the list of VM NIC to replicate.
        :paramtype nics_to_include:
         list[~azure.mgmt.recoveryservicesdatareplication.models.HyperVToAzStackHCINicInput]
        :keyword target_cpu_cores: Gets or sets the target CPU cores.
        :paramtype target_cpu_cores: int
        :keyword is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
        :paramtype is_dynamic_ram: bool
        :keyword dynamic_memory_config: Protected item dynamic memory config.
        :paramtype dynamic_memory_config:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
        :keyword target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
        :paramtype target_memory_in_mega_bytes: int
        :keyword os_type: Gets or sets the type of the OS.
        :paramtype os_type: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.nics_to_include = nics_to_include
        self.target_cpu_cores = target_cpu_cores
        self.is_dynamic_ram = is_dynamic_ram
        self.dynamic_memory_config = dynamic_memory_config
        self.target_memory_in_mega_bytes = target_memory_in_mega_bytes
        self.os_type = os_type


class HyperVToAzStackHCIProtectedNicProperties(_serialization.Model):
    """HyperVToAzStackHCI NIC properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar nic_id: Gets or sets the NIC Id.
    :vartype nic_id: str
    :ivar mac_address: Gets or sets the NIC mac address.
    :vartype mac_address: str
    :ivar network_name: Gets or sets the network name.
    :vartype network_name: str
    :ivar target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
    :vartype target_network_id: str
    :ivar test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
    :vartype test_network_id: str
    :ivar selection_type_for_failover: Gets or sets the selection type of the NIC. Known values
     are: "NotSelected", "SelectedByUser", "SelectedByDefault", and "SelectedByUserOverride".
    :vartype selection_type_for_failover: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.VMNicSelection
    """

    _validation = {
        "nic_id": {"readonly": True},
        "mac_address": {"readonly": True},
        "network_name": {"readonly": True},
        "target_network_id": {"readonly": True},
        "test_network_id": {"readonly": True},
        "selection_type_for_failover": {"readonly": True},
    }

    _attribute_map = {
        "nic_id": {"key": "nicId", "type": "str"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "network_name": {"key": "networkName", "type": "str"},
        "target_network_id": {"key": "targetNetworkId", "type": "str"},
        "test_network_id": {"key": "testNetworkId", "type": "str"},
        "selection_type_for_failover": {"key": "selectionTypeForFailover", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.nic_id: Optional[str] = None
        self.mac_address: Optional[str] = None
        self.network_name: Optional[str] = None
        self.target_network_id: Optional[str] = None
        self.test_network_id: Optional[str] = None
        self.selection_type_for_failover: Optional[Union[str, "_models.VMNicSelection"]] = None


class RecoveryPointModelCustomProperties(_serialization.Model):
    """Recovery point model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIRecoveryPointModelCustomProperties,
    VMwareToAzStackHCIRecoveryPointModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for RecoveryPointModelCustomProperties. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIRecoveryPointModelCustomProperties",
            "VMwareToAzStackHCIRecoveryPointModelCustomProperties": "VMwareToAzStackHCIRecoveryPointModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class HyperVToAzStackHCIRecoveryPointModelCustomProperties(
    RecoveryPointModelCustomProperties
):  # pylint: disable=name-too-long
    """HyperV to AzStackHCI recovery point model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for RecoveryPointModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar disk_ids: Gets or sets the list of the disk Ids.
    :vartype disk_ids: list[str]
    """

    _validation = {
        "instance_type": {"required": True},
        "disk_ids": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "disk_ids": {"key": "diskIds", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.disk_ids: Optional[List[str]] = None


class ReplicationExtensionModelCustomProperties(_serialization.Model):  # pylint: disable=name-too-long
    """Replication extension model custom properties.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HyperVToAzStackHCIReplicationExtensionModelCustomProperties,
    VMwareToAzStackHCIReplicationExtensionModelCustomProperties

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ReplicationExtensionModelCustomProperties.
     Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    _subtype_map = {
        "instance_type": {
            "HyperVToAzStackHCI": "HyperVToAzStackHCIReplicationExtensionModelCustomProperties",
            "VMwareToAzStackHCI": "VMwareToAzStackHCIReplicationExtensionModelCustomProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: Optional[str] = None


class HyperVToAzStackHCIReplicationExtensionModelCustomProperties(
    ReplicationExtensionModelCustomProperties
):  # pylint: disable=name-too-long
    """HyperV to AzStackHCI Replication extension model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ReplicationExtensionModelCustomProperties.
     Required.
    :vartype instance_type: str
    :ivar hyper_v_fabric_arm_id: Gets or sets the ARM Id of the source HyperV fabric. Required.
    :vartype hyper_v_fabric_arm_id: str
    :ivar hyper_v_site_id: Gets or sets the ARM Id of the HyperV site.
    :vartype hyper_v_site_id: str
    :ivar az_stack_hci_fabric_arm_id: Gets or sets the ARM Id of the target AzStackHCI fabric.
     Required.
    :vartype az_stack_hci_fabric_arm_id: str
    :ivar az_stack_hci_site_id: Gets or sets the ARM Id of the AzStackHCI site.
    :vartype az_stack_hci_site_id: str
    :ivar storage_account_id: Gets or sets the storage account Id.
    :vartype storage_account_id: str
    :ivar storage_account_sas_secret_name: Gets or sets the Sas Secret of storage account.
    :vartype storage_account_sas_secret_name: str
    :ivar asr_service_uri: Gets or sets the Uri of ASR.
    :vartype asr_service_uri: str
    :ivar rcm_service_uri: Gets or sets the Uri of Rcm.
    :vartype rcm_service_uri: str
    :ivar gateway_service_uri: Gets or sets the Uri of Gateway.
    :vartype gateway_service_uri: str
    :ivar source_gateway_service_id: Gets or sets the gateway service Id of source.
    :vartype source_gateway_service_id: str
    :ivar target_gateway_service_id: Gets or sets the gateway service Id of target.
    :vartype target_gateway_service_id: str
    :ivar source_storage_container_name: Gets or sets the source storage container name.
    :vartype source_storage_container_name: str
    :ivar target_storage_container_name: Gets or sets the target storage container name.
    :vartype target_storage_container_name: str
    :ivar resource_location: Gets or sets the resource location.
    :vartype resource_location: str
    :ivar subscription_id: Gets or sets the subscription.
    :vartype subscription_id: str
    :ivar resource_group: Gets or sets the resource group.
    :vartype resource_group: str
    """

    _validation = {
        "instance_type": {"required": True},
        "hyper_v_fabric_arm_id": {"required": True},
        "hyper_v_site_id": {"readonly": True},
        "az_stack_hci_fabric_arm_id": {"required": True},
        "az_stack_hci_site_id": {"readonly": True},
        "asr_service_uri": {"readonly": True},
        "rcm_service_uri": {"readonly": True},
        "gateway_service_uri": {"readonly": True},
        "source_gateway_service_id": {"readonly": True},
        "target_gateway_service_id": {"readonly": True},
        "source_storage_container_name": {"readonly": True},
        "target_storage_container_name": {"readonly": True},
        "resource_location": {"readonly": True},
        "subscription_id": {"readonly": True},
        "resource_group": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "hyper_v_fabric_arm_id": {"key": "hyperVFabricArmId", "type": "str"},
        "hyper_v_site_id": {"key": "hyperVSiteId", "type": "str"},
        "az_stack_hci_fabric_arm_id": {"key": "azStackHciFabricArmId", "type": "str"},
        "az_stack_hci_site_id": {"key": "azStackHciSiteId", "type": "str"},
        "storage_account_id": {"key": "storageAccountId", "type": "str"},
        "storage_account_sas_secret_name": {"key": "storageAccountSasSecretName", "type": "str"},
        "asr_service_uri": {"key": "asrServiceUri", "type": "str"},
        "rcm_service_uri": {"key": "rcmServiceUri", "type": "str"},
        "gateway_service_uri": {"key": "gatewayServiceUri", "type": "str"},
        "source_gateway_service_id": {"key": "sourceGatewayServiceId", "type": "str"},
        "target_gateway_service_id": {"key": "targetGatewayServiceId", "type": "str"},
        "source_storage_container_name": {"key": "sourceStorageContainerName", "type": "str"},
        "target_storage_container_name": {"key": "targetStorageContainerName", "type": "str"},
        "resource_location": {"key": "resourceLocation", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        hyper_v_fabric_arm_id: str,
        az_stack_hci_fabric_arm_id: str,
        storage_account_id: Optional[str] = None,
        storage_account_sas_secret_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword hyper_v_fabric_arm_id: Gets or sets the ARM Id of the source HyperV fabric. Required.
        :paramtype hyper_v_fabric_arm_id: str
        :keyword az_stack_hci_fabric_arm_id: Gets or sets the ARM Id of the target AzStackHCI fabric.
         Required.
        :paramtype az_stack_hci_fabric_arm_id: str
        :keyword storage_account_id: Gets or sets the storage account Id.
        :paramtype storage_account_id: str
        :keyword storage_account_sas_secret_name: Gets or sets the Sas Secret of storage account.
        :paramtype storage_account_sas_secret_name: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "HyperVToAzStackHCI"
        self.hyper_v_fabric_arm_id = hyper_v_fabric_arm_id
        self.hyper_v_site_id: Optional[str] = None
        self.az_stack_hci_fabric_arm_id = az_stack_hci_fabric_arm_id
        self.az_stack_hci_site_id: Optional[str] = None
        self.storage_account_id = storage_account_id
        self.storage_account_sas_secret_name = storage_account_sas_secret_name
        self.asr_service_uri: Optional[str] = None
        self.rcm_service_uri: Optional[str] = None
        self.gateway_service_uri: Optional[str] = None
        self.source_gateway_service_id: Optional[str] = None
        self.target_gateway_service_id: Optional[str] = None
        self.source_storage_container_name: Optional[str] = None
        self.target_storage_container_name: Optional[str] = None
        self.resource_location: Optional[str] = None
        self.subscription_id: Optional[str] = None
        self.resource_group: Optional[str] = None


class IdentityModel(_serialization.Model):
    """Identity model.

    All required parameters must be populated in order to send to server.

    :ivar tenant_id: Gets or sets the tenant Id of the SPN with which fabric agent communicates to
     service. Required.
    :vartype tenant_id: str
    :ivar application_id: Gets or sets the client/application Id of the SPN with which fabric agent
     communicates to service. Required.
    :vartype application_id: str
    :ivar object_id: Gets or sets the object Id of the SPN with which fabric agent communicates to
     service. Required.
    :vartype object_id: str
    :ivar audience: Gets or sets the audience of the SPN with which fabric agent communicates to
     service. Required.
    :vartype audience: str
    :ivar aad_authority: Gets or sets the authority of the SPN with which fabric agent communicates
     to service. Required.
    :vartype aad_authority: str
    """

    _validation = {
        "tenant_id": {"required": True, "min_length": 1},
        "application_id": {"required": True, "min_length": 1},
        "object_id": {"required": True, "min_length": 1},
        "audience": {"required": True, "min_length": 1},
        "aad_authority": {"required": True, "min_length": 1},
    }

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "application_id": {"key": "applicationId", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "audience": {"key": "audience", "type": "str"},
        "aad_authority": {"key": "aadAuthority", "type": "str"},
    }

    def __init__(
        self, *, tenant_id: str, application_id: str, object_id: str, audience: str, aad_authority: str, **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: Gets or sets the tenant Id of the SPN with which fabric agent communicates
         to service. Required.
        :paramtype tenant_id: str
        :keyword application_id: Gets or sets the client/application Id of the SPN with which fabric
         agent communicates to service. Required.
        :paramtype application_id: str
        :keyword object_id: Gets or sets the object Id of the SPN with which fabric agent communicates
         to service. Required.
        :paramtype object_id: str
        :keyword audience: Gets or sets the audience of the SPN with which fabric agent communicates to
         service. Required.
        :paramtype audience: str
        :keyword aad_authority: Gets or sets the authority of the SPN with which fabric agent
         communicates to service. Required.
        :paramtype aad_authority: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.application_id = application_id
        self.object_id = object_id
        self.audience = audience
        self.aad_authority = aad_authority


class InnerHealthErrorModel(_serialization.Model):
    """Inner health error model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Gets or sets the error code.
    :vartype code: str
    :ivar health_category: Gets or sets the health category.
    :vartype health_category: str
    :ivar category: Gets or sets the error category.
    :vartype category: str
    :ivar severity: Gets or sets the error severity.
    :vartype severity: str
    :ivar source: Gets or sets the error source.
    :vartype source: str
    :ivar creation_time: Gets or sets the error creation time.
    :vartype creation_time: ~datetime.datetime
    :ivar is_customer_resolvable: Gets or sets a value indicating whether the error is customer
     resolvable.
    :vartype is_customer_resolvable: bool
    :ivar summary: Gets or sets the error summary.
    :vartype summary: str
    :ivar message: Gets or sets the error message.
    :vartype message: str
    :ivar causes: Gets or sets possible causes of the error.
    :vartype causes: str
    :ivar recommendation: Gets or sets recommended action to resolve the error.
    :vartype recommendation: str
    """

    _validation = {
        "code": {"readonly": True},
        "health_category": {"readonly": True},
        "category": {"readonly": True},
        "severity": {"readonly": True},
        "source": {"readonly": True},
        "creation_time": {"readonly": True},
        "is_customer_resolvable": {"readonly": True},
        "summary": {"readonly": True},
        "message": {"readonly": True},
        "causes": {"readonly": True},
        "recommendation": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "health_category": {"key": "healthCategory", "type": "str"},
        "category": {"key": "category", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "creation_time": {"key": "creationTime", "type": "iso-8601"},
        "is_customer_resolvable": {"key": "isCustomerResolvable", "type": "bool"},
        "summary": {"key": "summary", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "causes": {"key": "causes", "type": "str"},
        "recommendation": {"key": "recommendation", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code: Optional[str] = None
        self.health_category: Optional[str] = None
        self.category: Optional[str] = None
        self.severity: Optional[str] = None
        self.source: Optional[str] = None
        self.creation_time: Optional[datetime.datetime] = None
        self.is_customer_resolvable: Optional[bool] = None
        self.summary: Optional[str] = None
        self.message: Optional[str] = None
        self.causes: Optional[str] = None
        self.recommendation: Optional[str] = None


class JobModel(ProxyResource):
    """Job model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.JobModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "JobModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.JobModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.JobModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class JobModelCustomPropertiesAffectedObjectDetails(_serialization.Model):  # pylint: disable=name-too-long
    """Gets or sets any custom properties of the affected object.

    :ivar description:
    :vartype description: str
    :ivar type: Default value is "object".
    :vartype type: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(
        self, *, description: Optional[str] = None, type: Optional[Literal["object"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword description:
        :paramtype description: str
        :keyword type: Default value is "object".
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.description = description
        self.type = type


class JobModelListResult(_serialization.Model):
    """The response of a JobModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The JobModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.JobModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[JobModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.JobModel"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The JobModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.JobModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class JobModelProperties(_serialization.Model):
    """Job model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar display_name: Gets or sets the friendly display name.
    :vartype display_name: str
    :ivar state: Gets or sets the job state. Known values are: "Pending", "Started", "Cancelling",
     "Succeeded", "Failed", "Cancelled", "CompletedWithInformation", "CompletedWithWarnings", and
     "CompletedWithErrors".
    :vartype state: str or ~azure.mgmt.recoveryservicesdatareplication.models.JobState
    :ivar start_time: Gets or sets the start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets the end time.
    :vartype end_time: ~datetime.datetime
    :ivar object_id: Gets or sets the affected object Id.
    :vartype object_id: str
    :ivar object_name: Gets or sets the affected object name.
    :vartype object_name: str
    :ivar object_internal_id: Gets or sets the affected object internal Id.
    :vartype object_internal_id: str
    :ivar object_internal_name: Gets or sets the affected object internal name.
    :vartype object_internal_name: str
    :ivar object_type: Gets or sets the object type. Known values are: "AvsDiskPool",
     "FabricAgent", "Fabric", "Policy", "ProtectedItem", "RecoveryPlan", "ReplicationExtension", and
     "Vault".
    :vartype object_type: str or ~azure.mgmt.recoveryservicesdatareplication.models.JobObjectType
    :ivar replication_provider_id: Gets or sets the replication provider.
    :vartype replication_provider_id: str
    :ivar source_fabric_provider_id: Gets or sets the source fabric provider.
    :vartype source_fabric_provider_id: str
    :ivar target_fabric_provider_id: Gets or sets the target fabric provider.
    :vartype target_fabric_provider_id: str
    :ivar allowed_actions: Gets or sets the list of allowed actions on the job.
    :vartype allowed_actions: list[str]
    :ivar activity_id: Gets or sets the job activity id.
    :vartype activity_id: str
    :ivar tasks: Gets or sets the list of tasks.
    :vartype tasks: list[~azure.mgmt.recoveryservicesdatareplication.models.TaskModel]
    :ivar errors: Gets or sets the list of errors.
    :vartype errors: list[~azure.mgmt.recoveryservicesdatareplication.models.ErrorModel]
    :ivar custom_properties: Job model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.JobModelCustomProperties
    :ivar provisioning_state: Gets or sets the provisioning state of the job. Known values are:
     "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    """

    _validation = {
        "display_name": {"readonly": True},
        "state": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
        "object_id": {"readonly": True},
        "object_name": {"readonly": True},
        "object_internal_id": {"readonly": True},
        "object_internal_name": {"readonly": True},
        "object_type": {"readonly": True},
        "replication_provider_id": {"readonly": True},
        "source_fabric_provider_id": {"readonly": True},
        "target_fabric_provider_id": {"readonly": True},
        "allowed_actions": {"readonly": True},
        "activity_id": {"readonly": True},
        "tasks": {"readonly": True},
        "errors": {"readonly": True},
        "custom_properties": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "object_id": {"key": "objectId", "type": "str"},
        "object_name": {"key": "objectName", "type": "str"},
        "object_internal_id": {"key": "objectInternalId", "type": "str"},
        "object_internal_name": {"key": "objectInternalName", "type": "str"},
        "object_type": {"key": "objectType", "type": "str"},
        "replication_provider_id": {"key": "replicationProviderId", "type": "str"},
        "source_fabric_provider_id": {"key": "sourceFabricProviderId", "type": "str"},
        "target_fabric_provider_id": {"key": "targetFabricProviderId", "type": "str"},
        "allowed_actions": {"key": "allowedActions", "type": "[str]"},
        "activity_id": {"key": "activityId", "type": "str"},
        "tasks": {"key": "tasks", "type": "[TaskModel]"},
        "errors": {"key": "errors", "type": "[ErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "JobModelCustomProperties"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, custom_properties: "_models.JobModelCustomProperties", **kwargs: Any) -> None:
        """
        :keyword custom_properties: Job model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.JobModelCustomProperties
        """
        super().__init__(**kwargs)
        self.display_name: Optional[str] = None
        self.state: Optional[Union[str, "_models.JobState"]] = None
        self.start_time: Optional[datetime.datetime] = None
        self.end_time: Optional[datetime.datetime] = None
        self.object_id: Optional[str] = None
        self.object_name: Optional[str] = None
        self.object_internal_id: Optional[str] = None
        self.object_internal_name: Optional[str] = None
        self.object_type: Optional[Union[str, "_models.JobObjectType"]] = None
        self.replication_provider_id: Optional[str] = None
        self.source_fabric_provider_id: Optional[str] = None
        self.target_fabric_provider_id: Optional[str] = None
        self.allowed_actions: Optional[List[str]] = None
        self.activity_id: Optional[str] = None
        self.tasks: Optional[List["_models.TaskModel"]] = None
        self.errors: Optional[List["_models.ErrorModel"]] = None
        self.custom_properties = custom_properties
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None


class ManagedServiceIdentity(_serialization.Model):
    """Managed service identity (system assigned and/or user assigned identities).

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar principal_id: The service principal ID of the system assigned identity. This property
     will only be provided for a system assigned identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of the system assigned identity. This property will only be
     provided for a system assigned identity.
    :vartype tenant_id: str
    :ivar type: Type of managed service identity (where both SystemAssigned and UserAssigned types
     are allowed). Required. Known values are: "None", "SystemAssigned", "UserAssigned", and
     "SystemAssigned,UserAssigned".
    :vartype type: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ManagedServiceIdentityType
    :ivar user_assigned_identities: The set of user assigned identities associated with the
     resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
     The dictionary values can be empty objects ({}) in requests.
    :vartype user_assigned_identities: dict[str,
     ~azure.mgmt.recoveryservicesdatareplication.models.UserAssignedIdentity]
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "user_assigned_identities": {"key": "userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ManagedServiceIdentityType"],
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Type of managed service identity (where both SystemAssigned and UserAssigned
         types are allowed). Required. Known values are: "None", "SystemAssigned", "UserAssigned", and
         "SystemAssigned,UserAssigned".
        :paramtype type: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.ManagedServiceIdentityType
        :keyword user_assigned_identities: The set of user assigned identities associated with the
         resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
         '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
         The dictionary values can be empty objects ({}) in requests.
        :paramtype user_assigned_identities: dict[str,
         ~azure.mgmt.recoveryservicesdatareplication.models.UserAssignedIdentity]
        """
        super().__init__(**kwargs)
        self.principal_id: Optional[str] = None
        self.tenant_id: Optional[str] = None
        self.type = type
        self.user_assigned_identities = user_assigned_identities


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.recoveryservicesdatareplication.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.recoveryservicesdatareplication.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.recoveryservicesdatareplication.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.recoveryservicesdatareplication.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name: Optional[str] = None
        self.is_data_action: Optional[bool] = None
        self.display = display
        self.origin: Optional[Union[str, "_models.Origin"]] = None
        self.action_type: Optional[Union[str, "_models.ActionType"]] = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider: Optional[str] = None
        self.resource: Optional[str] = None
        self.operation: Optional[str] = None
        self.description: Optional[str] = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value: Optional[List["_models.Operation"]] = None
        self.next_link: Optional[str] = None


class OperationStatus(_serialization.Model):
    """Defines the operation status.

    :ivar id: Gets or sets the Id.
    :vartype id: str
    :ivar name: Gets or sets the operation name.
    :vartype name: str
    :ivar status: Gets or sets the status of the operation. ARM expects the terminal status to be
     one of Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.
    :vartype status: str
    :ivar start_time: Gets or sets the start time.
    :vartype start_time: str
    :ivar end_time: Gets or sets the end time.
    :vartype end_time: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "end_time": {"key": "endTime", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        status: Optional[str] = None,
        start_time: Optional[str] = None,
        end_time: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets the Id.
        :paramtype id: str
        :keyword name: Gets or sets the operation name.
        :paramtype name: str
        :keyword status: Gets or sets the status of the operation. ARM expects the terminal status to
         be one of Succeeded/ Failed/ Canceled. All other values imply that the operation is still
         running.
        :paramtype status: str
        :keyword start_time: Gets or sets the start time.
        :paramtype start_time: str
        :keyword end_time: Gets or sets the end time.
        :paramtype end_time: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.status = status
        self.start_time = start_time
        self.end_time = end_time


class PlannedFailoverModel(_serialization.Model):
    """Planned failover model.

    All required parameters must be populated in order to send to server.

    :ivar properties: Planned failover model properties. Required.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.PlannedFailoverModelProperties
    """

    _validation = {
        "properties": {"required": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "PlannedFailoverModelProperties"},
    }

    def __init__(self, *, properties: "_models.PlannedFailoverModelProperties", **kwargs: Any) -> None:
        """
        :keyword properties: Planned failover model properties. Required.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.PlannedFailoverModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class PlannedFailoverModelProperties(_serialization.Model):
    """Planned failover model properties.

    All required parameters must be populated in order to send to server.

    :ivar custom_properties: Planned failover model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.PlannedFailoverModelCustomProperties
    """

    _validation = {
        "custom_properties": {"required": True},
    }

    _attribute_map = {
        "custom_properties": {"key": "customProperties", "type": "PlannedFailoverModelCustomProperties"},
    }

    def __init__(self, *, custom_properties: "_models.PlannedFailoverModelCustomProperties", **kwargs: Any) -> None:
        """
        :keyword custom_properties: Planned failover model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.PlannedFailoverModelCustomProperties
        """
        super().__init__(**kwargs)
        self.custom_properties = custom_properties


class PolicyModel(ProxyResource):
    """Policy model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.PolicyModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PolicyModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.PolicyModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.PolicyModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class PolicyModelListResult(_serialization.Model):
    """The response of a PolicyModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PolicyModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.PolicyModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PolicyModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.PolicyModel"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The PolicyModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.PolicyModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PolicyModelProperties(_serialization.Model):
    """Policy model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar provisioning_state: Gets or sets the provisioning state of the policy. Known values are:
     "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar custom_properties: Policy model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.PolicyModelCustomProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "custom_properties": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "custom_properties": {"key": "customProperties", "type": "PolicyModelCustomProperties"},
    }

    def __init__(self, *, custom_properties: "_models.PolicyModelCustomProperties", **kwargs: Any) -> None:
        """
        :keyword custom_properties: Policy model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.PolicyModelCustomProperties
        """
        super().__init__(**kwargs)
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.custom_properties = custom_properties


class PrivateEndpoint(_serialization.Model):
    """Represent private Endpoint network resource that is linked to the Private Endpoint connection.

    :ivar id: Gets or sets the id.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: Gets or sets the id.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class PrivateEndpointConnection(ProxyResource):
    """Represents private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionResponseProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PrivateEndpointConnectionResponseProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.PrivateEndpointConnectionResponseProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionResponseProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class PrivateEndpointConnectionListResult(_serialization.Model):
    """The response of a PrivateEndpointConnection list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PrivateEndpointConnection items on this page. Required.
    :vartype value:
     list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnection]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnection]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.PrivateEndpointConnection"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The PrivateEndpointConnection items on this page. Required.
        :paramtype value:
         list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnection]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PrivateEndpointConnectionProxy(ProxyResource):
    """Represents private endpoint connection proxy request.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxyProperties
    :ivar etag: Gets or sets ETag.
    :vartype etag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PrivateEndpointConnectionProxyProperties"},
        "etag": {"key": "etag", "type": "str"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.PrivateEndpointConnectionProxyProperties"] = None,
        etag: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxyProperties
        :keyword etag: Gets or sets ETag.
        :paramtype etag: str
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.etag = etag


class PrivateEndpointConnectionProxyListResult(_serialization.Model):
    """The response of a PrivateEndpointConnectionProxy list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PrivateEndpointConnectionProxy items on this page. Required.
    :vartype value:
     list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxy]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnectionProxy]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.PrivateEndpointConnectionProxy"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The PrivateEndpointConnectionProxy items on this page. Required.
        :paramtype value:
         list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionProxy]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PrivateEndpointConnectionProxyProperties(_serialization.Model):
    """Represents private endpoint connection proxy request.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Gets or sets the provisioning state of the private endpoint
     connection proxy. Known values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed",
     "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar remote_private_endpoint: Represent remote private endpoint information for the private
     endpoint connection proxy.
    :vartype remote_private_endpoint:
     ~azure.mgmt.recoveryservicesdatareplication.models.RemotePrivateEndpoint
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "remote_private_endpoint": {"key": "remotePrivateEndpoint", "type": "RemotePrivateEndpoint"},
    }

    def __init__(
        self, *, remote_private_endpoint: Optional["_models.RemotePrivateEndpoint"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword remote_private_endpoint: Represent remote private endpoint information for the private
         endpoint connection proxy.
        :paramtype remote_private_endpoint:
         ~azure.mgmt.recoveryservicesdatareplication.models.RemotePrivateEndpoint
        """
        super().__init__(**kwargs)
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.remote_private_endpoint = remote_private_endpoint


class PrivateEndpointConnectionResponseProperties(_serialization.Model):  # pylint: disable=name-too-long
    """Represents Private endpoint connection response properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Gets or sets provisioning state of the private endpoint connection.
     Known values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar private_endpoint: Represent private Endpoint network resource that is linked to the
     Private Endpoint connection.
    :vartype private_endpoint: ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpoint
    :ivar private_link_service_connection_state: Represents Private link service connection state.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "private_endpoint": {"key": "privateEndpoint", "type": "PrivateEndpoint"},
        "private_link_service_connection_state": {
            "key": "privateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
    }

    def __init__(
        self,
        *,
        private_endpoint: Optional["_models.PrivateEndpoint"] = None,
        private_link_service_connection_state: Optional["_models.PrivateLinkServiceConnectionState"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword private_endpoint: Represent private Endpoint network resource that is linked to the
         Private Endpoint connection.
        :paramtype private_endpoint: ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpoint
        :keyword private_link_service_connection_state: Represents Private link service connection
         state.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState
        """
        super().__init__(**kwargs)
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.private_endpoint = private_endpoint
        self.private_link_service_connection_state = private_link_service_connection_state


class PrivateLinkResource(ProxyResource):
    """Represents private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PrivateLinkResourceProperties"},
    }

    def __init__(self, *, properties: Optional["_models.PrivateLinkResourceProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkResourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class PrivateLinkResourceListResult(_serialization.Model):
    """The response of a PrivateLinkResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PrivateLinkResource items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateLinkResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.PrivateLinkResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The PrivateLinkResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PrivateLinkResourceProperties(_serialization.Model):
    """Represents private link resource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar group_id: Gets or sets the group id.
    :vartype group_id: str
    :ivar required_members: Gets or sets the required member. This translates to how many Private
     IPs should be created for each privately linkable resource.
    :vartype required_members: list[str]
    :ivar required_zone_names: Gets or sets the private DNS zone names.
    :vartype required_zone_names: list[str]
    :ivar provisioning_state: Gets or sets the provisioning state of the private link resource.
     Known values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "group_id": {"key": "groupId", "type": "str"},
        "required_members": {"key": "requiredMembers", "type": "[str]"},
        "required_zone_names": {"key": "requiredZoneNames", "type": "[str]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        group_id: Optional[str] = None,
        required_members: Optional[List[str]] = None,
        required_zone_names: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword group_id: Gets or sets the group id.
        :paramtype group_id: str
        :keyword required_members: Gets or sets the required member. This translates to how many
         Private IPs should be created for each privately linkable resource.
        :paramtype required_members: list[str]
        :keyword required_zone_names: Gets or sets the private DNS zone names.
        :paramtype required_zone_names: list[str]
        """
        super().__init__(**kwargs)
        self.group_id = group_id
        self.required_members = required_members
        self.required_zone_names = required_zone_names
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None


class PrivateLinkServiceConnection(_serialization.Model):
    """Represents of an NRP private link service connection.

    :ivar name: Gets or sets private link service connection name.
    :vartype name: str
    :ivar group_ids: Gets or sets group ids.
    :vartype group_ids: list[str]
    :ivar request_message: Gets or sets the request message for the private link service
     connection.
    :vartype request_message: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "group_ids": {"key": "groupIds", "type": "[str]"},
        "request_message": {"key": "requestMessage", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        group_ids: Optional[List[str]] = None,
        request_message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Gets or sets private link service connection name.
        :paramtype name: str
        :keyword group_ids: Gets or sets group ids.
        :paramtype group_ids: list[str]
        :keyword request_message: Gets or sets the request message for the private link service
         connection.
        :paramtype request_message: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.group_ids = group_ids
        self.request_message = request_message


class PrivateLinkServiceConnectionState(_serialization.Model):
    """Represents Private link service connection state.

    :ivar status: Gets or sets the status. Known values are: "Approved", "Disconnected", "Pending",
     and "Rejected".
    :vartype status: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus
    :ivar description: Gets or sets description.
    :vartype description: str
    :ivar actions_required: Gets or sets actions required.
    :vartype actions_required: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "actions_required": {"key": "actionsRequired", "type": "str"},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "_models.PrivateEndpointConnectionStatus"]] = None,
        description: Optional[str] = None,
        actions_required: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: Gets or sets the status. Known values are: "Approved", "Disconnected",
         "Pending", and "Rejected".
        :paramtype status: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.PrivateEndpointConnectionStatus
        :keyword description: Gets or sets description.
        :paramtype description: str
        :keyword actions_required: Gets or sets actions required.
        :paramtype actions_required: str
        """
        super().__init__(**kwargs)
        self.status = status
        self.description = description
        self.actions_required = actions_required


class PrivateLinkServiceProxy(_serialization.Model):
    """Represents NRP private link service proxy.

    :ivar id: Gets or sets private link service proxy id.
    :vartype id: str
    :ivar remote_private_link_service_connection_state: Represents Private link service connection
     state.
    :vartype remote_private_link_service_connection_state:
     ~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState
    :ivar remote_private_endpoint_connection: Represent remote private endpoint connection.
    :vartype remote_private_endpoint_connection:
     ~azure.mgmt.recoveryservicesdatareplication.models.RemotePrivateEndpointConnection
    :ivar group_connectivity_information: Gets or sets group connectivity information.
    :vartype group_connectivity_information:
     list[~azure.mgmt.recoveryservicesdatareplication.models.GroupConnectivityInformation]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "remote_private_link_service_connection_state": {
            "key": "remotePrivateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
        "remote_private_endpoint_connection": {
            "key": "remotePrivateEndpointConnection",
            "type": "RemotePrivateEndpointConnection",
        },
        "group_connectivity_information": {
            "key": "groupConnectivityInformation",
            "type": "[GroupConnectivityInformation]",
        },
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        remote_private_link_service_connection_state: Optional["_models.PrivateLinkServiceConnectionState"] = None,
        remote_private_endpoint_connection: Optional["_models.RemotePrivateEndpointConnection"] = None,
        group_connectivity_information: Optional[List["_models.GroupConnectivityInformation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets private link service proxy id.
        :paramtype id: str
        :keyword remote_private_link_service_connection_state: Represents Private link service
         connection state.
        :paramtype remote_private_link_service_connection_state:
         ~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnectionState
        :keyword remote_private_endpoint_connection: Represent remote private endpoint connection.
        :paramtype remote_private_endpoint_connection:
         ~azure.mgmt.recoveryservicesdatareplication.models.RemotePrivateEndpointConnection
        :keyword group_connectivity_information: Gets or sets group connectivity information.
        :paramtype group_connectivity_information:
         list[~azure.mgmt.recoveryservicesdatareplication.models.GroupConnectivityInformation]
        """
        super().__init__(**kwargs)
        self.id = id
        self.remote_private_link_service_connection_state = remote_private_link_service_connection_state
        self.remote_private_endpoint_connection = remote_private_endpoint_connection
        self.group_connectivity_information = group_connectivity_information


class ProtectedItemDynamicMemoryConfig(_serialization.Model):
    """Protected item dynamic memory config.

    All required parameters must be populated in order to send to server.

    :ivar maximum_memory_in_mega_bytes: Gets or sets maximum memory in MB. Required.
    :vartype maximum_memory_in_mega_bytes: int
    :ivar minimum_memory_in_mega_bytes: Gets or sets minimum memory in MB. Required.
    :vartype minimum_memory_in_mega_bytes: int
    :ivar target_memory_buffer_percentage: Gets or sets target memory buffer in %. Required.
    :vartype target_memory_buffer_percentage: int
    """

    _validation = {
        "maximum_memory_in_mega_bytes": {"required": True},
        "minimum_memory_in_mega_bytes": {"required": True},
        "target_memory_buffer_percentage": {"required": True},
    }

    _attribute_map = {
        "maximum_memory_in_mega_bytes": {"key": "maximumMemoryInMegaBytes", "type": "int"},
        "minimum_memory_in_mega_bytes": {"key": "minimumMemoryInMegaBytes", "type": "int"},
        "target_memory_buffer_percentage": {"key": "targetMemoryBufferPercentage", "type": "int"},
    }

    def __init__(
        self,
        *,
        maximum_memory_in_mega_bytes: int,
        minimum_memory_in_mega_bytes: int,
        target_memory_buffer_percentage: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword maximum_memory_in_mega_bytes: Gets or sets maximum memory in MB. Required.
        :paramtype maximum_memory_in_mega_bytes: int
        :keyword minimum_memory_in_mega_bytes: Gets or sets minimum memory in MB. Required.
        :paramtype minimum_memory_in_mega_bytes: int
        :keyword target_memory_buffer_percentage: Gets or sets target memory buffer in %. Required.
        :paramtype target_memory_buffer_percentage: int
        """
        super().__init__(**kwargs)
        self.maximum_memory_in_mega_bytes = maximum_memory_in_mega_bytes
        self.minimum_memory_in_mega_bytes = minimum_memory_in_mega_bytes
        self.target_memory_buffer_percentage = target_memory_buffer_percentage


class ProtectedItemJobProperties(_serialization.Model):
    """Protected item job properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar scenario_name: Gets or sets protection scenario name.
    :vartype scenario_name: str
    :ivar id: Gets or sets job Id.
    :vartype id: str
    :ivar name: Gets or sets job name.
    :vartype name: str
    :ivar display_name: Gets or sets the job friendly display name.
    :vartype display_name: str
    :ivar state: Gets or sets job state.
    :vartype state: str
    :ivar start_time: Gets or sets start time of the job.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets end time of the job.
    :vartype end_time: ~datetime.datetime
    """

    _validation = {
        "scenario_name": {"readonly": True},
        "id": {"readonly": True},
        "name": {"readonly": True},
        "display_name": {"readonly": True},
        "state": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
    }

    _attribute_map = {
        "scenario_name": {"key": "scenarioName", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.scenario_name: Optional[str] = None
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.display_name: Optional[str] = None
        self.state: Optional[str] = None
        self.start_time: Optional[datetime.datetime] = None
        self.end_time: Optional[datetime.datetime] = None


class ProtectedItemModel(ProxyResource):
    """Protected item model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ProtectedItemModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ProtectedItemModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ProtectedItemModelListResult(_serialization.Model):
    """The response of a ProtectedItemModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ProtectedItemModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ProtectedItemModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ProtectedItemModel"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ProtectedItemModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProtectedItemModelProperties(_serialization.Model):
    """Protected item model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar policy_name: Gets or sets the policy name. Required.
    :vartype policy_name: str
    :ivar replication_extension_name: Gets or sets the replication extension name. Required.
    :vartype replication_extension_name: str
    :ivar correlation_id: Gets or sets the protected item correlation Id.
    :vartype correlation_id: str
    :ivar provisioning_state: Gets or sets the provisioning state of the fabric agent. Known values
     are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar protection_state: Gets or sets the protection state. Known values are:
     "UnprotectedStatesBegin", "EnablingProtection", "EnablingFailed", "DisablingProtection",
     "MarkedForDeletion", "DisablingFailed", "UnprotectedStatesEnd",
     "InitialReplicationStatesBegin", "InitialReplicationInProgress",
     "InitialReplicationCompletedOnPrimary", "InitialReplicationCompletedOnRecovery",
     "InitialReplicationFailed", "InitialReplicationStatesEnd", "ProtectedStatesBegin", "Protected",
     "ProtectedStatesEnd", "PlannedFailoverTransitionStatesBegin", "PlannedFailoverInitiated",
     "PlannedFailoverCompleting", "PlannedFailoverCompleted", "PlannedFailoverFailed",
     "PlannedFailoverCompletionFailed", "PlannedFailoverTransitionStatesEnd",
     "UnplannedFailoverTransitionStatesBegin", "UnplannedFailoverInitiated",
     "UnplannedFailoverCompleting", "UnplannedFailoverCompleted", "UnplannedFailoverFailed",
     "UnplannedFailoverCompletionFailed", "UnplannedFailoverTransitionStatesEnd",
     "CommitFailoverStatesBegin", "CommitFailoverInProgressOnPrimary",
     "CommitFailoverInProgressOnRecovery", "CommitFailoverCompleted",
     "CommitFailoverFailedOnPrimary", "CommitFailoverFailedOnRecovery", "CommitFailoverStatesEnd",
     "CancelFailoverStatesBegin", "CancelFailoverInProgressOnPrimary",
     "CancelFailoverInProgressOnRecovery", "CancelFailoverFailedOnPrimary",
     "CancelFailoverFailedOnRecovery", "CancelFailoverStatesEnd", "ChangeRecoveryPointStatesBegin",
     "ChangeRecoveryPointInitiated", "ChangeRecoveryPointCompleted", "ChangeRecoveryPointFailed",
     "ChangeRecoveryPointStatesEnd", "ReprotectStatesBegin", "ReprotectInitiated",
     "ReprotectFailed", and "ReprotectStatesEnd".
    :vartype protection_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectionState
    :ivar protection_state_description: Gets or sets the protection state description.
    :vartype protection_state_description: str
    :ivar test_failover_state: Gets or sets the test failover state. Known values are: "None",
     "TestFailoverInitiated", "TestFailoverCompleting", "TestFailoverCompleted",
     "TestFailoverFailed", "TestFailoverCompletionFailed", "TestFailoverCleanupInitiated",
     "TestFailoverCleanupCompleting", and "MarkedForDeletion".
    :vartype test_failover_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.TestFailoverState
    :ivar test_failover_state_description: Gets or sets the Test failover state description.
    :vartype test_failover_state_description: str
    :ivar resynchronization_state: Gets or sets the resynchronization state. Known values are:
     "None", "ResynchronizationInitiated", "ResynchronizationCompleted", and
     "ResynchronizationFailed".
    :vartype resynchronization_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ResynchronizationState
    :ivar fabric_object_id: Gets or sets the fabric object Id.
    :vartype fabric_object_id: str
    :ivar fabric_object_name: Gets or sets the fabric object name.
    :vartype fabric_object_name: str
    :ivar source_fabric_provider_id: Gets or sets the source fabric provider Id.
    :vartype source_fabric_provider_id: str
    :ivar target_fabric_provider_id: Gets or sets the target fabric provider Id.
    :vartype target_fabric_provider_id: str
    :ivar fabric_id: Gets or sets the fabric Id.
    :vartype fabric_id: str
    :ivar target_fabric_id: Gets or sets the target fabric Id.
    :vartype target_fabric_id: str
    :ivar fabric_agent_id: Gets or sets the fabric agent Id.
    :vartype fabric_agent_id: str
    :ivar target_fabric_agent_id: Gets or sets the target fabric agent Id.
    :vartype target_fabric_agent_id: str
    :ivar resync_required: Gets or sets a value indicating whether resynchronization is required or
     not.
    :vartype resync_required: bool
    :ivar last_successful_planned_failover_time: Gets or sets the Last successful planned failover
     time.
    :vartype last_successful_planned_failover_time: ~datetime.datetime
    :ivar last_successful_unplanned_failover_time: Gets or sets the Last successful unplanned
     failover time.
    :vartype last_successful_unplanned_failover_time: ~datetime.datetime
    :ivar last_successful_test_failover_time: Gets or sets the Last successful test failover time.
    :vartype last_successful_test_failover_time: ~datetime.datetime
    :ivar current_job: Gets or sets the current scenario.
    :vartype current_job:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemJobProperties
    :ivar allowed_jobs: Gets or sets the allowed scenarios on the protected item.
    :vartype allowed_jobs: list[str]
    :ivar last_failed_enable_protection_job: Gets or sets the last failed enabled protection job.
    :vartype last_failed_enable_protection_job:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemJobProperties
    :ivar last_failed_planned_failover_job: Gets or sets the last failed planned failover job.
    :vartype last_failed_planned_failover_job:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemJobProperties
    :ivar last_test_failover_job: Gets or sets the last test failover job.
    :vartype last_test_failover_job:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemJobProperties
    :ivar replication_health: Gets or sets protected item replication health. Known values are:
     "Normal", "Warning", and "Critical".
    :vartype replication_health: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.HealthStatus
    :ivar health_errors: Gets or sets the list of health errors.
    :vartype health_errors:
     list[~azure.mgmt.recoveryservicesdatareplication.models.HealthErrorModel]
    :ivar custom_properties: Protected item model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelCustomProperties
    """

    _validation = {
        "policy_name": {"required": True, "min_length": 1},
        "replication_extension_name": {"required": True, "min_length": 1},
        "correlation_id": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "protection_state": {"readonly": True},
        "protection_state_description": {"readonly": True},
        "test_failover_state": {"readonly": True},
        "test_failover_state_description": {"readonly": True},
        "resynchronization_state": {"readonly": True},
        "fabric_object_id": {"readonly": True},
        "fabric_object_name": {"readonly": True},
        "source_fabric_provider_id": {"readonly": True},
        "target_fabric_provider_id": {"readonly": True},
        "fabric_id": {"readonly": True},
        "target_fabric_id": {"readonly": True},
        "fabric_agent_id": {"readonly": True},
        "target_fabric_agent_id": {"readonly": True},
        "resync_required": {"readonly": True},
        "last_successful_planned_failover_time": {"readonly": True},
        "last_successful_unplanned_failover_time": {"readonly": True},
        "last_successful_test_failover_time": {"readonly": True},
        "current_job": {"readonly": True},
        "allowed_jobs": {"readonly": True},
        "last_failed_enable_protection_job": {"readonly": True},
        "last_failed_planned_failover_job": {"readonly": True},
        "last_test_failover_job": {"readonly": True},
        "replication_health": {"readonly": True},
        "health_errors": {"readonly": True},
        "custom_properties": {"required": True},
    }

    _attribute_map = {
        "policy_name": {"key": "policyName", "type": "str"},
        "replication_extension_name": {"key": "replicationExtensionName", "type": "str"},
        "correlation_id": {"key": "correlationId", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "protection_state": {"key": "protectionState", "type": "str"},
        "protection_state_description": {"key": "protectionStateDescription", "type": "str"},
        "test_failover_state": {"key": "testFailoverState", "type": "str"},
        "test_failover_state_description": {"key": "testFailoverStateDescription", "type": "str"},
        "resynchronization_state": {"key": "resynchronizationState", "type": "str"},
        "fabric_object_id": {"key": "fabricObjectId", "type": "str"},
        "fabric_object_name": {"key": "fabricObjectName", "type": "str"},
        "source_fabric_provider_id": {"key": "sourceFabricProviderId", "type": "str"},
        "target_fabric_provider_id": {"key": "targetFabricProviderId", "type": "str"},
        "fabric_id": {"key": "fabricId", "type": "str"},
        "target_fabric_id": {"key": "targetFabricId", "type": "str"},
        "fabric_agent_id": {"key": "fabricAgentId", "type": "str"},
        "target_fabric_agent_id": {"key": "targetFabricAgentId", "type": "str"},
        "resync_required": {"key": "resyncRequired", "type": "bool"},
        "last_successful_planned_failover_time": {"key": "lastSuccessfulPlannedFailoverTime", "type": "iso-8601"},
        "last_successful_unplanned_failover_time": {"key": "lastSuccessfulUnplannedFailoverTime", "type": "iso-8601"},
        "last_successful_test_failover_time": {"key": "lastSuccessfulTestFailoverTime", "type": "iso-8601"},
        "current_job": {"key": "currentJob", "type": "ProtectedItemJobProperties"},
        "allowed_jobs": {"key": "allowedJobs", "type": "[str]"},
        "last_failed_enable_protection_job": {
            "key": "lastFailedEnableProtectionJob",
            "type": "ProtectedItemJobProperties",
        },
        "last_failed_planned_failover_job": {
            "key": "lastFailedPlannedFailoverJob",
            "type": "ProtectedItemJobProperties",
        },
        "last_test_failover_job": {"key": "lastTestFailoverJob", "type": "ProtectedItemJobProperties"},
        "replication_health": {"key": "replicationHealth", "type": "str"},
        "health_errors": {"key": "healthErrors", "type": "[HealthErrorModel]"},
        "custom_properties": {"key": "customProperties", "type": "ProtectedItemModelCustomProperties"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        policy_name: str,
        replication_extension_name: str,
        custom_properties: "_models.ProtectedItemModelCustomProperties",
        **kwargs: Any
    ) -> None:
        """
        :keyword policy_name: Gets or sets the policy name. Required.
        :paramtype policy_name: str
        :keyword replication_extension_name: Gets or sets the replication extension name. Required.
        :paramtype replication_extension_name: str
        :keyword custom_properties: Protected item model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelCustomProperties
        """
        super().__init__(**kwargs)
        self.policy_name = policy_name
        self.replication_extension_name = replication_extension_name
        self.correlation_id: Optional[str] = None
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.protection_state: Optional[Union[str, "_models.ProtectionState"]] = None
        self.protection_state_description: Optional[str] = None
        self.test_failover_state: Optional[Union[str, "_models.TestFailoverState"]] = None
        self.test_failover_state_description: Optional[str] = None
        self.resynchronization_state: Optional[Union[str, "_models.ResynchronizationState"]] = None
        self.fabric_object_id: Optional[str] = None
        self.fabric_object_name: Optional[str] = None
        self.source_fabric_provider_id: Optional[str] = None
        self.target_fabric_provider_id: Optional[str] = None
        self.fabric_id: Optional[str] = None
        self.target_fabric_id: Optional[str] = None
        self.fabric_agent_id: Optional[str] = None
        self.target_fabric_agent_id: Optional[str] = None
        self.resync_required: Optional[bool] = None
        self.last_successful_planned_failover_time: Optional[datetime.datetime] = None
        self.last_successful_unplanned_failover_time: Optional[datetime.datetime] = None
        self.last_successful_test_failover_time: Optional[datetime.datetime] = None
        self.current_job: Optional["_models.ProtectedItemJobProperties"] = None
        self.allowed_jobs: Optional[List[str]] = None
        self.last_failed_enable_protection_job: Optional["_models.ProtectedItemJobProperties"] = None
        self.last_failed_planned_failover_job: Optional["_models.ProtectedItemJobProperties"] = None
        self.last_test_failover_job: Optional["_models.ProtectedItemJobProperties"] = None
        self.replication_health: Optional[Union[str, "_models.HealthStatus"]] = None
        self.health_errors: Optional[List["_models.HealthErrorModel"]] = None
        self.custom_properties = custom_properties


class ProtectedItemModelPropertiesUpdate(_serialization.Model):
    """Protected item model properties update.

    :ivar custom_properties: Protected item model custom properties update.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelCustomPropertiesUpdate
    """

    _attribute_map = {
        "custom_properties": {"key": "customProperties", "type": "ProtectedItemModelCustomPropertiesUpdate"},
    }

    def __init__(
        self, *, custom_properties: Optional["_models.ProtectedItemModelCustomPropertiesUpdate"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword custom_properties: Protected item model custom properties update.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelCustomPropertiesUpdate
        """
        super().__init__(**kwargs)
        self.custom_properties = custom_properties


class ProtectedItemModelUpdate(_serialization.Model):
    """Protected item model update.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar properties: Protected item model properties.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelPropertiesUpdate
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "ProtectedItemModelPropertiesUpdate"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self, *, properties: Optional["_models.ProtectedItemModelPropertiesUpdate"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: Protected item model properties.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemModelPropertiesUpdate
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.type: Optional[str] = None
        self.system_data: Optional["_models.SystemData"] = None


class RecoveryPointModel(ProxyResource):
    """Recovery point model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "RecoveryPointModelProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RecoveryPointModelProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class RecoveryPointModelListResult(_serialization.Model):
    """The response of a RecoveryPointModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The RecoveryPointModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[RecoveryPointModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.RecoveryPointModel"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The RecoveryPointModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class RecoveryPointModelProperties(_serialization.Model):
    """Recovery point model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar recovery_point_time: Gets or sets the recovery point time. Required.
    :vartype recovery_point_time: ~datetime.datetime
    :ivar recovery_point_type: Gets or sets the recovery point type. Required. Known values are:
     "ApplicationConsistent" and "CrashConsistent".
    :vartype recovery_point_type: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointType
    :ivar custom_properties: Recovery point model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointModelCustomProperties
    :ivar provisioning_state: Gets or sets the provisioning state of the recovery point item. Known
     values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    """

    _validation = {
        "recovery_point_time": {"required": True},
        "recovery_point_type": {"required": True},
        "custom_properties": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "recovery_point_time": {"key": "recoveryPointTime", "type": "iso-8601"},
        "recovery_point_type": {"key": "recoveryPointType", "type": "str"},
        "custom_properties": {"key": "customProperties", "type": "RecoveryPointModelCustomProperties"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        recovery_point_time: datetime.datetime,
        recovery_point_type: Union[str, "_models.RecoveryPointType"],
        custom_properties: "_models.RecoveryPointModelCustomProperties",
        **kwargs: Any
    ) -> None:
        """
        :keyword recovery_point_time: Gets or sets the recovery point time. Required.
        :paramtype recovery_point_time: ~datetime.datetime
        :keyword recovery_point_type: Gets or sets the recovery point type. Required. Known values are:
         "ApplicationConsistent" and "CrashConsistent".
        :paramtype recovery_point_type: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointType
        :keyword custom_properties: Recovery point model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.RecoveryPointModelCustomProperties
        """
        super().__init__(**kwargs)
        self.recovery_point_time = recovery_point_time
        self.recovery_point_type = recovery_point_type
        self.custom_properties = custom_properties
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None


class RemotePrivateEndpoint(_serialization.Model):
    """Represent remote private endpoint information for the private endpoint connection proxy.

    All required parameters must be populated in order to send to server.

    :ivar id: Gets or sets private link service proxy id. Required.
    :vartype id: str
    :ivar private_link_service_connections: Gets or sets the list of Private Link Service
     Connections and gets populated for Auto approval flow.
    :vartype private_link_service_connections:
     list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnection]
    :ivar manual_private_link_service_connections: Gets or sets the list of Manual Private Link
     Service Connections and gets populated for Manual approval flow.
    :vartype manual_private_link_service_connections:
     list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnection]
    :ivar private_link_service_proxies: Gets or sets the list of private link service proxies.
    :vartype private_link_service_proxies:
     list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceProxy]
    :ivar connection_details: Gets or sets the list of Connection Details. This is the connection
     details for private endpoint.
    :vartype connection_details:
     list[~azure.mgmt.recoveryservicesdatareplication.models.ConnectionDetails]
    """

    _validation = {
        "id": {"required": True, "min_length": 1},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "private_link_service_connections": {
            "key": "privateLinkServiceConnections",
            "type": "[PrivateLinkServiceConnection]",
        },
        "manual_private_link_service_connections": {
            "key": "manualPrivateLinkServiceConnections",
            "type": "[PrivateLinkServiceConnection]",
        },
        "private_link_service_proxies": {"key": "privateLinkServiceProxies", "type": "[PrivateLinkServiceProxy]"},
        "connection_details": {"key": "connectionDetails", "type": "[ConnectionDetails]"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        private_link_service_connections: Optional[List["_models.PrivateLinkServiceConnection"]] = None,
        manual_private_link_service_connections: Optional[List["_models.PrivateLinkServiceConnection"]] = None,
        private_link_service_proxies: Optional[List["_models.PrivateLinkServiceProxy"]] = None,
        connection_details: Optional[List["_models.ConnectionDetails"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets private link service proxy id. Required.
        :paramtype id: str
        :keyword private_link_service_connections: Gets or sets the list of Private Link Service
         Connections and gets populated for Auto approval flow.
        :paramtype private_link_service_connections:
         list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnection]
        :keyword manual_private_link_service_connections: Gets or sets the list of Manual Private Link
         Service Connections and gets populated for Manual approval flow.
        :paramtype manual_private_link_service_connections:
         list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceConnection]
        :keyword private_link_service_proxies: Gets or sets the list of private link service proxies.
        :paramtype private_link_service_proxies:
         list[~azure.mgmt.recoveryservicesdatareplication.models.PrivateLinkServiceProxy]
        :keyword connection_details: Gets or sets the list of Connection Details. This is the
         connection details for private endpoint.
        :paramtype connection_details:
         list[~azure.mgmt.recoveryservicesdatareplication.models.ConnectionDetails]
        """
        super().__init__(**kwargs)
        self.id = id
        self.private_link_service_connections = private_link_service_connections
        self.manual_private_link_service_connections = manual_private_link_service_connections
        self.private_link_service_proxies = private_link_service_proxies
        self.connection_details = connection_details


class RemotePrivateEndpointConnection(_serialization.Model):
    """Represent remote private endpoint connection.

    :ivar id: Gets or sets the remote private endpoint connection id.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: Gets or sets the remote private endpoint connection id.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class ReplicationExtensionModel(ProxyResource):
    """Replication extension model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.ReplicationExtensionModelProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ReplicationExtensionModelProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.ReplicationExtensionModelProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.ReplicationExtensionModelProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ReplicationExtensionModelListResult(_serialization.Model):
    """The response of a ReplicationExtensionModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ReplicationExtensionModel items on this page. Required.
    :vartype value:
     list[~azure.mgmt.recoveryservicesdatareplication.models.ReplicationExtensionModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ReplicationExtensionModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ReplicationExtensionModel"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ReplicationExtensionModel items on this page. Required.
        :paramtype value:
         list[~azure.mgmt.recoveryservicesdatareplication.models.ReplicationExtensionModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ReplicationExtensionModelProperties(_serialization.Model):
    """Replication extension model properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar provisioning_state: Gets or sets the provisioning state of the replication extension.
     Known values are: "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and
     "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar custom_properties: Replication extension model custom properties. Required.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.ReplicationExtensionModelCustomProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "custom_properties": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "custom_properties": {"key": "customProperties", "type": "ReplicationExtensionModelCustomProperties"},
    }

    def __init__(
        self, *, custom_properties: "_models.ReplicationExtensionModelCustomProperties", **kwargs: Any
    ) -> None:
        """
        :keyword custom_properties: Replication extension model custom properties. Required.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.ReplicationExtensionModelCustomProperties
        """
        super().__init__(**kwargs)
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.custom_properties = custom_properties


class StorageContainerProperties(_serialization.Model):
    """Storage container properties.

    All required parameters must be populated in order to send to server.

    :ivar name: Gets or sets the Name. Required.
    :vartype name: str
    :ivar cluster_shared_volume_path: Gets or sets the ClusterSharedVolumePath. Required.
    :vartype cluster_shared_volume_path: str
    """

    _validation = {
        "name": {"required": True, "min_length": 1},
        "cluster_shared_volume_path": {"required": True, "min_length": 1},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "cluster_shared_volume_path": {"key": "clusterSharedVolumePath", "type": "str"},
    }

    def __init__(self, *, name: str, cluster_shared_volume_path: str, **kwargs: Any) -> None:
        """
        :keyword name: Gets or sets the Name. Required.
        :paramtype name: str
        :keyword cluster_shared_volume_path: Gets or sets the ClusterSharedVolumePath. Required.
        :paramtype cluster_shared_volume_path: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.cluster_shared_volume_path = cluster_shared_volume_path


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TaskModel(_serialization.Model):
    """Task model.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar task_name: Gets or sets the task name.
    :vartype task_name: str
    :ivar state: Gets or sets the task state. Known values are: "Pending", "Started", "Succeeded",
     "Failed", "Cancelled", and "Skipped".
    :vartype state: str or ~azure.mgmt.recoveryservicesdatareplication.models.TaskState
    :ivar start_time: Gets or sets the start time.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: Gets or sets the end time.
    :vartype end_time: ~datetime.datetime
    :ivar custom_properties: Task model custom properties.
    :vartype custom_properties:
     ~azure.mgmt.recoveryservicesdatareplication.models.TaskModelCustomProperties
    :ivar children_jobs: Gets or sets the list of children job models.
    :vartype children_jobs: list[~azure.mgmt.recoveryservicesdatareplication.models.JobModel]
    """

    _validation = {
        "task_name": {"readonly": True},
        "state": {"readonly": True},
        "start_time": {"readonly": True},
        "end_time": {"readonly": True},
    }

    _attribute_map = {
        "task_name": {"key": "taskName", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
        "end_time": {"key": "endTime", "type": "iso-8601"},
        "custom_properties": {"key": "customProperties", "type": "TaskModelCustomProperties"},
        "children_jobs": {"key": "childrenJobs", "type": "[JobModel]"},
    }

    def __init__(
        self,
        *,
        custom_properties: Optional["_models.TaskModelCustomProperties"] = None,
        children_jobs: Optional[List["_models.JobModel"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword custom_properties: Task model custom properties.
        :paramtype custom_properties:
         ~azure.mgmt.recoveryservicesdatareplication.models.TaskModelCustomProperties
        :keyword children_jobs: Gets or sets the list of children job models.
        :paramtype children_jobs: list[~azure.mgmt.recoveryservicesdatareplication.models.JobModel]
        """
        super().__init__(**kwargs)
        self.task_name: Optional[str] = None
        self.state: Optional[Union[str, "_models.TaskState"]] = None
        self.start_time: Optional[datetime.datetime] = None
        self.end_time: Optional[datetime.datetime] = None
        self.custom_properties = custom_properties
        self.children_jobs = children_jobs


class TaskModelCustomProperties(_serialization.Model):
    """Task model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Gets or sets the instance type. Required.
    :vartype instance_type: str
    """

    _validation = {
        "instance_type": {"required": True, "min_length": 1},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
    }

    def __init__(self, *, instance_type: str, **kwargs: Any) -> None:
        """
        :keyword instance_type: Gets or sets the instance type. Required.
        :paramtype instance_type: str
        """
        super().__init__(**kwargs)
        self.instance_type = instance_type


class TestFailoverCleanupJobModelCustomProperties(JobModelCustomProperties):  # pylint: disable=name-too-long
    """Test failover cleanup job model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for JobModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details:
     ~azure.mgmt.recoveryservicesdatareplication.models.JobModelCustomPropertiesAffectedObjectDetails
    :ivar comments: Gets or sets the test failover cleanup comments.
    :vartype comments: str
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "comments": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {
            "key": "affectedObjectDetails",
            "type": "JobModelCustomPropertiesAffectedObjectDetails",
        },
        "comments": {"key": "comments", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "TestFailoverCleanupJobDetails"
        self.comments: Optional[str] = None


class TestFailoverJobModelCustomProperties(JobModelCustomProperties):
    """Test failover job model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for JobModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar affected_object_details: Gets or sets any custom properties of the affected object.
    :vartype affected_object_details:
     ~azure.mgmt.recoveryservicesdatareplication.models.JobModelCustomPropertiesAffectedObjectDetails
    :ivar protected_item_details: Gets or sets the test VM details.
    :vartype protected_item_details:
     list[~azure.mgmt.recoveryservicesdatareplication.models.FailoverProtectedItemProperties]
    """

    _validation = {
        "instance_type": {"required": True},
        "affected_object_details": {"readonly": True},
        "protected_item_details": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "affected_object_details": {
            "key": "affectedObjectDetails",
            "type": "JobModelCustomPropertiesAffectedObjectDetails",
        },
        "protected_item_details": {"key": "protectedItemDetails", "type": "[FailoverProtectedItemProperties]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "TestFailoverJobDetails"
        self.protected_item_details: Optional[List["_models.FailoverProtectedItemProperties"]] = None


class UserAssignedIdentity(_serialization.Model):
    """User assigned identity properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of the assigned identity.
    :vartype principal_id: str
    :ivar client_id: The client ID of the assigned identity.
    :vartype client_id: str
    """

    _validation = {
        "principal_id": {"readonly": True},
        "client_id": {"readonly": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.principal_id: Optional[str] = None
        self.client_id: Optional[str] = None


class VaultIdentityModel(_serialization.Model):
    """Vault model.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar type: Gets or sets the identityType which can be either SystemAssigned or None. Required.
     Known values are: "None", "SystemAssigned", and "UserAssigned".
    :vartype type: str or ~azure.mgmt.recoveryservicesdatareplication.models.VaultIdentityType
    :ivar principal_id: Gets or sets the object ID of the service principal object for the managed
     identity that is used to grant role-based access to an Azure resource.
    :vartype principal_id: str
    :ivar tenant_id: Gets or sets a Globally Unique Identifier (GUID) that represents the Azure AD
     tenant where the resource is now a member.
    :vartype tenant_id: str
    """

    _validation = {
        "type": {"required": True},
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
    }

    def __init__(self, *, type: Union[str, "_models.VaultIdentityType"], **kwargs: Any) -> None:
        """
        :keyword type: Gets or sets the identityType which can be either SystemAssigned or None.
         Required. Known values are: "None", "SystemAssigned", and "UserAssigned".
        :paramtype type: str or ~azure.mgmt.recoveryservicesdatareplication.models.VaultIdentityType
        """
        super().__init__(**kwargs)
        self.type = type
        self.principal_id: Optional[str] = None
        self.tenant_id: Optional[str] = None


class VaultModel(TrackedResource):
    """Vault model.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.VaultModelProperties
    :ivar identity: The managed service identities assigned to this resource.
    :vartype identity: ~azure.mgmt.recoveryservicesdatareplication.models.ManagedServiceIdentity
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "VaultModelProperties"},
        "identity": {"key": "identity", "type": "ManagedServiceIdentity"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.VaultModelProperties"] = None,
        identity: Optional["_models.ManagedServiceIdentity"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.VaultModelProperties
        :keyword identity: The managed service identities assigned to this resource.
        :paramtype identity: ~azure.mgmt.recoveryservicesdatareplication.models.ManagedServiceIdentity
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.identity = identity


class VaultModelListResult(_serialization.Model):
    """The response of a VaultModel list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VaultModel items on this page. Required.
    :vartype value: list[~azure.mgmt.recoveryservicesdatareplication.models.VaultModel]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VaultModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.VaultModel"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The VaultModel items on this page. Required.
        :paramtype value: list[~azure.mgmt.recoveryservicesdatareplication.models.VaultModel]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VaultModelProperties(_serialization.Model):
    """Vault properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Gets or sets the provisioning state of the vault. Known values are:
     "Canceled", "Creating", "Deleting", "Deleted", "Failed", "Succeeded", and "Updating".
    :vartype provisioning_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProvisioningState
    :ivar service_resource_id: Gets or sets the service resource Id.
    :vartype service_resource_id: str
    :ivar vault_type: Gets or sets the type of vault. Known values are: "DisasterRecovery" and
     "Migrate".
    :vartype vault_type: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ReplicationVaultType
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "service_resource_id": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "service_resource_id": {"key": "serviceResourceId", "type": "str"},
        "vault_type": {"key": "vaultType", "type": "str"},
    }

    def __init__(
        self, *, vault_type: Optional[Union[str, "_models.ReplicationVaultType"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword vault_type: Gets or sets the type of vault. Known values are: "DisasterRecovery" and
         "Migrate".
        :paramtype vault_type: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.ReplicationVaultType
        """
        super().__init__(**kwargs)
        self.provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None
        self.service_resource_id: Optional[str] = None
        self.vault_type = vault_type


class VaultModelUpdate(_serialization.Model):
    """Vault model update.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tags: Gets or sets the resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: Vault properties.
    :vartype properties: ~azure.mgmt.recoveryservicesdatareplication.models.VaultModelProperties
    :ivar identity: Vault identity.
    :vartype identity: ~azure.mgmt.recoveryservicesdatareplication.models.VaultIdentityModel
    :ivar id: Gets or sets the Id of the resource.
    :vartype id: str
    :ivar name: Gets or sets the name of the resource.
    :vartype name: str
    :ivar type: Gets or sets the type of the resource.
    :vartype type: str
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.recoveryservicesdatareplication.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "VaultModelProperties"},
        "identity": {"key": "identity", "type": "VaultIdentityModel"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.VaultModelProperties"] = None,
        identity: Optional["_models.VaultIdentityModel"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Gets or sets the resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: Vault properties.
        :paramtype properties: ~azure.mgmt.recoveryservicesdatareplication.models.VaultModelProperties
        :keyword identity: Vault identity.
        :paramtype identity: ~azure.mgmt.recoveryservicesdatareplication.models.VaultIdentityModel
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.properties = properties
        self.identity = identity
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.type: Optional[str] = None
        self.system_data: Optional["_models.SystemData"] = None


class VMwareFabricAgentModelCustomProperties(FabricAgentModelCustomProperties):
    """VMware fabric agent model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for FabricAgentModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar bios_id: Gets or sets the BIOS Id of the fabric agent machine. Required.
    :vartype bios_id: str
    :ivar mars_authentication_identity: Identity model. Required.
    :vartype mars_authentication_identity:
     ~azure.mgmt.recoveryservicesdatareplication.models.IdentityModel
    """

    _validation = {
        "instance_type": {"required": True},
        "bios_id": {"required": True, "min_length": 1},
        "mars_authentication_identity": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "bios_id": {"key": "biosId", "type": "str"},
        "mars_authentication_identity": {"key": "marsAuthenticationIdentity", "type": "IdentityModel"},
    }

    def __init__(self, *, bios_id: str, mars_authentication_identity: "_models.IdentityModel", **kwargs: Any) -> None:
        """
        :keyword bios_id: Gets or sets the BIOS Id of the fabric agent machine. Required.
        :paramtype bios_id: str
        :keyword mars_authentication_identity: Identity model. Required.
        :paramtype mars_authentication_identity:
         ~azure.mgmt.recoveryservicesdatareplication.models.IdentityModel
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMware"
        self.bios_id = bios_id
        self.mars_authentication_identity = mars_authentication_identity


class VMwareMigrateFabricModelCustomProperties(FabricModelCustomProperties):
    """VMware migrate fabric model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for FabricModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar vmware_site_id: Gets or sets the ARM Id of the VMware site. Required.
    :vartype vmware_site_id: str
    :ivar migration_solution_id: Gets or sets the ARM Id of the migration solution. Required.
    :vartype migration_solution_id: str
    """

    _validation = {
        "instance_type": {"required": True},
        "vmware_site_id": {"required": True},
        "migration_solution_id": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "vmware_site_id": {"key": "vmwareSiteId", "type": "str"},
        "migration_solution_id": {"key": "migrationSolutionId", "type": "str"},
    }

    def __init__(self, *, vmware_site_id: str, migration_solution_id: str, **kwargs: Any) -> None:
        """
        :keyword vmware_site_id: Gets or sets the ARM Id of the VMware site. Required.
        :paramtype vmware_site_id: str
        :keyword migration_solution_id: Gets or sets the ARM Id of the migration solution. Required.
        :paramtype migration_solution_id: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareMigrate"
        self.vmware_site_id = vmware_site_id
        self.migration_solution_id = migration_solution_id


class VMwareToAzStackHCIDiskInput(_serialization.Model):
    """VMwareToAzStack disk input.

    All required parameters must be populated in order to send to server.

    :ivar disk_id: Gets or sets the disk Id. Required.
    :vartype disk_id: str
    :ivar storage_container_id: Gets or sets the target storage account ARM Id.
    :vartype storage_container_id: str
    :ivar is_dynamic: Gets or sets a value indicating whether dynamic sizing is enabled on the
     virtual hard disk.
    :vartype is_dynamic: bool
    :ivar disk_size_gb: Gets or sets the disk size in GB. Required.
    :vartype disk_size_gb: int
    :ivar disk_file_format: Gets or sets the type of the virtual hard disk, vhd or vhdx. Required.
    :vartype disk_file_format: str
    :ivar is_os_disk: Gets or sets a value indicating whether disk is os disk. Required.
    :vartype is_os_disk: bool
    :ivar disk_block_size: Gets or sets a value of disk block size.
    :vartype disk_block_size: int
    :ivar disk_logical_sector_size: Gets or sets a value of disk logical sector size.
    :vartype disk_logical_sector_size: int
    :ivar disk_physical_sector_size: Gets or sets a value of disk physical sector size.
    :vartype disk_physical_sector_size: int
    :ivar disk_identifier: Gets or sets a value of disk identifier.
    :vartype disk_identifier: str
    :ivar disk_controller: Disk controller.
    :vartype disk_controller:
     ~azure.mgmt.recoveryservicesdatareplication.models.DiskControllerInputs
    """

    _validation = {
        "disk_id": {"required": True, "min_length": 1},
        "disk_size_gb": {"required": True},
        "disk_file_format": {"required": True, "min_length": 1},
        "is_os_disk": {"required": True},
    }

    _attribute_map = {
        "disk_id": {"key": "diskId", "type": "str"},
        "storage_container_id": {"key": "storageContainerId", "type": "str"},
        "is_dynamic": {"key": "isDynamic", "type": "bool"},
        "disk_size_gb": {"key": "diskSizeGB", "type": "int"},
        "disk_file_format": {"key": "diskFileFormat", "type": "str"},
        "is_os_disk": {"key": "isOsDisk", "type": "bool"},
        "disk_block_size": {"key": "diskBlockSize", "type": "int"},
        "disk_logical_sector_size": {"key": "diskLogicalSectorSize", "type": "int"},
        "disk_physical_sector_size": {"key": "diskPhysicalSectorSize", "type": "int"},
        "disk_identifier": {"key": "diskIdentifier", "type": "str"},
        "disk_controller": {"key": "diskController", "type": "DiskControllerInputs"},
    }

    def __init__(
        self,
        *,
        disk_id: str,
        disk_size_gb: int,
        disk_file_format: str,
        is_os_disk: bool,
        storage_container_id: Optional[str] = None,
        is_dynamic: Optional[bool] = None,
        disk_block_size: Optional[int] = None,
        disk_logical_sector_size: Optional[int] = None,
        disk_physical_sector_size: Optional[int] = None,
        disk_identifier: Optional[str] = None,
        disk_controller: Optional["_models.DiskControllerInputs"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword disk_id: Gets or sets the disk Id. Required.
        :paramtype disk_id: str
        :keyword storage_container_id: Gets or sets the target storage account ARM Id.
        :paramtype storage_container_id: str
        :keyword is_dynamic: Gets or sets a value indicating whether dynamic sizing is enabled on the
         virtual hard disk.
        :paramtype is_dynamic: bool
        :keyword disk_size_gb: Gets or sets the disk size in GB. Required.
        :paramtype disk_size_gb: int
        :keyword disk_file_format: Gets or sets the type of the virtual hard disk, vhd or vhdx.
         Required.
        :paramtype disk_file_format: str
        :keyword is_os_disk: Gets or sets a value indicating whether disk is os disk. Required.
        :paramtype is_os_disk: bool
        :keyword disk_block_size: Gets or sets a value of disk block size.
        :paramtype disk_block_size: int
        :keyword disk_logical_sector_size: Gets or sets a value of disk logical sector size.
        :paramtype disk_logical_sector_size: int
        :keyword disk_physical_sector_size: Gets or sets a value of disk physical sector size.
        :paramtype disk_physical_sector_size: int
        :keyword disk_identifier: Gets or sets a value of disk identifier.
        :paramtype disk_identifier: str
        :keyword disk_controller: Disk controller.
        :paramtype disk_controller:
         ~azure.mgmt.recoveryservicesdatareplication.models.DiskControllerInputs
        """
        super().__init__(**kwargs)
        self.disk_id = disk_id
        self.storage_container_id = storage_container_id
        self.is_dynamic = is_dynamic
        self.disk_size_gb = disk_size_gb
        self.disk_file_format = disk_file_format
        self.is_os_disk = is_os_disk
        self.disk_block_size = disk_block_size
        self.disk_logical_sector_size = disk_logical_sector_size
        self.disk_physical_sector_size = disk_physical_sector_size
        self.disk_identifier = disk_identifier
        self.disk_controller = disk_controller


class VMwareToAzStackHCIEventModelCustomProperties(EventModelCustomProperties):  # pylint: disable=name-too-long
    """VMware to  AzStackHCI event model custom properties. This class provides provider specific
    details for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and
    DataContract.HealthEvents.HealthEventType.AgentHealth.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for EventModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar event_source_friendly_name: Gets or sets the friendly name of the source which has raised
     this health event.
    :vartype event_source_friendly_name: str
    :ivar protected_item_friendly_name: Gets or sets the protected item friendly name.
    :vartype protected_item_friendly_name: str
    :ivar source_appliance_name: Gets or sets the source appliance name.
    :vartype source_appliance_name: str
    :ivar target_appliance_name: Gets or sets the source target name.
    :vartype target_appliance_name: str
    :ivar server_type: Gets or sets the server type.
    :vartype server_type: str
    """

    _validation = {
        "instance_type": {"required": True},
        "event_source_friendly_name": {"readonly": True},
        "protected_item_friendly_name": {"readonly": True},
        "source_appliance_name": {"readonly": True},
        "target_appliance_name": {"readonly": True},
        "server_type": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "event_source_friendly_name": {"key": "eventSourceFriendlyName", "type": "str"},
        "protected_item_friendly_name": {"key": "protectedItemFriendlyName", "type": "str"},
        "source_appliance_name": {"key": "sourceApplianceName", "type": "str"},
        "target_appliance_name": {"key": "targetApplianceName", "type": "str"},
        "server_type": {"key": "serverType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCI"
        self.event_source_friendly_name: Optional[str] = None
        self.protected_item_friendly_name: Optional[str] = None
        self.source_appliance_name: Optional[str] = None
        self.target_appliance_name: Optional[str] = None
        self.server_type: Optional[str] = None


class VMwareToAzStackHCINicInput(_serialization.Model):
    """VMwareToAzStackHCI NIC properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar nic_id: Gets or sets the NIC Id. Required.
    :vartype nic_id: str
    :ivar label: Gets or sets the NIC label. Required.
    :vartype label: str
    :ivar network_name: Gets or sets the network name.
    :vartype network_name: str
    :ivar target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
    :vartype target_network_id: str
    :ivar test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
    :vartype test_network_id: str
    :ivar selection_type_for_failover: Gets or sets the selection type of the NIC. Required. Known
     values are: "NotSelected", "SelectedByUser", "SelectedByDefault", and "SelectedByUserOverride".
    :vartype selection_type_for_failover: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.VMNicSelection
    :ivar is_static_ip_migration_enabled: Gets or sets a value indicating whether static ip
     migration is enabled.
    :vartype is_static_ip_migration_enabled: bool
    :ivar is_mac_migration_enabled: Gets or sets a value indicating whether mac address migration
     is enabled.
    :vartype is_mac_migration_enabled: bool
    """

    _validation = {
        "nic_id": {"required": True, "min_length": 1},
        "label": {"required": True, "min_length": 1},
        "network_name": {"readonly": True},
        "selection_type_for_failover": {"required": True},
    }

    _attribute_map = {
        "nic_id": {"key": "nicId", "type": "str"},
        "label": {"key": "label", "type": "str"},
        "network_name": {"key": "networkName", "type": "str"},
        "target_network_id": {"key": "targetNetworkId", "type": "str"},
        "test_network_id": {"key": "testNetworkId", "type": "str"},
        "selection_type_for_failover": {"key": "selectionTypeForFailover", "type": "str"},
        "is_static_ip_migration_enabled": {"key": "isStaticIpMigrationEnabled", "type": "bool"},
        "is_mac_migration_enabled": {"key": "isMacMigrationEnabled", "type": "bool"},
    }

    def __init__(
        self,
        *,
        nic_id: str,
        label: str,
        selection_type_for_failover: Union[str, "_models.VMNicSelection"],
        target_network_id: Optional[str] = None,
        test_network_id: Optional[str] = None,
        is_static_ip_migration_enabled: Optional[bool] = None,
        is_mac_migration_enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nic_id: Gets or sets the NIC Id. Required.
        :paramtype nic_id: str
        :keyword label: Gets or sets the NIC label. Required.
        :paramtype label: str
        :keyword target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
        :paramtype target_network_id: str
        :keyword test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
        :paramtype test_network_id: str
        :keyword selection_type_for_failover: Gets or sets the selection type of the NIC. Required.
         Known values are: "NotSelected", "SelectedByUser", "SelectedByDefault", and
         "SelectedByUserOverride".
        :paramtype selection_type_for_failover: str or
         ~azure.mgmt.recoveryservicesdatareplication.models.VMNicSelection
        :keyword is_static_ip_migration_enabled: Gets or sets a value indicating whether static ip
         migration is enabled.
        :paramtype is_static_ip_migration_enabled: bool
        :keyword is_mac_migration_enabled: Gets or sets a value indicating whether mac address
         migration is enabled.
        :paramtype is_mac_migration_enabled: bool
        """
        super().__init__(**kwargs)
        self.nic_id = nic_id
        self.label = label
        self.network_name: Optional[str] = None
        self.target_network_id = target_network_id
        self.test_network_id = test_network_id
        self.selection_type_for_failover = selection_type_for_failover
        self.is_static_ip_migration_enabled = is_static_ip_migration_enabled
        self.is_mac_migration_enabled = is_mac_migration_enabled


class VMwareToAzStackHCIPlannedFailoverModelCustomProperties(
    PlannedFailoverModelCustomProperties
):  # pylint: disable=name-too-long
    """VMware to AzStackHCI planned failover model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for PlannedFailoverModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar shutdown_source_vm: Gets or sets a value indicating whether VM needs to be shut down.
     Required.
    :vartype shutdown_source_vm: bool
    """

    _validation = {
        "instance_type": {"required": True},
        "shutdown_source_vm": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "shutdown_source_vm": {"key": "shutdownSourceVM", "type": "bool"},
    }

    def __init__(self, *, shutdown_source_vm: bool, **kwargs: Any) -> None:
        """
        :keyword shutdown_source_vm: Gets or sets a value indicating whether VM needs to be shut down.
         Required.
        :paramtype shutdown_source_vm: bool
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCI"
        self.shutdown_source_vm = shutdown_source_vm


class VMwareToAzStackHCIPolicyModelCustomProperties(PolicyModelCustomProperties):  # pylint: disable=name-too-long
    """VMware To AzStackHCI Policy model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for PolicyModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar recovery_point_history_in_minutes: Gets or sets the duration in minutes until which the
     recovery points need to be stored. Required.
    :vartype recovery_point_history_in_minutes: int
    :ivar crash_consistent_frequency_in_minutes: Gets or sets the crash consistent snapshot
     frequency (in minutes). Required.
    :vartype crash_consistent_frequency_in_minutes: int
    :ivar app_consistent_frequency_in_minutes: Gets or sets the app consistent snapshot frequency
     (in minutes). Required.
    :vartype app_consistent_frequency_in_minutes: int
    """

    _validation = {
        "instance_type": {"required": True},
        "recovery_point_history_in_minutes": {"required": True},
        "crash_consistent_frequency_in_minutes": {"required": True},
        "app_consistent_frequency_in_minutes": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "recovery_point_history_in_minutes": {"key": "recoveryPointHistoryInMinutes", "type": "int"},
        "crash_consistent_frequency_in_minutes": {"key": "crashConsistentFrequencyInMinutes", "type": "int"},
        "app_consistent_frequency_in_minutes": {"key": "appConsistentFrequencyInMinutes", "type": "int"},
    }

    def __init__(
        self,
        *,
        recovery_point_history_in_minutes: int,
        crash_consistent_frequency_in_minutes: int,
        app_consistent_frequency_in_minutes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword recovery_point_history_in_minutes: Gets or sets the duration in minutes until which
         the recovery points need to be stored. Required.
        :paramtype recovery_point_history_in_minutes: int
        :keyword crash_consistent_frequency_in_minutes: Gets or sets the crash consistent snapshot
         frequency (in minutes). Required.
        :paramtype crash_consistent_frequency_in_minutes: int
        :keyword app_consistent_frequency_in_minutes: Gets or sets the app consistent snapshot
         frequency (in minutes). Required.
        :paramtype app_consistent_frequency_in_minutes: int
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCI"
        self.recovery_point_history_in_minutes = recovery_point_history_in_minutes
        self.crash_consistent_frequency_in_minutes = crash_consistent_frequency_in_minutes
        self.app_consistent_frequency_in_minutes = app_consistent_frequency_in_minutes


class VMwareToAzStackHCIProtectedDiskProperties(_serialization.Model):  # pylint: disable=name-too-long
    """VMwareToAzStackHCI protected disk properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar storage_container_id: Gets or sets the ARM Id of the storage container.
    :vartype storage_container_id: str
    :ivar storage_container_local_path: Gets or sets the local path of the storage container.
    :vartype storage_container_local_path: str
    :ivar source_disk_id: Gets or sets the source disk Id.
    :vartype source_disk_id: str
    :ivar source_disk_name: Gets or sets the source disk Name.
    :vartype source_disk_name: str
    :ivar seed_disk_name: Gets or sets the seed disk name.
    :vartype seed_disk_name: str
    :ivar test_migrate_disk_name: Gets or sets the test failover clone disk.
    :vartype test_migrate_disk_name: str
    :ivar migrate_disk_name: Gets or sets the failover clone disk.
    :vartype migrate_disk_name: str
    :ivar is_os_disk: Gets or sets a value indicating whether the disk is the OS disk.
    :vartype is_os_disk: bool
    :ivar capacity_in_bytes: Gets or sets the disk capacity in bytes.
    :vartype capacity_in_bytes: int
    :ivar is_dynamic: Gets or sets a value indicating whether dynamic sizing is enabled on the
     virtual hard disk.
    :vartype is_dynamic: bool
    :ivar disk_type: Gets or sets the disk type.
    :vartype disk_type: str
    :ivar disk_block_size: Gets or sets a value of disk block size.
    :vartype disk_block_size: int
    :ivar disk_logical_sector_size: Gets or sets a value of disk logical sector size.
    :vartype disk_logical_sector_size: int
    :ivar disk_physical_sector_size: Gets or sets a value of disk physical sector size.
    :vartype disk_physical_sector_size: int
    """

    _validation = {
        "storage_container_id": {"readonly": True},
        "storage_container_local_path": {"readonly": True},
        "source_disk_id": {"readonly": True},
        "source_disk_name": {"readonly": True},
        "seed_disk_name": {"readonly": True},
        "test_migrate_disk_name": {"readonly": True},
        "migrate_disk_name": {"readonly": True},
        "is_os_disk": {"readonly": True},
        "capacity_in_bytes": {"readonly": True},
        "is_dynamic": {"readonly": True},
        "disk_type": {"readonly": True},
        "disk_block_size": {"readonly": True},
        "disk_logical_sector_size": {"readonly": True},
        "disk_physical_sector_size": {"readonly": True},
    }

    _attribute_map = {
        "storage_container_id": {"key": "storageContainerId", "type": "str"},
        "storage_container_local_path": {"key": "storageContainerLocalPath", "type": "str"},
        "source_disk_id": {"key": "sourceDiskId", "type": "str"},
        "source_disk_name": {"key": "sourceDiskName", "type": "str"},
        "seed_disk_name": {"key": "seedDiskName", "type": "str"},
        "test_migrate_disk_name": {"key": "testMigrateDiskName", "type": "str"},
        "migrate_disk_name": {"key": "migrateDiskName", "type": "str"},
        "is_os_disk": {"key": "isOsDisk", "type": "bool"},
        "capacity_in_bytes": {"key": "capacityInBytes", "type": "int"},
        "is_dynamic": {"key": "isDynamic", "type": "bool"},
        "disk_type": {"key": "diskType", "type": "str"},
        "disk_block_size": {"key": "diskBlockSize", "type": "int"},
        "disk_logical_sector_size": {"key": "diskLogicalSectorSize", "type": "int"},
        "disk_physical_sector_size": {"key": "diskPhysicalSectorSize", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.storage_container_id: Optional[str] = None
        self.storage_container_local_path: Optional[str] = None
        self.source_disk_id: Optional[str] = None
        self.source_disk_name: Optional[str] = None
        self.seed_disk_name: Optional[str] = None
        self.test_migrate_disk_name: Optional[str] = None
        self.migrate_disk_name: Optional[str] = None
        self.is_os_disk: Optional[bool] = None
        self.capacity_in_bytes: Optional[int] = None
        self.is_dynamic: Optional[bool] = None
        self.disk_type: Optional[str] = None
        self.disk_block_size: Optional[int] = None
        self.disk_logical_sector_size: Optional[int] = None
        self.disk_physical_sector_size: Optional[int] = None


class VMwareToAzStackHCIProtectedItemModelCustomProperties(
    ProtectedItemModelCustomProperties
):  # pylint: disable=name-too-long
    """VMware to AzStackHCI Protected item model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ProtectedItemModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar active_location: Gets or sets the location of the protected item. Known values are:
     "Primary" and "Recovery".
    :vartype active_location: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemActiveLocation
    :ivar target_hci_cluster_id: Gets or sets the Target HCI Cluster ARM Id. Required.
    :vartype target_hci_cluster_id: str
    :ivar target_arc_cluster_custom_location_id: Gets or sets the Target Arc Cluster Custom
     Location ARM Id. Required.
    :vartype target_arc_cluster_custom_location_id: str
    :ivar target_az_stack_hci_cluster_name: Gets or sets the Target AzStackHCI cluster name.
    :vartype target_az_stack_hci_cluster_name: str
    :ivar storage_container_id: Gets or sets the target storage container ARM Id. Required.
    :vartype storage_container_id: str
    :ivar target_resource_group_id: Gets or sets the target resource group ARM Id. Required.
    :vartype target_resource_group_id: str
    :ivar target_location: Gets or sets the target location.
    :vartype target_location: str
    :ivar custom_location_region: Gets or sets the location of Azure Arc HCI custom location
     resource. Required.
    :vartype custom_location_region: str
    :ivar disks_to_include: Gets or sets the list of disks to replicate. Required.
    :vartype disks_to_include:
     list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCIDiskInput]
    :ivar nics_to_include: Gets or sets the list of VM NIC to replicate. Required.
    :vartype nics_to_include:
     list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCINicInput]
    :ivar protected_disks: Gets or sets the list of protected disks.
    :vartype protected_disks:
     list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCIProtectedDiskProperties]
    :ivar protected_nics: Gets or sets the VM NIC details.
    :vartype protected_nics:
     list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCIProtectedNicProperties]
    :ivar target_vm_bios_id: Gets or sets the BIOS Id of the target AzStackHCI VM.
    :vartype target_vm_bios_id: str
    :ivar target_vm_name: Gets or sets the target VM display name.
    :vartype target_vm_name: str
    :ivar hyper_v_generation: Gets or sets the hypervisor generation of the virtual machine
     possible values are 1,2. Required.
    :vartype hyper_v_generation: str
    :ivar target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
    :vartype target_network_id: str
    :ivar test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
    :vartype test_network_id: str
    :ivar target_cpu_cores: Gets or sets the target CPU cores.
    :vartype target_cpu_cores: int
    :ivar is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
    :vartype is_dynamic_ram: bool
    :ivar dynamic_memory_config: Protected item dynamic memory config.
    :vartype dynamic_memory_config:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
    :ivar target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
    :vartype target_memory_in_mega_bytes: int
    :ivar os_type: Gets or sets the type of the OS.
    :vartype os_type: str
    :ivar os_name: Gets or sets the name of the OS.
    :vartype os_name: str
    :ivar firmware_type: Gets or sets the firmware type.
    :vartype firmware_type: str
    :ivar fabric_discovery_machine_id: Gets or sets the ARM Id of the discovered machine. Required.
    :vartype fabric_discovery_machine_id: str
    :ivar source_vm_name: Gets or sets the source VM display name.
    :vartype source_vm_name: str
    :ivar source_cpu_cores: Gets or sets the source VM CPU cores.
    :vartype source_cpu_cores: int
    :ivar source_memory_in_mega_bytes: Gets or sets the source VM ram memory size in megabytes.
    :vartype source_memory_in_mega_bytes: float
    :ivar run_as_account_id: Gets or sets the run as account Id. Required.
    :vartype run_as_account_id: str
    :ivar source_fabric_agent_name: Gets or sets the source fabric agent name. Required.
    :vartype source_fabric_agent_name: str
    :ivar target_fabric_agent_name: Gets or sets the target fabric agent name. Required.
    :vartype target_fabric_agent_name: str
    :ivar source_appliance_name: Gets or sets the source appliance name.
    :vartype source_appliance_name: str
    :ivar target_appliance_name: Gets or sets the target appliance name.
    :vartype target_appliance_name: str
    :ivar failover_recovery_point_id: Gets or sets the recovery point Id to which the VM was failed
     over.
    :vartype failover_recovery_point_id: str
    :ivar last_recovery_point_received: Gets or sets the last recovery point received time.
    :vartype last_recovery_point_received: ~datetime.datetime
    :ivar last_recovery_point_id: Gets or sets the last recovery point Id.
    :vartype last_recovery_point_id: str
    :ivar initial_replication_progress_percentage: Gets or sets the initial replication progress
     percentage. This is calculated based on total bytes processed for all disks in the source VM.
    :vartype initial_replication_progress_percentage: int
    :ivar migration_progress_percentage: Gets or sets the migration progress percentage.
    :vartype migration_progress_percentage: int
    :ivar resume_progress_percentage: Gets or sets the resume progress percentage.
    :vartype resume_progress_percentage: int
    :ivar resync_progress_percentage: Gets or sets the resync progress percentage. This is
     calculated based on total bytes processed for all disks in the source VM.
    :vartype resync_progress_percentage: int
    :ivar resync_retry_count: Gets or sets the resync retry count.
    :vartype resync_retry_count: int
    :ivar resync_required: Gets or sets a value indicating whether resync is required.
    :vartype resync_required: bool
    :ivar resync_state: Gets or sets the resync state. Known values are: "None",
     "PreparedForResynchronization", and "StartedResynchronization".
    :vartype resync_state: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzureMigrateResyncState
    :ivar perform_auto_resync: Gets or sets a value indicating whether auto resync is to be done.
    :vartype perform_auto_resync: bool
    :ivar resume_retry_count: Gets or sets the resume retry count.
    :vartype resume_retry_count: int
    :ivar last_replication_update_time: Gets or sets the latest timestamp that replication status
     is updated.
    :vartype last_replication_update_time: ~datetime.datetime
    """

    _validation = {
        "instance_type": {"required": True},
        "active_location": {"readonly": True},
        "target_hci_cluster_id": {"required": True},
        "target_arc_cluster_custom_location_id": {"required": True},
        "target_az_stack_hci_cluster_name": {"readonly": True},
        "storage_container_id": {"required": True},
        "target_resource_group_id": {"required": True},
        "target_location": {"readonly": True},
        "custom_location_region": {"required": True, "min_length": 1},
        "disks_to_include": {"required": True},
        "nics_to_include": {"required": True},
        "protected_disks": {"readonly": True},
        "protected_nics": {"readonly": True},
        "target_vm_bios_id": {"readonly": True},
        "hyper_v_generation": {"required": True, "min_length": 1},
        "os_type": {"readonly": True},
        "os_name": {"readonly": True},
        "firmware_type": {"readonly": True},
        "fabric_discovery_machine_id": {"required": True},
        "source_vm_name": {"readonly": True},
        "source_cpu_cores": {"readonly": True},
        "source_memory_in_mega_bytes": {"readonly": True},
        "run_as_account_id": {"required": True, "min_length": 1},
        "source_fabric_agent_name": {"required": True, "min_length": 1},
        "target_fabric_agent_name": {"required": True, "min_length": 1},
        "source_appliance_name": {"readonly": True},
        "target_appliance_name": {"readonly": True},
        "failover_recovery_point_id": {"readonly": True},
        "last_recovery_point_received": {"readonly": True},
        "last_recovery_point_id": {"readonly": True},
        "initial_replication_progress_percentage": {"readonly": True},
        "migration_progress_percentage": {"readonly": True},
        "resume_progress_percentage": {"readonly": True},
        "resync_progress_percentage": {"readonly": True},
        "resync_retry_count": {"readonly": True},
        "resync_required": {"readonly": True},
        "resync_state": {"readonly": True},
        "resume_retry_count": {"readonly": True},
        "last_replication_update_time": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "active_location": {"key": "activeLocation", "type": "str"},
        "target_hci_cluster_id": {"key": "targetHciClusterId", "type": "str"},
        "target_arc_cluster_custom_location_id": {"key": "targetArcClusterCustomLocationId", "type": "str"},
        "target_az_stack_hci_cluster_name": {"key": "targetAzStackHciClusterName", "type": "str"},
        "storage_container_id": {"key": "storageContainerId", "type": "str"},
        "target_resource_group_id": {"key": "targetResourceGroupId", "type": "str"},
        "target_location": {"key": "targetLocation", "type": "str"},
        "custom_location_region": {"key": "customLocationRegion", "type": "str"},
        "disks_to_include": {"key": "disksToInclude", "type": "[VMwareToAzStackHCIDiskInput]"},
        "nics_to_include": {"key": "nicsToInclude", "type": "[VMwareToAzStackHCINicInput]"},
        "protected_disks": {"key": "protectedDisks", "type": "[VMwareToAzStackHCIProtectedDiskProperties]"},
        "protected_nics": {"key": "protectedNics", "type": "[VMwareToAzStackHCIProtectedNicProperties]"},
        "target_vm_bios_id": {"key": "targetVmBiosId", "type": "str"},
        "target_vm_name": {"key": "targetVmName", "type": "str"},
        "hyper_v_generation": {"key": "hyperVGeneration", "type": "str"},
        "target_network_id": {"key": "targetNetworkId", "type": "str"},
        "test_network_id": {"key": "testNetworkId", "type": "str"},
        "target_cpu_cores": {"key": "targetCpuCores", "type": "int"},
        "is_dynamic_ram": {"key": "isDynamicRam", "type": "bool"},
        "dynamic_memory_config": {"key": "dynamicMemoryConfig", "type": "ProtectedItemDynamicMemoryConfig"},
        "target_memory_in_mega_bytes": {"key": "targetMemoryInMegaBytes", "type": "int"},
        "os_type": {"key": "osType", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "firmware_type": {"key": "firmwareType", "type": "str"},
        "fabric_discovery_machine_id": {"key": "fabricDiscoveryMachineId", "type": "str"},
        "source_vm_name": {"key": "sourceVmName", "type": "str"},
        "source_cpu_cores": {"key": "sourceCpuCores", "type": "int"},
        "source_memory_in_mega_bytes": {"key": "sourceMemoryInMegaBytes", "type": "float"},
        "run_as_account_id": {"key": "runAsAccountId", "type": "str"},
        "source_fabric_agent_name": {"key": "sourceFabricAgentName", "type": "str"},
        "target_fabric_agent_name": {"key": "targetFabricAgentName", "type": "str"},
        "source_appliance_name": {"key": "sourceApplianceName", "type": "str"},
        "target_appliance_name": {"key": "targetApplianceName", "type": "str"},
        "failover_recovery_point_id": {"key": "failoverRecoveryPointId", "type": "str"},
        "last_recovery_point_received": {"key": "lastRecoveryPointReceived", "type": "iso-8601"},
        "last_recovery_point_id": {"key": "lastRecoveryPointId", "type": "str"},
        "initial_replication_progress_percentage": {"key": "initialReplicationProgressPercentage", "type": "int"},
        "migration_progress_percentage": {"key": "migrationProgressPercentage", "type": "int"},
        "resume_progress_percentage": {"key": "resumeProgressPercentage", "type": "int"},
        "resync_progress_percentage": {"key": "resyncProgressPercentage", "type": "int"},
        "resync_retry_count": {"key": "resyncRetryCount", "type": "int"},
        "resync_required": {"key": "resyncRequired", "type": "bool"},
        "resync_state": {"key": "resyncState", "type": "str"},
        "perform_auto_resync": {"key": "performAutoResync", "type": "bool"},
        "resume_retry_count": {"key": "resumeRetryCount", "type": "int"},
        "last_replication_update_time": {"key": "lastReplicationUpdateTime", "type": "iso-8601"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        target_hci_cluster_id: str,
        target_arc_cluster_custom_location_id: str,
        storage_container_id: str,
        target_resource_group_id: str,
        custom_location_region: str,
        disks_to_include: List["_models.VMwareToAzStackHCIDiskInput"],
        nics_to_include: List["_models.VMwareToAzStackHCINicInput"],
        hyper_v_generation: str,
        fabric_discovery_machine_id: str,
        run_as_account_id: str,
        source_fabric_agent_name: str,
        target_fabric_agent_name: str,
        target_vm_name: Optional[str] = None,
        target_network_id: Optional[str] = None,
        test_network_id: Optional[str] = None,
        target_cpu_cores: Optional[int] = None,
        is_dynamic_ram: Optional[bool] = None,
        dynamic_memory_config: Optional["_models.ProtectedItemDynamicMemoryConfig"] = None,
        target_memory_in_mega_bytes: Optional[int] = None,
        perform_auto_resync: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword target_hci_cluster_id: Gets or sets the Target HCI Cluster ARM Id. Required.
        :paramtype target_hci_cluster_id: str
        :keyword target_arc_cluster_custom_location_id: Gets or sets the Target Arc Cluster Custom
         Location ARM Id. Required.
        :paramtype target_arc_cluster_custom_location_id: str
        :keyword storage_container_id: Gets or sets the target storage container ARM Id. Required.
        :paramtype storage_container_id: str
        :keyword target_resource_group_id: Gets or sets the target resource group ARM Id. Required.
        :paramtype target_resource_group_id: str
        :keyword custom_location_region: Gets or sets the location of Azure Arc HCI custom location
         resource. Required.
        :paramtype custom_location_region: str
        :keyword disks_to_include: Gets or sets the list of disks to replicate. Required.
        :paramtype disks_to_include:
         list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCIDiskInput]
        :keyword nics_to_include: Gets or sets the list of VM NIC to replicate. Required.
        :paramtype nics_to_include:
         list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCINicInput]
        :keyword target_vm_name: Gets or sets the target VM display name.
        :paramtype target_vm_name: str
        :keyword hyper_v_generation: Gets or sets the hypervisor generation of the virtual machine
         possible values are 1,2. Required.
        :paramtype hyper_v_generation: str
        :keyword target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
        :paramtype target_network_id: str
        :keyword test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
        :paramtype test_network_id: str
        :keyword target_cpu_cores: Gets or sets the target CPU cores.
        :paramtype target_cpu_cores: int
        :keyword is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
        :paramtype is_dynamic_ram: bool
        :keyword dynamic_memory_config: Protected item dynamic memory config.
        :paramtype dynamic_memory_config:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
        :keyword target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
        :paramtype target_memory_in_mega_bytes: int
        :keyword fabric_discovery_machine_id: Gets or sets the ARM Id of the discovered machine.
         Required.
        :paramtype fabric_discovery_machine_id: str
        :keyword run_as_account_id: Gets or sets the run as account Id. Required.
        :paramtype run_as_account_id: str
        :keyword source_fabric_agent_name: Gets or sets the source fabric agent name. Required.
        :paramtype source_fabric_agent_name: str
        :keyword target_fabric_agent_name: Gets or sets the target fabric agent name. Required.
        :paramtype target_fabric_agent_name: str
        :keyword perform_auto_resync: Gets or sets a value indicating whether auto resync is to be
         done.
        :paramtype perform_auto_resync: bool
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCI"
        self.active_location: Optional[Union[str, "_models.ProtectedItemActiveLocation"]] = None
        self.target_hci_cluster_id = target_hci_cluster_id
        self.target_arc_cluster_custom_location_id = target_arc_cluster_custom_location_id
        self.target_az_stack_hci_cluster_name: Optional[str] = None
        self.storage_container_id = storage_container_id
        self.target_resource_group_id = target_resource_group_id
        self.target_location: Optional[str] = None
        self.custom_location_region = custom_location_region
        self.disks_to_include = disks_to_include
        self.nics_to_include = nics_to_include
        self.protected_disks: Optional[List["_models.VMwareToAzStackHCIProtectedDiskProperties"]] = None
        self.protected_nics: Optional[List["_models.VMwareToAzStackHCIProtectedNicProperties"]] = None
        self.target_vm_bios_id: Optional[str] = None
        self.target_vm_name = target_vm_name
        self.hyper_v_generation = hyper_v_generation
        self.target_network_id = target_network_id
        self.test_network_id = test_network_id
        self.target_cpu_cores = target_cpu_cores
        self.is_dynamic_ram = is_dynamic_ram
        self.dynamic_memory_config = dynamic_memory_config
        self.target_memory_in_mega_bytes = target_memory_in_mega_bytes
        self.os_type: Optional[str] = None
        self.os_name: Optional[str] = None
        self.firmware_type: Optional[str] = None
        self.fabric_discovery_machine_id = fabric_discovery_machine_id
        self.source_vm_name: Optional[str] = None
        self.source_cpu_cores: Optional[int] = None
        self.source_memory_in_mega_bytes: Optional[float] = None
        self.run_as_account_id = run_as_account_id
        self.source_fabric_agent_name = source_fabric_agent_name
        self.target_fabric_agent_name = target_fabric_agent_name
        self.source_appliance_name: Optional[str] = None
        self.target_appliance_name: Optional[str] = None
        self.failover_recovery_point_id: Optional[str] = None
        self.last_recovery_point_received: Optional[datetime.datetime] = None
        self.last_recovery_point_id: Optional[str] = None
        self.initial_replication_progress_percentage: Optional[int] = None
        self.migration_progress_percentage: Optional[int] = None
        self.resume_progress_percentage: Optional[int] = None
        self.resync_progress_percentage: Optional[int] = None
        self.resync_retry_count: Optional[int] = None
        self.resync_required: Optional[bool] = None
        self.resync_state: Optional[Union[str, "_models.VMwareToAzureMigrateResyncState"]] = None
        self.perform_auto_resync = perform_auto_resync
        self.resume_retry_count: Optional[int] = None
        self.last_replication_update_time: Optional[datetime.datetime] = None


class VMwareToAzStackHCIProtectedItemModelCustomPropertiesUpdate(
    ProtectedItemModelCustomPropertiesUpdate
):  # pylint: disable=name-too-long
    """VMware to AzStackHCI Protected item model custom properties.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ProtectedItemModelCustomPropertiesUpdate.
     Required.
    :vartype instance_type: str
    :ivar nics_to_include: Gets or sets the list of VM NIC to replicate.
    :vartype nics_to_include:
     list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCINicInput]
    :ivar target_cpu_cores: Gets or sets the target CPU cores.
    :vartype target_cpu_cores: int
    :ivar is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
    :vartype is_dynamic_ram: bool
    :ivar dynamic_memory_config: Protected item dynamic memory config.
    :vartype dynamic_memory_config:
     ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
    :ivar target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
    :vartype target_memory_in_mega_bytes: int
    :ivar os_type: Gets or sets the type of the OS.
    :vartype os_type: str
    """

    _validation = {
        "instance_type": {"required": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "nics_to_include": {"key": "nicsToInclude", "type": "[VMwareToAzStackHCINicInput]"},
        "target_cpu_cores": {"key": "targetCpuCores", "type": "int"},
        "is_dynamic_ram": {"key": "isDynamicRam", "type": "bool"},
        "dynamic_memory_config": {"key": "dynamicMemoryConfig", "type": "ProtectedItemDynamicMemoryConfig"},
        "target_memory_in_mega_bytes": {"key": "targetMemoryInMegaBytes", "type": "int"},
        "os_type": {"key": "osType", "type": "str"},
    }

    def __init__(
        self,
        *,
        nics_to_include: Optional[List["_models.VMwareToAzStackHCINicInput"]] = None,
        target_cpu_cores: Optional[int] = None,
        is_dynamic_ram: Optional[bool] = None,
        dynamic_memory_config: Optional["_models.ProtectedItemDynamicMemoryConfig"] = None,
        target_memory_in_mega_bytes: Optional[int] = None,
        os_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword nics_to_include: Gets or sets the list of VM NIC to replicate.
        :paramtype nics_to_include:
         list[~azure.mgmt.recoveryservicesdatareplication.models.VMwareToAzStackHCINicInput]
        :keyword target_cpu_cores: Gets or sets the target CPU cores.
        :paramtype target_cpu_cores: int
        :keyword is_dynamic_ram: Gets or sets a value indicating whether memory is dynamical.
        :paramtype is_dynamic_ram: bool
        :keyword dynamic_memory_config: Protected item dynamic memory config.
        :paramtype dynamic_memory_config:
         ~azure.mgmt.recoveryservicesdatareplication.models.ProtectedItemDynamicMemoryConfig
        :keyword target_memory_in_mega_bytes: Gets or sets the target memory in mega-bytes.
        :paramtype target_memory_in_mega_bytes: int
        :keyword os_type: Gets or sets the type of the OS.
        :paramtype os_type: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCI"
        self.nics_to_include = nics_to_include
        self.target_cpu_cores = target_cpu_cores
        self.is_dynamic_ram = is_dynamic_ram
        self.dynamic_memory_config = dynamic_memory_config
        self.target_memory_in_mega_bytes = target_memory_in_mega_bytes
        self.os_type = os_type


class VMwareToAzStackHCIProtectedNicProperties(_serialization.Model):
    """VMwareToAzStackHCI NIC properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar nic_id: Gets or sets the NIC Id.
    :vartype nic_id: str
    :ivar mac_address: Gets or sets the NIC mac address.
    :vartype mac_address: str
    :ivar label: Gets or sets the NIC label.
    :vartype label: str
    :ivar is_primary_nic: Gets or sets a value indicating whether this is the primary NIC.
    :vartype is_primary_nic: bool
    :ivar network_name: Gets or sets the network name.
    :vartype network_name: str
    :ivar target_network_id: Gets or sets the target network Id within AzStackHCI Cluster.
    :vartype target_network_id: str
    :ivar test_network_id: Gets or sets the target test network Id within AzStackHCI Cluster.
    :vartype test_network_id: str
    :ivar selection_type_for_failover: Gets or sets the selection type of the NIC. Known values
     are: "NotSelected", "SelectedByUser", "SelectedByDefault", and "SelectedByUserOverride".
    :vartype selection_type_for_failover: str or
     ~azure.mgmt.recoveryservicesdatareplication.models.VMNicSelection
    """

    _validation = {
        "nic_id": {"readonly": True},
        "mac_address": {"readonly": True},
        "label": {"readonly": True},
        "network_name": {"readonly": True},
        "target_network_id": {"readonly": True},
        "test_network_id": {"readonly": True},
        "selection_type_for_failover": {"readonly": True},
    }

    _attribute_map = {
        "nic_id": {"key": "nicId", "type": "str"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "label": {"key": "label", "type": "str"},
        "is_primary_nic": {"key": "isPrimaryNic", "type": "bool"},
        "network_name": {"key": "networkName", "type": "str"},
        "target_network_id": {"key": "targetNetworkId", "type": "str"},
        "test_network_id": {"key": "testNetworkId", "type": "str"},
        "selection_type_for_failover": {"key": "selectionTypeForFailover", "type": "str"},
    }

    def __init__(self, *, is_primary_nic: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword is_primary_nic: Gets or sets a value indicating whether this is the primary NIC.
        :paramtype is_primary_nic: bool
        """
        super().__init__(**kwargs)
        self.nic_id: Optional[str] = None
        self.mac_address: Optional[str] = None
        self.label: Optional[str] = None
        self.is_primary_nic = is_primary_nic
        self.network_name: Optional[str] = None
        self.target_network_id: Optional[str] = None
        self.test_network_id: Optional[str] = None
        self.selection_type_for_failover: Optional[Union[str, "_models.VMNicSelection"]] = None


class VMwareToAzStackHCIRecoveryPointModelCustomProperties(
    RecoveryPointModelCustomProperties
):  # pylint: disable=name-too-long
    """VMware to AzStackHCI recovery point model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for RecoveryPointModelCustomProperties. Required.
    :vartype instance_type: str
    :ivar disk_ids: Gets or sets the list of the disk Ids.
    :vartype disk_ids: list[str]
    """

    _validation = {
        "instance_type": {"required": True},
        "disk_ids": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "disk_ids": {"key": "diskIds", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCIRecoveryPointModelCustomProperties"
        self.disk_ids: Optional[List[str]] = None


class VMwareToAzStackHCIReplicationExtensionModelCustomProperties(
    ReplicationExtensionModelCustomProperties
):  # pylint: disable=name-too-long
    """VMware to AzStackHCI Replication extension model custom properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar instance_type: Discriminator property for ReplicationExtensionModelCustomProperties.
     Required.
    :vartype instance_type: str
    :ivar vmware_fabric_arm_id: Gets or sets the ARM Id of the source VMware fabric. Required.
    :vartype vmware_fabric_arm_id: str
    :ivar vmware_site_id: Gets or sets the ARM Id of the VMware site.
    :vartype vmware_site_id: str
    :ivar az_stack_hci_fabric_arm_id: Gets or sets the ARM Id of the target AzStackHCI fabric.
     Required.
    :vartype az_stack_hci_fabric_arm_id: str
    :ivar az_stack_hci_site_id: Gets or sets the ARM Id of the AzStackHCI site.
    :vartype az_stack_hci_site_id: str
    :ivar storage_account_id: Gets or sets the storage account Id.
    :vartype storage_account_id: str
    :ivar storage_account_sas_secret_name: Gets or sets the Sas Secret of storage account.
    :vartype storage_account_sas_secret_name: str
    :ivar asr_service_uri: Gets or sets the Uri of ASR.
    :vartype asr_service_uri: str
    :ivar rcm_service_uri: Gets or sets the Uri of Rcm.
    :vartype rcm_service_uri: str
    :ivar gateway_service_uri: Gets or sets the Uri of Gateway.
    :vartype gateway_service_uri: str
    :ivar source_gateway_service_id: Gets or sets the gateway service Id of source.
    :vartype source_gateway_service_id: str
    :ivar target_gateway_service_id: Gets or sets the gateway service Id of target.
    :vartype target_gateway_service_id: str
    :ivar source_storage_container_name: Gets or sets the source storage container name.
    :vartype source_storage_container_name: str
    :ivar target_storage_container_name: Gets or sets the target storage container name.
    :vartype target_storage_container_name: str
    :ivar resource_location: Gets or sets the resource location.
    :vartype resource_location: str
    :ivar subscription_id: Gets or sets the subscription.
    :vartype subscription_id: str
    :ivar resource_group: Gets or sets the resource group.
    :vartype resource_group: str
    """

    _validation = {
        "instance_type": {"required": True},
        "vmware_fabric_arm_id": {"required": True},
        "vmware_site_id": {"readonly": True},
        "az_stack_hci_fabric_arm_id": {"required": True},
        "az_stack_hci_site_id": {"readonly": True},
        "asr_service_uri": {"readonly": True},
        "rcm_service_uri": {"readonly": True},
        "gateway_service_uri": {"readonly": True},
        "source_gateway_service_id": {"readonly": True},
        "target_gateway_service_id": {"readonly": True},
        "source_storage_container_name": {"readonly": True},
        "target_storage_container_name": {"readonly": True},
        "resource_location": {"readonly": True},
        "subscription_id": {"readonly": True},
        "resource_group": {"readonly": True},
    }

    _attribute_map = {
        "instance_type": {"key": "instanceType", "type": "str"},
        "vmware_fabric_arm_id": {"key": "vmwareFabricArmId", "type": "str"},
        "vmware_site_id": {"key": "vmwareSiteId", "type": "str"},
        "az_stack_hci_fabric_arm_id": {"key": "azStackHciFabricArmId", "type": "str"},
        "az_stack_hci_site_id": {"key": "azStackHciSiteId", "type": "str"},
        "storage_account_id": {"key": "storageAccountId", "type": "str"},
        "storage_account_sas_secret_name": {"key": "storageAccountSasSecretName", "type": "str"},
        "asr_service_uri": {"key": "asrServiceUri", "type": "str"},
        "rcm_service_uri": {"key": "rcmServiceUri", "type": "str"},
        "gateway_service_uri": {"key": "gatewayServiceUri", "type": "str"},
        "source_gateway_service_id": {"key": "sourceGatewayServiceId", "type": "str"},
        "target_gateway_service_id": {"key": "targetGatewayServiceId", "type": "str"},
        "source_storage_container_name": {"key": "sourceStorageContainerName", "type": "str"},
        "target_storage_container_name": {"key": "targetStorageContainerName", "type": "str"},
        "resource_location": {"key": "resourceLocation", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        vmware_fabric_arm_id: str,
        az_stack_hci_fabric_arm_id: str,
        storage_account_id: Optional[str] = None,
        storage_account_sas_secret_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword vmware_fabric_arm_id: Gets or sets the ARM Id of the source VMware fabric. Required.
        :paramtype vmware_fabric_arm_id: str
        :keyword az_stack_hci_fabric_arm_id: Gets or sets the ARM Id of the target AzStackHCI fabric.
         Required.
        :paramtype az_stack_hci_fabric_arm_id: str
        :keyword storage_account_id: Gets or sets the storage account Id.
        :paramtype storage_account_id: str
        :keyword storage_account_sas_secret_name: Gets or sets the Sas Secret of storage account.
        :paramtype storage_account_sas_secret_name: str
        """
        super().__init__(**kwargs)
        self.instance_type: str = "VMwareToAzStackHCI"
        self.vmware_fabric_arm_id = vmware_fabric_arm_id
        self.vmware_site_id: Optional[str] = None
        self.az_stack_hci_fabric_arm_id = az_stack_hci_fabric_arm_id
        self.az_stack_hci_site_id: Optional[str] = None
        self.storage_account_id = storage_account_id
        self.storage_account_sas_secret_name = storage_account_sas_secret_name
        self.asr_service_uri: Optional[str] = None
        self.rcm_service_uri: Optional[str] = None
        self.gateway_service_uri: Optional[str] = None
        self.source_gateway_service_id: Optional[str] = None
        self.target_gateway_service_id: Optional[str] = None
        self.source_storage_container_name: Optional[str] = None
        self.target_storage_container_name: Optional[str] = None
        self.resource_location: Optional[str] = None
        self.subscription_id: Optional[str] = None
        self.resource_group: Optional[str] = None
