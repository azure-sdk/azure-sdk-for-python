# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.securityinsight import SecurityInsights

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSecurityInsightsEntitiesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SecurityInsights)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_entities_run_playbook(self, resource_group):
        response = self.client.entities.run_playbook(
            resource_group_name=resource_group.name,
            workspace_name="str",
            entity_identifier="str",
            api_version="2025-04-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_entities_list(self, resource_group):
        response = self.client.entities.list(
            resource_group_name=resource_group.name,
            workspace_name="str",
            api_version="2025-04-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_entities_get(self, resource_group):
        response = self.client.entities.get(
            resource_group_name=resource_group.name,
            workspace_name="str",
            entity_id="str",
            api_version="2025-04-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_entities_expand(self, resource_group):
        response = self.client.entities.expand(
            resource_group_name=resource_group.name,
            workspace_name="str",
            entity_id="str",
            parameters={"endTime": "2020-02-20 00:00:00", "expansionId": "str", "startTime": "2020-02-20 00:00:00"},
            api_version="2025-04-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_entities_queries(self, resource_group):
        response = self.client.entities.queries(
            resource_group_name=resource_group.name,
            workspace_name="str",
            entity_id="str",
            kind="str",
            api_version="2025-04-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_entities_get_insights(self, resource_group):
        response = self.client.entities.get_insights(
            resource_group_name=resource_group.name,
            workspace_name="str",
            entity_id="str",
            parameters={
                "endTime": "2020-02-20 00:00:00",
                "startTime": "2020-02-20 00:00:00",
                "addDefaultExtendedTimeRange": bool,
                "insightQueryIds": ["str"],
            },
            api_version="2025-04-01-preview",
        )

        # please add some check logic here by yourself
        # ...
