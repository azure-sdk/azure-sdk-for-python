# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.securityinsight import SecurityInsights

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSecurityInsightsIncidentsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SecurityInsights)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_run_playbook(self, resource_group):
        response = self.client.incidents.run_playbook(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_identifier="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_list(self, resource_group):
        response = self.client.incidents.list(
            resource_group_name=resource_group.name,
            workspace_name="str",
            api_version="2024-10-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_get(self, resource_group):
        response = self.client.incidents.get(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_id="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_create_or_update(self, resource_group):
        response = self.client.incidents.create_or_update(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_id="str",
            incident={
                "additionalData": {
                    "alertProductNames": ["str"],
                    "alertsCount": 0,
                    "bookmarksCount": 0,
                    "commentsCount": 0,
                    "providerIncidentUrl": "str",
                    "tactics": ["str"],
                    "techniques": ["str"],
                },
                "classification": "str",
                "classificationComment": "str",
                "classificationReason": "str",
                "createdTimeUtc": "2020-02-20 00:00:00",
                "description": "str",
                "etag": "str",
                "firstActivityTimeUtc": "2020-02-20 00:00:00",
                "id": "str",
                "incidentNumber": 0,
                "incidentUrl": "str",
                "labels": [{"labelName": "str", "labelType": "str"}],
                "lastActivityTimeUtc": "2020-02-20 00:00:00",
                "lastModifiedTimeUtc": "2020-02-20 00:00:00",
                "name": "str",
                "owner": {
                    "assignedTo": "str",
                    "email": "str",
                    "objectId": "str",
                    "ownerType": "str",
                    "userPrincipalName": "str",
                },
                "providerIncidentId": "str",
                "providerName": "str",
                "relatedAnalyticRuleIds": ["str"],
                "severity": "str",
                "status": "str",
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "teamInformation": {
                    "description": "str",
                    "name": "str",
                    "primaryChannelUrl": "str",
                    "teamCreationTimeUtc": "2020-02-20 00:00:00",
                    "teamId": "str",
                },
                "title": "str",
                "type": "str",
            },
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_delete(self, resource_group):
        response = self.client.incidents.delete(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_id="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_list_alerts(self, resource_group):
        response = self.client.incidents.list_alerts(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_id="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_list_bookmarks(self, resource_group):
        response = self.client.incidents.list_bookmarks(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_id="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_incidents_list_entities(self, resource_group):
        response = self.client.incidents.list_entities(
            resource_group_name=resource_group.name,
            workspace_name="str",
            incident_id="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...
