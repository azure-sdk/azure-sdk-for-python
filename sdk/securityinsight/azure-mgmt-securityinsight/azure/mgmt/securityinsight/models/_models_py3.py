# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore

if TYPE_CHECKING:
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ResourceWithEtag(Resource):
    """An azure resource object with an Etag property.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
    }

    def __init__(self, *, etag: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        """
        super().__init__(**kwargs)
        self.etag = etag


class DataConnector(ResourceWithEtag):
    """Data connector.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    AwsCloudTrailDataConnector, AADDataConnector, AATPDataConnector, ASCDataConnector,
    MCASDataConnector, MDATPDataConnector, MSTIDataConnector, OfficeDataConnector,
    PremiumMicrosoftDefenderForThreatIntelligence, RestApiPollerDataConnector, TIDataConnector

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {
        "kind": {
            "AmazonWebServicesCloudTrail": "AwsCloudTrailDataConnector",
            "AzureActiveDirectory": "AADDataConnector",
            "AzureAdvancedThreatProtection": "AATPDataConnector",
            "AzureSecurityCenter": "ASCDataConnector",
            "MicrosoftCloudAppSecurity": "MCASDataConnector",
            "MicrosoftDefenderAdvancedThreatProtection": "MDATPDataConnector",
            "MicrosoftThreatIntelligence": "MSTIDataConnector",
            "Office365": "OfficeDataConnector",
            "PremiumMicrosoftDefenderForThreatIntelligence": "PremiumMicrosoftDefenderForThreatIntelligence",
            "RestApiPoller": "RestApiPollerDataConnector",
            "ThreatIntelligence": "TIDataConnector",
        }
    }

    def __init__(self, *, etag: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: Optional[str] = None


class AADDataConnector(DataConnector):
    """Represents AAD (Azure Active Directory) data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "AlertsDataTypeOfDataConnector"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        data_types: Optional["_models.AlertsDataTypeOfDataConnector"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "AzureActiveDirectory"
        self.tenant_id = tenant_id
        self.data_types = data_types


class AATPDataConnector(DataConnector):
    """Represents AATP (Azure Advanced Threat Protection) data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "AlertsDataTypeOfDataConnector"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        data_types: Optional["_models.AlertsDataTypeOfDataConnector"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "AzureAdvancedThreatProtection"
        self.tenant_id = tenant_id
        self.data_types = data_types


class Entity(Resource):
    """Specific entity.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    AccountEntity, AzureResourceEntity, HuntingBookmark, CloudApplicationEntity, DnsEntity,
    FileEntity, FileHashEntity, HostEntity, IoTDeviceEntity, IpEntity, MailClusterEntity,
    MailMessageEntity, MailboxEntity, MalwareEntity, ProcessEntity, RegistryKeyEntity,
    RegistryValueEntity, SecurityAlert, SecurityGroupEntity, SubmissionMailEntity, UrlEntity

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {
        "kind": {
            "Account": "AccountEntity",
            "AzureResource": "AzureResourceEntity",
            "Bookmark": "HuntingBookmark",
            "CloudApplication": "CloudApplicationEntity",
            "DnsResolution": "DnsEntity",
            "File": "FileEntity",
            "FileHash": "FileHashEntity",
            "Host": "HostEntity",
            "IoTDevice": "IoTDeviceEntity",
            "Ip": "IpEntity",
            "MailCluster": "MailClusterEntity",
            "MailMessage": "MailMessageEntity",
            "Mailbox": "MailboxEntity",
            "Malware": "MalwareEntity",
            "Process": "ProcessEntity",
            "RegistryKey": "RegistryKeyEntity",
            "RegistryValue": "RegistryValueEntity",
            "SecurityAlert": "SecurityAlert",
            "SecurityGroup": "SecurityGroupEntity",
            "SubmissionMail": "SubmissionMailEntity",
            "Url": "UrlEntity",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: Optional[str] = None


class AccountEntity(Entity):
    """Represents an account entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar aad_tenant_id: The Azure Active Directory tenant id.
    :vartype aad_tenant_id: str
    :ivar aad_user_id: The Azure Active Directory user id.
    :vartype aad_user_id: str
    :ivar account_name: The name of the account. This field should hold only the name without any
     domain added to it, i.e. administrator.
    :vartype account_name: str
    :ivar display_name: The display name of the account.
    :vartype display_name: str
    :ivar host_entity_id: The Host entity id that contains the account in case it is a local
     account (not domain joined).
    :vartype host_entity_id: str
    :ivar is_domain_joined: Determines whether this is a domain account.
    :vartype is_domain_joined: bool
    :ivar nt_domain: The NetBIOS domain name as it appears in the alert format - domain\\username.
     Examples: NT AUTHORITY.
    :vartype nt_domain: str
    :ivar object_guid: The objectGUID attribute is a single-value attribute that is the unique
     identifier for the object, assigned by active directory.
    :vartype object_guid: str
    :ivar puid: The Azure Active Directory Passport User ID.
    :vartype puid: str
    :ivar sid: The account security identifier, e.g. S-1-5-18.
    :vartype sid: str
    :ivar upn_suffix: The user principal name suffix for the account, in some cases it is also the
     domain name. Examples: contoso.com.
    :vartype upn_suffix: str
    :ivar dns_domain: The fully qualified domain DNS name.
    :vartype dns_domain: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "aad_tenant_id": {"readonly": True},
        "aad_user_id": {"readonly": True},
        "account_name": {"readonly": True},
        "display_name": {"readonly": True},
        "host_entity_id": {"readonly": True},
        "is_domain_joined": {"readonly": True},
        "nt_domain": {"readonly": True},
        "object_guid": {"readonly": True},
        "puid": {"readonly": True},
        "sid": {"readonly": True},
        "upn_suffix": {"readonly": True},
        "dns_domain": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "aad_tenant_id": {"key": "properties.aadTenantId", "type": "str"},
        "aad_user_id": {"key": "properties.aadUserId", "type": "str"},
        "account_name": {"key": "properties.accountName", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "host_entity_id": {"key": "properties.hostEntityId", "type": "str"},
        "is_domain_joined": {"key": "properties.isDomainJoined", "type": "bool"},
        "nt_domain": {"key": "properties.ntDomain", "type": "str"},
        "object_guid": {"key": "properties.objectGuid", "type": "str"},
        "puid": {"key": "properties.puid", "type": "str"},
        "sid": {"key": "properties.sid", "type": "str"},
        "upn_suffix": {"key": "properties.upnSuffix", "type": "str"},
        "dns_domain": {"key": "properties.dnsDomain", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "Account"
        self.additional_data = None
        self.friendly_name = None
        self.aad_tenant_id = None
        self.aad_user_id = None
        self.account_name = None
        self.display_name = None
        self.host_entity_id = None
        self.is_domain_joined = None
        self.nt_domain = None
        self.object_guid = None
        self.puid = None
        self.sid = None
        self.upn_suffix = None
        self.dns_domain = None


class EntityCommonProperties(_serialization.Model):
    """Entity common property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.additional_data = None
        self.friendly_name = None


class AccountEntityProperties(EntityCommonProperties):
    """Account entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar aad_tenant_id: The Azure Active Directory tenant id.
    :vartype aad_tenant_id: str
    :ivar aad_user_id: The Azure Active Directory user id.
    :vartype aad_user_id: str
    :ivar account_name: The name of the account. This field should hold only the name without any
     domain added to it, i.e. administrator.
    :vartype account_name: str
    :ivar display_name: The display name of the account.
    :vartype display_name: str
    :ivar host_entity_id: The Host entity id that contains the account in case it is a local
     account (not domain joined).
    :vartype host_entity_id: str
    :ivar is_domain_joined: Determines whether this is a domain account.
    :vartype is_domain_joined: bool
    :ivar nt_domain: The NetBIOS domain name as it appears in the alert format - domain\\username.
     Examples: NT AUTHORITY.
    :vartype nt_domain: str
    :ivar object_guid: The objectGUID attribute is a single-value attribute that is the unique
     identifier for the object, assigned by active directory.
    :vartype object_guid: str
    :ivar puid: The Azure Active Directory Passport User ID.
    :vartype puid: str
    :ivar sid: The account security identifier, e.g. S-1-5-18.
    :vartype sid: str
    :ivar upn_suffix: The user principal name suffix for the account, in some cases it is also the
     domain name. Examples: contoso.com.
    :vartype upn_suffix: str
    :ivar dns_domain: The fully qualified domain DNS name.
    :vartype dns_domain: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "aad_tenant_id": {"readonly": True},
        "aad_user_id": {"readonly": True},
        "account_name": {"readonly": True},
        "display_name": {"readonly": True},
        "host_entity_id": {"readonly": True},
        "is_domain_joined": {"readonly": True},
        "nt_domain": {"readonly": True},
        "object_guid": {"readonly": True},
        "puid": {"readonly": True},
        "sid": {"readonly": True},
        "upn_suffix": {"readonly": True},
        "dns_domain": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "aad_tenant_id": {"key": "aadTenantId", "type": "str"},
        "aad_user_id": {"key": "aadUserId", "type": "str"},
        "account_name": {"key": "accountName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "host_entity_id": {"key": "hostEntityId", "type": "str"},
        "is_domain_joined": {"key": "isDomainJoined", "type": "bool"},
        "nt_domain": {"key": "ntDomain", "type": "str"},
        "object_guid": {"key": "objectGuid", "type": "str"},
        "puid": {"key": "puid", "type": "str"},
        "sid": {"key": "sid", "type": "str"},
        "upn_suffix": {"key": "upnSuffix", "type": "str"},
        "dns_domain": {"key": "dnsDomain", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.aad_tenant_id = None
        self.aad_user_id = None
        self.account_name = None
        self.display_name = None
        self.host_entity_id = None
        self.is_domain_joined = None
        self.nt_domain = None
        self.object_guid = None
        self.puid = None
        self.sid = None
        self.upn_suffix = None
        self.dns_domain = None


class ActionPropertiesBase(_serialization.Model):
    """Action property bag base.

    All required parameters must be populated in order to send to server.

    :ivar logic_app_resource_id: Logic App Resource Id,
     /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
     Required.
    :vartype logic_app_resource_id: str
    """

    _validation = {
        "logic_app_resource_id": {"required": True},
    }

    _attribute_map = {
        "logic_app_resource_id": {"key": "logicAppResourceId", "type": "str"},
    }

    def __init__(self, *, logic_app_resource_id: str, **kwargs: Any) -> None:
        """
        :keyword logic_app_resource_id: Logic App Resource Id,
         /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
         Required.
        :paramtype logic_app_resource_id: str
        """
        super().__init__(**kwargs)
        self.logic_app_resource_id = logic_app_resource_id


class ActionRequest(ResourceWithEtag):
    """Action for alert rule.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar logic_app_resource_id: Logic App Resource Id,
     /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
    :vartype logic_app_resource_id: str
    :ivar trigger_uri: Logic App Callback URL for this specific workflow.
    :vartype trigger_uri: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "logic_app_resource_id": {"key": "properties.logicAppResourceId", "type": "str"},
        "trigger_uri": {"key": "properties.triggerUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        logic_app_resource_id: Optional[str] = None,
        trigger_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword logic_app_resource_id: Logic App Resource Id,
         /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
        :paramtype logic_app_resource_id: str
        :keyword trigger_uri: Logic App Callback URL for this specific workflow.
        :paramtype trigger_uri: str
        """
        super().__init__(etag=etag, **kwargs)
        self.logic_app_resource_id = logic_app_resource_id
        self.trigger_uri = trigger_uri


class ActionRequestProperties(ActionPropertiesBase):
    """Action property bag.

    All required parameters must be populated in order to send to server.

    :ivar logic_app_resource_id: Logic App Resource Id,
     /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
     Required.
    :vartype logic_app_resource_id: str
    :ivar trigger_uri: Logic App Callback URL for this specific workflow. Required.
    :vartype trigger_uri: str
    """

    _validation = {
        "logic_app_resource_id": {"required": True},
        "trigger_uri": {"required": True},
    }

    _attribute_map = {
        "logic_app_resource_id": {"key": "logicAppResourceId", "type": "str"},
        "trigger_uri": {"key": "triggerUri", "type": "str"},
    }

    def __init__(self, *, logic_app_resource_id: str, trigger_uri: str, **kwargs: Any) -> None:
        """
        :keyword logic_app_resource_id: Logic App Resource Id,
         /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
         Required.
        :paramtype logic_app_resource_id: str
        :keyword trigger_uri: Logic App Callback URL for this specific workflow. Required.
        :paramtype trigger_uri: str
        """
        super().__init__(logic_app_resource_id=logic_app_resource_id, **kwargs)
        self.trigger_uri = trigger_uri


class ActionResponse(Resource):
    """Action for alert rule.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the action.
    :vartype etag: str
    :ivar logic_app_resource_id: Logic App Resource Id,
     /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
    :vartype logic_app_resource_id: str
    :ivar workflow_id: The name of the logic app's workflow.
    :vartype workflow_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "logic_app_resource_id": {"key": "properties.logicAppResourceId", "type": "str"},
        "workflow_id": {"key": "properties.workflowId", "type": "str"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        logic_app_resource_id: Optional[str] = None,
        workflow_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the action.
        :paramtype etag: str
        :keyword logic_app_resource_id: Logic App Resource Id,
         /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
        :paramtype logic_app_resource_id: str
        :keyword workflow_id: The name of the logic app's workflow.
        :paramtype workflow_id: str
        """
        super().__init__(**kwargs)
        self.etag = etag
        self.logic_app_resource_id = logic_app_resource_id
        self.workflow_id = workflow_id


class ActionResponseProperties(ActionPropertiesBase):
    """Action property bag.

    All required parameters must be populated in order to send to server.

    :ivar logic_app_resource_id: Logic App Resource Id,
     /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
     Required.
    :vartype logic_app_resource_id: str
    :ivar workflow_id: The name of the logic app's workflow.
    :vartype workflow_id: str
    """

    _validation = {
        "logic_app_resource_id": {"required": True},
    }

    _attribute_map = {
        "logic_app_resource_id": {"key": "logicAppResourceId", "type": "str"},
        "workflow_id": {"key": "workflowId", "type": "str"},
    }

    def __init__(self, *, logic_app_resource_id: str, workflow_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword logic_app_resource_id: Logic App Resource Id,
         /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.  # pylint: disable=line-too-long
         Required.
        :paramtype logic_app_resource_id: str
        :keyword workflow_id: The name of the logic app's workflow.
        :paramtype workflow_id: str
        """
        super().__init__(logic_app_resource_id=logic_app_resource_id, **kwargs)
        self.workflow_id = workflow_id


class ActionsList(_serialization.Model):
    """List all the actions.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of actions.
    :vartype next_link: str
    :ivar value: Array of actions. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.ActionResponse]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[ActionResponse]"},
    }

    def __init__(self, *, value: List["_models.ActionResponse"], **kwargs: Any) -> None:
        """
        :keyword value: Array of actions. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.ActionResponse]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class AddIncidentTaskActionProperties(_serialization.Model):
    """Describes an automation rule action to add a task to an incident.

    All required parameters must be populated in order to send to server.

    :ivar title: The title of the task. Required.
    :vartype title: str
    :ivar description: The description of the task.
    :vartype description: str
    """

    _validation = {
        "title": {"required": True},
    }

    _attribute_map = {
        "title": {"key": "title", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, title: str, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword title: The title of the task. Required.
        :paramtype title: str
        :keyword description: The description of the task.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.title = title
        self.description = description


class AlertDetailsOverride(_serialization.Model):
    """Settings for how to dynamically override alert static details.

    :ivar alert_display_name_format: the format containing columns name(s) to override the alert
     name.
    :vartype alert_display_name_format: str
    :ivar alert_description_format: the format containing columns name(s) to override the alert
     description.
    :vartype alert_description_format: str
    :ivar alert_tactics_column_name: the column name to take the alert tactics from.
    :vartype alert_tactics_column_name: str
    :ivar alert_severity_column_name: the column name to take the alert severity from.
    :vartype alert_severity_column_name: str
    :ivar alert_dynamic_properties: List of additional dynamic properties to override.
    :vartype alert_dynamic_properties:
     list[~azure.mgmt.securityinsight.models.AlertPropertyMapping]
    """

    _attribute_map = {
        "alert_display_name_format": {"key": "alertDisplayNameFormat", "type": "str"},
        "alert_description_format": {"key": "alertDescriptionFormat", "type": "str"},
        "alert_tactics_column_name": {"key": "alertTacticsColumnName", "type": "str"},
        "alert_severity_column_name": {"key": "alertSeverityColumnName", "type": "str"},
        "alert_dynamic_properties": {"key": "alertDynamicProperties", "type": "[AlertPropertyMapping]"},
    }

    def __init__(
        self,
        *,
        alert_display_name_format: Optional[str] = None,
        alert_description_format: Optional[str] = None,
        alert_tactics_column_name: Optional[str] = None,
        alert_severity_column_name: Optional[str] = None,
        alert_dynamic_properties: Optional[List["_models.AlertPropertyMapping"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword alert_display_name_format: the format containing columns name(s) to override the alert
         name.
        :paramtype alert_display_name_format: str
        :keyword alert_description_format: the format containing columns name(s) to override the alert
         description.
        :paramtype alert_description_format: str
        :keyword alert_tactics_column_name: the column name to take the alert tactics from.
        :paramtype alert_tactics_column_name: str
        :keyword alert_severity_column_name: the column name to take the alert severity from.
        :paramtype alert_severity_column_name: str
        :keyword alert_dynamic_properties: List of additional dynamic properties to override.
        :paramtype alert_dynamic_properties:
         list[~azure.mgmt.securityinsight.models.AlertPropertyMapping]
        """
        super().__init__(**kwargs)
        self.alert_display_name_format = alert_display_name_format
        self.alert_description_format = alert_description_format
        self.alert_tactics_column_name = alert_tactics_column_name
        self.alert_severity_column_name = alert_severity_column_name
        self.alert_dynamic_properties = alert_dynamic_properties


class AlertPropertyMapping(_serialization.Model):
    """A single alert property mapping to override.

    :ivar alert_property: The V3 alert property. Known values are: "AlertLink", "ConfidenceLevel",
     "ConfidenceScore", "ExtendedLinks", "ProductName", "ProviderName", "ProductComponentName",
     "RemediationSteps", and "Techniques".
    :vartype alert_property: str or ~azure.mgmt.securityinsight.models.AlertProperty
    :ivar value: the column name to use to override this property.
    :vartype value: str
    """

    _attribute_map = {
        "alert_property": {"key": "alertProperty", "type": "str"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(
        self,
        *,
        alert_property: Optional[Union[str, "_models.AlertProperty"]] = None,
        value: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword alert_property: The V3 alert property. Known values are: "AlertLink",
         "ConfidenceLevel", "ConfidenceScore", "ExtendedLinks", "ProductName", "ProviderName",
         "ProductComponentName", "RemediationSteps", and "Techniques".
        :paramtype alert_property: str or ~azure.mgmt.securityinsight.models.AlertProperty
        :keyword value: the column name to use to override this property.
        :paramtype value: str
        """
        super().__init__(**kwargs)
        self.alert_property = alert_property
        self.value = value


class AlertRule(ResourceWithEtag):
    """Alert rule.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    FusionAlertRule, MicrosoftSecurityIncidentCreationAlertRule, ScheduledAlertRule

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {
        "kind": {
            "Fusion": "FusionAlertRule",
            "MicrosoftSecurityIncidentCreation": "MicrosoftSecurityIncidentCreationAlertRule",
            "Scheduled": "ScheduledAlertRule",
        }
    }

    def __init__(self, *, etag: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: Optional[str] = None


class AlertRulesList(_serialization.Model):
    """List all the alert rules.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of alert rules.
    :vartype next_link: str
    :ivar value: Array of alert rules. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.AlertRule]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[AlertRule]"},
    }

    def __init__(self, *, value: List["_models.AlertRule"], **kwargs: Any) -> None:
        """
        :keyword value: Array of alert rules. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.AlertRule]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class AlertRuleTemplate(Resource):
    """Alert rule template.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    FusionAlertRuleTemplate, MicrosoftSecurityIncidentCreationAlertRuleTemplate,
    ScheduledAlertRuleTemplate

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {
        "kind": {
            "Fusion": "FusionAlertRuleTemplate",
            "MicrosoftSecurityIncidentCreation": "MicrosoftSecurityIncidentCreationAlertRuleTemplate",
            "Scheduled": "ScheduledAlertRuleTemplate",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: Optional[str] = None


class AlertRuleTemplateDataSource(_serialization.Model):
    """alert rule template data sources.

    :ivar connector_id: The connector id that provides the following data types.
    :vartype connector_id: str
    :ivar data_types: The data types used by the alert rule template.
    :vartype data_types: list[str]
    """

    _attribute_map = {
        "connector_id": {"key": "connectorId", "type": "str"},
        "data_types": {"key": "dataTypes", "type": "[str]"},
    }

    def __init__(
        self, *, connector_id: Optional[str] = None, data_types: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword connector_id: The connector id that provides the following data types.
        :paramtype connector_id: str
        :keyword data_types: The data types used by the alert rule template.
        :paramtype data_types: list[str]
        """
        super().__init__(**kwargs)
        self.connector_id = connector_id
        self.data_types = data_types


class AlertRuleTemplatesList(_serialization.Model):
    """List all the alert rule templates.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of alert rule templates.
    :vartype next_link: str
    :ivar value: Array of alert rule templates. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.AlertRuleTemplate]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[AlertRuleTemplate]"},
    }

    def __init__(self, *, value: List["_models.AlertRuleTemplate"], **kwargs: Any) -> None:
        """
        :keyword value: Array of alert rule templates. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.AlertRuleTemplate]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class AlertsDataTypeOfDataConnector(_serialization.Model):
    """Alerts data type for data connectors.

    :ivar alerts: Alerts data type connection.
    :vartype alerts: ~azure.mgmt.securityinsight.models.DataConnectorDataTypeCommon
    """

    _attribute_map = {
        "alerts": {"key": "alerts", "type": "DataConnectorDataTypeCommon"},
    }

    def __init__(self, *, alerts: Optional["_models.DataConnectorDataTypeCommon"] = None, **kwargs: Any) -> None:
        """
        :keyword alerts: Alerts data type connection.
        :paramtype alerts: ~azure.mgmt.securityinsight.models.DataConnectorDataTypeCommon
        """
        super().__init__(**kwargs)
        self.alerts = alerts


class SecurityMLAnalyticsSetting(ResourceWithEtag):
    """Security ML Analytics Setting.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    AnomalySecurityMLAnalyticsSettings

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The kind of security ML Analytics Settings. Required. "Anomaly"
    :vartype kind: str or ~azure.mgmt.securityinsight.models.SecurityMLAnalyticsSettingsKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {"kind": {"Anomaly": "AnomalySecurityMLAnalyticsSettings"}}

    def __init__(self, *, etag: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: Optional[str] = None


class AnomalySecurityMLAnalyticsSettings(SecurityMLAnalyticsSetting):
    """Represents Anomaly Security ML Analytics Settings.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The kind of security ML Analytics Settings. Required. "Anomaly"
    :vartype kind: str or ~azure.mgmt.securityinsight.models.SecurityMLAnalyticsSettingsKind
    :ivar description: The description of the SecurityMLAnalyticsSettings.
    :vartype description: str
    :ivar display_name: The display name for settings created by this SecurityMLAnalyticsSettings.
    :vartype display_name: str
    :ivar enabled: Determines whether this settings is enabled or disabled.
    :vartype enabled: bool
    :ivar last_modified_utc: The last time that this SecurityMLAnalyticsSettings has been modified.
    :vartype last_modified_utc: ~datetime.datetime
    :ivar required_data_connectors: The required data sources for this SecurityMLAnalyticsSettings.
    :vartype required_data_connectors:
     list[~azure.mgmt.securityinsight.models.SecurityMLAnalyticsSettingsDataSource]
    :ivar tactics: The tactics of the SecurityMLAnalyticsSettings.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar techniques: The techniques of the SecurityMLAnalyticsSettings.
    :vartype techniques: list[str]
    :ivar anomaly_version: The anomaly version of the AnomalySecurityMLAnalyticsSettings.
    :vartype anomaly_version: str
    :ivar customizable_observations: The customizable observations of the
     AnomalySecurityMLAnalyticsSettings.
    :vartype customizable_observations: JSON
    :ivar frequency: The frequency that this SecurityMLAnalyticsSettings will be run.
    :vartype frequency: ~datetime.timedelta
    :ivar settings_status: The anomaly SecurityMLAnalyticsSettings status. Known values are:
     "Production" and "Flighting".
    :vartype settings_status: str or ~azure.mgmt.securityinsight.models.SettingsStatus
    :ivar is_default_settings: Determines whether this anomaly security ml analytics settings is a
     default settings.
    :vartype is_default_settings: bool
    :ivar anomaly_settings_version: The anomaly settings version of the Anomaly security ml
     analytics settings that dictates whether job version gets updated or not.
    :vartype anomaly_settings_version: int
    :ivar settings_definition_id: The anomaly settings definition Id.
    :vartype settings_definition_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "last_modified_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "last_modified_utc": {"key": "properties.lastModifiedUtc", "type": "iso-8601"},
        "required_data_connectors": {
            "key": "properties.requiredDataConnectors",
            "type": "[SecurityMLAnalyticsSettingsDataSource]",
        },
        "tactics": {"key": "properties.tactics", "type": "[str]"},
        "techniques": {"key": "properties.techniques", "type": "[str]"},
        "anomaly_version": {"key": "properties.anomalyVersion", "type": "str"},
        "customizable_observations": {"key": "properties.customizableObservations", "type": "object"},
        "frequency": {"key": "properties.frequency", "type": "duration"},
        "settings_status": {"key": "properties.settingsStatus", "type": "str"},
        "is_default_settings": {"key": "properties.isDefaultSettings", "type": "bool"},
        "anomaly_settings_version": {"key": "properties.anomalySettingsVersion", "type": "int"},
        "settings_definition_id": {"key": "properties.settingsDefinitionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        enabled: Optional[bool] = None,
        required_data_connectors: Optional[List["_models.SecurityMLAnalyticsSettingsDataSource"]] = None,
        tactics: Optional[List[Union[str, "_models.AttackTactic"]]] = None,
        techniques: Optional[List[str]] = None,
        anomaly_version: Optional[str] = None,
        customizable_observations: Optional[JSON] = None,
        frequency: Optional[datetime.timedelta] = None,
        settings_status: Optional[Union[str, "_models.SettingsStatus"]] = None,
        is_default_settings: Optional[bool] = None,
        anomaly_settings_version: Optional[int] = None,
        settings_definition_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword description: The description of the SecurityMLAnalyticsSettings.
        :paramtype description: str
        :keyword display_name: The display name for settings created by this
         SecurityMLAnalyticsSettings.
        :paramtype display_name: str
        :keyword enabled: Determines whether this settings is enabled or disabled.
        :paramtype enabled: bool
        :keyword required_data_connectors: The required data sources for this
         SecurityMLAnalyticsSettings.
        :paramtype required_data_connectors:
         list[~azure.mgmt.securityinsight.models.SecurityMLAnalyticsSettingsDataSource]
        :keyword tactics: The tactics of the SecurityMLAnalyticsSettings.
        :paramtype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
        :keyword techniques: The techniques of the SecurityMLAnalyticsSettings.
        :paramtype techniques: list[str]
        :keyword anomaly_version: The anomaly version of the AnomalySecurityMLAnalyticsSettings.
        :paramtype anomaly_version: str
        :keyword customizable_observations: The customizable observations of the
         AnomalySecurityMLAnalyticsSettings.
        :paramtype customizable_observations: JSON
        :keyword frequency: The frequency that this SecurityMLAnalyticsSettings will be run.
        :paramtype frequency: ~datetime.timedelta
        :keyword settings_status: The anomaly SecurityMLAnalyticsSettings status. Known values are:
         "Production" and "Flighting".
        :paramtype settings_status: str or ~azure.mgmt.securityinsight.models.SettingsStatus
        :keyword is_default_settings: Determines whether this anomaly security ml analytics settings is
         a default settings.
        :paramtype is_default_settings: bool
        :keyword anomaly_settings_version: The anomaly settings version of the Anomaly security ml
         analytics settings that dictates whether job version gets updated or not.
        :paramtype anomaly_settings_version: int
        :keyword settings_definition_id: The anomaly settings definition Id.
        :paramtype settings_definition_id: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "Anomaly"
        self.description = description
        self.display_name = display_name
        self.enabled = enabled
        self.last_modified_utc = None
        self.required_data_connectors = required_data_connectors
        self.tactics = tactics
        self.techniques = techniques
        self.anomaly_version = anomaly_version
        self.customizable_observations = customizable_observations
        self.frequency = frequency
        self.settings_status = settings_status
        self.is_default_settings = is_default_settings
        self.anomaly_settings_version = anomaly_settings_version
        self.settings_definition_id = settings_definition_id


class CcpAuthConfig(_serialization.Model):
    """Base Model for API authentication.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ApiKeyAuthModel, AWSAuthModel, BasicAuthModel, GCPAuthModel, GitHubAuthModel, JwtAuthModel,
    NoneAuthModel, OAuthModel, OracleAuthModel, GenericBlobSbsAuthModel, SessionAuthModel

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
    }

    _subtype_map = {
        "type": {
            "APIKey": "ApiKeyAuthModel",
            "AWS": "AWSAuthModel",
            "Basic": "BasicAuthModel",
            "GCP": "GCPAuthModel",
            "GitHub": "GitHubAuthModel",
            "JwtToken": "JwtAuthModel",
            "None": "NoneAuthModel",
            "OAuth2": "OAuthModel",
            "Oracle": "OracleAuthModel",
            "ServiceBus": "GenericBlobSbsAuthModel",
            "Session": "SessionAuthModel",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: Optional[str] = None


class ApiKeyAuthModel(CcpAuthConfig):
    """Model for authentication with the API Key. Will result in additional header on the request
    (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If
    'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar api_key: API Key for the user secret key credential. Required.
    :vartype api_key: str
    :ivar api_key_name: API Key name. Required.
    :vartype api_key_name: str
    :ivar api_key_identifier: API Key Identifier.
    :vartype api_key_identifier: str
    :ivar is_api_key_in_post_payload: Flag to indicate if API key is set in HTTP POST payload.
    :vartype is_api_key_in_post_payload: bool
    """

    _validation = {
        "type": {"required": True},
        "api_key": {"required": True},
        "api_key_name": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "api_key": {"key": "apiKey", "type": "str"},
        "api_key_name": {"key": "apiKeyName", "type": "str"},
        "api_key_identifier": {"key": "apiKeyIdentifier", "type": "str"},
        "is_api_key_in_post_payload": {"key": "isApiKeyInPostPayload", "type": "bool"},
    }

    def __init__(
        self,
        *,
        api_key: str,
        api_key_name: str,
        api_key_identifier: Optional[str] = None,
        is_api_key_in_post_payload: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword api_key: API Key for the user secret key credential. Required.
        :paramtype api_key: str
        :keyword api_key_name: API Key name. Required.
        :paramtype api_key_name: str
        :keyword api_key_identifier: API Key Identifier.
        :paramtype api_key_identifier: str
        :keyword is_api_key_in_post_payload: Flag to indicate if API key is set in HTTP POST payload.
        :paramtype is_api_key_in_post_payload: bool
        """
        super().__init__(**kwargs)
        self.type: str = "APIKey"
        self.api_key = api_key
        self.api_key_name = api_key_name
        self.api_key_identifier = api_key_identifier
        self.is_api_key_in_post_payload = is_api_key_in_post_payload


class ASCDataConnector(DataConnector):
    """Represents ASC (Azure Security Center) data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
    :ivar subscription_id: The subscription id to connect to, and get the data from.
    :vartype subscription_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "AlertsDataTypeOfDataConnector"},
        "subscription_id": {"key": "properties.subscriptionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        data_types: Optional["_models.AlertsDataTypeOfDataConnector"] = None,
        subscription_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
        :keyword subscription_id: The subscription id to connect to, and get the data from.
        :paramtype subscription_id: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "AzureSecurityCenter"
        self.data_types = data_types
        self.subscription_id = subscription_id


class DataConnectorWithAlertsProperties(_serialization.Model):
    """Data connector properties.

    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
    """

    _attribute_map = {
        "data_types": {"key": "dataTypes", "type": "AlertsDataTypeOfDataConnector"},
    }

    def __init__(self, *, data_types: Optional["_models.AlertsDataTypeOfDataConnector"] = None, **kwargs: Any) -> None:
        """
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
        """
        super().__init__(**kwargs)
        self.data_types = data_types


class ASCDataConnectorProperties(DataConnectorWithAlertsProperties):
    """ASC (Azure Security Center) data connector properties.

    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
    :ivar subscription_id: The subscription id to connect to, and get the data from.
    :vartype subscription_id: str
    """

    _attribute_map = {
        "data_types": {"key": "dataTypes", "type": "AlertsDataTypeOfDataConnector"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        data_types: Optional["_models.AlertsDataTypeOfDataConnector"] = None,
        subscription_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
        :keyword subscription_id: The subscription id to connect to, and get the data from.
        :paramtype subscription_id: str
        """
        super().__init__(data_types=data_types, **kwargs)
        self.subscription_id = subscription_id


class AutomationRule(ResourceWithEtag):
    """AutomationRule.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar display_name: The display name of the automation rule. Required.
    :vartype display_name: str
    :ivar order: The order of execution of the automation rule. Required.
    :vartype order: int
    :ivar triggering_logic: Describes automation rule triggering logic. Required.
    :vartype triggering_logic: ~azure.mgmt.securityinsight.models.AutomationRuleTriggeringLogic
    :ivar actions: The actions to execute when the automation rule is triggered. Required.
    :vartype actions: list[~azure.mgmt.securityinsight.models.AutomationRuleAction]
    :ivar last_modified_time_utc: The last time the automation rule was updated.
    :vartype last_modified_time_utc: ~datetime.datetime
    :ivar created_time_utc: The time the automation rule was created.
    :vartype created_time_utc: ~datetime.datetime
    :ivar last_modified_by: Information on the client (user or application) that made some action.
    :vartype last_modified_by: ~azure.mgmt.securityinsight.models.ClientInfo
    :ivar created_by: Information on the client (user or application) that made some action.
    :vartype created_by: ~azure.mgmt.securityinsight.models.ClientInfo
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "display_name": {"required": True, "max_length": 500},
        "order": {"required": True, "maximum": 1000, "minimum": 1},
        "triggering_logic": {"required": True},
        "actions": {"required": True, "max_items": 20, "min_items": 0},
        "last_modified_time_utc": {"readonly": True},
        "created_time_utc": {"readonly": True},
        "last_modified_by": {"readonly": True},
        "created_by": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "order": {"key": "properties.order", "type": "int"},
        "triggering_logic": {"key": "properties.triggeringLogic", "type": "AutomationRuleTriggeringLogic"},
        "actions": {"key": "properties.actions", "type": "[AutomationRuleAction]"},
        "last_modified_time_utc": {"key": "properties.lastModifiedTimeUtc", "type": "iso-8601"},
        "created_time_utc": {"key": "properties.createdTimeUtc", "type": "iso-8601"},
        "last_modified_by": {"key": "properties.lastModifiedBy", "type": "ClientInfo"},
        "created_by": {"key": "properties.createdBy", "type": "ClientInfo"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        order: int,
        triggering_logic: "_models.AutomationRuleTriggeringLogic",
        actions: List["_models.AutomationRuleAction"],
        etag: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword display_name: The display name of the automation rule. Required.
        :paramtype display_name: str
        :keyword order: The order of execution of the automation rule. Required.
        :paramtype order: int
        :keyword triggering_logic: Describes automation rule triggering logic. Required.
        :paramtype triggering_logic: ~azure.mgmt.securityinsight.models.AutomationRuleTriggeringLogic
        :keyword actions: The actions to execute when the automation rule is triggered. Required.
        :paramtype actions: list[~azure.mgmt.securityinsight.models.AutomationRuleAction]
        """
        super().__init__(etag=etag, **kwargs)
        self.display_name = display_name
        self.order = order
        self.triggering_logic = triggering_logic
        self.actions = actions
        self.last_modified_time_utc = None
        self.created_time_utc = None
        self.last_modified_by = None
        self.created_by = None


class AutomationRuleAction(_serialization.Model):
    """Describes an automation rule action.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    AutomationRuleAddIncidentTaskAction, AutomationRuleModifyPropertiesAction,
    AutomationRuleRunPlaybookAction

    All required parameters must be populated in order to send to server.

    :ivar order: Required.
    :vartype order: int
    :ivar action_type: The type of the automation rule action. Required. Known values are:
     "ModifyProperties", "RunPlaybook", and "AddIncidentTask".
    :vartype action_type: str or ~azure.mgmt.securityinsight.models.ActionType
    """

    _validation = {
        "order": {"required": True},
        "action_type": {"required": True},
    }

    _attribute_map = {
        "order": {"key": "order", "type": "int"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    _subtype_map = {
        "action_type": {
            "AddIncidentTask": "AutomationRuleAddIncidentTaskAction",
            "ModifyProperties": "AutomationRuleModifyPropertiesAction",
            "RunPlaybook": "AutomationRuleRunPlaybookAction",
        }
    }

    def __init__(self, *, order: int, **kwargs: Any) -> None:
        """
        :keyword order: Required.
        :paramtype order: int
        """
        super().__init__(**kwargs)
        self.order = order
        self.action_type: Optional[str] = None


class AutomationRuleAddIncidentTaskAction(AutomationRuleAction):
    """Describes an automation rule action to add a task to an incident.

    All required parameters must be populated in order to send to server.

    :ivar order: Required.
    :vartype order: int
    :ivar action_type: The type of the automation rule action. Required. Known values are:
     "ModifyProperties", "RunPlaybook", and "AddIncidentTask".
    :vartype action_type: str or ~azure.mgmt.securityinsight.models.ActionType
    :ivar action_configuration: Describes an automation rule action to add a task to an incident.
    :vartype action_configuration:
     ~azure.mgmt.securityinsight.models.AddIncidentTaskActionProperties
    """

    _validation = {
        "order": {"required": True},
        "action_type": {"required": True},
    }

    _attribute_map = {
        "order": {"key": "order", "type": "int"},
        "action_type": {"key": "actionType", "type": "str"},
        "action_configuration": {"key": "actionConfiguration", "type": "AddIncidentTaskActionProperties"},
    }

    def __init__(
        self,
        *,
        order: int,
        action_configuration: Optional["_models.AddIncidentTaskActionProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword order: Required.
        :paramtype order: int
        :keyword action_configuration: Describes an automation rule action to add a task to an
         incident.
        :paramtype action_configuration:
         ~azure.mgmt.securityinsight.models.AddIncidentTaskActionProperties
        """
        super().__init__(order=order, **kwargs)
        self.action_type: str = "AddIncidentTask"
        self.action_configuration = action_configuration


class AutomationRuleBooleanCondition(_serialization.Model):
    """Describes an automation rule condition with boolean operators.

    :ivar operator: Describes a boolean condition operator. Known values are: "And", "Or", "And",
     and "Or".
    :vartype operator: str or
     ~azure.mgmt.securityinsight.models.AutomationRuleBooleanConditionSupportedOperator
    :ivar inner_conditions:
    :vartype inner_conditions: list[~azure.mgmt.securityinsight.models.AutomationRuleCondition]
    """

    _validation = {
        "inner_conditions": {"max_items": 10, "min_items": 2},
    }

    _attribute_map = {
        "operator": {"key": "operator", "type": "str"},
        "inner_conditions": {"key": "innerConditions", "type": "[AutomationRuleCondition]"},
    }

    def __init__(
        self,
        *,
        operator: Optional[Union[str, "_models.AutomationRuleBooleanConditionSupportedOperator"]] = None,
        inner_conditions: Optional[List["_models.AutomationRuleCondition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword operator: Describes a boolean condition operator. Known values are: "And", "Or",
         "And", and "Or".
        :paramtype operator: str or
         ~azure.mgmt.securityinsight.models.AutomationRuleBooleanConditionSupportedOperator
        :keyword inner_conditions:
        :paramtype inner_conditions: list[~azure.mgmt.securityinsight.models.AutomationRuleCondition]
        """
        super().__init__(**kwargs)
        self.operator = operator
        self.inner_conditions = inner_conditions


class AutomationRuleCondition(_serialization.Model):
    """Describes an automation rule condition.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    BooleanConditionProperties, PropertyConditionProperties, PropertyArrayConditionProperties,
    PropertyArrayChangedConditionProperties, PropertyChangedConditionProperties

    All required parameters must be populated in order to send to server.

    :ivar condition_type: Required. Known values are: "Property", "PropertyArray",
     "PropertyChanged", "PropertyArrayChanged", and "Boolean".
    :vartype condition_type: str or ~azure.mgmt.securityinsight.models.ConditionType
    """

    _validation = {
        "condition_type": {"required": True},
    }

    _attribute_map = {
        "condition_type": {"key": "conditionType", "type": "str"},
    }

    _subtype_map = {
        "condition_type": {
            "Boolean": "BooleanConditionProperties",
            "Property": "PropertyConditionProperties",
            "PropertyArray": "PropertyArrayConditionProperties",
            "PropertyArrayChanged": "PropertyArrayChangedConditionProperties",
            "PropertyChanged": "PropertyChangedConditionProperties",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.condition_type: Optional[str] = None


class AutomationRuleModifyPropertiesAction(AutomationRuleAction):
    """Describes an automation rule action to modify an object's properties.

    All required parameters must be populated in order to send to server.

    :ivar order: Required.
    :vartype order: int
    :ivar action_type: The type of the automation rule action. Required. Known values are:
     "ModifyProperties", "RunPlaybook", and "AddIncidentTask".
    :vartype action_type: str or ~azure.mgmt.securityinsight.models.ActionType
    :ivar action_configuration:
    :vartype action_configuration: ~azure.mgmt.securityinsight.models.IncidentPropertiesAction
    """

    _validation = {
        "order": {"required": True},
        "action_type": {"required": True},
    }

    _attribute_map = {
        "order": {"key": "order", "type": "int"},
        "action_type": {"key": "actionType", "type": "str"},
        "action_configuration": {"key": "actionConfiguration", "type": "IncidentPropertiesAction"},
    }

    def __init__(
        self, *, order: int, action_configuration: Optional["_models.IncidentPropertiesAction"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword order: Required.
        :paramtype order: int
        :keyword action_configuration:
        :paramtype action_configuration: ~azure.mgmt.securityinsight.models.IncidentPropertiesAction
        """
        super().__init__(order=order, **kwargs)
        self.action_type: str = "ModifyProperties"
        self.action_configuration = action_configuration


class AutomationRulePropertyArrayChangedValuesCondition(_serialization.Model):  # pylint: disable=name-too-long
    """AutomationRulePropertyArrayChangedValuesCondition.

    :ivar array_type: Known values are: "Alerts", "Labels", "Tactics", and "Comments".
    :vartype array_type: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayChangedConditionSupportedArrayType
    :ivar change_type: "Added"
    :vartype change_type: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayChangedConditionSupportedChangeType
    """

    _attribute_map = {
        "array_type": {"key": "arrayType", "type": "str"},
        "change_type": {"key": "changeType", "type": "str"},
    }

    def __init__(
        self,
        *,
        array_type: Optional[
            Union[str, "_models.AutomationRulePropertyArrayChangedConditionSupportedArrayType"]
        ] = None,
        change_type: Optional[
            Union[str, "_models.AutomationRulePropertyArrayChangedConditionSupportedChangeType"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword array_type: Known values are: "Alerts", "Labels", "Tactics", and "Comments".
        :paramtype array_type: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayChangedConditionSupportedArrayType
        :keyword change_type: "Added"
        :paramtype change_type: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayChangedConditionSupportedChangeType
        """
        super().__init__(**kwargs)
        self.array_type = array_type
        self.change_type = change_type


class AutomationRulePropertyArrayValuesCondition(_serialization.Model):  # pylint: disable=name-too-long
    """Describes an automation rule condition on array properties.

    :ivar array_type: Describes an array condition evaluated array type. Known values are:
     "CustomDetails" and "CustomDetailValues".
    :vartype array_type: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayConditionSupportedArrayType
    :ivar array_condition_type: Describes an array condition evaluation type. "AnyItem"
    :vartype array_condition_type: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayConditionSupportedArrayConditionType
    :ivar item_conditions:
    :vartype item_conditions: list[~azure.mgmt.securityinsight.models.AutomationRuleCondition]
    """

    _validation = {
        "item_conditions": {"max_items": 10, "min_items": 0},
    }

    _attribute_map = {
        "array_type": {"key": "arrayType", "type": "str"},
        "array_condition_type": {"key": "arrayConditionType", "type": "str"},
        "item_conditions": {"key": "itemConditions", "type": "[AutomationRuleCondition]"},
    }

    def __init__(
        self,
        *,
        array_type: Optional[Union[str, "_models.AutomationRulePropertyArrayConditionSupportedArrayType"]] = None,
        array_condition_type: Optional[
            Union[str, "_models.AutomationRulePropertyArrayConditionSupportedArrayConditionType"]
        ] = None,
        item_conditions: Optional[List["_models.AutomationRuleCondition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword array_type: Describes an array condition evaluated array type. Known values are:
         "CustomDetails" and "CustomDetailValues".
        :paramtype array_type: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayConditionSupportedArrayType
        :keyword array_condition_type: Describes an array condition evaluation type. "AnyItem"
        :paramtype array_condition_type: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayConditionSupportedArrayConditionType
        :keyword item_conditions:
        :paramtype item_conditions: list[~azure.mgmt.securityinsight.models.AutomationRuleCondition]
        """
        super().__init__(**kwargs)
        self.array_type = array_type
        self.array_condition_type = array_condition_type
        self.item_conditions = item_conditions


class AutomationRulePropertyValuesChangedCondition(_serialization.Model):  # pylint: disable=name-too-long
    """AutomationRulePropertyValuesChangedCondition.

    :ivar property_name: Known values are: "IncidentSeverity", "IncidentStatus", and
     "IncidentOwner".
    :vartype property_name: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyChangedConditionSupportedPropertyType
    :ivar change_type: Known values are: "ChangedFrom" and "ChangedTo".
    :vartype change_type: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyChangedConditionSupportedChangedType
    :ivar operator: Known values are: "Equals", "NotEquals", "Contains", "NotContains",
     "StartsWith", "NotStartsWith", "EndsWith", and "NotEndsWith".
    :vartype operator: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyConditionSupportedOperator
    :ivar property_values:
    :vartype property_values: list[str]
    """

    _attribute_map = {
        "property_name": {"key": "propertyName", "type": "str"},
        "change_type": {"key": "changeType", "type": "str"},
        "operator": {"key": "operator", "type": "str"},
        "property_values": {"key": "propertyValues", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        property_name: Optional[
            Union[str, "_models.AutomationRulePropertyChangedConditionSupportedPropertyType"]
        ] = None,
        change_type: Optional[Union[str, "_models.AutomationRulePropertyChangedConditionSupportedChangedType"]] = None,
        operator: Optional[Union[str, "_models.AutomationRulePropertyConditionSupportedOperator"]] = None,
        property_values: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword property_name: Known values are: "IncidentSeverity", "IncidentStatus", and
         "IncidentOwner".
        :paramtype property_name: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyChangedConditionSupportedPropertyType
        :keyword change_type: Known values are: "ChangedFrom" and "ChangedTo".
        :paramtype change_type: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyChangedConditionSupportedChangedType
        :keyword operator: Known values are: "Equals", "NotEquals", "Contains", "NotContains",
         "StartsWith", "NotStartsWith", "EndsWith", and "NotEndsWith".
        :paramtype operator: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyConditionSupportedOperator
        :keyword property_values:
        :paramtype property_values: list[str]
        """
        super().__init__(**kwargs)
        self.property_name = property_name
        self.change_type = change_type
        self.operator = operator
        self.property_values = property_values


class AutomationRulePropertyValuesCondition(_serialization.Model):
    """AutomationRulePropertyValuesCondition.

    :ivar property_name: The property to evaluate in an automation rule property condition. Known
     values are: "IncidentTitle", "IncidentDescription", "IncidentSeverity", "IncidentStatus",
     "IncidentRelatedAnalyticRuleIds", "IncidentTactics", "IncidentLabel", "IncidentProviderName",
     "IncidentUpdatedBySource", "IncidentCustomDetailsKey", "IncidentCustomDetailsValue",
     "AccountAadTenantId", "AccountAadUserId", "AccountName", "AccountNTDomain", "AccountPUID",
     "AccountSid", "AccountObjectGuid", "AccountUPNSuffix", "AlertProductNames",
     "AlertAnalyticRuleIds", "AzureResourceResourceId", "AzureResourceSubscriptionId",
     "CloudApplicationAppId", "CloudApplicationAppName", "DNSDomainName", "FileDirectory",
     "FileName", "FileHashValue", "HostAzureID", "HostName", "HostNetBiosName", "HostNTDomain",
     "HostOSVersion", "IoTDeviceId", "IoTDeviceName", "IoTDeviceType", "IoTDeviceVendor",
     "IoTDeviceModel", "IoTDeviceOperatingSystem", "IPAddress", "MailboxDisplayName",
     "MailboxPrimaryAddress", "MailboxUPN", "MailMessageDeliveryAction",
     "MailMessageDeliveryLocation", "MailMessageRecipient", "MailMessageSenderIP",
     "MailMessageSubject", "MailMessageP1Sender", "MailMessageP2Sender", "MalwareCategory",
     "MalwareName", "ProcessCommandLine", "ProcessId", "RegistryKey", "RegistryValueData", and
     "Url".
    :vartype property_name: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyConditionSupportedProperty
    :ivar operator: Known values are: "Equals", "NotEquals", "Contains", "NotContains",
     "StartsWith", "NotStartsWith", "EndsWith", and "NotEndsWith".
    :vartype operator: str or
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyConditionSupportedOperator
    :ivar property_values:
    :vartype property_values: list[str]
    """

    _attribute_map = {
        "property_name": {"key": "propertyName", "type": "str"},
        "operator": {"key": "operator", "type": "str"},
        "property_values": {"key": "propertyValues", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        property_name: Optional[Union[str, "_models.AutomationRulePropertyConditionSupportedProperty"]] = None,
        operator: Optional[Union[str, "_models.AutomationRulePropertyConditionSupportedOperator"]] = None,
        property_values: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword property_name: The property to evaluate in an automation rule property condition.
         Known values are: "IncidentTitle", "IncidentDescription", "IncidentSeverity", "IncidentStatus",
         "IncidentRelatedAnalyticRuleIds", "IncidentTactics", "IncidentLabel", "IncidentProviderName",
         "IncidentUpdatedBySource", "IncidentCustomDetailsKey", "IncidentCustomDetailsValue",
         "AccountAadTenantId", "AccountAadUserId", "AccountName", "AccountNTDomain", "AccountPUID",
         "AccountSid", "AccountObjectGuid", "AccountUPNSuffix", "AlertProductNames",
         "AlertAnalyticRuleIds", "AzureResourceResourceId", "AzureResourceSubscriptionId",
         "CloudApplicationAppId", "CloudApplicationAppName", "DNSDomainName", "FileDirectory",
         "FileName", "FileHashValue", "HostAzureID", "HostName", "HostNetBiosName", "HostNTDomain",
         "HostOSVersion", "IoTDeviceId", "IoTDeviceName", "IoTDeviceType", "IoTDeviceVendor",
         "IoTDeviceModel", "IoTDeviceOperatingSystem", "IPAddress", "MailboxDisplayName",
         "MailboxPrimaryAddress", "MailboxUPN", "MailMessageDeliveryAction",
         "MailMessageDeliveryLocation", "MailMessageRecipient", "MailMessageSenderIP",
         "MailMessageSubject", "MailMessageP1Sender", "MailMessageP2Sender", "MalwareCategory",
         "MalwareName", "ProcessCommandLine", "ProcessId", "RegistryKey", "RegistryValueData", and
         "Url".
        :paramtype property_name: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyConditionSupportedProperty
        :keyword operator: Known values are: "Equals", "NotEquals", "Contains", "NotContains",
         "StartsWith", "NotStartsWith", "EndsWith", and "NotEndsWith".
        :paramtype operator: str or
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyConditionSupportedOperator
        :keyword property_values:
        :paramtype property_values: list[str]
        """
        super().__init__(**kwargs)
        self.property_name = property_name
        self.operator = operator
        self.property_values = property_values


class AutomationRuleRunPlaybookAction(AutomationRuleAction):
    """Describes an automation rule action to run a playbook.

    All required parameters must be populated in order to send to server.

    :ivar order: Required.
    :vartype order: int
    :ivar action_type: The type of the automation rule action. Required. Known values are:
     "ModifyProperties", "RunPlaybook", and "AddIncidentTask".
    :vartype action_type: str or ~azure.mgmt.securityinsight.models.ActionType
    :ivar action_configuration:
    :vartype action_configuration: ~azure.mgmt.securityinsight.models.PlaybookActionProperties
    """

    _validation = {
        "order": {"required": True},
        "action_type": {"required": True},
    }

    _attribute_map = {
        "order": {"key": "order", "type": "int"},
        "action_type": {"key": "actionType", "type": "str"},
        "action_configuration": {"key": "actionConfiguration", "type": "PlaybookActionProperties"},
    }

    def __init__(
        self, *, order: int, action_configuration: Optional["_models.PlaybookActionProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword order: Required.
        :paramtype order: int
        :keyword action_configuration:
        :paramtype action_configuration: ~azure.mgmt.securityinsight.models.PlaybookActionProperties
        """
        super().__init__(order=order, **kwargs)
        self.action_type: str = "RunPlaybook"
        self.action_configuration = action_configuration


class AutomationRulesList(_serialization.Model):
    """AutomationRulesList.

    :ivar value:
    :vartype value: list[~azure.mgmt.securityinsight.models.AutomationRule]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[AutomationRule]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.AutomationRule"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.securityinsight.models.AutomationRule]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class AutomationRuleTriggeringLogic(_serialization.Model):
    """Describes automation rule triggering logic.

    All required parameters must be populated in order to send to server.

    :ivar is_enabled: Determines whether the automation rule is enabled or disabled. Required.
    :vartype is_enabled: bool
    :ivar expiration_time_utc: Determines when the automation rule should automatically expire and
     be disabled.
    :vartype expiration_time_utc: ~datetime.datetime
    :ivar triggers_on: Required. Known values are: "Incidents" and "Alerts".
    :vartype triggers_on: str or ~azure.mgmt.securityinsight.models.TriggersOn
    :ivar triggers_when: Required. Known values are: "Created" and "Updated".
    :vartype triggers_when: str or ~azure.mgmt.securityinsight.models.TriggersWhen
    :ivar conditions: The conditions to evaluate to determine if the automation rule should be
     triggered on a given object.
    :vartype conditions: list[~azure.mgmt.securityinsight.models.AutomationRuleCondition]
    """

    _validation = {
        "is_enabled": {"required": True},
        "triggers_on": {"required": True},
        "triggers_when": {"required": True},
        "conditions": {"max_items": 50, "min_items": 0},
    }

    _attribute_map = {
        "is_enabled": {"key": "isEnabled", "type": "bool"},
        "expiration_time_utc": {"key": "expirationTimeUtc", "type": "iso-8601"},
        "triggers_on": {"key": "triggersOn", "type": "str"},
        "triggers_when": {"key": "triggersWhen", "type": "str"},
        "conditions": {"key": "conditions", "type": "[AutomationRuleCondition]"},
    }

    def __init__(
        self,
        *,
        is_enabled: bool,
        triggers_on: Union[str, "_models.TriggersOn"],
        triggers_when: Union[str, "_models.TriggersWhen"],
        expiration_time_utc: Optional[datetime.datetime] = None,
        conditions: Optional[List["_models.AutomationRuleCondition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword is_enabled: Determines whether the automation rule is enabled or disabled. Required.
        :paramtype is_enabled: bool
        :keyword expiration_time_utc: Determines when the automation rule should automatically expire
         and be disabled.
        :paramtype expiration_time_utc: ~datetime.datetime
        :keyword triggers_on: Required. Known values are: "Incidents" and "Alerts".
        :paramtype triggers_on: str or ~azure.mgmt.securityinsight.models.TriggersOn
        :keyword triggers_when: Required. Known values are: "Created" and "Updated".
        :paramtype triggers_when: str or ~azure.mgmt.securityinsight.models.TriggersWhen
        :keyword conditions: The conditions to evaluate to determine if the automation rule should be
         triggered on a given object.
        :paramtype conditions: list[~azure.mgmt.securityinsight.models.AutomationRuleCondition]
        """
        super().__init__(**kwargs)
        self.is_enabled = is_enabled
        self.expiration_time_utc = expiration_time_utc
        self.triggers_on = triggers_on
        self.triggers_when = triggers_when
        self.conditions = conditions


class AWSAuthModel(CcpAuthConfig):
    """Model for API authentication with AWS.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar role_arn: AWS STS assume role ARN. Required.
    :vartype role_arn: str
    :ivar external_id: AWS STS assume role external ID. This is used to prevent the confused deputy
     problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'.
    :vartype external_id: str
    """

    _validation = {
        "type": {"required": True},
        "role_arn": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "role_arn": {"key": "roleArn", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
    }

    def __init__(self, *, role_arn: str, external_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword role_arn: AWS STS assume role ARN. Required.
        :paramtype role_arn: str
        :keyword external_id: AWS STS assume role external ID. This is used to prevent the confused
         deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'.
        :paramtype external_id: str
        """
        super().__init__(**kwargs)
        self.type: str = "AWS"
        self.role_arn = role_arn
        self.external_id = external_id


class AwsCloudTrailDataConnector(DataConnector):
    """Represents Amazon Web Services CloudTrail data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar aws_role_arn: The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access
     the Aws account.
    :vartype aws_role_arn: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AwsCloudTrailDataConnectorDataTypes
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "aws_role_arn": {"key": "properties.awsRoleArn", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "AwsCloudTrailDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        aws_role_arn: Optional[str] = None,
        data_types: Optional["_models.AwsCloudTrailDataConnectorDataTypes"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword aws_role_arn: The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access
         the Aws account.
        :paramtype aws_role_arn: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AwsCloudTrailDataConnectorDataTypes
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "AmazonWebServicesCloudTrail"
        self.aws_role_arn = aws_role_arn
        self.data_types = data_types


class AwsCloudTrailDataConnectorDataTypes(_serialization.Model):
    """The available data types for Amazon Web Services CloudTrail data connector.

    :ivar logs: Logs data type.
    :vartype logs: ~azure.mgmt.securityinsight.models.AwsCloudTrailDataConnectorDataTypesLogs
    """

    _attribute_map = {
        "logs": {"key": "logs", "type": "AwsCloudTrailDataConnectorDataTypesLogs"},
    }

    def __init__(
        self, *, logs: Optional["_models.AwsCloudTrailDataConnectorDataTypesLogs"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword logs: Logs data type.
        :paramtype logs: ~azure.mgmt.securityinsight.models.AwsCloudTrailDataConnectorDataTypesLogs
        """
        super().__init__(**kwargs)
        self.logs = logs


class DataConnectorDataTypeCommon(_serialization.Model):
    """Common field for data type in data connectors.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, *, state: Optional[Union[str, "_models.DataTypeState"]] = None, **kwargs: Any) -> None:
        """
        :keyword state: Describe whether this data type connection is enabled or not. Known values are:
         "Enabled" and "Disabled".
        :paramtype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
        """
        super().__init__(**kwargs)
        self.state = state


class AwsCloudTrailDataConnectorDataTypesLogs(DataConnectorDataTypeCommon):
    """Logs data type.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """


class AzureDevOpsResourceInfo(_serialization.Model):
    """Resources created in Azure DevOps repository.

    :ivar pipeline_id: Id of the pipeline created for the source-control.
    :vartype pipeline_id: str
    :ivar service_connection_id: Id of the service-connection created for the source-control.
    :vartype service_connection_id: str
    """

    _attribute_map = {
        "pipeline_id": {"key": "pipelineId", "type": "str"},
        "service_connection_id": {"key": "serviceConnectionId", "type": "str"},
    }

    def __init__(
        self, *, pipeline_id: Optional[str] = None, service_connection_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword pipeline_id: Id of the pipeline created for the source-control.
        :paramtype pipeline_id: str
        :keyword service_connection_id: Id of the service-connection created for the source-control.
        :paramtype service_connection_id: str
        """
        super().__init__(**kwargs)
        self.pipeline_id = pipeline_id
        self.service_connection_id = service_connection_id


class AzureResourceEntity(Entity):
    """Represents an azure resource entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar resource_id: The azure resource id of the resource.
    :vartype resource_id: str
    :ivar subscription_id: The subscription id of the resource.
    :vartype subscription_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "resource_id": {"readonly": True},
        "subscription_id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "resource_id": {"key": "properties.resourceId", "type": "str"},
        "subscription_id": {"key": "properties.subscriptionId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "AzureResource"
        self.additional_data = None
        self.friendly_name = None
        self.resource_id = None
        self.subscription_id = None


class AzureResourceEntityProperties(EntityCommonProperties):
    """AzureResource entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar resource_id: The azure resource id of the resource.
    :vartype resource_id: str
    :ivar subscription_id: The subscription id of the resource.
    :vartype subscription_id: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "resource_id": {"readonly": True},
        "subscription_id": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "resource_id": {"key": "resourceId", "type": "str"},
        "subscription_id": {"key": "subscriptionId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.resource_id = None
        self.subscription_id = None


class BasicAuthModel(CcpAuthConfig):
    """Model for API authentication with basic flow - user name + password.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar user_name: The user name. Required.
    :vartype user_name: str
    :ivar password: The password. Required.
    :vartype password: str
    """

    _validation = {
        "type": {"required": True},
        "user_name": {"required": True},
        "password": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "user_name": {"key": "userName", "type": "str"},
        "password": {"key": "password", "type": "str"},
    }

    def __init__(self, *, user_name: str, password: str, **kwargs: Any) -> None:
        """
        :keyword user_name: The user name. Required.
        :paramtype user_name: str
        :keyword password: The password. Required.
        :paramtype password: str
        """
        super().__init__(**kwargs)
        self.type: str = "Basic"
        self.user_name = user_name
        self.password = password


class Bookmark(ResourceWithEtag):
    """Represents a bookmark in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar created: The time the bookmark was created.
    :vartype created: ~datetime.datetime
    :ivar created_by: Describes a user that created the bookmark.
    :vartype created_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar display_name: The display name of the bookmark.
    :vartype display_name: str
    :ivar labels: List of labels relevant to this bookmark.
    :vartype labels: list[str]
    :ivar notes: The notes of the bookmark.
    :vartype notes: str
    :ivar query: The query of the bookmark.
    :vartype query: str
    :ivar query_result: The query result of the bookmark.
    :vartype query_result: str
    :ivar updated: The last time the bookmark was updated.
    :vartype updated: ~datetime.datetime
    :ivar updated_by: Describes a user that updated the bookmark.
    :vartype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar event_time: The bookmark event time.
    :vartype event_time: ~datetime.datetime
    :ivar query_start_time: The start time for the query.
    :vartype query_start_time: ~datetime.datetime
    :ivar query_end_time: The end time for the query.
    :vartype query_end_time: ~datetime.datetime
    :ivar incident_info: Describes an incident that relates to bookmark.
    :vartype incident_info: ~azure.mgmt.securityinsight.models.IncidentInfo
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "created": {"key": "properties.created", "type": "iso-8601"},
        "created_by": {"key": "properties.createdBy", "type": "UserInfo"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "labels": {"key": "properties.labels", "type": "[str]"},
        "notes": {"key": "properties.notes", "type": "str"},
        "query": {"key": "properties.query", "type": "str"},
        "query_result": {"key": "properties.queryResult", "type": "str"},
        "updated": {"key": "properties.updated", "type": "iso-8601"},
        "updated_by": {"key": "properties.updatedBy", "type": "UserInfo"},
        "event_time": {"key": "properties.eventTime", "type": "iso-8601"},
        "query_start_time": {"key": "properties.queryStartTime", "type": "iso-8601"},
        "query_end_time": {"key": "properties.queryEndTime", "type": "iso-8601"},
        "incident_info": {"key": "properties.incidentInfo", "type": "IncidentInfo"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        created: Optional[datetime.datetime] = None,
        created_by: Optional["_models.UserInfo"] = None,
        display_name: Optional[str] = None,
        labels: Optional[List[str]] = None,
        notes: Optional[str] = None,
        query: Optional[str] = None,
        query_result: Optional[str] = None,
        updated: Optional[datetime.datetime] = None,
        updated_by: Optional["_models.UserInfo"] = None,
        event_time: Optional[datetime.datetime] = None,
        query_start_time: Optional[datetime.datetime] = None,
        query_end_time: Optional[datetime.datetime] = None,
        incident_info: Optional["_models.IncidentInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword created: The time the bookmark was created.
        :paramtype created: ~datetime.datetime
        :keyword created_by: Describes a user that created the bookmark.
        :paramtype created_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword display_name: The display name of the bookmark.
        :paramtype display_name: str
        :keyword labels: List of labels relevant to this bookmark.
        :paramtype labels: list[str]
        :keyword notes: The notes of the bookmark.
        :paramtype notes: str
        :keyword query: The query of the bookmark.
        :paramtype query: str
        :keyword query_result: The query result of the bookmark.
        :paramtype query_result: str
        :keyword updated: The last time the bookmark was updated.
        :paramtype updated: ~datetime.datetime
        :keyword updated_by: Describes a user that updated the bookmark.
        :paramtype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword event_time: The bookmark event time.
        :paramtype event_time: ~datetime.datetime
        :keyword query_start_time: The start time for the query.
        :paramtype query_start_time: ~datetime.datetime
        :keyword query_end_time: The end time for the query.
        :paramtype query_end_time: ~datetime.datetime
        :keyword incident_info: Describes an incident that relates to bookmark.
        :paramtype incident_info: ~azure.mgmt.securityinsight.models.IncidentInfo
        """
        super().__init__(etag=etag, **kwargs)
        self.created = created
        self.created_by = created_by
        self.display_name = display_name
        self.labels = labels
        self.notes = notes
        self.query = query
        self.query_result = query_result
        self.updated = updated
        self.updated_by = updated_by
        self.event_time = event_time
        self.query_start_time = query_start_time
        self.query_end_time = query_end_time
        self.incident_info = incident_info


class BookmarkList(_serialization.Model):
    """List all the bookmarks.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of cases.
    :vartype next_link: str
    :ivar value: Array of bookmarks. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.Bookmark]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Bookmark]"},
    }

    def __init__(self, *, value: List["_models.Bookmark"], **kwargs: Any) -> None:
        """
        :keyword value: Array of bookmarks. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.Bookmark]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class BooleanConditionProperties(AutomationRuleCondition):
    """Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to
    conditions.

    All required parameters must be populated in order to send to server.

    :ivar condition_type: Required. Known values are: "Property", "PropertyArray",
     "PropertyChanged", "PropertyArrayChanged", and "Boolean".
    :vartype condition_type: str or ~azure.mgmt.securityinsight.models.ConditionType
    :ivar condition_properties: Describes an automation rule condition with boolean operators.
    :vartype condition_properties:
     ~azure.mgmt.securityinsight.models.AutomationRuleBooleanCondition
    """

    _validation = {
        "condition_type": {"required": True},
    }

    _attribute_map = {
        "condition_type": {"key": "conditionType", "type": "str"},
        "condition_properties": {"key": "conditionProperties", "type": "AutomationRuleBooleanCondition"},
    }

    def __init__(
        self, *, condition_properties: Optional["_models.AutomationRuleBooleanCondition"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword condition_properties: Describes an automation rule condition with boolean operators.
        :paramtype condition_properties:
         ~azure.mgmt.securityinsight.models.AutomationRuleBooleanCondition
        """
        super().__init__(**kwargs)
        self.condition_type: str = "Boolean"
        self.condition_properties = condition_properties


class CcpResponseConfig(_serialization.Model):
    """A custom response configuration for a rule.

    All required parameters must be populated in order to send to server.

    :ivar events_json_paths: The json paths, '$' char is the json root. Required.
    :vartype events_json_paths: list[str]
    :ivar success_status_json_path: The value where the status message/code should appear in the
     response.
    :vartype success_status_json_path: str
    :ivar success_status_value: The status value.
    :vartype success_status_value: str
    :ivar is_gzip_compressed: The value indicating whether the remote server support Gzip and we
     should expect Gzip response.
    :vartype is_gzip_compressed: bool
    :ivar compression_algo: The compression algorithm. For Example: 'gzip', 'multi-gzip',
     'deflate'.
    :vartype compression_algo: str
    :ivar format: The response format. possible values are json,csv,xml.
    :vartype format: str
    :ivar csv_delimiter: The csv delimiter, in case the response format is CSV.
    :vartype csv_delimiter: str
    :ivar has_csv_boundary: The value indicating whether the response has CSV boundary in case the
     response in CSV format.
    :vartype has_csv_boundary: bool
    :ivar has_csv_header: The value indicating whether the response has headers in case the
     response in CSV format.
    :vartype has_csv_header: bool
    :ivar convert_child_properties_to_array: The value indicating whether the response isn't an
     array of events / logs.  By setting this flag to true it means the remote server will response
     with an object which each property has as a value an array of events / logs.
    :vartype convert_child_properties_to_array: bool
    :ivar csv_escape: The character used to escape characters in CSV.
    :vartype csv_escape: str
    """

    _validation = {
        "events_json_paths": {"required": True},
        "csv_escape": {"max_length": 1, "min_length": 1},
    }

    _attribute_map = {
        "events_json_paths": {"key": "eventsJsonPaths", "type": "[str]"},
        "success_status_json_path": {"key": "successStatusJsonPath", "type": "str"},
        "success_status_value": {"key": "successStatusValue", "type": "str"},
        "is_gzip_compressed": {"key": "isGzipCompressed", "type": "bool"},
        "compression_algo": {"key": "compressionAlgo", "type": "str"},
        "format": {"key": "format", "type": "str"},
        "csv_delimiter": {"key": "csvDelimiter", "type": "str"},
        "has_csv_boundary": {"key": "hasCsvBoundary", "type": "bool"},
        "has_csv_header": {"key": "hasCsvHeader", "type": "bool"},
        "convert_child_properties_to_array": {"key": "convertChildPropertiesToArray", "type": "bool"},
        "csv_escape": {"key": "csvEscape", "type": "str"},
    }

    def __init__(
        self,
        *,
        events_json_paths: List[str],
        success_status_json_path: Optional[str] = None,
        success_status_value: Optional[str] = None,
        is_gzip_compressed: Optional[bool] = None,
        compression_algo: str = "gzip",
        format: str = "json",
        csv_delimiter: Optional[str] = None,
        has_csv_boundary: Optional[bool] = None,
        has_csv_header: Optional[bool] = None,
        convert_child_properties_to_array: Optional[bool] = None,
        csv_escape: str = '"',
        **kwargs: Any
    ) -> None:
        """
        :keyword events_json_paths: The json paths, '$' char is the json root. Required.
        :paramtype events_json_paths: list[str]
        :keyword success_status_json_path: The value where the status message/code should appear in the
         response.
        :paramtype success_status_json_path: str
        :keyword success_status_value: The status value.
        :paramtype success_status_value: str
        :keyword is_gzip_compressed: The value indicating whether the remote server support Gzip and we
         should expect Gzip response.
        :paramtype is_gzip_compressed: bool
        :keyword compression_algo: The compression algorithm. For Example: 'gzip', 'multi-gzip',
         'deflate'.
        :paramtype compression_algo: str
        :keyword format: The response format. possible values are json,csv,xml.
        :paramtype format: str
        :keyword csv_delimiter: The csv delimiter, in case the response format is CSV.
        :paramtype csv_delimiter: str
        :keyword has_csv_boundary: The value indicating whether the response has CSV boundary in case
         the response in CSV format.
        :paramtype has_csv_boundary: bool
        :keyword has_csv_header: The value indicating whether the response has headers in case the
         response in CSV format.
        :paramtype has_csv_header: bool
        :keyword convert_child_properties_to_array: The value indicating whether the response isn't an
         array of events / logs.  By setting this flag to true it means the remote server will response
         with an object which each property has as a value an array of events / logs.
        :paramtype convert_child_properties_to_array: bool
        :keyword csv_escape: The character used to escape characters in CSV.
        :paramtype csv_escape: str
        """
        super().__init__(**kwargs)
        self.events_json_paths = events_json_paths
        self.success_status_json_path = success_status_json_path
        self.success_status_value = success_status_value
        self.is_gzip_compressed = is_gzip_compressed
        self.compression_algo = compression_algo
        self.format = format
        self.csv_delimiter = csv_delimiter
        self.has_csv_boundary = has_csv_boundary
        self.has_csv_header = has_csv_header
        self.convert_child_properties_to_array = convert_child_properties_to_array
        self.csv_escape = csv_escape


class ClientInfo(_serialization.Model):
    """Information on the client (user or application) that made some action.

    :ivar email: The email of the client.
    :vartype email: str
    :ivar name: The name of the client.
    :vartype name: str
    :ivar object_id: The object id of the client.
    :vartype object_id: str
    :ivar user_principal_name: The user principal name of the client.
    :vartype user_principal_name: str
    """

    _attribute_map = {
        "email": {"key": "email", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "user_principal_name": {"key": "userPrincipalName", "type": "str"},
    }

    def __init__(
        self,
        *,
        email: Optional[str] = None,
        name: Optional[str] = None,
        object_id: Optional[str] = None,
        user_principal_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword email: The email of the client.
        :paramtype email: str
        :keyword name: The name of the client.
        :paramtype name: str
        :keyword object_id: The object id of the client.
        :paramtype object_id: str
        :keyword user_principal_name: The user principal name of the client.
        :paramtype user_principal_name: str
        """
        super().__init__(**kwargs)
        self.email = email
        self.name = name
        self.object_id = object_id
        self.user_principal_name = user_principal_name


class CloudApplicationEntity(Entity):
    """Represents a cloud application entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar app_id: The technical identifier of the application.
    :vartype app_id: int
    :ivar app_name: The name of the related cloud application.
    :vartype app_name: str
    :ivar instance_name: The user defined instance name of the cloud application. It is often used
     to distinguish between several applications of the same type that a customer has.
    :vartype instance_name: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "app_id": {"readonly": True},
        "app_name": {"readonly": True},
        "instance_name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "app_id": {"key": "properties.appId", "type": "int"},
        "app_name": {"key": "properties.appName", "type": "str"},
        "instance_name": {"key": "properties.instanceName", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "CloudApplication"
        self.additional_data = None
        self.friendly_name = None
        self.app_id = None
        self.app_name = None
        self.instance_name = None


class CloudApplicationEntityProperties(EntityCommonProperties):
    """CloudApplication entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar app_id: The technical identifier of the application.
    :vartype app_id: int
    :ivar app_name: The name of the related cloud application.
    :vartype app_name: str
    :ivar instance_name: The user defined instance name of the cloud application. It is often used
     to distinguish between several applications of the same type that a customer has.
    :vartype instance_name: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "app_id": {"readonly": True},
        "app_name": {"readonly": True},
        "instance_name": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "app_id": {"key": "appId", "type": "int"},
        "app_name": {"key": "appName", "type": "str"},
        "instance_name": {"key": "instanceName", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.app_id = None
        self.app_name = None
        self.instance_name = None


class CloudErrorBody(_serialization.Model):
    """Error details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: str
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None


class ConnectivityCriterion(_serialization.Model):
    """The criteria by which we determine whether the connector is connected or not.
    For Example, use a KQL query to check if  the expected data type is flowing).

    All required parameters must be populated in order to send to server.

    :ivar type: Gets or sets the type of connectivity. Required.
    :vartype type: str
    :ivar value: Gets or sets the queries for checking connectivity.
    :vartype value: list[str]
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "value": {"key": "value", "type": "[str]"},
    }

    def __init__(self, *, type: str, value: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword type: Gets or sets the type of connectivity. Required.
        :paramtype type: str
        :keyword value: Gets or sets the queries for checking connectivity.
        :paramtype value: list[str]
        """
        super().__init__(**kwargs)
        self.type = type
        self.value = value


class ConnectorDataType(_serialization.Model):
    """The data type which is created by the connector,
    including a query indicated when was the last time that data type was received in the
    workspace.

    All required parameters must be populated in order to send to server.

    :ivar name: Gets or sets the name of the data type to show in the graph. Required.
    :vartype name: str
    :ivar last_data_received_query: Gets or sets the query to indicate when relevant data was last
     received in the workspace. Required.
    :vartype last_data_received_query: str
    """

    _validation = {
        "name": {"required": True},
        "last_data_received_query": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "last_data_received_query": {"key": "lastDataReceivedQuery", "type": "str"},
    }

    def __init__(self, *, name: str, last_data_received_query: str, **kwargs: Any) -> None:
        """
        :keyword name: Gets or sets the name of the data type to show in the graph. Required.
        :paramtype name: str
        :keyword last_data_received_query: Gets or sets the query to indicate when relevant data was
         last received in the workspace. Required.
        :paramtype last_data_received_query: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.last_data_received_query = last_data_received_query


class ConnectorDefinitionsAvailability(_serialization.Model):
    """The exposure status of the connector to the customers.

    :ivar status: The exposure status of the connector to the customers. Available values are 0-4
     (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
    :vartype status: int
    :ivar is_preview: Gets or sets a value indicating whether the connector is preview.
    :vartype is_preview: bool
    """

    _attribute_map = {
        "status": {"key": "status", "type": "int"},
        "is_preview": {"key": "isPreview", "type": "bool"},
    }

    def __init__(self, *, status: Optional[int] = None, is_preview: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword status: The exposure status of the connector to the customers. Available values are
         0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal).
        :paramtype status: int
        :keyword is_preview: Gets or sets a value indicating whether the connector is preview.
        :paramtype is_preview: bool
        """
        super().__init__(**kwargs)
        self.status = status
        self.is_preview = is_preview


class ConnectorDefinitionsPermissions(_serialization.Model):
    """The required Permissions for the connector.

    :ivar tenant: Gets or sets the required tenant permissions for the connector.
    :vartype tenant: list[str]
    :ivar licenses: Gets or sets the required licenses for the user to create connections.
    :vartype licenses: list[str]
    :ivar resource_provider: Gets or sets the resource provider permissions required for the user
     to create connections.
    :vartype resource_provider:
     list[~azure.mgmt.securityinsight.models.ConnectorDefinitionsResourceProvider]
    :ivar customs: Gets or sets the customs permissions required for the user to create
     connections.
    :vartype customs: list[~azure.mgmt.securityinsight.models.CustomPermissionDetails]
    """

    _attribute_map = {
        "tenant": {"key": "tenant", "type": "[str]"},
        "licenses": {"key": "licenses", "type": "[str]"},
        "resource_provider": {"key": "resourceProvider", "type": "[ConnectorDefinitionsResourceProvider]"},
        "customs": {"key": "customs", "type": "[CustomPermissionDetails]"},
    }

    def __init__(
        self,
        *,
        tenant: Optional[List[str]] = None,
        licenses: Optional[List[str]] = None,
        resource_provider: Optional[List["_models.ConnectorDefinitionsResourceProvider"]] = None,
        customs: Optional[List["_models.CustomPermissionDetails"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant: Gets or sets the required tenant permissions for the connector.
        :paramtype tenant: list[str]
        :keyword licenses: Gets or sets the required licenses for the user to create connections.
        :paramtype licenses: list[str]
        :keyword resource_provider: Gets or sets the resource provider permissions required for the
         user to create connections.
        :paramtype resource_provider:
         list[~azure.mgmt.securityinsight.models.ConnectorDefinitionsResourceProvider]
        :keyword customs: Gets or sets the customs permissions required for the user to create
         connections.
        :paramtype customs: list[~azure.mgmt.securityinsight.models.CustomPermissionDetails]
        """
        super().__init__(**kwargs)
        self.tenant = tenant
        self.licenses = licenses
        self.resource_provider = resource_provider
        self.customs = customs


class ConnectorDefinitionsResourceProvider(_serialization.Model):
    """The resource provider details include the required permissions for the user to create
    connections.
    The user should have the required permissions(Read\\Write, ..) in the specified scope
    ProviderPermissionsScope against the specified resource provider.

    All required parameters must be populated in order to send to server.

    :ivar provider: Gets or sets the provider name. Required.
    :vartype provider: str
    :ivar permissions_display_text: Gets or sets the permissions description text. Required.
    :vartype permissions_display_text: str
    :ivar provider_display_name: Gets or sets the permissions provider display name. Required.
    :vartype provider_display_name: str
    :ivar scope: The scope on which the user should have permissions, in order to be able to create
     connections. Required. Known values are: "Subscription", "ResourceGroup", and "Workspace".
    :vartype scope: str or ~azure.mgmt.securityinsight.models.ProviderPermissionsScope
    :ivar required_permissions: Required permissions for the connector resource provider that
     define in ResourceProviders.
     For more information about the permissions see :code:`<see
     href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>`.  # pylint: disable=line-too-long
     Required.
    :vartype required_permissions:
     ~azure.mgmt.securityinsight.models.ResourceProviderRequiredPermissions
    """

    _validation = {
        "provider": {"required": True},
        "permissions_display_text": {"required": True},
        "provider_display_name": {"required": True},
        "scope": {"required": True},
        "required_permissions": {"required": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "permissions_display_text": {"key": "permissionsDisplayText", "type": "str"},
        "provider_display_name": {"key": "providerDisplayName", "type": "str"},
        "scope": {"key": "scope", "type": "str"},
        "required_permissions": {"key": "requiredPermissions", "type": "ResourceProviderRequiredPermissions"},
    }

    def __init__(
        self,
        *,
        provider: str,
        permissions_display_text: str,
        provider_display_name: str,
        scope: Union[str, "_models.ProviderPermissionsScope"],
        required_permissions: "_models.ResourceProviderRequiredPermissions",
        **kwargs: Any
    ) -> None:
        """
        :keyword provider: Gets or sets the provider name. Required.
        :paramtype provider: str
        :keyword permissions_display_text: Gets or sets the permissions description text. Required.
        :paramtype permissions_display_text: str
        :keyword provider_display_name: Gets or sets the permissions provider display name. Required.
        :paramtype provider_display_name: str
        :keyword scope: The scope on which the user should have permissions, in order to be able to
         create connections. Required. Known values are: "Subscription", "ResourceGroup", and
         "Workspace".
        :paramtype scope: str or ~azure.mgmt.securityinsight.models.ProviderPermissionsScope
        :keyword required_permissions: Required permissions for the connector resource provider that
         define in ResourceProviders.
         For more information about the permissions see :code:`<see
         href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>`.  # pylint: disable=line-too-long
         Required.
        :paramtype required_permissions:
         ~azure.mgmt.securityinsight.models.ResourceProviderRequiredPermissions
        """
        super().__init__(**kwargs)
        self.provider = provider
        self.permissions_display_text = permissions_display_text
        self.provider_display_name = provider_display_name
        self.scope = scope
        self.required_permissions = required_permissions


class CustomizableConnectionsConfig(_serialization.Model):
    """The UiConfig for 'Customizable' connector definition kind.

    All required parameters must be populated in order to send to server.

    :ivar template_spec_name: Gets or sets the template name. The template includes ARM templates
     that can be created by the connector, usually it will be the dataConnectors ARM templates.
     Required.
    :vartype template_spec_name: str
    :ivar template_spec_version: Gets or sets the template version. Required.
    :vartype template_spec_version: str
    """

    _validation = {
        "template_spec_name": {"required": True},
        "template_spec_version": {"required": True},
    }

    _attribute_map = {
        "template_spec_name": {"key": "templateSpecName", "type": "str"},
        "template_spec_version": {"key": "templateSpecVersion", "type": "str"},
    }

    def __init__(self, *, template_spec_name: str, template_spec_version: str, **kwargs: Any) -> None:
        """
        :keyword template_spec_name: Gets or sets the template name. The template includes ARM
         templates that can be created by the connector, usually it will be the dataConnectors ARM
         templates. Required.
        :paramtype template_spec_name: str
        :keyword template_spec_version: Gets or sets the template version. Required.
        :paramtype template_spec_version: str
        """
        super().__init__(**kwargs)
        self.template_spec_name = template_spec_name
        self.template_spec_version = template_spec_version


class DataConnectorDefinition(ResourceWithEtag):
    """An Azure resource, which encapsulate the entire info requires to display a data connector page
    in Azure portal,
    and the info required to define data connections.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    CustomizableConnectorDefinition

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. "Customizable"
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorDefinitionKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {"kind": {"Customizable": "CustomizableConnectorDefinition"}}

    def __init__(self, *, etag: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: Optional[str] = None


class CustomizableConnectorDefinition(DataConnectorDefinition):
    """Connector definition for kind 'Customizable'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. "Customizable"
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorDefinitionKind
    :ivar created_time_utc: Gets or sets the connector definition created date in UTC format.
    :vartype created_time_utc: ~datetime.datetime
    :ivar last_modified_utc: Gets or sets the connector definition last modified date in UTC
     format.
    :vartype last_modified_utc: ~datetime.datetime
    :ivar connector_ui_config: The UiConfig for 'Customizable' connector definition kind.
    :vartype connector_ui_config: ~azure.mgmt.securityinsight.models.CustomizableConnectorUiConfig
    :ivar connections_config: The UiConfig for 'Customizable' connector definition kind.
    :vartype connections_config: ~azure.mgmt.securityinsight.models.CustomizableConnectionsConfig
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "created_time_utc": {"key": "properties.createdTimeUtc", "type": "iso-8601"},
        "last_modified_utc": {"key": "properties.lastModifiedUtc", "type": "iso-8601"},
        "connector_ui_config": {"key": "properties.connectorUiConfig", "type": "CustomizableConnectorUiConfig"},
        "connections_config": {"key": "properties.connectionsConfig", "type": "CustomizableConnectionsConfig"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        created_time_utc: Optional[datetime.datetime] = None,
        last_modified_utc: Optional[datetime.datetime] = None,
        connector_ui_config: Optional["_models.CustomizableConnectorUiConfig"] = None,
        connections_config: Optional["_models.CustomizableConnectionsConfig"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword created_time_utc: Gets or sets the connector definition created date in UTC format.
        :paramtype created_time_utc: ~datetime.datetime
        :keyword last_modified_utc: Gets or sets the connector definition last modified date in UTC
         format.
        :paramtype last_modified_utc: ~datetime.datetime
        :keyword connector_ui_config: The UiConfig for 'Customizable' connector definition kind.
        :paramtype connector_ui_config:
         ~azure.mgmt.securityinsight.models.CustomizableConnectorUiConfig
        :keyword connections_config: The UiConfig for 'Customizable' connector definition kind.
        :paramtype connections_config: ~azure.mgmt.securityinsight.models.CustomizableConnectionsConfig
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "Customizable"
        self.created_time_utc = created_time_utc
        self.last_modified_utc = last_modified_utc
        self.connector_ui_config = connector_ui_config
        self.connections_config = connections_config


class CustomizableConnectorUiConfig(_serialization.Model):
    """The UiConfig for 'Customizable' connector definition kind.

    All required parameters must be populated in order to send to server.

    :ivar id: Gets or sets custom connector id. optional field.
    :vartype id: str
    :ivar title: Gets or sets the connector blade title. Required.
    :vartype title: str
    :ivar publisher: Gets or sets the connector publisher name. Required.
    :vartype publisher: str
    :ivar description_markdown: Gets or sets the connector description in markdown format.
     Required.
    :vartype description_markdown: str
    :ivar graph_queries: Gets or sets the graph queries to show the current data volume over time.
     Required.
    :vartype graph_queries: list[~azure.mgmt.securityinsight.models.GraphQuery]
    :ivar data_types: Gets or sets the data types to check for last data received. Required.
    :vartype data_types: list[~azure.mgmt.securityinsight.models.ConnectorDataType]
    :ivar connectivity_criteria: Gets or sets the way the connector checks whether the connector is
     connected. Required.
    :vartype connectivity_criteria: list[~azure.mgmt.securityinsight.models.ConnectivityCriterion]
    :ivar availability: The exposure status of the connector to the customers.
    :vartype availability: ~azure.mgmt.securityinsight.models.ConnectorDefinitionsAvailability
    :ivar permissions: The required Permissions for the connector. Required.
    :vartype permissions: ~azure.mgmt.securityinsight.models.ConnectorDefinitionsPermissions
    :ivar instruction_steps: Gets or sets the instruction steps to enable the connector. Required.
    :vartype instruction_steps: list[~azure.mgmt.securityinsight.models.InstructionStep]
    :ivar logo: Gets or sets the connector logo to be used when displaying the connector within
     Azure Sentinel's connector's gallery.
     The logo value should be in SVG format.
    :vartype logo: str
    :ivar is_connectivity_criterias_match_some: Gets or sets a value indicating whether to use
     'OR'(SOME) or 'AND' between ConnectivityCriteria items.
    :vartype is_connectivity_criterias_match_some: bool
    """

    _validation = {
        "title": {"required": True},
        "publisher": {"required": True},
        "description_markdown": {"required": True},
        "graph_queries": {"required": True},
        "data_types": {"required": True},
        "connectivity_criteria": {"required": True},
        "permissions": {"required": True},
        "instruction_steps": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "title": {"key": "title", "type": "str"},
        "publisher": {"key": "publisher", "type": "str"},
        "description_markdown": {"key": "descriptionMarkdown", "type": "str"},
        "graph_queries": {"key": "graphQueries", "type": "[GraphQuery]"},
        "data_types": {"key": "dataTypes", "type": "[ConnectorDataType]"},
        "connectivity_criteria": {"key": "connectivityCriteria", "type": "[ConnectivityCriterion]"},
        "availability": {"key": "availability", "type": "ConnectorDefinitionsAvailability"},
        "permissions": {"key": "permissions", "type": "ConnectorDefinitionsPermissions"},
        "instruction_steps": {"key": "instructionSteps", "type": "[InstructionStep]"},
        "logo": {"key": "logo", "type": "str"},
        "is_connectivity_criterias_match_some": {"key": "isConnectivityCriteriasMatchSome", "type": "bool"},
    }

    def __init__(
        self,
        *,
        title: str,
        publisher: str,
        description_markdown: str,
        graph_queries: List["_models.GraphQuery"],
        data_types: List["_models.ConnectorDataType"],
        connectivity_criteria: List["_models.ConnectivityCriterion"],
        permissions: "_models.ConnectorDefinitionsPermissions",
        instruction_steps: List["_models.InstructionStep"],
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        availability: Optional["_models.ConnectorDefinitionsAvailability"] = None,
        logo: Optional[str] = None,
        is_connectivity_criterias_match_some: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Gets or sets custom connector id. optional field.
        :paramtype id: str
        :keyword title: Gets or sets the connector blade title. Required.
        :paramtype title: str
        :keyword publisher: Gets or sets the connector publisher name. Required.
        :paramtype publisher: str
        :keyword description_markdown: Gets or sets the connector description in markdown format.
         Required.
        :paramtype description_markdown: str
        :keyword graph_queries: Gets or sets the graph queries to show the current data volume over
         time. Required.
        :paramtype graph_queries: list[~azure.mgmt.securityinsight.models.GraphQuery]
        :keyword data_types: Gets or sets the data types to check for last data received. Required.
        :paramtype data_types: list[~azure.mgmt.securityinsight.models.ConnectorDataType]
        :keyword connectivity_criteria: Gets or sets the way the connector checks whether the connector
         is connected. Required.
        :paramtype connectivity_criteria:
         list[~azure.mgmt.securityinsight.models.ConnectivityCriterion]
        :keyword availability: The exposure status of the connector to the customers.
        :paramtype availability: ~azure.mgmt.securityinsight.models.ConnectorDefinitionsAvailability
        :keyword permissions: The required Permissions for the connector. Required.
        :paramtype permissions: ~azure.mgmt.securityinsight.models.ConnectorDefinitionsPermissions
        :keyword instruction_steps: Gets or sets the instruction steps to enable the connector.
         Required.
        :paramtype instruction_steps: list[~azure.mgmt.securityinsight.models.InstructionStep]
        :keyword logo: Gets or sets the connector logo to be used when displaying the connector within
         Azure Sentinel's connector's gallery.
         The logo value should be in SVG format.
        :paramtype logo: str
        :keyword is_connectivity_criterias_match_some: Gets or sets a value indicating whether to use
         'OR'(SOME) or 'AND' between ConnectivityCriteria items.
        :paramtype is_connectivity_criterias_match_some: bool
        """
        super().__init__(**kwargs)
        self.id = id
        self.title = title
        self.publisher = publisher
        self.description_markdown = description_markdown
        self.graph_queries = graph_queries
        self.data_types = data_types
        self.connectivity_criteria = connectivity_criteria
        self.availability = availability
        self.permissions = permissions
        self.instruction_steps = instruction_steps
        self.logo = logo
        self.is_connectivity_criterias_match_some = is_connectivity_criterias_match_some


class CustomPermissionDetails(_serialization.Model):
    """The Custom permissions required for the connector.

    All required parameters must be populated in order to send to server.

    :ivar name: Gets or sets the custom permissions name. Required.
    :vartype name: str
    :ivar description: Gets or sets the custom permissions description. Required.
    :vartype description: str
    """

    _validation = {
        "name": {"required": True},
        "description": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, name: str, description: str, **kwargs: Any) -> None:
        """
        :keyword name: Gets or sets the custom permissions name. Required.
        :paramtype name: str
        :keyword description: Gets or sets the custom permissions description. Required.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.description = description


class DataConnectorDefinitionArmCollectionWrapper(_serialization.Model):  # pylint: disable=name-too-long
    """Encapsulate the data connector definition object.

    :ivar value:
    :vartype value: list[~azure.mgmt.securityinsight.models.DataConnectorDefinition]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[DataConnectorDefinition]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.DataConnectorDefinition"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.securityinsight.models.DataConnectorDefinition]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DataConnectorList(_serialization.Model):
    """List all the data connectors.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of data connectors.
    :vartype next_link: str
    :ivar value: Array of data connectors. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.DataConnector]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[DataConnector]"},
    }

    def __init__(self, *, value: List["_models.DataConnector"], **kwargs: Any) -> None:
        """
        :keyword value: Array of data connectors. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.DataConnector]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class DataConnectorTenantId(_serialization.Model):
    """Properties data connector on tenant level.

    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
    }

    def __init__(self, *, tenant_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id


class DCRConfiguration(_serialization.Model):
    """The configuration of the destination of the data.

    All required parameters must be populated in order to send to server.

    :ivar data_collection_endpoint: Represents the data collection ingestion endpoint in log
     analytics. Required.
    :vartype data_collection_endpoint: str
    :ivar data_collection_rule_immutable_id: The data collection rule immutable id, the rule
     defines the transformation and data destination. Required.
    :vartype data_collection_rule_immutable_id: str
    :ivar stream_name: The stream we are sending the data to. Required.
    :vartype stream_name: str
    """

    _validation = {
        "data_collection_endpoint": {"required": True},
        "data_collection_rule_immutable_id": {"required": True},
        "stream_name": {"required": True},
    }

    _attribute_map = {
        "data_collection_endpoint": {"key": "dataCollectionEndpoint", "type": "str"},
        "data_collection_rule_immutable_id": {"key": "dataCollectionRuleImmutableId", "type": "str"},
        "stream_name": {"key": "streamName", "type": "str"},
    }

    def __init__(
        self, *, data_collection_endpoint: str, data_collection_rule_immutable_id: str, stream_name: str, **kwargs: Any
    ) -> None:
        """
        :keyword data_collection_endpoint: Represents the data collection ingestion endpoint in log
         analytics. Required.
        :paramtype data_collection_endpoint: str
        :keyword data_collection_rule_immutable_id: The data collection rule immutable id, the rule
         defines the transformation and data destination. Required.
        :paramtype data_collection_rule_immutable_id: str
        :keyword stream_name: The stream we are sending the data to. Required.
        :paramtype stream_name: str
        """
        super().__init__(**kwargs)
        self.data_collection_endpoint = data_collection_endpoint
        self.data_collection_rule_immutable_id = data_collection_rule_immutable_id
        self.stream_name = stream_name


class Deployment(_serialization.Model):
    """Description about a deployment.

    :ivar deployment_id: Deployment identifier.
    :vartype deployment_id: str
    :ivar deployment_state: Current status of the deployment. Known values are: "In_Progress",
     "Completed", "Queued", and "Canceling".
    :vartype deployment_state: str or ~azure.mgmt.securityinsight.models.DeploymentState
    :ivar deployment_result: The outcome of the deployment. Known values are: "Success",
     "Canceled", and "Failed".
    :vartype deployment_result: str or ~azure.mgmt.securityinsight.models.DeploymentResult
    :ivar deployment_time: The time when the deployment finished.
    :vartype deployment_time: ~datetime.datetime
    :ivar deployment_logs_url: Url to access repository action logs.
    :vartype deployment_logs_url: str
    """

    _attribute_map = {
        "deployment_id": {"key": "deploymentId", "type": "str"},
        "deployment_state": {"key": "deploymentState", "type": "str"},
        "deployment_result": {"key": "deploymentResult", "type": "str"},
        "deployment_time": {"key": "deploymentTime", "type": "iso-8601"},
        "deployment_logs_url": {"key": "deploymentLogsUrl", "type": "str"},
    }

    def __init__(
        self,
        *,
        deployment_id: Optional[str] = None,
        deployment_state: Optional[Union[str, "_models.DeploymentState"]] = None,
        deployment_result: Optional[Union[str, "_models.DeploymentResult"]] = None,
        deployment_time: Optional[datetime.datetime] = None,
        deployment_logs_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword deployment_id: Deployment identifier.
        :paramtype deployment_id: str
        :keyword deployment_state: Current status of the deployment. Known values are: "In_Progress",
         "Completed", "Queued", and "Canceling".
        :paramtype deployment_state: str or ~azure.mgmt.securityinsight.models.DeploymentState
        :keyword deployment_result: The outcome of the deployment. Known values are: "Success",
         "Canceled", and "Failed".
        :paramtype deployment_result: str or ~azure.mgmt.securityinsight.models.DeploymentResult
        :keyword deployment_time: The time when the deployment finished.
        :paramtype deployment_time: ~datetime.datetime
        :keyword deployment_logs_url: Url to access repository action logs.
        :paramtype deployment_logs_url: str
        """
        super().__init__(**kwargs)
        self.deployment_id = deployment_id
        self.deployment_state = deployment_state
        self.deployment_result = deployment_result
        self.deployment_time = deployment_time
        self.deployment_logs_url = deployment_logs_url


class DeploymentInfo(_serialization.Model):
    """Information regarding a deployment.

    :ivar deployment_fetch_status: Status while fetching the last deployment. Known values are:
     "Success", "Unauthorized", and "NotFound".
    :vartype deployment_fetch_status: str or
     ~azure.mgmt.securityinsight.models.DeploymentFetchStatus
    :ivar deployment: Deployment information.
    :vartype deployment: ~azure.mgmt.securityinsight.models.Deployment
    :ivar message: Additional details about the deployment that can be shown to the user.
    :vartype message: str
    """

    _attribute_map = {
        "deployment_fetch_status": {"key": "deploymentFetchStatus", "type": "str"},
        "deployment": {"key": "deployment", "type": "Deployment"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(
        self,
        *,
        deployment_fetch_status: Optional[Union[str, "_models.DeploymentFetchStatus"]] = None,
        deployment: Optional["_models.Deployment"] = None,
        message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword deployment_fetch_status: Status while fetching the last deployment. Known values are:
         "Success", "Unauthorized", and "NotFound".
        :paramtype deployment_fetch_status: str or
         ~azure.mgmt.securityinsight.models.DeploymentFetchStatus
        :keyword deployment: Deployment information.
        :paramtype deployment: ~azure.mgmt.securityinsight.models.Deployment
        :keyword message: Additional details about the deployment that can be shown to the user.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.deployment_fetch_status = deployment_fetch_status
        self.deployment = deployment
        self.message = message


class DnsEntity(Entity):
    """Represents a dns entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar dns_server_ip_entity_id: An ip entity id for the dns server resolving the request.
    :vartype dns_server_ip_entity_id: str
    :ivar domain_name: The name of the dns record associated with the alert.
    :vartype domain_name: str
    :ivar host_ip_address_entity_id: An ip entity id for the dns request client.
    :vartype host_ip_address_entity_id: str
    :ivar ip_address_entity_ids: Ip entity identifiers for the resolved ip address.
    :vartype ip_address_entity_ids: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "dns_server_ip_entity_id": {"readonly": True},
        "domain_name": {"readonly": True},
        "host_ip_address_entity_id": {"readonly": True},
        "ip_address_entity_ids": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "dns_server_ip_entity_id": {"key": "properties.dnsServerIpEntityId", "type": "str"},
        "domain_name": {"key": "properties.domainName", "type": "str"},
        "host_ip_address_entity_id": {"key": "properties.hostIpAddressEntityId", "type": "str"},
        "ip_address_entity_ids": {"key": "properties.ipAddressEntityIds", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "DnsResolution"
        self.additional_data = None
        self.friendly_name = None
        self.dns_server_ip_entity_id = None
        self.domain_name = None
        self.host_ip_address_entity_id = None
        self.ip_address_entity_ids = None


class DnsEntityProperties(EntityCommonProperties):
    """Dns entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar dns_server_ip_entity_id: An ip entity id for the dns server resolving the request.
    :vartype dns_server_ip_entity_id: str
    :ivar domain_name: The name of the dns record associated with the alert.
    :vartype domain_name: str
    :ivar host_ip_address_entity_id: An ip entity id for the dns request client.
    :vartype host_ip_address_entity_id: str
    :ivar ip_address_entity_ids: Ip entity identifiers for the resolved ip address.
    :vartype ip_address_entity_ids: list[str]
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "dns_server_ip_entity_id": {"readonly": True},
        "domain_name": {"readonly": True},
        "host_ip_address_entity_id": {"readonly": True},
        "ip_address_entity_ids": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "dns_server_ip_entity_id": {"key": "dnsServerIpEntityId", "type": "str"},
        "domain_name": {"key": "domainName", "type": "str"},
        "host_ip_address_entity_id": {"key": "hostIpAddressEntityId", "type": "str"},
        "ip_address_entity_ids": {"key": "ipAddressEntityIds", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.dns_server_ip_entity_id = None
        self.domain_name = None
        self.host_ip_address_entity_id = None
        self.ip_address_entity_ids = None


class EntityManualTriggerRequestBody(_serialization.Model):
    """Describes the request body for triggering a playbook on an entity.

    All required parameters must be populated in order to send to server.

    :ivar incident_arm_id: The incident id to associate the entity with.
    :vartype incident_arm_id: str
    :ivar tenant_id: The tenant id of the playbook resource.
    :vartype tenant_id: str
    :ivar logic_apps_resource_id: The resource id of the playbook resource. Required.
    :vartype logic_apps_resource_id: str
    """

    _validation = {
        "logic_apps_resource_id": {"required": True},
    }

    _attribute_map = {
        "incident_arm_id": {"key": "incidentArmId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "logic_apps_resource_id": {"key": "logicAppsResourceId", "type": "str"},
    }

    def __init__(
        self,
        *,
        logic_apps_resource_id: str,
        incident_arm_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword incident_arm_id: The incident id to associate the entity with.
        :paramtype incident_arm_id: str
        :keyword tenant_id: The tenant id of the playbook resource.
        :paramtype tenant_id: str
        :keyword logic_apps_resource_id: The resource id of the playbook resource. Required.
        :paramtype logic_apps_resource_id: str
        """
        super().__init__(**kwargs)
        self.incident_arm_id = incident_arm_id
        self.tenant_id = tenant_id
        self.logic_apps_resource_id = logic_apps_resource_id


class EntityMapping(_serialization.Model):
    """Single entity mapping for the alert rule.

    :ivar entity_type: The V3 type of the mapped entity. Known values are: "Account", "Host", "IP",
     "Malware", "File", "Process", "CloudApplication", "DNS", "AzureResource", "FileHash",
     "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "Mailbox", "MailCluster",
     "MailMessage", and "SubmissionMail".
    :vartype entity_type: str or ~azure.mgmt.securityinsight.models.EntityMappingType
    :ivar field_mappings: array of field mappings for the given entity mapping.
    :vartype field_mappings: list[~azure.mgmt.securityinsight.models.FieldMapping]
    """

    _attribute_map = {
        "entity_type": {"key": "entityType", "type": "str"},
        "field_mappings": {"key": "fieldMappings", "type": "[FieldMapping]"},
    }

    def __init__(
        self,
        *,
        entity_type: Optional[Union[str, "_models.EntityMappingType"]] = None,
        field_mappings: Optional[List["_models.FieldMapping"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword entity_type: The V3 type of the mapped entity. Known values are: "Account", "Host",
         "IP", "Malware", "File", "Process", "CloudApplication", "DNS", "AzureResource", "FileHash",
         "RegistryKey", "RegistryValue", "SecurityGroup", "URL", "Mailbox", "MailCluster",
         "MailMessage", and "SubmissionMail".
        :paramtype entity_type: str or ~azure.mgmt.securityinsight.models.EntityMappingType
        :keyword field_mappings: array of field mappings for the given entity mapping.
        :paramtype field_mappings: list[~azure.mgmt.securityinsight.models.FieldMapping]
        """
        super().__init__(**kwargs)
        self.entity_type = entity_type
        self.field_mappings = field_mappings


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.securityinsight.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.securityinsight.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.securityinsight.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.securityinsight.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class EventGroupingSettings(_serialization.Model):
    """Event grouping settings property bag.

    :ivar aggregation_kind: The event grouping aggregation kinds. Known values are: "SingleAlert"
     and "AlertPerResult".
    :vartype aggregation_kind: str or
     ~azure.mgmt.securityinsight.models.EventGroupingAggregationKind
    """

    _attribute_map = {
        "aggregation_kind": {"key": "aggregationKind", "type": "str"},
    }

    def __init__(
        self, *, aggregation_kind: Optional[Union[str, "_models.EventGroupingAggregationKind"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword aggregation_kind: The event grouping aggregation kinds. Known values are:
         "SingleAlert" and "AlertPerResult".
        :paramtype aggregation_kind: str or
         ~azure.mgmt.securityinsight.models.EventGroupingAggregationKind
        """
        super().__init__(**kwargs)
        self.aggregation_kind = aggregation_kind


class FieldMapping(_serialization.Model):
    """A single field mapping of the mapped entity.

    :ivar identifier: the V3 identifier of the entity.
    :vartype identifier: str
    :ivar column_name: the column name to be mapped to the identifier.
    :vartype column_name: str
    """

    _attribute_map = {
        "identifier": {"key": "identifier", "type": "str"},
        "column_name": {"key": "columnName", "type": "str"},
    }

    def __init__(self, *, identifier: Optional[str] = None, column_name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword identifier: the V3 identifier of the entity.
        :paramtype identifier: str
        :keyword column_name: the column name to be mapped to the identifier.
        :paramtype column_name: str
        """
        super().__init__(**kwargs)
        self.identifier = identifier
        self.column_name = column_name


class FileEntity(Entity):
    """Represents a file entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar directory: The full path to the file.
    :vartype directory: str
    :ivar file_hash_entity_ids: The file hash entity identifiers associated with this file.
    :vartype file_hash_entity_ids: list[str]
    :ivar file_name: The file name without path (some alerts might not include path).
    :vartype file_name: str
    :ivar host_entity_id: The Host entity id which the file belongs to.
    :vartype host_entity_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "directory": {"readonly": True},
        "file_hash_entity_ids": {"readonly": True},
        "file_name": {"readonly": True},
        "host_entity_id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "directory": {"key": "properties.directory", "type": "str"},
        "file_hash_entity_ids": {"key": "properties.fileHashEntityIds", "type": "[str]"},
        "file_name": {"key": "properties.fileName", "type": "str"},
        "host_entity_id": {"key": "properties.hostEntityId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "File"
        self.additional_data = None
        self.friendly_name = None
        self.directory = None
        self.file_hash_entity_ids = None
        self.file_name = None
        self.host_entity_id = None


class FileEntityProperties(EntityCommonProperties):
    """File entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar directory: The full path to the file.
    :vartype directory: str
    :ivar file_hash_entity_ids: The file hash entity identifiers associated with this file.
    :vartype file_hash_entity_ids: list[str]
    :ivar file_name: The file name without path (some alerts might not include path).
    :vartype file_name: str
    :ivar host_entity_id: The Host entity id which the file belongs to.
    :vartype host_entity_id: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "directory": {"readonly": True},
        "file_hash_entity_ids": {"readonly": True},
        "file_name": {"readonly": True},
        "host_entity_id": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "directory": {"key": "directory", "type": "str"},
        "file_hash_entity_ids": {"key": "fileHashEntityIds", "type": "[str]"},
        "file_name": {"key": "fileName", "type": "str"},
        "host_entity_id": {"key": "hostEntityId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.directory = None
        self.file_hash_entity_ids = None
        self.file_name = None
        self.host_entity_id = None


class FileHashEntity(Entity):
    """Represents a file hash entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar algorithm: The hash algorithm type. Known values are: "Unknown", "MD5", "SHA1", "SHA256",
     and "SHA256AC".
    :vartype algorithm: str or ~azure.mgmt.securityinsight.models.FileHashAlgorithm
    :ivar hash_value: The file hash value.
    :vartype hash_value: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "algorithm": {"readonly": True},
        "hash_value": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "algorithm": {"key": "properties.algorithm", "type": "str"},
        "hash_value": {"key": "properties.hashValue", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "FileHash"
        self.additional_data = None
        self.friendly_name = None
        self.algorithm = None
        self.hash_value = None


class FileHashEntityProperties(EntityCommonProperties):
    """FileHash entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar algorithm: The hash algorithm type. Known values are: "Unknown", "MD5", "SHA1", "SHA256",
     and "SHA256AC".
    :vartype algorithm: str or ~azure.mgmt.securityinsight.models.FileHashAlgorithm
    :ivar hash_value: The file hash value.
    :vartype hash_value: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "algorithm": {"readonly": True},
        "hash_value": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "algorithm": {"key": "algorithm", "type": "str"},
        "hash_value": {"key": "hashValue", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.algorithm = None
        self.hash_value = None


class FusionAlertRule(AlertRule):
    """Represents Fusion alert rule.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    :ivar alert_rule_template_name: The Name of the alert rule template used to create this rule.
    :vartype alert_rule_template_name: str
    :ivar description: The description of the alert rule.
    :vartype description: str
    :ivar display_name: The display name for alerts created by this alert rule.
    :vartype display_name: str
    :ivar enabled: Determines whether this alert rule is enabled or disabled.
    :vartype enabled: bool
    :ivar last_modified_utc: The last time that this alert has been modified.
    :vartype last_modified_utc: ~datetime.datetime
    :ivar severity: The severity for alerts created by this alert rule. Known values are: "High",
     "Medium", "Low", and "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar tactics: The tactics of the alert rule.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar techniques: The techniques of the alert rule.
    :vartype techniques: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "description": {"readonly": True},
        "display_name": {"readonly": True},
        "last_modified_utc": {"readonly": True},
        "severity": {"readonly": True},
        "tactics": {"readonly": True},
        "techniques": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "alert_rule_template_name": {"key": "properties.alertRuleTemplateName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "last_modified_utc": {"key": "properties.lastModifiedUtc", "type": "iso-8601"},
        "severity": {"key": "properties.severity", "type": "str"},
        "tactics": {"key": "properties.tactics", "type": "[str]"},
        "techniques": {"key": "properties.techniques", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        alert_rule_template_name: Optional[str] = None,
        enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword alert_rule_template_name: The Name of the alert rule template used to create this
         rule.
        :paramtype alert_rule_template_name: str
        :keyword enabled: Determines whether this alert rule is enabled or disabled.
        :paramtype enabled: bool
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "Fusion"
        self.alert_rule_template_name = alert_rule_template_name
        self.description = None
        self.display_name = None
        self.enabled = enabled
        self.last_modified_utc = None
        self.severity = None
        self.tactics = None
        self.techniques = None


class FusionAlertRuleTemplate(AlertRuleTemplate):
    """Represents Fusion alert rule template.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    :ivar alert_rules_created_by_template_count: the number of alert rules that were created by
     this template.
    :vartype alert_rules_created_by_template_count: int
    :ivar created_date_utc: The time that this alert rule template has been added.
    :vartype created_date_utc: ~datetime.datetime
    :ivar last_updated_date_utc: The time that this alert rule template was last updated.
    :vartype last_updated_date_utc: ~datetime.datetime
    :ivar description: The description of the alert rule template.
    :vartype description: str
    :ivar display_name: The display name for alert rule template.
    :vartype display_name: str
    :ivar required_data_connectors: The required data connectors for this template.
    :vartype required_data_connectors:
     list[~azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource]
    :ivar status: The alert rule template status. Known values are: "Installed", "Available", and
     "NotAvailable".
    :vartype status: str or ~azure.mgmt.securityinsight.models.TemplateStatus
    :ivar severity: The severity for alerts created by this alert rule. Known values are: "High",
     "Medium", "Low", and "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar tactics: The tactics of the alert rule template.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar techniques: The techniques of the alert rule template.
    :vartype techniques: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "created_date_utc": {"readonly": True},
        "last_updated_date_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "alert_rules_created_by_template_count": {"key": "properties.alertRulesCreatedByTemplateCount", "type": "int"},
        "created_date_utc": {"key": "properties.createdDateUTC", "type": "iso-8601"},
        "last_updated_date_utc": {"key": "properties.lastUpdatedDateUTC", "type": "iso-8601"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "required_data_connectors": {
            "key": "properties.requiredDataConnectors",
            "type": "[AlertRuleTemplateDataSource]",
        },
        "status": {"key": "properties.status", "type": "str"},
        "severity": {"key": "properties.severity", "type": "str"},
        "tactics": {"key": "properties.tactics", "type": "[str]"},
        "techniques": {"key": "properties.techniques", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        alert_rules_created_by_template_count: Optional[int] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        required_data_connectors: Optional[List["_models.AlertRuleTemplateDataSource"]] = None,
        status: Optional[Union[str, "_models.TemplateStatus"]] = None,
        severity: Optional[Union[str, "_models.AlertSeverity"]] = None,
        tactics: Optional[List[Union[str, "_models.AttackTactic"]]] = None,
        techniques: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword alert_rules_created_by_template_count: the number of alert rules that were created by
         this template.
        :paramtype alert_rules_created_by_template_count: int
        :keyword description: The description of the alert rule template.
        :paramtype description: str
        :keyword display_name: The display name for alert rule template.
        :paramtype display_name: str
        :keyword required_data_connectors: The required data connectors for this template.
        :paramtype required_data_connectors:
         list[~azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource]
        :keyword status: The alert rule template status. Known values are: "Installed", "Available",
         and "NotAvailable".
        :paramtype status: str or ~azure.mgmt.securityinsight.models.TemplateStatus
        :keyword severity: The severity for alerts created by this alert rule. Known values are:
         "High", "Medium", "Low", and "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        :keyword tactics: The tactics of the alert rule template.
        :paramtype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
        :keyword techniques: The techniques of the alert rule template.
        :paramtype techniques: list[str]
        """
        super().__init__(**kwargs)
        self.kind: str = "Fusion"
        self.alert_rules_created_by_template_count = alert_rules_created_by_template_count
        self.created_date_utc = None
        self.last_updated_date_utc = None
        self.description = description
        self.display_name = display_name
        self.required_data_connectors = required_data_connectors
        self.status = status
        self.severity = severity
        self.tactics = tactics
        self.techniques = techniques


class GCPAuthModel(CcpAuthConfig):
    """Model for API authentication for all GCP kind connectors.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar service_account_email: GCP Service Account Email. Required.
    :vartype service_account_email: str
    :ivar project_number: GCP Project Number. Required.
    :vartype project_number: str
    :ivar workload_identity_provider_id: GCP Workload Identity Provider ID. Required.
    :vartype workload_identity_provider_id: str
    """

    _validation = {
        "type": {"required": True},
        "service_account_email": {"required": True},
        "project_number": {"required": True},
        "workload_identity_provider_id": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "service_account_email": {"key": "serviceAccountEmail", "type": "str"},
        "project_number": {"key": "projectNumber", "type": "str"},
        "workload_identity_provider_id": {"key": "workloadIdentityProviderId", "type": "str"},
    }

    def __init__(
        self, *, service_account_email: str, project_number: str, workload_identity_provider_id: str, **kwargs: Any
    ) -> None:
        """
        :keyword service_account_email: GCP Service Account Email. Required.
        :paramtype service_account_email: str
        :keyword project_number: GCP Project Number. Required.
        :paramtype project_number: str
        :keyword workload_identity_provider_id: GCP Workload Identity Provider ID. Required.
        :paramtype workload_identity_provider_id: str
        """
        super().__init__(**kwargs)
        self.type: str = "GCP"
        self.service_account_email = service_account_email
        self.project_number = project_number
        self.workload_identity_provider_id = workload_identity_provider_id


class GenericBlobSbsAuthModel(CcpAuthConfig):
    """Model for API authentication for working with service bus or storage account.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar credentials_config: Credentials for service bus namespace, keyvault uri for access key.
    :vartype credentials_config: dict[str, str]
    :ivar storage_account_credentials_config: Credentials for storage account, keyvault uri for
     access key.
    :vartype storage_account_credentials_config: dict[str, str]
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "credentials_config": {"key": "credentialsConfig", "type": "{str}"},
        "storage_account_credentials_config": {"key": "storageAccountCredentialsConfig", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        credentials_config: Optional[Dict[str, str]] = None,
        storage_account_credentials_config: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword credentials_config: Credentials for service bus namespace, keyvault uri for access
         key.
        :paramtype credentials_config: dict[str, str]
        :keyword storage_account_credentials_config: Credentials for storage account, keyvault uri for
         access key.
        :paramtype storage_account_credentials_config: dict[str, str]
        """
        super().__init__(**kwargs)
        self.type: str = "ServiceBus"
        self.credentials_config = credentials_config
        self.storage_account_credentials_config = storage_account_credentials_config


class GeoLocation(_serialization.Model):
    """The geo-location context attached to the ip entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar asn: Autonomous System Number.
    :vartype asn: int
    :ivar city: City name.
    :vartype city: str
    :ivar country_code: The country code according to ISO 3166 format.
    :vartype country_code: str
    :ivar country_name: Country name according to ISO 3166 Alpha 2: the lowercase of the English
     Short Name.
    :vartype country_name: str
    :ivar latitude: The longitude of the identified location, expressed as a floating point number
     with range of -180 to 180, with positive numbers representing East and negative numbers
     representing West. Latitude and longitude are derived from the city or postal code.
    :vartype latitude: float
    :ivar longitude: The latitude of the identified location, expressed as a floating point number
     with range of - 90 to 90, with positive numbers representing North and negative numbers
     representing South. Latitude and longitude are derived from the city or postal code.
    :vartype longitude: float
    :ivar state: State name.
    :vartype state: str
    """

    _validation = {
        "asn": {"readonly": True},
        "city": {"readonly": True},
        "country_code": {"readonly": True},
        "country_name": {"readonly": True},
        "latitude": {"readonly": True},
        "longitude": {"readonly": True},
        "state": {"readonly": True},
    }

    _attribute_map = {
        "asn": {"key": "asn", "type": "int"},
        "city": {"key": "city", "type": "str"},
        "country_code": {"key": "countryCode", "type": "str"},
        "country_name": {"key": "countryName", "type": "str"},
        "latitude": {"key": "latitude", "type": "float"},
        "longitude": {"key": "longitude", "type": "float"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.asn = None
        self.city = None
        self.country_code = None
        self.country_name = None
        self.latitude = None
        self.longitude = None
        self.state = None


class GitHubAuthModel(CcpAuthConfig):
    """Model for API authentication for GitHub. For this authentication first we need to approve the
    Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the
    InstallationId to get the access token from
    https://api.github.com/app/installations/{installId}/access_tokens.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar installation_id: The GitHubApp auth installation id.
    :vartype installation_id: str
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "installation_id": {"key": "installationId", "type": "str"},
    }

    def __init__(self, *, installation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword installation_id: The GitHubApp auth installation id.
        :paramtype installation_id: str
        """
        super().__init__(**kwargs)
        self.type: str = "GitHub"
        self.installation_id = installation_id


class GitHubResourceInfo(_serialization.Model):
    """Resources created in GitHub repository.

    :ivar app_installation_id: GitHub application installation id.
    :vartype app_installation_id: str
    """

    _attribute_map = {
        "app_installation_id": {"key": "appInstallationId", "type": "str"},
    }

    def __init__(self, *, app_installation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword app_installation_id: GitHub application installation id.
        :paramtype app_installation_id: str
        """
        super().__init__(**kwargs)
        self.app_installation_id = app_installation_id


class GraphQuery(_serialization.Model):
    """The graph query to show the volume of data arriving into the workspace over time.

    All required parameters must be populated in order to send to server.

    :ivar metric_name: Gets or sets the metric name that the query is checking. For example: 'Total
     data receive'. Required.
    :vartype metric_name: str
    :ivar legend: Gets or sets the legend for the graph. Required.
    :vartype legend: str
    :ivar base_query: Gets or sets the base query for the graph.
     The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over
     time. Required.
    :vartype base_query: str
    """

    _validation = {
        "metric_name": {"required": True},
        "legend": {"required": True},
        "base_query": {"required": True},
    }

    _attribute_map = {
        "metric_name": {"key": "metricName", "type": "str"},
        "legend": {"key": "legend", "type": "str"},
        "base_query": {"key": "baseQuery", "type": "str"},
    }

    def __init__(self, *, metric_name: str, legend: str, base_query: str, **kwargs: Any) -> None:
        """
        :keyword metric_name: Gets or sets the metric name that the query is checking. For example:
         'Total data receive'. Required.
        :paramtype metric_name: str
        :keyword legend: Gets or sets the legend for the graph. Required.
        :paramtype legend: str
        :keyword base_query: Gets or sets the base query for the graph.
         The base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over
         time. Required.
        :paramtype base_query: str
        """
        super().__init__(**kwargs)
        self.metric_name = metric_name
        self.legend = legend
        self.base_query = base_query


class GroupingConfiguration(_serialization.Model):
    """Grouping configuration property bag.

    All required parameters must be populated in order to send to server.

    :ivar enabled: Grouping enabled. Required.
    :vartype enabled: bool
    :ivar reopen_closed_incident: Re-open closed matching incidents. Required.
    :vartype reopen_closed_incident: bool
    :ivar lookback_duration: Limit the group to alerts created within the lookback duration (in ISO
     8601 duration format). Required.
    :vartype lookback_duration: ~datetime.timedelta
    :ivar matching_method: Grouping matching method. When method is Selected at least one of
     groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
     Required. Known values are: "AllEntities", "AnyAlert", and "Selected".
    :vartype matching_method: str or ~azure.mgmt.securityinsight.models.MatchingMethod
    :ivar group_by_entities: A list of entity types to group by (when matchingMethod is Selected).
     Only entities defined in the current alert rule may be used.
    :vartype group_by_entities: list[str or ~azure.mgmt.securityinsight.models.EntityMappingType]
    :ivar group_by_alert_details: A list of alert details to group by (when matchingMethod is
     Selected).
    :vartype group_by_alert_details: list[str or ~azure.mgmt.securityinsight.models.AlertDetail]
    :ivar group_by_custom_details: A list of custom details keys to group by (when matchingMethod
     is Selected). Only keys defined in the current alert rule may be used.
    :vartype group_by_custom_details: list[str]
    """

    _validation = {
        "enabled": {"required": True},
        "reopen_closed_incident": {"required": True},
        "lookback_duration": {"required": True},
        "matching_method": {"required": True},
    }

    _attribute_map = {
        "enabled": {"key": "enabled", "type": "bool"},
        "reopen_closed_incident": {"key": "reopenClosedIncident", "type": "bool"},
        "lookback_duration": {"key": "lookbackDuration", "type": "duration"},
        "matching_method": {"key": "matchingMethod", "type": "str"},
        "group_by_entities": {"key": "groupByEntities", "type": "[str]"},
        "group_by_alert_details": {"key": "groupByAlertDetails", "type": "[str]"},
        "group_by_custom_details": {"key": "groupByCustomDetails", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        enabled: bool,
        reopen_closed_incident: bool,
        lookback_duration: datetime.timedelta,
        matching_method: Union[str, "_models.MatchingMethod"],
        group_by_entities: Optional[List[Union[str, "_models.EntityMappingType"]]] = None,
        group_by_alert_details: Optional[List[Union[str, "_models.AlertDetail"]]] = None,
        group_by_custom_details: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enabled: Grouping enabled. Required.
        :paramtype enabled: bool
        :keyword reopen_closed_incident: Re-open closed matching incidents. Required.
        :paramtype reopen_closed_incident: bool
        :keyword lookback_duration: Limit the group to alerts created within the lookback duration (in
         ISO 8601 duration format). Required.
        :paramtype lookback_duration: ~datetime.timedelta
        :keyword matching_method: Grouping matching method. When method is Selected at least one of
         groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.
         Required. Known values are: "AllEntities", "AnyAlert", and "Selected".
        :paramtype matching_method: str or ~azure.mgmt.securityinsight.models.MatchingMethod
        :keyword group_by_entities: A list of entity types to group by (when matchingMethod is
         Selected). Only entities defined in the current alert rule may be used.
        :paramtype group_by_entities: list[str or ~azure.mgmt.securityinsight.models.EntityMappingType]
        :keyword group_by_alert_details: A list of alert details to group by (when matchingMethod is
         Selected).
        :paramtype group_by_alert_details: list[str or ~azure.mgmt.securityinsight.models.AlertDetail]
        :keyword group_by_custom_details: A list of custom details keys to group by (when
         matchingMethod is Selected). Only keys defined in the current alert rule may be used.
        :paramtype group_by_custom_details: list[str]
        """
        super().__init__(**kwargs)
        self.enabled = enabled
        self.reopen_closed_incident = reopen_closed_incident
        self.lookback_duration = lookback_duration
        self.matching_method = matching_method
        self.group_by_entities = group_by_entities
        self.group_by_alert_details = group_by_alert_details
        self.group_by_custom_details = group_by_custom_details


class HostEntity(Entity):
    """Represents a host entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar azure_id: The azure resource id of the VM.
    :vartype azure_id: str
    :ivar dns_domain: The DNS domain that this host belongs to. Should contain the compete DNS
     suffix for the domain.
    :vartype dns_domain: str
    :ivar host_name: The hostname without the domain suffix.
    :vartype host_name: str
    :ivar is_domain_joined: Determines whether this host belongs to a domain.
    :vartype is_domain_joined: bool
    :ivar net_bios_name: The host name (pre-windows2000).
    :vartype net_bios_name: str
    :ivar nt_domain: The NT domain that this host belongs to.
    :vartype nt_domain: str
    :ivar oms_agent_id: The OMS agent id, if the host has OMS agent installed.
    :vartype oms_agent_id: str
    :ivar os_family: The operating system type. Known values are: "Linux", "Windows", "Android",
     "IOS", and "Unknown".
    :vartype os_family: str or ~azure.mgmt.securityinsight.models.OSFamily
    :ivar os_version: A free text representation of the operating system. This field is meant to
     hold specific versions the are more fine grained than OSFamily or future values not supported
     by OSFamily enumeration.
    :vartype os_version: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "azure_id": {"readonly": True},
        "dns_domain": {"readonly": True},
        "host_name": {"readonly": True},
        "is_domain_joined": {"readonly": True},
        "net_bios_name": {"readonly": True},
        "nt_domain": {"readonly": True},
        "oms_agent_id": {"readonly": True},
        "os_version": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "azure_id": {"key": "properties.azureID", "type": "str"},
        "dns_domain": {"key": "properties.dnsDomain", "type": "str"},
        "host_name": {"key": "properties.hostName", "type": "str"},
        "is_domain_joined": {"key": "properties.isDomainJoined", "type": "bool"},
        "net_bios_name": {"key": "properties.netBiosName", "type": "str"},
        "nt_domain": {"key": "properties.ntDomain", "type": "str"},
        "oms_agent_id": {"key": "properties.omsAgentID", "type": "str"},
        "os_family": {"key": "properties.osFamily", "type": "str"},
        "os_version": {"key": "properties.osVersion", "type": "str"},
    }

    def __init__(self, *, os_family: Optional[Union[str, "_models.OSFamily"]] = None, **kwargs: Any) -> None:
        """
        :keyword os_family: The operating system type. Known values are: "Linux", "Windows", "Android",
         "IOS", and "Unknown".
        :paramtype os_family: str or ~azure.mgmt.securityinsight.models.OSFamily
        """
        super().__init__(**kwargs)
        self.kind: str = "Host"
        self.additional_data = None
        self.friendly_name = None
        self.azure_id = None
        self.dns_domain = None
        self.host_name = None
        self.is_domain_joined = None
        self.net_bios_name = None
        self.nt_domain = None
        self.oms_agent_id = None
        self.os_family = os_family
        self.os_version = None


class HostEntityProperties(EntityCommonProperties):
    """Host entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar azure_id: The azure resource id of the VM.
    :vartype azure_id: str
    :ivar dns_domain: The DNS domain that this host belongs to. Should contain the compete DNS
     suffix for the domain.
    :vartype dns_domain: str
    :ivar host_name: The hostname without the domain suffix.
    :vartype host_name: str
    :ivar is_domain_joined: Determines whether this host belongs to a domain.
    :vartype is_domain_joined: bool
    :ivar net_bios_name: The host name (pre-windows2000).
    :vartype net_bios_name: str
    :ivar nt_domain: The NT domain that this host belongs to.
    :vartype nt_domain: str
    :ivar oms_agent_id: The OMS agent id, if the host has OMS agent installed.
    :vartype oms_agent_id: str
    :ivar os_family: The operating system type. Known values are: "Linux", "Windows", "Android",
     "IOS", and "Unknown".
    :vartype os_family: str or ~azure.mgmt.securityinsight.models.OSFamily
    :ivar os_version: A free text representation of the operating system. This field is meant to
     hold specific versions the are more fine grained than OSFamily or future values not supported
     by OSFamily enumeration.
    :vartype os_version: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "azure_id": {"readonly": True},
        "dns_domain": {"readonly": True},
        "host_name": {"readonly": True},
        "is_domain_joined": {"readonly": True},
        "net_bios_name": {"readonly": True},
        "nt_domain": {"readonly": True},
        "oms_agent_id": {"readonly": True},
        "os_version": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "azure_id": {"key": "azureID", "type": "str"},
        "dns_domain": {"key": "dnsDomain", "type": "str"},
        "host_name": {"key": "hostName", "type": "str"},
        "is_domain_joined": {"key": "isDomainJoined", "type": "bool"},
        "net_bios_name": {"key": "netBiosName", "type": "str"},
        "nt_domain": {"key": "ntDomain", "type": "str"},
        "oms_agent_id": {"key": "omsAgentID", "type": "str"},
        "os_family": {"key": "osFamily", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
    }

    def __init__(self, *, os_family: Optional[Union[str, "_models.OSFamily"]] = None, **kwargs: Any) -> None:
        """
        :keyword os_family: The operating system type. Known values are: "Linux", "Windows", "Android",
         "IOS", and "Unknown".
        :paramtype os_family: str or ~azure.mgmt.securityinsight.models.OSFamily
        """
        super().__init__(**kwargs)
        self.azure_id = None
        self.dns_domain = None
        self.host_name = None
        self.is_domain_joined = None
        self.net_bios_name = None
        self.nt_domain = None
        self.oms_agent_id = None
        self.os_family = os_family
        self.os_version = None


class HuntingBookmark(Entity):
    """Represents a Hunting bookmark entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar created: The time the bookmark was created.
    :vartype created: ~datetime.datetime
    :ivar created_by: Describes a user that created the bookmark.
    :vartype created_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar display_name: The display name of the bookmark.
    :vartype display_name: str
    :ivar event_time: The time of the event.
    :vartype event_time: ~datetime.datetime
    :ivar labels: List of labels relevant to this bookmark.
    :vartype labels: list[str]
    :ivar notes: The notes of the bookmark.
    :vartype notes: str
    :ivar query: The query of the bookmark.
    :vartype query: str
    :ivar query_result: The query result of the bookmark.
    :vartype query_result: str
    :ivar updated: The last time the bookmark was updated.
    :vartype updated: ~datetime.datetime
    :ivar updated_by: Describes a user that updated the bookmark.
    :vartype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar incident_info: Describes an incident that relates to bookmark.
    :vartype incident_info: ~azure.mgmt.securityinsight.models.IncidentInfo
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "created": {"key": "properties.created", "type": "iso-8601"},
        "created_by": {"key": "properties.createdBy", "type": "UserInfo"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "event_time": {"key": "properties.eventTime", "type": "iso-8601"},
        "labels": {"key": "properties.labels", "type": "[str]"},
        "notes": {"key": "properties.notes", "type": "str"},
        "query": {"key": "properties.query", "type": "str"},
        "query_result": {"key": "properties.queryResult", "type": "str"},
        "updated": {"key": "properties.updated", "type": "iso-8601"},
        "updated_by": {"key": "properties.updatedBy", "type": "UserInfo"},
        "incident_info": {"key": "properties.incidentInfo", "type": "IncidentInfo"},
    }

    def __init__(
        self,
        *,
        created: Optional[datetime.datetime] = None,
        created_by: Optional["_models.UserInfo"] = None,
        display_name: Optional[str] = None,
        event_time: Optional[datetime.datetime] = None,
        labels: Optional[List[str]] = None,
        notes: Optional[str] = None,
        query: Optional[str] = None,
        query_result: Optional[str] = None,
        updated: Optional[datetime.datetime] = None,
        updated_by: Optional["_models.UserInfo"] = None,
        incident_info: Optional["_models.IncidentInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created: The time the bookmark was created.
        :paramtype created: ~datetime.datetime
        :keyword created_by: Describes a user that created the bookmark.
        :paramtype created_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword display_name: The display name of the bookmark.
        :paramtype display_name: str
        :keyword event_time: The time of the event.
        :paramtype event_time: ~datetime.datetime
        :keyword labels: List of labels relevant to this bookmark.
        :paramtype labels: list[str]
        :keyword notes: The notes of the bookmark.
        :paramtype notes: str
        :keyword query: The query of the bookmark.
        :paramtype query: str
        :keyword query_result: The query result of the bookmark.
        :paramtype query_result: str
        :keyword updated: The last time the bookmark was updated.
        :paramtype updated: ~datetime.datetime
        :keyword updated_by: Describes a user that updated the bookmark.
        :paramtype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword incident_info: Describes an incident that relates to bookmark.
        :paramtype incident_info: ~azure.mgmt.securityinsight.models.IncidentInfo
        """
        super().__init__(**kwargs)
        self.kind: str = "Bookmark"
        self.additional_data = None
        self.friendly_name = None
        self.created = created
        self.created_by = created_by
        self.display_name = display_name
        self.event_time = event_time
        self.labels = labels
        self.notes = notes
        self.query = query
        self.query_result = query_result
        self.updated = updated
        self.updated_by = updated_by
        self.incident_info = incident_info


class HuntingBookmarkProperties(EntityCommonProperties):
    """Describes bookmark properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar created: The time the bookmark was created.
    :vartype created: ~datetime.datetime
    :ivar created_by: Describes a user that created the bookmark.
    :vartype created_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar display_name: The display name of the bookmark. Required.
    :vartype display_name: str
    :ivar event_time: The time of the event.
    :vartype event_time: ~datetime.datetime
    :ivar labels: List of labels relevant to this bookmark.
    :vartype labels: list[str]
    :ivar notes: The notes of the bookmark.
    :vartype notes: str
    :ivar query: The query of the bookmark. Required.
    :vartype query: str
    :ivar query_result: The query result of the bookmark.
    :vartype query_result: str
    :ivar updated: The last time the bookmark was updated.
    :vartype updated: ~datetime.datetime
    :ivar updated_by: Describes a user that updated the bookmark.
    :vartype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar incident_info: Describes an incident that relates to bookmark.
    :vartype incident_info: ~azure.mgmt.securityinsight.models.IncidentInfo
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "display_name": {"required": True},
        "query": {"required": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "created": {"key": "created", "type": "iso-8601"},
        "created_by": {"key": "createdBy", "type": "UserInfo"},
        "display_name": {"key": "displayName", "type": "str"},
        "event_time": {"key": "eventTime", "type": "iso-8601"},
        "labels": {"key": "labels", "type": "[str]"},
        "notes": {"key": "notes", "type": "str"},
        "query": {"key": "query", "type": "str"},
        "query_result": {"key": "queryResult", "type": "str"},
        "updated": {"key": "updated", "type": "iso-8601"},
        "updated_by": {"key": "updatedBy", "type": "UserInfo"},
        "incident_info": {"key": "incidentInfo", "type": "IncidentInfo"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        query: str,
        created: Optional[datetime.datetime] = None,
        created_by: Optional["_models.UserInfo"] = None,
        event_time: Optional[datetime.datetime] = None,
        labels: Optional[List[str]] = None,
        notes: Optional[str] = None,
        query_result: Optional[str] = None,
        updated: Optional[datetime.datetime] = None,
        updated_by: Optional["_models.UserInfo"] = None,
        incident_info: Optional["_models.IncidentInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created: The time the bookmark was created.
        :paramtype created: ~datetime.datetime
        :keyword created_by: Describes a user that created the bookmark.
        :paramtype created_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword display_name: The display name of the bookmark. Required.
        :paramtype display_name: str
        :keyword event_time: The time of the event.
        :paramtype event_time: ~datetime.datetime
        :keyword labels: List of labels relevant to this bookmark.
        :paramtype labels: list[str]
        :keyword notes: The notes of the bookmark.
        :paramtype notes: str
        :keyword query: The query of the bookmark. Required.
        :paramtype query: str
        :keyword query_result: The query result of the bookmark.
        :paramtype query_result: str
        :keyword updated: The last time the bookmark was updated.
        :paramtype updated: ~datetime.datetime
        :keyword updated_by: Describes a user that updated the bookmark.
        :paramtype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword incident_info: Describes an incident that relates to bookmark.
        :paramtype incident_info: ~azure.mgmt.securityinsight.models.IncidentInfo
        """
        super().__init__(**kwargs)
        self.created = created
        self.created_by = created_by
        self.display_name = display_name
        self.event_time = event_time
        self.labels = labels
        self.notes = notes
        self.query = query
        self.query_result = query_result
        self.updated = updated
        self.updated_by = updated_by
        self.incident_info = incident_info


class Incident(ResourceWithEtag):
    """Represents an incident in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar additional_data: Additional data on the incident.
    :vartype additional_data: ~azure.mgmt.securityinsight.models.IncidentAdditionalData
    :ivar classification: The reason the incident was closed. Known values are: "Undetermined",
     "TruePositive", "BenignPositive", and "FalsePositive".
    :vartype classification: str or ~azure.mgmt.securityinsight.models.IncidentClassification
    :ivar classification_comment: Describes the reason the incident was closed.
    :vartype classification_comment: str
    :ivar classification_reason: The classification reason the incident was closed with. Known
     values are: "SuspiciousActivity", "SuspiciousButExpected", "IncorrectAlertLogic", and
     "InaccurateData".
    :vartype classification_reason: str or
     ~azure.mgmt.securityinsight.models.IncidentClassificationReason
    :ivar created_time_utc: The time the incident was created.
    :vartype created_time_utc: ~datetime.datetime
    :ivar description: The description of the incident.
    :vartype description: str
    :ivar first_activity_time_utc: The time of the first activity in the incident.
    :vartype first_activity_time_utc: ~datetime.datetime
    :ivar incident_url: The deep-link url to the incident in Azure portal.
    :vartype incident_url: str
    :ivar provider_name: The name of the source provider that generated the incident.
    :vartype provider_name: str
    :ivar provider_incident_id: The incident ID assigned by the incident provider.
    :vartype provider_incident_id: str
    :ivar incident_number: A sequential number.
    :vartype incident_number: int
    :ivar labels: List of labels relevant to this incident.
    :vartype labels: list[~azure.mgmt.securityinsight.models.IncidentLabel]
    :ivar last_activity_time_utc: The time of the last activity in the incident.
    :vartype last_activity_time_utc: ~datetime.datetime
    :ivar last_modified_time_utc: The last time the incident was updated.
    :vartype last_modified_time_utc: ~datetime.datetime
    :ivar owner: Describes a user that the incident is assigned to.
    :vartype owner: ~azure.mgmt.securityinsight.models.IncidentOwnerInfo
    :ivar related_analytic_rule_ids: List of resource ids of Analytic rules related to the
     incident.
    :vartype related_analytic_rule_ids: list[str]
    :ivar severity: The severity of the incident. Known values are: "High", "Medium", "Low", and
     "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.IncidentSeverity
    :ivar status: The status of the incident. Known values are: "New", "Active", and "Closed".
    :vartype status: str or ~azure.mgmt.securityinsight.models.IncidentStatus
    :ivar title: The title of the incident.
    :vartype title: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "additional_data": {"readonly": True},
        "created_time_utc": {"readonly": True},
        "incident_url": {"readonly": True},
        "provider_name": {"readonly": True},
        "provider_incident_id": {"readonly": True},
        "incident_number": {"readonly": True},
        "last_modified_time_utc": {"readonly": True},
        "related_analytic_rule_ids": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "IncidentAdditionalData"},
        "classification": {"key": "properties.classification", "type": "str"},
        "classification_comment": {"key": "properties.classificationComment", "type": "str"},
        "classification_reason": {"key": "properties.classificationReason", "type": "str"},
        "created_time_utc": {"key": "properties.createdTimeUtc", "type": "iso-8601"},
        "description": {"key": "properties.description", "type": "str"},
        "first_activity_time_utc": {"key": "properties.firstActivityTimeUtc", "type": "iso-8601"},
        "incident_url": {"key": "properties.incidentUrl", "type": "str"},
        "provider_name": {"key": "properties.providerName", "type": "str"},
        "provider_incident_id": {"key": "properties.providerIncidentId", "type": "str"},
        "incident_number": {"key": "properties.incidentNumber", "type": "int"},
        "labels": {"key": "properties.labels", "type": "[IncidentLabel]"},
        "last_activity_time_utc": {"key": "properties.lastActivityTimeUtc", "type": "iso-8601"},
        "last_modified_time_utc": {"key": "properties.lastModifiedTimeUtc", "type": "iso-8601"},
        "owner": {"key": "properties.owner", "type": "IncidentOwnerInfo"},
        "related_analytic_rule_ids": {"key": "properties.relatedAnalyticRuleIds", "type": "[str]"},
        "severity": {"key": "properties.severity", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "title": {"key": "properties.title", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        classification: Optional[Union[str, "_models.IncidentClassification"]] = None,
        classification_comment: Optional[str] = None,
        classification_reason: Optional[Union[str, "_models.IncidentClassificationReason"]] = None,
        description: Optional[str] = None,
        first_activity_time_utc: Optional[datetime.datetime] = None,
        labels: Optional[List["_models.IncidentLabel"]] = None,
        last_activity_time_utc: Optional[datetime.datetime] = None,
        owner: Optional["_models.IncidentOwnerInfo"] = None,
        severity: Optional[Union[str, "_models.IncidentSeverity"]] = None,
        status: Optional[Union[str, "_models.IncidentStatus"]] = None,
        title: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword classification: The reason the incident was closed. Known values are: "Undetermined",
         "TruePositive", "BenignPositive", and "FalsePositive".
        :paramtype classification: str or ~azure.mgmt.securityinsight.models.IncidentClassification
        :keyword classification_comment: Describes the reason the incident was closed.
        :paramtype classification_comment: str
        :keyword classification_reason: The classification reason the incident was closed with. Known
         values are: "SuspiciousActivity", "SuspiciousButExpected", "IncorrectAlertLogic", and
         "InaccurateData".
        :paramtype classification_reason: str or
         ~azure.mgmt.securityinsight.models.IncidentClassificationReason
        :keyword description: The description of the incident.
        :paramtype description: str
        :keyword first_activity_time_utc: The time of the first activity in the incident.
        :paramtype first_activity_time_utc: ~datetime.datetime
        :keyword labels: List of labels relevant to this incident.
        :paramtype labels: list[~azure.mgmt.securityinsight.models.IncidentLabel]
        :keyword last_activity_time_utc: The time of the last activity in the incident.
        :paramtype last_activity_time_utc: ~datetime.datetime
        :keyword owner: Describes a user that the incident is assigned to.
        :paramtype owner: ~azure.mgmt.securityinsight.models.IncidentOwnerInfo
        :keyword severity: The severity of the incident. Known values are: "High", "Medium", "Low", and
         "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.IncidentSeverity
        :keyword status: The status of the incident. Known values are: "New", "Active", and "Closed".
        :paramtype status: str or ~azure.mgmt.securityinsight.models.IncidentStatus
        :keyword title: The title of the incident.
        :paramtype title: str
        """
        super().__init__(etag=etag, **kwargs)
        self.additional_data = None
        self.classification = classification
        self.classification_comment = classification_comment
        self.classification_reason = classification_reason
        self.created_time_utc = None
        self.description = description
        self.first_activity_time_utc = first_activity_time_utc
        self.incident_url = None
        self.provider_name = None
        self.provider_incident_id = None
        self.incident_number = None
        self.labels = labels
        self.last_activity_time_utc = last_activity_time_utc
        self.last_modified_time_utc = None
        self.owner = owner
        self.related_analytic_rule_ids = None
        self.severity = severity
        self.status = status
        self.title = title


class IncidentAdditionalData(_serialization.Model):
    """Incident additional data property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar alerts_count: The number of alerts in the incident.
    :vartype alerts_count: int
    :ivar bookmarks_count: The number of bookmarks in the incident.
    :vartype bookmarks_count: int
    :ivar comments_count: The number of comments in the incident.
    :vartype comments_count: int
    :ivar alert_product_names: List of product names of alerts in the incident.
    :vartype alert_product_names: list[str]
    :ivar tactics: The tactics associated with incident.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar provider_incident_url: The provider incident url to the incident in Microsoft 365
     Defender portal.
    :vartype provider_incident_url: str
    """

    _validation = {
        "alerts_count": {"readonly": True},
        "bookmarks_count": {"readonly": True},
        "comments_count": {"readonly": True},
        "alert_product_names": {"readonly": True},
        "tactics": {"readonly": True},
        "provider_incident_url": {"readonly": True},
    }

    _attribute_map = {
        "alerts_count": {"key": "alertsCount", "type": "int"},
        "bookmarks_count": {"key": "bookmarksCount", "type": "int"},
        "comments_count": {"key": "commentsCount", "type": "int"},
        "alert_product_names": {"key": "alertProductNames", "type": "[str]"},
        "tactics": {"key": "tactics", "type": "[str]"},
        "provider_incident_url": {"key": "providerIncidentUrl", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.alerts_count = None
        self.bookmarks_count = None
        self.comments_count = None
        self.alert_product_names = None
        self.tactics = None
        self.provider_incident_url = None


class IncidentAlertList(_serialization.Model):
    """List of incident alerts.

    All required parameters must be populated in order to send to server.

    :ivar value: Array of incident alerts. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.SecurityAlert]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SecurityAlert]"},
    }

    def __init__(self, *, value: List["_models.SecurityAlert"], **kwargs: Any) -> None:
        """
        :keyword value: Array of incident alerts. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.SecurityAlert]
        """
        super().__init__(**kwargs)
        self.value = value


class IncidentBookmarkList(_serialization.Model):
    """List of incident bookmarks.

    All required parameters must be populated in order to send to server.

    :ivar value: Array of incident bookmarks. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.HuntingBookmark]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HuntingBookmark]"},
    }

    def __init__(self, *, value: List["_models.HuntingBookmark"], **kwargs: Any) -> None:
        """
        :keyword value: Array of incident bookmarks. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.HuntingBookmark]
        """
        super().__init__(**kwargs)
        self.value = value


class IncidentComment(ResourceWithEtag):
    """Represents an incident comment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar created_time_utc: The time the comment was created.
    :vartype created_time_utc: ~datetime.datetime
    :ivar last_modified_time_utc: The time the comment was updated.
    :vartype last_modified_time_utc: ~datetime.datetime
    :ivar message: The comment message.
    :vartype message: str
    :ivar author: Describes the client that created the comment.
    :vartype author: ~azure.mgmt.securityinsight.models.ClientInfo
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "created_time_utc": {"readonly": True},
        "last_modified_time_utc": {"readonly": True},
        "author": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "created_time_utc": {"key": "properties.createdTimeUtc", "type": "iso-8601"},
        "last_modified_time_utc": {"key": "properties.lastModifiedTimeUtc", "type": "iso-8601"},
        "message": {"key": "properties.message", "type": "str"},
        "author": {"key": "properties.author", "type": "ClientInfo"},
    }

    def __init__(self, *, etag: Optional[str] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword message: The comment message.
        :paramtype message: str
        """
        super().__init__(etag=etag, **kwargs)
        self.created_time_utc = None
        self.last_modified_time_utc = None
        self.message = message
        self.author = None


class IncidentCommentList(_serialization.Model):
    """List of incident comments.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of comments.
    :vartype next_link: str
    :ivar value: Array of comments. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.IncidentComment]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[IncidentComment]"},
    }

    def __init__(self, *, value: List["_models.IncidentComment"], **kwargs: Any) -> None:
        """
        :keyword value: Array of comments. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.IncidentComment]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class IncidentConfiguration(_serialization.Model):
    """Incident Configuration property bag.

    All required parameters must be populated in order to send to server.

    :ivar create_incident: Create incidents from alerts triggered by this analytics rule. Required.
    :vartype create_incident: bool
    :ivar grouping_configuration: Set how the alerts that are triggered by this analytics rule, are
     grouped into incidents.
    :vartype grouping_configuration: ~azure.mgmt.securityinsight.models.GroupingConfiguration
    """

    _validation = {
        "create_incident": {"required": True},
    }

    _attribute_map = {
        "create_incident": {"key": "createIncident", "type": "bool"},
        "grouping_configuration": {"key": "groupingConfiguration", "type": "GroupingConfiguration"},
    }

    def __init__(
        self,
        *,
        create_incident: bool,
        grouping_configuration: Optional["_models.GroupingConfiguration"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword create_incident: Create incidents from alerts triggered by this analytics rule.
         Required.
        :paramtype create_incident: bool
        :keyword grouping_configuration: Set how the alerts that are triggered by this analytics rule,
         are grouped into incidents.
        :paramtype grouping_configuration: ~azure.mgmt.securityinsight.models.GroupingConfiguration
        """
        super().__init__(**kwargs)
        self.create_incident = create_incident
        self.grouping_configuration = grouping_configuration


class IncidentEntitiesResponse(_serialization.Model):
    """The incident related entities response.

    :ivar entities: Array of the incident related entities.
    :vartype entities: list[~azure.mgmt.securityinsight.models.Entity]
    :ivar meta_data: The metadata from the incident related entities results.
    :vartype meta_data: list[~azure.mgmt.securityinsight.models.IncidentEntitiesResultsMetadata]
    """

    _attribute_map = {
        "entities": {"key": "entities", "type": "[Entity]"},
        "meta_data": {"key": "metaData", "type": "[IncidentEntitiesResultsMetadata]"},
    }

    def __init__(
        self,
        *,
        entities: Optional[List["_models.Entity"]] = None,
        meta_data: Optional[List["_models.IncidentEntitiesResultsMetadata"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword entities: Array of the incident related entities.
        :paramtype entities: list[~azure.mgmt.securityinsight.models.Entity]
        :keyword meta_data: The metadata from the incident related entities results.
        :paramtype meta_data: list[~azure.mgmt.securityinsight.models.IncidentEntitiesResultsMetadata]
        """
        super().__init__(**kwargs)
        self.entities = entities
        self.meta_data = meta_data


class IncidentEntitiesResultsMetadata(_serialization.Model):
    """Information of a specific aggregation in the incident related entities result.

    All required parameters must be populated in order to send to server.

    :ivar count: Total number of aggregations of the given kind in the incident related entities
     result. Required.
    :vartype count: int
    :ivar entity_kind: The kind of the aggregated entity. Required. Known values are: "Account",
     "Host", "File", "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip",
     "Malware", "Process", "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice",
     "SecurityAlert", "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype entity_kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    """

    _validation = {
        "count": {"required": True},
        "entity_kind": {"required": True},
    }

    _attribute_map = {
        "count": {"key": "count", "type": "int"},
        "entity_kind": {"key": "entityKind", "type": "str"},
    }

    def __init__(self, *, count: int, entity_kind: Union[str, "_models.EntityKindEnum"], **kwargs: Any) -> None:
        """
        :keyword count: Total number of aggregations of the given kind in the incident related entities
         result. Required.
        :paramtype count: int
        :keyword entity_kind: The kind of the aggregated entity. Required. Known values are: "Account",
         "Host", "File", "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip",
         "Malware", "Process", "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice",
         "SecurityAlert", "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
        :paramtype entity_kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
        """
        super().__init__(**kwargs)
        self.count = count
        self.entity_kind = entity_kind


class IncidentInfo(_serialization.Model):
    """Describes related incident information for the bookmark.

    :ivar incident_id: Incident Id.
    :vartype incident_id: str
    :ivar severity: The severity of the incident. Known values are: "High", "Medium", "Low", and
     "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.IncidentSeverity
    :ivar title: The title of the incident.
    :vartype title: str
    :ivar relation_name: Relation Name.
    :vartype relation_name: str
    """

    _attribute_map = {
        "incident_id": {"key": "incidentId", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "title": {"key": "title", "type": "str"},
        "relation_name": {"key": "relationName", "type": "str"},
    }

    def __init__(
        self,
        *,
        incident_id: Optional[str] = None,
        severity: Optional[Union[str, "_models.IncidentSeverity"]] = None,
        title: Optional[str] = None,
        relation_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword incident_id: Incident Id.
        :paramtype incident_id: str
        :keyword severity: The severity of the incident. Known values are: "High", "Medium", "Low", and
         "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.IncidentSeverity
        :keyword title: The title of the incident.
        :paramtype title: str
        :keyword relation_name: Relation Name.
        :paramtype relation_name: str
        """
        super().__init__(**kwargs)
        self.incident_id = incident_id
        self.severity = severity
        self.title = title
        self.relation_name = relation_name


class IncidentLabel(_serialization.Model):
    """Represents an incident label.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar label_name: The name of the label. Required.
    :vartype label_name: str
    :ivar label_type: The type of the label. Known values are: "User" and "AutoAssigned".
    :vartype label_type: str or ~azure.mgmt.securityinsight.models.IncidentLabelType
    """

    _validation = {
        "label_name": {"required": True},
        "label_type": {"readonly": True},
    }

    _attribute_map = {
        "label_name": {"key": "labelName", "type": "str"},
        "label_type": {"key": "labelType", "type": "str"},
    }

    def __init__(self, *, label_name: str, **kwargs: Any) -> None:
        """
        :keyword label_name: The name of the label. Required.
        :paramtype label_name: str
        """
        super().__init__(**kwargs)
        self.label_name = label_name
        self.label_type = None


class IncidentList(_serialization.Model):
    """List all the incidents.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of incidents.
    :vartype next_link: str
    :ivar value: Array of incidents. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.Incident]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Incident]"},
    }

    def __init__(self, *, value: List["_models.Incident"], **kwargs: Any) -> None:
        """
        :keyword value: Array of incidents. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.Incident]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class IncidentOwnerInfo(_serialization.Model):
    """Information on the user an incident is assigned to.

    :ivar email: The email of the user the incident is assigned to.
    :vartype email: str
    :ivar assigned_to: The name of the user the incident is assigned to.
    :vartype assigned_to: str
    :ivar object_id: The object id of the user the incident is assigned to.
    :vartype object_id: str
    :ivar user_principal_name: The user principal name of the user the incident is assigned to.
    :vartype user_principal_name: str
    :ivar owner_type: The type of the owner the incident is assigned to. Known values are:
     "Unknown", "User", and "Group".
    :vartype owner_type: str or ~azure.mgmt.securityinsight.models.OwnerType
    """

    _attribute_map = {
        "email": {"key": "email", "type": "str"},
        "assigned_to": {"key": "assignedTo", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
        "user_principal_name": {"key": "userPrincipalName", "type": "str"},
        "owner_type": {"key": "ownerType", "type": "str"},
    }

    def __init__(
        self,
        *,
        email: Optional[str] = None,
        assigned_to: Optional[str] = None,
        object_id: Optional[str] = None,
        user_principal_name: Optional[str] = None,
        owner_type: Optional[Union[str, "_models.OwnerType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword email: The email of the user the incident is assigned to.
        :paramtype email: str
        :keyword assigned_to: The name of the user the incident is assigned to.
        :paramtype assigned_to: str
        :keyword object_id: The object id of the user the incident is assigned to.
        :paramtype object_id: str
        :keyword user_principal_name: The user principal name of the user the incident is assigned to.
        :paramtype user_principal_name: str
        :keyword owner_type: The type of the owner the incident is assigned to. Known values are:
         "Unknown", "User", and "Group".
        :paramtype owner_type: str or ~azure.mgmt.securityinsight.models.OwnerType
        """
        super().__init__(**kwargs)
        self.email = email
        self.assigned_to = assigned_to
        self.object_id = object_id
        self.user_principal_name = user_principal_name
        self.owner_type = owner_type


class IncidentPropertiesAction(_serialization.Model):
    """IncidentPropertiesAction.

    :ivar severity: The severity of the incident. Known values are: "High", "Medium", "Low", and
     "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.IncidentSeverity
    :ivar status: The status of the incident. Known values are: "New", "Active", and "Closed".
    :vartype status: str or ~azure.mgmt.securityinsight.models.IncidentStatus
    :ivar classification: The reason the incident was closed. Known values are: "Undetermined",
     "TruePositive", "BenignPositive", and "FalsePositive".
    :vartype classification: str or ~azure.mgmt.securityinsight.models.IncidentClassification
    :ivar classification_reason: The classification reason the incident was closed with. Known
     values are: "SuspiciousActivity", "SuspiciousButExpected", "IncorrectAlertLogic", and
     "InaccurateData".
    :vartype classification_reason: str or
     ~azure.mgmt.securityinsight.models.IncidentClassificationReason
    :ivar classification_comment: Describes the reason the incident was closed.
    :vartype classification_comment: str
    :ivar owner: Information on the user an incident is assigned to.
    :vartype owner: ~azure.mgmt.securityinsight.models.IncidentOwnerInfo
    :ivar labels: List of labels to add to the incident.
    :vartype labels: list[~azure.mgmt.securityinsight.models.IncidentLabel]
    """

    _attribute_map = {
        "severity": {"key": "severity", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "classification": {"key": "classification", "type": "str"},
        "classification_reason": {"key": "classificationReason", "type": "str"},
        "classification_comment": {"key": "classificationComment", "type": "str"},
        "owner": {"key": "owner", "type": "IncidentOwnerInfo"},
        "labels": {"key": "labels", "type": "[IncidentLabel]"},
    }

    def __init__(
        self,
        *,
        severity: Optional[Union[str, "_models.IncidentSeverity"]] = None,
        status: Optional[Union[str, "_models.IncidentStatus"]] = None,
        classification: Optional[Union[str, "_models.IncidentClassification"]] = None,
        classification_reason: Optional[Union[str, "_models.IncidentClassificationReason"]] = None,
        classification_comment: Optional[str] = None,
        owner: Optional["_models.IncidentOwnerInfo"] = None,
        labels: Optional[List["_models.IncidentLabel"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword severity: The severity of the incident. Known values are: "High", "Medium", "Low", and
         "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.IncidentSeverity
        :keyword status: The status of the incident. Known values are: "New", "Active", and "Closed".
        :paramtype status: str or ~azure.mgmt.securityinsight.models.IncidentStatus
        :keyword classification: The reason the incident was closed. Known values are: "Undetermined",
         "TruePositive", "BenignPositive", and "FalsePositive".
        :paramtype classification: str or ~azure.mgmt.securityinsight.models.IncidentClassification
        :keyword classification_reason: The classification reason the incident was closed with. Known
         values are: "SuspiciousActivity", "SuspiciousButExpected", "IncorrectAlertLogic", and
         "InaccurateData".
        :paramtype classification_reason: str or
         ~azure.mgmt.securityinsight.models.IncidentClassificationReason
        :keyword classification_comment: Describes the reason the incident was closed.
        :paramtype classification_comment: str
        :keyword owner: Information on the user an incident is assigned to.
        :paramtype owner: ~azure.mgmt.securityinsight.models.IncidentOwnerInfo
        :keyword labels: List of labels to add to the incident.
        :paramtype labels: list[~azure.mgmt.securityinsight.models.IncidentLabel]
        """
        super().__init__(**kwargs)
        self.severity = severity
        self.status = status
        self.classification = classification
        self.classification_reason = classification_reason
        self.classification_comment = classification_comment
        self.owner = owner
        self.labels = labels


class IncidentTask(ResourceWithEtag):
    """Describes incident task properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar title: The title of the task. Required.
    :vartype title: str
    :ivar description: The description of the task.
    :vartype description: str
    :ivar status: The status of the task. Required. Known values are: "New" and "Completed".
    :vartype status: str or ~azure.mgmt.securityinsight.models.IncidentTaskStatus
    :ivar created_time_utc: The time the task was created.
    :vartype created_time_utc: ~datetime.datetime
    :ivar last_modified_time_utc: The last time the task was updated.
    :vartype last_modified_time_utc: ~datetime.datetime
    :ivar created_by: Information on the client (user or application) that made some action.
    :vartype created_by: ~azure.mgmt.securityinsight.models.ClientInfo
    :ivar last_modified_by: Information on the client (user or application) that made some action.
    :vartype last_modified_by: ~azure.mgmt.securityinsight.models.ClientInfo
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "title": {"required": True},
        "status": {"required": True},
        "created_time_utc": {"readonly": True},
        "last_modified_time_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "title": {"key": "properties.title", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "created_time_utc": {"key": "properties.createdTimeUtc", "type": "iso-8601"},
        "last_modified_time_utc": {"key": "properties.lastModifiedTimeUtc", "type": "iso-8601"},
        "created_by": {"key": "properties.createdBy", "type": "ClientInfo"},
        "last_modified_by": {"key": "properties.lastModifiedBy", "type": "ClientInfo"},
    }

    def __init__(
        self,
        *,
        title: str,
        status: Union[str, "_models.IncidentTaskStatus"],
        etag: Optional[str] = None,
        description: Optional[str] = None,
        created_by: Optional["_models.ClientInfo"] = None,
        last_modified_by: Optional["_models.ClientInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword title: The title of the task. Required.
        :paramtype title: str
        :keyword description: The description of the task.
        :paramtype description: str
        :keyword status: The status of the task. Required. Known values are: "New" and "Completed".
        :paramtype status: str or ~azure.mgmt.securityinsight.models.IncidentTaskStatus
        :keyword created_by: Information on the client (user or application) that made some action.
        :paramtype created_by: ~azure.mgmt.securityinsight.models.ClientInfo
        :keyword last_modified_by: Information on the client (user or application) that made some
         action.
        :paramtype last_modified_by: ~azure.mgmt.securityinsight.models.ClientInfo
        """
        super().__init__(etag=etag, **kwargs)
        self.title = title
        self.description = description
        self.status = status
        self.created_time_utc = None
        self.last_modified_time_utc = None
        self.created_by = created_by
        self.last_modified_by = last_modified_by


class IncidentTaskList(_serialization.Model):
    """List of incident tasks.

    :ivar value:
    :vartype value: list[~azure.mgmt.securityinsight.models.IncidentTask]
    :ivar next_link:
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[IncidentTask]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.IncidentTask"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.securityinsight.models.IncidentTask]
        :keyword next_link:
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class InstructionStep(_serialization.Model):
    """Instruction steps to enable the connector.

    :ivar title: Gets or sets the instruction step title.
    :vartype title: str
    :ivar description: Gets or sets the instruction step description.
    :vartype description: str
    :ivar instructions: Gets or sets the instruction step details.
    :vartype instructions: list[~azure.mgmt.securityinsight.models.InstructionStepDetails]
    :ivar inner_steps: Gets or sets the inner instruction steps details.
     For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1,
     instruction step 1.2].
    :vartype inner_steps: list[~azure.mgmt.securityinsight.models.InstructionStep]
    """

    _attribute_map = {
        "title": {"key": "title", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "instructions": {"key": "instructions", "type": "[InstructionStepDetails]"},
        "inner_steps": {"key": "innerSteps", "type": "[InstructionStep]"},
    }

    def __init__(
        self,
        *,
        title: Optional[str] = None,
        description: Optional[str] = None,
        instructions: Optional[List["_models.InstructionStepDetails"]] = None,
        inner_steps: Optional[List["_models.InstructionStep"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword title: Gets or sets the instruction step title.
        :paramtype title: str
        :keyword description: Gets or sets the instruction step description.
        :paramtype description: str
        :keyword instructions: Gets or sets the instruction step details.
        :paramtype instructions: list[~azure.mgmt.securityinsight.models.InstructionStepDetails]
        :keyword inner_steps: Gets or sets the inner instruction steps details.
         For Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1,
         instruction step 1.2].
        :paramtype inner_steps: list[~azure.mgmt.securityinsight.models.InstructionStep]
        """
        super().__init__(**kwargs)
        self.title = title
        self.description = description
        self.instructions = instructions
        self.inner_steps = inner_steps


class InstructionStepDetails(_serialization.Model):
    """Instruction step details, to be displayed in the Instructions steps section in the connector's
    page in Sentinel Portal.

    All required parameters must be populated in order to send to server.

    :ivar parameters: Gets or sets the instruction type parameters settings. Required.
    :vartype parameters: JSON
    :ivar type: Gets or sets the instruction type name. Required.
    :vartype type: str
    """

    _validation = {
        "parameters": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "parameters": {"key": "parameters", "type": "object"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, parameters: JSON, type: str, **kwargs: Any) -> None:
        """
        :keyword parameters: Gets or sets the instruction type parameters settings. Required.
        :paramtype parameters: JSON
        :keyword type: Gets or sets the instruction type name. Required.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.parameters = parameters
        self.type = type


class IoTDeviceEntity(Entity):
    """Represents an IoT device entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar device_id: The ID of the IoT Device in the IoT Hub.
    :vartype device_id: str
    :ivar device_name: The friendly name of the device.
    :vartype device_name: str
    :ivar source: The source of the device.
    :vartype source: str
    :ivar iot_security_agent_id: The ID of the security agent running on the device.
    :vartype iot_security_agent_id: str
    :ivar device_type: The type of the device.
    :vartype device_type: str
    :ivar vendor: The vendor of the device.
    :vartype vendor: str
    :ivar edge_id: The ID of the edge device.
    :vartype edge_id: str
    :ivar mac_address: The MAC address of the device.
    :vartype mac_address: str
    :ivar model: The model of the device.
    :vartype model: str
    :ivar serial_number: The serial number of the device.
    :vartype serial_number: str
    :ivar firmware_version: The firmware version of the device.
    :vartype firmware_version: str
    :ivar operating_system: The operating system of the device.
    :vartype operating_system: str
    :ivar iot_hub_entity_id: The AzureResource entity id of the IoT Hub.
    :vartype iot_hub_entity_id: str
    :ivar host_entity_id: The Host entity id of this device.
    :vartype host_entity_id: str
    :ivar ip_address_entity_id: The IP entity if of this device.
    :vartype ip_address_entity_id: str
    :ivar threat_intelligence: A list of TI contexts attached to the IoTDevice entity.
    :vartype threat_intelligence: list[~azure.mgmt.securityinsight.models.ThreatIntelligence]
    :ivar protocols: A list of protocols of the IoTDevice entity.
    :vartype protocols: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "device_id": {"readonly": True},
        "device_name": {"readonly": True},
        "source": {"readonly": True},
        "iot_security_agent_id": {"readonly": True},
        "device_type": {"readonly": True},
        "vendor": {"readonly": True},
        "edge_id": {"readonly": True},
        "mac_address": {"readonly": True},
        "model": {"readonly": True},
        "serial_number": {"readonly": True},
        "firmware_version": {"readonly": True},
        "operating_system": {"readonly": True},
        "iot_hub_entity_id": {"readonly": True},
        "host_entity_id": {"readonly": True},
        "ip_address_entity_id": {"readonly": True},
        "threat_intelligence": {"readonly": True},
        "protocols": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "device_id": {"key": "properties.deviceId", "type": "str"},
        "device_name": {"key": "properties.deviceName", "type": "str"},
        "source": {"key": "properties.source", "type": "str"},
        "iot_security_agent_id": {"key": "properties.iotSecurityAgentId", "type": "str"},
        "device_type": {"key": "properties.deviceType", "type": "str"},
        "vendor": {"key": "properties.vendor", "type": "str"},
        "edge_id": {"key": "properties.edgeId", "type": "str"},
        "mac_address": {"key": "properties.macAddress", "type": "str"},
        "model": {"key": "properties.model", "type": "str"},
        "serial_number": {"key": "properties.serialNumber", "type": "str"},
        "firmware_version": {"key": "properties.firmwareVersion", "type": "str"},
        "operating_system": {"key": "properties.operatingSystem", "type": "str"},
        "iot_hub_entity_id": {"key": "properties.iotHubEntityId", "type": "str"},
        "host_entity_id": {"key": "properties.hostEntityId", "type": "str"},
        "ip_address_entity_id": {"key": "properties.ipAddressEntityId", "type": "str"},
        "threat_intelligence": {"key": "properties.threatIntelligence", "type": "[ThreatIntelligence]"},
        "protocols": {"key": "properties.protocols", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:  # pylint: disable=too-many-locals
        """ """
        super().__init__(**kwargs)
        self.kind: str = "IoTDevice"
        self.additional_data = None
        self.friendly_name = None
        self.device_id = None
        self.device_name = None
        self.source = None
        self.iot_security_agent_id = None
        self.device_type = None
        self.vendor = None
        self.edge_id = None
        self.mac_address = None
        self.model = None
        self.serial_number = None
        self.firmware_version = None
        self.operating_system = None
        self.iot_hub_entity_id = None
        self.host_entity_id = None
        self.ip_address_entity_id = None
        self.threat_intelligence = None
        self.protocols = None


class IoTDeviceEntityProperties(EntityCommonProperties):
    """IoTDevice entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar device_id: The ID of the IoT Device in the IoT Hub.
    :vartype device_id: str
    :ivar device_name: The friendly name of the device.
    :vartype device_name: str
    :ivar source: The source of the device.
    :vartype source: str
    :ivar iot_security_agent_id: The ID of the security agent running on the device.
    :vartype iot_security_agent_id: str
    :ivar device_type: The type of the device.
    :vartype device_type: str
    :ivar vendor: The vendor of the device.
    :vartype vendor: str
    :ivar edge_id: The ID of the edge device.
    :vartype edge_id: str
    :ivar mac_address: The MAC address of the device.
    :vartype mac_address: str
    :ivar model: The model of the device.
    :vartype model: str
    :ivar serial_number: The serial number of the device.
    :vartype serial_number: str
    :ivar firmware_version: The firmware version of the device.
    :vartype firmware_version: str
    :ivar operating_system: The operating system of the device.
    :vartype operating_system: str
    :ivar iot_hub_entity_id: The AzureResource entity id of the IoT Hub.
    :vartype iot_hub_entity_id: str
    :ivar host_entity_id: The Host entity id of this device.
    :vartype host_entity_id: str
    :ivar ip_address_entity_id: The IP entity if of this device.
    :vartype ip_address_entity_id: str
    :ivar threat_intelligence: A list of TI contexts attached to the IoTDevice entity.
    :vartype threat_intelligence: list[~azure.mgmt.securityinsight.models.ThreatIntelligence]
    :ivar protocols: A list of protocols of the IoTDevice entity.
    :vartype protocols: list[str]
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "device_id": {"readonly": True},
        "device_name": {"readonly": True},
        "source": {"readonly": True},
        "iot_security_agent_id": {"readonly": True},
        "device_type": {"readonly": True},
        "vendor": {"readonly": True},
        "edge_id": {"readonly": True},
        "mac_address": {"readonly": True},
        "model": {"readonly": True},
        "serial_number": {"readonly": True},
        "firmware_version": {"readonly": True},
        "operating_system": {"readonly": True},
        "iot_hub_entity_id": {"readonly": True},
        "host_entity_id": {"readonly": True},
        "ip_address_entity_id": {"readonly": True},
        "threat_intelligence": {"readonly": True},
        "protocols": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "device_id": {"key": "deviceId", "type": "str"},
        "device_name": {"key": "deviceName", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "iot_security_agent_id": {"key": "iotSecurityAgentId", "type": "str"},
        "device_type": {"key": "deviceType", "type": "str"},
        "vendor": {"key": "vendor", "type": "str"},
        "edge_id": {"key": "edgeId", "type": "str"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "model": {"key": "model", "type": "str"},
        "serial_number": {"key": "serialNumber", "type": "str"},
        "firmware_version": {"key": "firmwareVersion", "type": "str"},
        "operating_system": {"key": "operatingSystem", "type": "str"},
        "iot_hub_entity_id": {"key": "iotHubEntityId", "type": "str"},
        "host_entity_id": {"key": "hostEntityId", "type": "str"},
        "ip_address_entity_id": {"key": "ipAddressEntityId", "type": "str"},
        "threat_intelligence": {"key": "threatIntelligence", "type": "[ThreatIntelligence]"},
        "protocols": {"key": "protocols", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.device_id = None
        self.device_name = None
        self.source = None
        self.iot_security_agent_id = None
        self.device_type = None
        self.vendor = None
        self.edge_id = None
        self.mac_address = None
        self.model = None
        self.serial_number = None
        self.firmware_version = None
        self.operating_system = None
        self.iot_hub_entity_id = None
        self.host_entity_id = None
        self.ip_address_entity_id = None
        self.threat_intelligence = None
        self.protocols = None


class IpEntity(Entity):
    """Represents an ip entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar address: The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6).
    :vartype address: str
    :ivar location: The geo-location context attached to the ip entity.
    :vartype location: ~azure.mgmt.securityinsight.models.GeoLocation
    :ivar threat_intelligence: A list of TI contexts attached to the ip entity.
    :vartype threat_intelligence: list[~azure.mgmt.securityinsight.models.ThreatIntelligence]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "address": {"readonly": True},
        "location": {"readonly": True},
        "threat_intelligence": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "address": {"key": "properties.address", "type": "str"},
        "location": {"key": "properties.location", "type": "GeoLocation"},
        "threat_intelligence": {"key": "properties.threatIntelligence", "type": "[ThreatIntelligence]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "Ip"
        self.additional_data = None
        self.friendly_name = None
        self.address = None
        self.location = None
        self.threat_intelligence = None


class IpEntityProperties(EntityCommonProperties):
    """Ip entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar address: The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6).
    :vartype address: str
    :ivar location: The geo-location context attached to the ip entity.
    :vartype location: ~azure.mgmt.securityinsight.models.GeoLocation
    :ivar threat_intelligence: A list of TI contexts attached to the ip entity.
    :vartype threat_intelligence: list[~azure.mgmt.securityinsight.models.ThreatIntelligence]
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "address": {"readonly": True},
        "location": {"readonly": True},
        "threat_intelligence": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "address": {"key": "address", "type": "str"},
        "location": {"key": "location", "type": "GeoLocation"},
        "threat_intelligence": {"key": "threatIntelligence", "type": "[ThreatIntelligence]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.address = None
        self.location = None
        self.threat_intelligence = None


class JwtAuthModel(CcpAuthConfig):
    """Model for API authentication with JWT. Simple exchange between user name + password to access
    token.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar token_endpoint: Token endpoint to request JWT. Required.
    :vartype token_endpoint: str
    :ivar user_name: The user name. If user name and password sent in header request we only need
     to populate the ``value`` property with the user name (Same as basic auth). If user name and
     password sent in body request we need to specify the ``Key`` and ``Value``. Required.
    :vartype user_name: dict[str, str]
    :ivar password: The password. Required.
    :vartype password: dict[str, str]
    :ivar query_parameters: The custom query parameter we want to add once we send request to token
     endpoint.
    :vartype query_parameters: dict[str, str]
    :ivar headers: The custom headers we want to add once we send request to token endpoint.
    :vartype headers: dict[str, str]
    :ivar is_credentials_in_headers: Flag indicating whether we want to send the user name and
     password to token endpoint in the headers.
    :vartype is_credentials_in_headers: bool
    :ivar is_json_request: Flag indicating whether the body request is JSON (header Content-Type =
     application/json), meaning its a Form URL encoded request (header Content-Type =
     application/x-www-form-urlencoded).
    :vartype is_json_request: bool
    :ivar request_timeout_in_seconds: Request timeout in seconds.
    :vartype request_timeout_in_seconds: int
    """

    _validation = {
        "type": {"required": True},
        "token_endpoint": {"required": True},
        "user_name": {"required": True},
        "password": {"required": True},
        "request_timeout_in_seconds": {"maximum": 180},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "token_endpoint": {"key": "tokenEndpoint", "type": "str"},
        "user_name": {"key": "userName", "type": "{str}"},
        "password": {"key": "password", "type": "{str}"},
        "query_parameters": {"key": "queryParameters", "type": "{str}"},
        "headers": {"key": "headers", "type": "{str}"},
        "is_credentials_in_headers": {"key": "isCredentialsInHeaders", "type": "bool"},
        "is_json_request": {"key": "isJsonRequest", "type": "bool"},
        "request_timeout_in_seconds": {"key": "requestTimeoutInSeconds", "type": "int"},
    }

    def __init__(
        self,
        *,
        token_endpoint: str,
        user_name: Dict[str, str],
        password: Dict[str, str],
        query_parameters: Optional[Dict[str, str]] = None,
        headers: Optional[Dict[str, str]] = None,
        is_credentials_in_headers: Optional[bool] = None,
        is_json_request: bool = False,
        request_timeout_in_seconds: int = 100,
        **kwargs: Any
    ) -> None:
        """
        :keyword token_endpoint: Token endpoint to request JWT. Required.
        :paramtype token_endpoint: str
        :keyword user_name: The user name. If user name and password sent in header request we only
         need to populate the ``value`` property with the user name (Same as basic auth). If user name
         and password sent in body request we need to specify the ``Key`` and ``Value``. Required.
        :paramtype user_name: dict[str, str]
        :keyword password: The password. Required.
        :paramtype password: dict[str, str]
        :keyword query_parameters: The custom query parameter we want to add once we send request to
         token endpoint.
        :paramtype query_parameters: dict[str, str]
        :keyword headers: The custom headers we want to add once we send request to token endpoint.
        :paramtype headers: dict[str, str]
        :keyword is_credentials_in_headers: Flag indicating whether we want to send the user name and
         password to token endpoint in the headers.
        :paramtype is_credentials_in_headers: bool
        :keyword is_json_request: Flag indicating whether the body request is JSON (header Content-Type
         = application/json), meaning its a Form URL encoded request (header Content-Type =
         application/x-www-form-urlencoded).
        :paramtype is_json_request: bool
        :keyword request_timeout_in_seconds: Request timeout in seconds.
        :paramtype request_timeout_in_seconds: int
        """
        super().__init__(**kwargs)
        self.type: str = "JwtToken"
        self.token_endpoint = token_endpoint
        self.user_name = user_name
        self.password = password
        self.query_parameters = query_parameters
        self.headers = headers
        self.is_credentials_in_headers = is_credentials_in_headers
        self.is_json_request = is_json_request
        self.request_timeout_in_seconds = request_timeout_in_seconds


class MailboxEntity(Entity):
    """Represents a mailbox entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar mailbox_primary_address: The mailbox's primary address.
    :vartype mailbox_primary_address: str
    :ivar display_name: The mailbox's display name.
    :vartype display_name: str
    :ivar upn: The mailbox's UPN.
    :vartype upn: str
    :ivar external_directory_object_id: The AzureAD identifier of mailbox. Similar to AadUserId in
     account entity but this property is specific to mailbox object on office side.
    :vartype external_directory_object_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "mailbox_primary_address": {"readonly": True},
        "display_name": {"readonly": True},
        "upn": {"readonly": True},
        "external_directory_object_id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "mailbox_primary_address": {"key": "properties.mailboxPrimaryAddress", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "upn": {"key": "properties.upn", "type": "str"},
        "external_directory_object_id": {"key": "properties.externalDirectoryObjectId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "Mailbox"
        self.additional_data = None
        self.friendly_name = None
        self.mailbox_primary_address = None
        self.display_name = None
        self.upn = None
        self.external_directory_object_id = None


class MailboxEntityProperties(EntityCommonProperties):
    """Mailbox entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar mailbox_primary_address: The mailbox's primary address.
    :vartype mailbox_primary_address: str
    :ivar display_name: The mailbox's display name.
    :vartype display_name: str
    :ivar upn: The mailbox's UPN.
    :vartype upn: str
    :ivar external_directory_object_id: The AzureAD identifier of mailbox. Similar to AadUserId in
     account entity but this property is specific to mailbox object on office side.
    :vartype external_directory_object_id: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "mailbox_primary_address": {"readonly": True},
        "display_name": {"readonly": True},
        "upn": {"readonly": True},
        "external_directory_object_id": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "mailbox_primary_address": {"key": "mailboxPrimaryAddress", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "upn": {"key": "upn", "type": "str"},
        "external_directory_object_id": {"key": "externalDirectoryObjectId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.mailbox_primary_address = None
        self.display_name = None
        self.upn = None
        self.external_directory_object_id = None


class MailClusterEntity(Entity):
    """Represents a mail cluster entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar network_message_ids: The mail message IDs that are part of the mail cluster.
    :vartype network_message_ids: list[str]
    :ivar count_by_delivery_status: Count of mail messages by DeliveryStatus string representation.
    :vartype count_by_delivery_status: JSON
    :ivar count_by_threat_type: Count of mail messages by ThreatType string representation.
    :vartype count_by_threat_type: JSON
    :ivar count_by_protection_status: Count of mail messages by ProtectionStatus string
     representation.
    :vartype count_by_protection_status: JSON
    :ivar threats: The threats of mail messages that are part of the mail cluster.
    :vartype threats: list[str]
    :ivar query: The query that was used to identify the messages of the mail cluster.
    :vartype query: str
    :ivar query_time: The query time.
    :vartype query_time: ~datetime.datetime
    :ivar mail_count: The number of mail messages that are part of the mail cluster.
    :vartype mail_count: int
    :ivar is_volume_anomaly: Is this a volume anomaly mail cluster.
    :vartype is_volume_anomaly: bool
    :ivar source: The source of the mail cluster (default is 'O365 ATP').
    :vartype source: str
    :ivar cluster_source_identifier: The id of the cluster source.
    :vartype cluster_source_identifier: str
    :ivar cluster_source_type: The type of the cluster source.
    :vartype cluster_source_type: str
    :ivar cluster_query_start_time: The cluster query start time.
    :vartype cluster_query_start_time: ~datetime.datetime
    :ivar cluster_query_end_time: The cluster query end time.
    :vartype cluster_query_end_time: ~datetime.datetime
    :ivar cluster_group: The cluster group.
    :vartype cluster_group: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "network_message_ids": {"readonly": True},
        "count_by_delivery_status": {"readonly": True},
        "count_by_threat_type": {"readonly": True},
        "count_by_protection_status": {"readonly": True},
        "threats": {"readonly": True},
        "query": {"readonly": True},
        "query_time": {"readonly": True},
        "mail_count": {"readonly": True},
        "is_volume_anomaly": {"readonly": True},
        "source": {"readonly": True},
        "cluster_source_identifier": {"readonly": True},
        "cluster_source_type": {"readonly": True},
        "cluster_query_start_time": {"readonly": True},
        "cluster_query_end_time": {"readonly": True},
        "cluster_group": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "network_message_ids": {"key": "properties.networkMessageIds", "type": "[str]"},
        "count_by_delivery_status": {"key": "properties.countByDeliveryStatus", "type": "object"},
        "count_by_threat_type": {"key": "properties.countByThreatType", "type": "object"},
        "count_by_protection_status": {"key": "properties.countByProtectionStatus", "type": "object"},
        "threats": {"key": "properties.threats", "type": "[str]"},
        "query": {"key": "properties.query", "type": "str"},
        "query_time": {"key": "properties.queryTime", "type": "iso-8601"},
        "mail_count": {"key": "properties.mailCount", "type": "int"},
        "is_volume_anomaly": {"key": "properties.isVolumeAnomaly", "type": "bool"},
        "source": {"key": "properties.source", "type": "str"},
        "cluster_source_identifier": {"key": "properties.clusterSourceIdentifier", "type": "str"},
        "cluster_source_type": {"key": "properties.clusterSourceType", "type": "str"},
        "cluster_query_start_time": {"key": "properties.clusterQueryStartTime", "type": "iso-8601"},
        "cluster_query_end_time": {"key": "properties.clusterQueryEndTime", "type": "iso-8601"},
        "cluster_group": {"key": "properties.clusterGroup", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "MailCluster"
        self.additional_data = None
        self.friendly_name = None
        self.network_message_ids = None
        self.count_by_delivery_status = None
        self.count_by_threat_type = None
        self.count_by_protection_status = None
        self.threats = None
        self.query = None
        self.query_time = None
        self.mail_count = None
        self.is_volume_anomaly = None
        self.source = None
        self.cluster_source_identifier = None
        self.cluster_source_type = None
        self.cluster_query_start_time = None
        self.cluster_query_end_time = None
        self.cluster_group = None


class MailClusterEntityProperties(EntityCommonProperties):
    """Mail cluster entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar network_message_ids: The mail message IDs that are part of the mail cluster.
    :vartype network_message_ids: list[str]
    :ivar count_by_delivery_status: Count of mail messages by DeliveryStatus string representation.
    :vartype count_by_delivery_status: JSON
    :ivar count_by_threat_type: Count of mail messages by ThreatType string representation.
    :vartype count_by_threat_type: JSON
    :ivar count_by_protection_status: Count of mail messages by ProtectionStatus string
     representation.
    :vartype count_by_protection_status: JSON
    :ivar threats: The threats of mail messages that are part of the mail cluster.
    :vartype threats: list[str]
    :ivar query: The query that was used to identify the messages of the mail cluster.
    :vartype query: str
    :ivar query_time: The query time.
    :vartype query_time: ~datetime.datetime
    :ivar mail_count: The number of mail messages that are part of the mail cluster.
    :vartype mail_count: int
    :ivar is_volume_anomaly: Is this a volume anomaly mail cluster.
    :vartype is_volume_anomaly: bool
    :ivar source: The source of the mail cluster (default is 'O365 ATP').
    :vartype source: str
    :ivar cluster_source_identifier: The id of the cluster source.
    :vartype cluster_source_identifier: str
    :ivar cluster_source_type: The type of the cluster source.
    :vartype cluster_source_type: str
    :ivar cluster_query_start_time: The cluster query start time.
    :vartype cluster_query_start_time: ~datetime.datetime
    :ivar cluster_query_end_time: The cluster query end time.
    :vartype cluster_query_end_time: ~datetime.datetime
    :ivar cluster_group: The cluster group.
    :vartype cluster_group: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "network_message_ids": {"readonly": True},
        "count_by_delivery_status": {"readonly": True},
        "count_by_threat_type": {"readonly": True},
        "count_by_protection_status": {"readonly": True},
        "threats": {"readonly": True},
        "query": {"readonly": True},
        "query_time": {"readonly": True},
        "mail_count": {"readonly": True},
        "is_volume_anomaly": {"readonly": True},
        "source": {"readonly": True},
        "cluster_source_identifier": {"readonly": True},
        "cluster_source_type": {"readonly": True},
        "cluster_query_start_time": {"readonly": True},
        "cluster_query_end_time": {"readonly": True},
        "cluster_group": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "network_message_ids": {"key": "networkMessageIds", "type": "[str]"},
        "count_by_delivery_status": {"key": "countByDeliveryStatus", "type": "object"},
        "count_by_threat_type": {"key": "countByThreatType", "type": "object"},
        "count_by_protection_status": {"key": "countByProtectionStatus", "type": "object"},
        "threats": {"key": "threats", "type": "[str]"},
        "query": {"key": "query", "type": "str"},
        "query_time": {"key": "queryTime", "type": "iso-8601"},
        "mail_count": {"key": "mailCount", "type": "int"},
        "is_volume_anomaly": {"key": "isVolumeAnomaly", "type": "bool"},
        "source": {"key": "source", "type": "str"},
        "cluster_source_identifier": {"key": "clusterSourceIdentifier", "type": "str"},
        "cluster_source_type": {"key": "clusterSourceType", "type": "str"},
        "cluster_query_start_time": {"key": "clusterQueryStartTime", "type": "iso-8601"},
        "cluster_query_end_time": {"key": "clusterQueryEndTime", "type": "iso-8601"},
        "cluster_group": {"key": "clusterGroup", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.network_message_ids = None
        self.count_by_delivery_status = None
        self.count_by_threat_type = None
        self.count_by_protection_status = None
        self.threats = None
        self.query = None
        self.query_time = None
        self.mail_count = None
        self.is_volume_anomaly = None
        self.source = None
        self.cluster_source_identifier = None
        self.cluster_source_type = None
        self.cluster_query_start_time = None
        self.cluster_query_end_time = None
        self.cluster_group = None


class MailMessageEntity(Entity):
    """Represents a mail message entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar file_entity_ids: The File entity ids of this mail message's attachments.
    :vartype file_entity_ids: list[str]
    :ivar recipient: The recipient of this mail message. Note that in case of multiple recipients
     the mail message is forked and each copy has one recipient.
    :vartype recipient: str
    :ivar urls: The Urls contained in this mail message.
    :vartype urls: list[str]
    :ivar threats: The threats of this mail message.
    :vartype threats: list[str]
    :ivar p1_sender: The p1 sender's email address.
    :vartype p1_sender: str
    :ivar p1_sender_display_name: The p1 sender's display name.
    :vartype p1_sender_display_name: str
    :ivar p1_sender_domain: The p1 sender's domain.
    :vartype p1_sender_domain: str
    :ivar sender_ip: The sender's IP address.
    :vartype sender_ip: str
    :ivar p2_sender: The p2 sender's email address.
    :vartype p2_sender: str
    :ivar p2_sender_display_name: The p2 sender's display name.
    :vartype p2_sender_display_name: str
    :ivar p2_sender_domain: The p2 sender's domain.
    :vartype p2_sender_domain: str
    :ivar receive_date: The receive date of this message.
    :vartype receive_date: ~datetime.datetime
    :ivar network_message_id: The network message id of this mail message.
    :vartype network_message_id: str
    :ivar internet_message_id: The internet message id of this mail message.
    :vartype internet_message_id: str
    :ivar subject: The subject of this mail message.
    :vartype subject: str
    :ivar language: The language of this mail message.
    :vartype language: str
    :ivar threat_detection_methods: The threat detection methods.
    :vartype threat_detection_methods: list[str]
    :ivar body_fingerprint_bin1: The bodyFingerprintBin1.
    :vartype body_fingerprint_bin1: int
    :ivar body_fingerprint_bin2: The bodyFingerprintBin2.
    :vartype body_fingerprint_bin2: int
    :ivar body_fingerprint_bin3: The bodyFingerprintBin3.
    :vartype body_fingerprint_bin3: int
    :ivar body_fingerprint_bin4: The bodyFingerprintBin4.
    :vartype body_fingerprint_bin4: int
    :ivar body_fingerprint_bin5: The bodyFingerprintBin5.
    :vartype body_fingerprint_bin5: int
    :ivar antispam_direction: The directionality of this mail message. Known values are: "Unknown",
     "Inbound", "Outbound", and "Intraorg".
    :vartype antispam_direction: str or ~azure.mgmt.securityinsight.models.AntispamMailDirection
    :ivar delivery_action: The delivery action of this mail message like Delivered, Blocked,
     Replaced etc. Known values are: "Unknown", "DeliveredAsSpam", "Delivered", "Blocked", and
     "Replaced".
    :vartype delivery_action: str or ~azure.mgmt.securityinsight.models.DeliveryAction
    :ivar delivery_location: The delivery location of this mail message like Inbox, JunkFolder etc.
     Known values are: "Unknown", "Inbox", "JunkFolder", "DeletedFolder", "Quarantine", "External",
     "Failed", "Dropped", and "Forwarded".
    :vartype delivery_location: str or ~azure.mgmt.securityinsight.models.DeliveryLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "file_entity_ids": {"readonly": True},
        "recipient": {"readonly": True},
        "urls": {"readonly": True},
        "threats": {"readonly": True},
        "p1_sender": {"readonly": True},
        "p1_sender_display_name": {"readonly": True},
        "p1_sender_domain": {"readonly": True},
        "sender_ip": {"readonly": True},
        "p2_sender": {"readonly": True},
        "p2_sender_display_name": {"readonly": True},
        "p2_sender_domain": {"readonly": True},
        "receive_date": {"readonly": True},
        "network_message_id": {"readonly": True},
        "internet_message_id": {"readonly": True},
        "subject": {"readonly": True},
        "language": {"readonly": True},
        "threat_detection_methods": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "file_entity_ids": {"key": "properties.fileEntityIds", "type": "[str]"},
        "recipient": {"key": "properties.recipient", "type": "str"},
        "urls": {"key": "properties.urls", "type": "[str]"},
        "threats": {"key": "properties.threats", "type": "[str]"},
        "p1_sender": {"key": "properties.p1Sender", "type": "str"},
        "p1_sender_display_name": {"key": "properties.p1SenderDisplayName", "type": "str"},
        "p1_sender_domain": {"key": "properties.p1SenderDomain", "type": "str"},
        "sender_ip": {"key": "properties.senderIP", "type": "str"},
        "p2_sender": {"key": "properties.p2Sender", "type": "str"},
        "p2_sender_display_name": {"key": "properties.p2SenderDisplayName", "type": "str"},
        "p2_sender_domain": {"key": "properties.p2SenderDomain", "type": "str"},
        "receive_date": {"key": "properties.receiveDate", "type": "iso-8601"},
        "network_message_id": {"key": "properties.networkMessageId", "type": "str"},
        "internet_message_id": {"key": "properties.internetMessageId", "type": "str"},
        "subject": {"key": "properties.subject", "type": "str"},
        "language": {"key": "properties.language", "type": "str"},
        "threat_detection_methods": {"key": "properties.threatDetectionMethods", "type": "[str]"},
        "body_fingerprint_bin1": {"key": "properties.bodyFingerprintBin1", "type": "int"},
        "body_fingerprint_bin2": {"key": "properties.bodyFingerprintBin2", "type": "int"},
        "body_fingerprint_bin3": {"key": "properties.bodyFingerprintBin3", "type": "int"},
        "body_fingerprint_bin4": {"key": "properties.bodyFingerprintBin4", "type": "int"},
        "body_fingerprint_bin5": {"key": "properties.bodyFingerprintBin5", "type": "int"},
        "antispam_direction": {"key": "properties.antispamDirection", "type": "str"},
        "delivery_action": {"key": "properties.deliveryAction", "type": "str"},
        "delivery_location": {"key": "properties.deliveryLocation", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        body_fingerprint_bin1: Optional[int] = None,
        body_fingerprint_bin2: Optional[int] = None,
        body_fingerprint_bin3: Optional[int] = None,
        body_fingerprint_bin4: Optional[int] = None,
        body_fingerprint_bin5: Optional[int] = None,
        antispam_direction: Optional[Union[str, "_models.AntispamMailDirection"]] = None,
        delivery_action: Optional[Union[str, "_models.DeliveryAction"]] = None,
        delivery_location: Optional[Union[str, "_models.DeliveryLocation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword body_fingerprint_bin1: The bodyFingerprintBin1.
        :paramtype body_fingerprint_bin1: int
        :keyword body_fingerprint_bin2: The bodyFingerprintBin2.
        :paramtype body_fingerprint_bin2: int
        :keyword body_fingerprint_bin3: The bodyFingerprintBin3.
        :paramtype body_fingerprint_bin3: int
        :keyword body_fingerprint_bin4: The bodyFingerprintBin4.
        :paramtype body_fingerprint_bin4: int
        :keyword body_fingerprint_bin5: The bodyFingerprintBin5.
        :paramtype body_fingerprint_bin5: int
        :keyword antispam_direction: The directionality of this mail message. Known values are:
         "Unknown", "Inbound", "Outbound", and "Intraorg".
        :paramtype antispam_direction: str or ~azure.mgmt.securityinsight.models.AntispamMailDirection
        :keyword delivery_action: The delivery action of this mail message like Delivered, Blocked,
         Replaced etc. Known values are: "Unknown", "DeliveredAsSpam", "Delivered", "Blocked", and
         "Replaced".
        :paramtype delivery_action: str or ~azure.mgmt.securityinsight.models.DeliveryAction
        :keyword delivery_location: The delivery location of this mail message like Inbox, JunkFolder
         etc. Known values are: "Unknown", "Inbox", "JunkFolder", "DeletedFolder", "Quarantine",
         "External", "Failed", "Dropped", and "Forwarded".
        :paramtype delivery_location: str or ~azure.mgmt.securityinsight.models.DeliveryLocation
        """
        super().__init__(**kwargs)
        self.kind: str = "MailMessage"
        self.additional_data = None
        self.friendly_name = None
        self.file_entity_ids = None
        self.recipient = None
        self.urls = None
        self.threats = None
        self.p1_sender = None
        self.p1_sender_display_name = None
        self.p1_sender_domain = None
        self.sender_ip = None
        self.p2_sender = None
        self.p2_sender_display_name = None
        self.p2_sender_domain = None
        self.receive_date = None
        self.network_message_id = None
        self.internet_message_id = None
        self.subject = None
        self.language = None
        self.threat_detection_methods = None
        self.body_fingerprint_bin1 = body_fingerprint_bin1
        self.body_fingerprint_bin2 = body_fingerprint_bin2
        self.body_fingerprint_bin3 = body_fingerprint_bin3
        self.body_fingerprint_bin4 = body_fingerprint_bin4
        self.body_fingerprint_bin5 = body_fingerprint_bin5
        self.antispam_direction = antispam_direction
        self.delivery_action = delivery_action
        self.delivery_location = delivery_location


class MailMessageEntityProperties(EntityCommonProperties):
    """Mail message entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar file_entity_ids: The File entity ids of this mail message's attachments.
    :vartype file_entity_ids: list[str]
    :ivar recipient: The recipient of this mail message. Note that in case of multiple recipients
     the mail message is forked and each copy has one recipient.
    :vartype recipient: str
    :ivar urls: The Urls contained in this mail message.
    :vartype urls: list[str]
    :ivar threats: The threats of this mail message.
    :vartype threats: list[str]
    :ivar p1_sender: The p1 sender's email address.
    :vartype p1_sender: str
    :ivar p1_sender_display_name: The p1 sender's display name.
    :vartype p1_sender_display_name: str
    :ivar p1_sender_domain: The p1 sender's domain.
    :vartype p1_sender_domain: str
    :ivar sender_ip: The sender's IP address.
    :vartype sender_ip: str
    :ivar p2_sender: The p2 sender's email address.
    :vartype p2_sender: str
    :ivar p2_sender_display_name: The p2 sender's display name.
    :vartype p2_sender_display_name: str
    :ivar p2_sender_domain: The p2 sender's domain.
    :vartype p2_sender_domain: str
    :ivar receive_date: The receive date of this message.
    :vartype receive_date: ~datetime.datetime
    :ivar network_message_id: The network message id of this mail message.
    :vartype network_message_id: str
    :ivar internet_message_id: The internet message id of this mail message.
    :vartype internet_message_id: str
    :ivar subject: The subject of this mail message.
    :vartype subject: str
    :ivar language: The language of this mail message.
    :vartype language: str
    :ivar threat_detection_methods: The threat detection methods.
    :vartype threat_detection_methods: list[str]
    :ivar body_fingerprint_bin1: The bodyFingerprintBin1.
    :vartype body_fingerprint_bin1: int
    :ivar body_fingerprint_bin2: The bodyFingerprintBin2.
    :vartype body_fingerprint_bin2: int
    :ivar body_fingerprint_bin3: The bodyFingerprintBin3.
    :vartype body_fingerprint_bin3: int
    :ivar body_fingerprint_bin4: The bodyFingerprintBin4.
    :vartype body_fingerprint_bin4: int
    :ivar body_fingerprint_bin5: The bodyFingerprintBin5.
    :vartype body_fingerprint_bin5: int
    :ivar antispam_direction: The directionality of this mail message. Known values are: "Unknown",
     "Inbound", "Outbound", and "Intraorg".
    :vartype antispam_direction: str or ~azure.mgmt.securityinsight.models.AntispamMailDirection
    :ivar delivery_action: The delivery action of this mail message like Delivered, Blocked,
     Replaced etc. Known values are: "Unknown", "DeliveredAsSpam", "Delivered", "Blocked", and
     "Replaced".
    :vartype delivery_action: str or ~azure.mgmt.securityinsight.models.DeliveryAction
    :ivar delivery_location: The delivery location of this mail message like Inbox, JunkFolder etc.
     Known values are: "Unknown", "Inbox", "JunkFolder", "DeletedFolder", "Quarantine", "External",
     "Failed", "Dropped", and "Forwarded".
    :vartype delivery_location: str or ~azure.mgmt.securityinsight.models.DeliveryLocation
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "file_entity_ids": {"readonly": True},
        "recipient": {"readonly": True},
        "urls": {"readonly": True},
        "threats": {"readonly": True},
        "p1_sender": {"readonly": True},
        "p1_sender_display_name": {"readonly": True},
        "p1_sender_domain": {"readonly": True},
        "sender_ip": {"readonly": True},
        "p2_sender": {"readonly": True},
        "p2_sender_display_name": {"readonly": True},
        "p2_sender_domain": {"readonly": True},
        "receive_date": {"readonly": True},
        "network_message_id": {"readonly": True},
        "internet_message_id": {"readonly": True},
        "subject": {"readonly": True},
        "language": {"readonly": True},
        "threat_detection_methods": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "file_entity_ids": {"key": "fileEntityIds", "type": "[str]"},
        "recipient": {"key": "recipient", "type": "str"},
        "urls": {"key": "urls", "type": "[str]"},
        "threats": {"key": "threats", "type": "[str]"},
        "p1_sender": {"key": "p1Sender", "type": "str"},
        "p1_sender_display_name": {"key": "p1SenderDisplayName", "type": "str"},
        "p1_sender_domain": {"key": "p1SenderDomain", "type": "str"},
        "sender_ip": {"key": "senderIP", "type": "str"},
        "p2_sender": {"key": "p2Sender", "type": "str"},
        "p2_sender_display_name": {"key": "p2SenderDisplayName", "type": "str"},
        "p2_sender_domain": {"key": "p2SenderDomain", "type": "str"},
        "receive_date": {"key": "receiveDate", "type": "iso-8601"},
        "network_message_id": {"key": "networkMessageId", "type": "str"},
        "internet_message_id": {"key": "internetMessageId", "type": "str"},
        "subject": {"key": "subject", "type": "str"},
        "language": {"key": "language", "type": "str"},
        "threat_detection_methods": {"key": "threatDetectionMethods", "type": "[str]"},
        "body_fingerprint_bin1": {"key": "bodyFingerprintBin1", "type": "int"},
        "body_fingerprint_bin2": {"key": "bodyFingerprintBin2", "type": "int"},
        "body_fingerprint_bin3": {"key": "bodyFingerprintBin3", "type": "int"},
        "body_fingerprint_bin4": {"key": "bodyFingerprintBin4", "type": "int"},
        "body_fingerprint_bin5": {"key": "bodyFingerprintBin5", "type": "int"},
        "antispam_direction": {"key": "antispamDirection", "type": "str"},
        "delivery_action": {"key": "deliveryAction", "type": "str"},
        "delivery_location": {"key": "deliveryLocation", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        body_fingerprint_bin1: Optional[int] = None,
        body_fingerprint_bin2: Optional[int] = None,
        body_fingerprint_bin3: Optional[int] = None,
        body_fingerprint_bin4: Optional[int] = None,
        body_fingerprint_bin5: Optional[int] = None,
        antispam_direction: Optional[Union[str, "_models.AntispamMailDirection"]] = None,
        delivery_action: Optional[Union[str, "_models.DeliveryAction"]] = None,
        delivery_location: Optional[Union[str, "_models.DeliveryLocation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword body_fingerprint_bin1: The bodyFingerprintBin1.
        :paramtype body_fingerprint_bin1: int
        :keyword body_fingerprint_bin2: The bodyFingerprintBin2.
        :paramtype body_fingerprint_bin2: int
        :keyword body_fingerprint_bin3: The bodyFingerprintBin3.
        :paramtype body_fingerprint_bin3: int
        :keyword body_fingerprint_bin4: The bodyFingerprintBin4.
        :paramtype body_fingerprint_bin4: int
        :keyword body_fingerprint_bin5: The bodyFingerprintBin5.
        :paramtype body_fingerprint_bin5: int
        :keyword antispam_direction: The directionality of this mail message. Known values are:
         "Unknown", "Inbound", "Outbound", and "Intraorg".
        :paramtype antispam_direction: str or ~azure.mgmt.securityinsight.models.AntispamMailDirection
        :keyword delivery_action: The delivery action of this mail message like Delivered, Blocked,
         Replaced etc. Known values are: "Unknown", "DeliveredAsSpam", "Delivered", "Blocked", and
         "Replaced".
        :paramtype delivery_action: str or ~azure.mgmt.securityinsight.models.DeliveryAction
        :keyword delivery_location: The delivery location of this mail message like Inbox, JunkFolder
         etc. Known values are: "Unknown", "Inbox", "JunkFolder", "DeletedFolder", "Quarantine",
         "External", "Failed", "Dropped", and "Forwarded".
        :paramtype delivery_location: str or ~azure.mgmt.securityinsight.models.DeliveryLocation
        """
        super().__init__(**kwargs)
        self.file_entity_ids = None
        self.recipient = None
        self.urls = None
        self.threats = None
        self.p1_sender = None
        self.p1_sender_display_name = None
        self.p1_sender_domain = None
        self.sender_ip = None
        self.p2_sender = None
        self.p2_sender_display_name = None
        self.p2_sender_domain = None
        self.receive_date = None
        self.network_message_id = None
        self.internet_message_id = None
        self.subject = None
        self.language = None
        self.threat_detection_methods = None
        self.body_fingerprint_bin1 = body_fingerprint_bin1
        self.body_fingerprint_bin2 = body_fingerprint_bin2
        self.body_fingerprint_bin3 = body_fingerprint_bin3
        self.body_fingerprint_bin4 = body_fingerprint_bin4
        self.body_fingerprint_bin5 = body_fingerprint_bin5
        self.antispam_direction = antispam_direction
        self.delivery_action = delivery_action
        self.delivery_location = delivery_location


class MalwareEntity(Entity):
    """Represents a malware entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar category: The malware category by the vendor, e.g. Trojan.
    :vartype category: str
    :ivar file_entity_ids: List of linked file entity identifiers on which the malware was found.
    :vartype file_entity_ids: list[str]
    :ivar malware_name: The malware name by the vendor, e.g. Win32/Toga!rfn.
    :vartype malware_name: str
    :ivar process_entity_ids: List of linked process entity identifiers on which the malware was
     found.
    :vartype process_entity_ids: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "category": {"readonly": True},
        "file_entity_ids": {"readonly": True},
        "malware_name": {"readonly": True},
        "process_entity_ids": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "category": {"key": "properties.category", "type": "str"},
        "file_entity_ids": {"key": "properties.fileEntityIds", "type": "[str]"},
        "malware_name": {"key": "properties.malwareName", "type": "str"},
        "process_entity_ids": {"key": "properties.processEntityIds", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "Malware"
        self.additional_data = None
        self.friendly_name = None
        self.category = None
        self.file_entity_ids = None
        self.malware_name = None
        self.process_entity_ids = None


class MalwareEntityProperties(EntityCommonProperties):
    """Malware entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar category: The malware category by the vendor, e.g. Trojan.
    :vartype category: str
    :ivar file_entity_ids: List of linked file entity identifiers on which the malware was found.
    :vartype file_entity_ids: list[str]
    :ivar malware_name: The malware name by the vendor, e.g. Win32/Toga!rfn.
    :vartype malware_name: str
    :ivar process_entity_ids: List of linked process entity identifiers on which the malware was
     found.
    :vartype process_entity_ids: list[str]
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "category": {"readonly": True},
        "file_entity_ids": {"readonly": True},
        "malware_name": {"readonly": True},
        "process_entity_ids": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "category": {"key": "category", "type": "str"},
        "file_entity_ids": {"key": "fileEntityIds", "type": "[str]"},
        "malware_name": {"key": "malwareName", "type": "str"},
        "process_entity_ids": {"key": "processEntityIds", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.category = None
        self.file_entity_ids = None
        self.malware_name = None
        self.process_entity_ids = None


class ManualTriggerRequestBody(_serialization.Model):
    """Describes the request body for triggering a playbook on an incident.

    All required parameters must be populated in order to send to server.

    :ivar tenant_id: The tenant id of the playbook resource.
    :vartype tenant_id: str
    :ivar logic_apps_resource_id: The resource id of the playbook resource. Required.
    :vartype logic_apps_resource_id: str
    """

    _validation = {
        "logic_apps_resource_id": {"required": True},
    }

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "logic_apps_resource_id": {"key": "logicAppsResourceId", "type": "str"},
    }

    def __init__(self, *, logic_apps_resource_id: str, tenant_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword tenant_id: The tenant id of the playbook resource.
        :paramtype tenant_id: str
        :keyword logic_apps_resource_id: The resource id of the playbook resource. Required.
        :paramtype logic_apps_resource_id: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.logic_apps_resource_id = logic_apps_resource_id


class MCASDataConnector(DataConnector):
    """Represents MCAS (Microsoft Cloud App Security) data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.MCASDataConnectorDataTypes
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "MCASDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        data_types: Optional["_models.MCASDataConnectorDataTypes"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.MCASDataConnectorDataTypes
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "MicrosoftCloudAppSecurity"
        self.tenant_id = tenant_id
        self.data_types = data_types


class MCASDataConnectorDataTypes(AlertsDataTypeOfDataConnector):
    """The available data types for MCAS (Microsoft Cloud App Security) data connector.

    :ivar alerts: Alerts data type connection.
    :vartype alerts: ~azure.mgmt.securityinsight.models.DataConnectorDataTypeCommon
    :ivar discovery_logs: Discovery log data type connection.
    :vartype discovery_logs: ~azure.mgmt.securityinsight.models.DataConnectorDataTypeCommon
    """

    _attribute_map = {
        "alerts": {"key": "alerts", "type": "DataConnectorDataTypeCommon"},
        "discovery_logs": {"key": "discoveryLogs", "type": "DataConnectorDataTypeCommon"},
    }

    def __init__(
        self,
        *,
        alerts: Optional["_models.DataConnectorDataTypeCommon"] = None,
        discovery_logs: Optional["_models.DataConnectorDataTypeCommon"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword alerts: Alerts data type connection.
        :paramtype alerts: ~azure.mgmt.securityinsight.models.DataConnectorDataTypeCommon
        :keyword discovery_logs: Discovery log data type connection.
        :paramtype discovery_logs: ~azure.mgmt.securityinsight.models.DataConnectorDataTypeCommon
        """
        super().__init__(alerts=alerts, **kwargs)
        self.discovery_logs = discovery_logs


class MDATPDataConnector(DataConnector):
    """Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "AlertsDataTypeOfDataConnector"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        data_types: Optional["_models.AlertsDataTypeOfDataConnector"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.AlertsDataTypeOfDataConnector
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "MicrosoftDefenderAdvancedThreatProtection"
        self.tenant_id = tenant_id
        self.data_types = data_types


class MetadataAuthor(_serialization.Model):
    """Publisher or creator of the content item.

    :ivar name: Name of the author. Company or person.
    :vartype name: str
    :ivar email: Email of author contact.
    :vartype email: str
    :ivar link: Link for author/vendor page.
    :vartype link: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "email": {"key": "email", "type": "str"},
        "link": {"key": "link", "type": "str"},
    }

    def __init__(
        self, *, name: Optional[str] = None, email: Optional[str] = None, link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword name: Name of the author. Company or person.
        :paramtype name: str
        :keyword email: Email of author contact.
        :paramtype email: str
        :keyword link: Link for author/vendor page.
        :paramtype link: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.email = email
        self.link = link


class MetadataCategories(_serialization.Model):
    """ies for the solution content item.

    :ivar domains: domain for the solution content item.
    :vartype domains: list[str]
    :ivar verticals: Industry verticals for the solution content item.
    :vartype verticals: list[str]
    """

    _attribute_map = {
        "domains": {"key": "domains", "type": "[str]"},
        "verticals": {"key": "verticals", "type": "[str]"},
    }

    def __init__(
        self, *, domains: Optional[List[str]] = None, verticals: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword domains: domain for the solution content item.
        :paramtype domains: list[str]
        :keyword verticals: Industry verticals for the solution content item.
        :paramtype verticals: list[str]
        """
        super().__init__(**kwargs)
        self.domains = domains
        self.verticals = verticals


class MetadataDependencies(_serialization.Model):
    """Dependencies for the content item, what other content items it requires to work.  Can describe
    more complex dependencies using a recursive/nested structure. For a single dependency an
    id/kind/version can be supplied or operator/criteria for complex dependencies.

    :ivar content_id: Id of the content item we depend on.
    :vartype content_id: str
    :ivar kind: Type of the content item we depend on. Known values are: "DataConnector",
     "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
     "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
     "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
     "AutomationRule".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.Kind
    :ivar version: Version of the the content item we depend on.  Can be blank, * or missing to
     indicate any version fulfills the dependency.  If version does not match our defined numeric
     format then an exact match is required.
    :vartype version: str
    :ivar name: Name of the content item.
    :vartype name: str
    :ivar operator: Operator used for list of dependencies in criteria array. Known values are:
     "AND", "OR", "AND", and "OR".
    :vartype operator: str or ~azure.mgmt.securityinsight.models.Operator
    :ivar criteria: This is the list of dependencies we must fulfill, according to the AND/OR
     operator.
    :vartype criteria: list[~azure.mgmt.securityinsight.models.MetadataDependencies]
    """

    _attribute_map = {
        "content_id": {"key": "contentId", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "operator": {"key": "operator", "type": "str"},
        "criteria": {"key": "criteria", "type": "[MetadataDependencies]"},
    }

    def __init__(
        self,
        *,
        content_id: Optional[str] = None,
        kind: Optional[Union[str, "_models.Kind"]] = None,
        version: Optional[str] = None,
        name: Optional[str] = None,
        operator: Optional[Union[str, "_models.Operator"]] = None,
        criteria: Optional[List["_models.MetadataDependencies"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword content_id: Id of the content item we depend on.
        :paramtype content_id: str
        :keyword kind: Type of the content item we depend on. Known values are: "DataConnector",
         "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
         "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
         "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
         "AutomationRule".
        :paramtype kind: str or ~azure.mgmt.securityinsight.models.Kind
        :keyword version: Version of the the content item we depend on.  Can be blank, * or missing to
         indicate any version fulfills the dependency.  If version does not match our defined numeric
         format then an exact match is required.
        :paramtype version: str
        :keyword name: Name of the content item.
        :paramtype name: str
        :keyword operator: Operator used for list of dependencies in criteria array. Known values are:
         "AND", "OR", "AND", and "OR".
        :paramtype operator: str or ~azure.mgmt.securityinsight.models.Operator
        :keyword criteria: This is the list of dependencies we must fulfill, according to the AND/OR
         operator.
        :paramtype criteria: list[~azure.mgmt.securityinsight.models.MetadataDependencies]
        """
        super().__init__(**kwargs)
        self.content_id = content_id
        self.kind = kind
        self.version = version
        self.name = name
        self.operator = operator
        self.criteria = criteria


class MetadataList(_serialization.Model):
    """List of all the metadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Array of metadata. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.MetadataModel]
    :ivar next_link: URL to fetch the next page of metadata.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[MetadataModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.MetadataModel"], **kwargs: Any) -> None:
        """
        :keyword value: Array of metadata. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.MetadataModel]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class MetadataModel(ResourceWithEtag):
    """Metadata resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar parent_id: Full parent resource ID of the content item the metadata is for.  This is the
     full resource ID including the scope (subscription and resource group).
    :vartype parent_id: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar kind: The kind of content the metadata is for.
    :vartype kind: str
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the metadata - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the solution content item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the solution content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date solution content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the solution content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the solution template.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "content_id": {"key": "properties.contentId", "type": "str"},
        "parent_id": {"key": "properties.parentId", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "kind": {"key": "properties.kind", "type": "str"},
        "source": {"key": "properties.source", "type": "MetadataSource"},
        "author": {"key": "properties.author", "type": "MetadataAuthor"},
        "support": {"key": "properties.support", "type": "MetadataSupport"},
        "dependencies": {"key": "properties.dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "properties.categories", "type": "MetadataCategories"},
        "providers": {"key": "properties.providers", "type": "[str]"},
        "first_publish_date": {"key": "properties.firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "properties.lastPublishDate", "type": "date"},
        "custom_version": {"key": "properties.customVersion", "type": "str"},
        "content_schema_version": {"key": "properties.contentSchemaVersion", "type": "str"},
        "icon": {"key": "properties.icon", "type": "str"},
        "threat_analysis_tactics": {"key": "properties.threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "properties.threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "properties.previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "properties.previewImagesDark", "type": "[str]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        content_id: Optional[str] = None,
        parent_id: Optional[str] = None,
        version: Optional[str] = None,
        kind: Optional[str] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword parent_id: Full parent resource ID of the content item the metadata is for.  This is
         the full resource ID including the scope (subscription and resource group).
        :paramtype parent_id: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword kind: The kind of content the metadata is for.
        :paramtype kind: str
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the metadata - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the solution content item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the solution content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date solution content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the solution content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the solution template.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        """
        super().__init__(etag=etag, **kwargs)
        self.content_id = content_id
        self.parent_id = parent_id
        self.version = version
        self.kind = kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark


class MetadataPatch(_serialization.Model):
    """Metadata patch request body.

    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar parent_id: Full parent resource ID of the content item the metadata is for.  This is the
     full resource ID including the scope (subscription and resource group).
    :vartype parent_id: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar kind: The kind of content the metadata is for.
    :vartype kind: str
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the metadata - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the solution content item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the solution content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date solution content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the solution content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the solution template.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    """

    _attribute_map = {
        "content_id": {"key": "properties.contentId", "type": "str"},
        "parent_id": {"key": "properties.parentId", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "kind": {"key": "properties.kind", "type": "str"},
        "source": {"key": "properties.source", "type": "MetadataSource"},
        "author": {"key": "properties.author", "type": "MetadataAuthor"},
        "support": {"key": "properties.support", "type": "MetadataSupport"},
        "dependencies": {"key": "properties.dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "properties.categories", "type": "MetadataCategories"},
        "providers": {"key": "properties.providers", "type": "[str]"},
        "first_publish_date": {"key": "properties.firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "properties.lastPublishDate", "type": "date"},
        "custom_version": {"key": "properties.customVersion", "type": "str"},
        "content_schema_version": {"key": "properties.contentSchemaVersion", "type": "str"},
        "icon": {"key": "properties.icon", "type": "str"},
        "threat_analysis_tactics": {"key": "properties.threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "properties.threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "properties.previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "properties.previewImagesDark", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        content_id: Optional[str] = None,
        parent_id: Optional[str] = None,
        version: Optional[str] = None,
        kind: Optional[str] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword parent_id: Full parent resource ID of the content item the metadata is for.  This is
         the full resource ID including the scope (subscription and resource group).
        :paramtype parent_id: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword kind: The kind of content the metadata is for.
        :paramtype kind: str
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the metadata - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the solution content item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the solution content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date solution content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the solution content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the solution template.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        """
        super().__init__(**kwargs)
        self.content_id = content_id
        self.parent_id = parent_id
        self.version = version
        self.kind = kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark


class MetadataSource(_serialization.Model):
    """The original source of the content item, where it comes from.

    All required parameters must be populated in order to send to server.

    :ivar kind: Source type of the content. Required. Known values are: "LocalWorkspace",
     "Community", "Solution", and "SourceRepository".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.SourceKind
    :ivar name: Name of the content source.  The repo name, solution name, LA workspace name etc.
    :vartype name: str
    :ivar source_id: ID of the content source.  The solution ID, workspace ID, etc.
    :vartype source_id: str
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "source_id": {"key": "sourceId", "type": "str"},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "_models.SourceKind"],
        name: Optional[str] = None,
        source_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword kind: Source type of the content. Required. Known values are: "LocalWorkspace",
         "Community", "Solution", and "SourceRepository".
        :paramtype kind: str or ~azure.mgmt.securityinsight.models.SourceKind
        :keyword name: Name of the content source.  The repo name, solution name, LA workspace name
         etc.
        :paramtype name: str
        :keyword source_id: ID of the content source.  The solution ID, workspace ID, etc.
        :paramtype source_id: str
        """
        super().__init__(**kwargs)
        self.kind = kind
        self.name = name
        self.source_id = source_id


class MetadataSupport(_serialization.Model):
    """Support information for the content item.

    All required parameters must be populated in order to send to server.

    :ivar tier: Type of support for content item. Required. Known values are: "Microsoft",
     "Partner", and "Community".
    :vartype tier: str or ~azure.mgmt.securityinsight.models.SupportTier
    :ivar name: Name of the support contact. Company or person.
    :vartype name: str
    :ivar email: Email of support contact.
    :vartype email: str
    :ivar link: Link for support help, like to support page to open a ticket etc.
    :vartype link: str
    """

    _validation = {
        "tier": {"required": True},
    }

    _attribute_map = {
        "tier": {"key": "tier", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "email": {"key": "email", "type": "str"},
        "link": {"key": "link", "type": "str"},
    }

    def __init__(
        self,
        *,
        tier: Union[str, "_models.SupportTier"],
        name: Optional[str] = None,
        email: Optional[str] = None,
        link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tier: Type of support for content item. Required. Known values are: "Microsoft",
         "Partner", and "Community".
        :paramtype tier: str or ~azure.mgmt.securityinsight.models.SupportTier
        :keyword name: Name of the support contact. Company or person.
        :paramtype name: str
        :keyword email: Email of support contact.
        :paramtype email: str
        :keyword link: Link for support help, like to support page to open a ticket etc.
        :paramtype link: str
        """
        super().__init__(**kwargs)
        self.tier = tier
        self.name = name
        self.email = email
        self.link = link


class MicrosoftSecurityIncidentCreationAlertRule(AlertRule):  # pylint: disable=name-too-long
    """Represents MicrosoftSecurityIncidentCreation rule.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    :ivar display_names_filter: the alerts' displayNames on which the cases will be generated.
    :vartype display_names_filter: list[str]
    :ivar display_names_exclude_filter: the alerts' displayNames on which the cases will not be
     generated.
    :vartype display_names_exclude_filter: list[str]
    :ivar product_filter: The alerts' productName on which the cases will be generated. Known
     values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced Threat
     Protection", "Azure Active Directory Identity Protection", and "Azure Security Center for IoT".
    :vartype product_filter: str or ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
    :ivar severities_filter: the alerts' severities on which the cases will be generated.
    :vartype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
    :ivar alert_rule_template_name: The Name of the alert rule template used to create this rule.
    :vartype alert_rule_template_name: str
    :ivar description: The description of the alert rule.
    :vartype description: str
    :ivar display_name: The display name for alerts created by this alert rule.
    :vartype display_name: str
    :ivar enabled: Determines whether this alert rule is enabled or disabled.
    :vartype enabled: bool
    :ivar last_modified_utc: The last time that this alert has been modified.
    :vartype last_modified_utc: ~datetime.datetime
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "last_modified_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "display_names_filter": {"key": "properties.displayNamesFilter", "type": "[str]"},
        "display_names_exclude_filter": {"key": "properties.displayNamesExcludeFilter", "type": "[str]"},
        "product_filter": {"key": "properties.productFilter", "type": "str"},
        "severities_filter": {"key": "properties.severitiesFilter", "type": "[str]"},
        "alert_rule_template_name": {"key": "properties.alertRuleTemplateName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "last_modified_utc": {"key": "properties.lastModifiedUtc", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        display_names_filter: Optional[List[str]] = None,
        display_names_exclude_filter: Optional[List[str]] = None,
        product_filter: Optional[Union[str, "_models.MicrosoftSecurityProductName"]] = None,
        severities_filter: Optional[List[Union[str, "_models.AlertSeverity"]]] = None,
        alert_rule_template_name: Optional[str] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword display_names_filter: the alerts' displayNames on which the cases will be generated.
        :paramtype display_names_filter: list[str]
        :keyword display_names_exclude_filter: the alerts' displayNames on which the cases will not be
         generated.
        :paramtype display_names_exclude_filter: list[str]
        :keyword product_filter: The alerts' productName on which the cases will be generated. Known
         values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced Threat
         Protection", "Azure Active Directory Identity Protection", and "Azure Security Center for IoT".
        :paramtype product_filter: str or
         ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
        :keyword severities_filter: the alerts' severities on which the cases will be generated.
        :paramtype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
        :keyword alert_rule_template_name: The Name of the alert rule template used to create this
         rule.
        :paramtype alert_rule_template_name: str
        :keyword description: The description of the alert rule.
        :paramtype description: str
        :keyword display_name: The display name for alerts created by this alert rule.
        :paramtype display_name: str
        :keyword enabled: Determines whether this alert rule is enabled or disabled.
        :paramtype enabled: bool
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "MicrosoftSecurityIncidentCreation"
        self.display_names_filter = display_names_filter
        self.display_names_exclude_filter = display_names_exclude_filter
        self.product_filter = product_filter
        self.severities_filter = severities_filter
        self.alert_rule_template_name = alert_rule_template_name
        self.description = description
        self.display_name = display_name
        self.enabled = enabled
        self.last_modified_utc = None


class MicrosoftSecurityIncidentCreationAlertRuleCommonProperties(_serialization.Model):  # pylint: disable=name-too-long
    """MicrosoftSecurityIncidentCreation rule common property bag.

    All required parameters must be populated in order to send to server.

    :ivar display_names_filter: the alerts' displayNames on which the cases will be generated.
    :vartype display_names_filter: list[str]
    :ivar display_names_exclude_filter: the alerts' displayNames on which the cases will not be
     generated.
    :vartype display_names_exclude_filter: list[str]
    :ivar product_filter: The alerts' productName on which the cases will be generated. Required.
     Known values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced
     Threat Protection", "Azure Active Directory Identity Protection", and "Azure Security Center
     for IoT".
    :vartype product_filter: str or ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
    :ivar severities_filter: the alerts' severities on which the cases will be generated.
    :vartype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
    """

    _validation = {
        "product_filter": {"required": True},
    }

    _attribute_map = {
        "display_names_filter": {"key": "displayNamesFilter", "type": "[str]"},
        "display_names_exclude_filter": {"key": "displayNamesExcludeFilter", "type": "[str]"},
        "product_filter": {"key": "productFilter", "type": "str"},
        "severities_filter": {"key": "severitiesFilter", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        product_filter: Union[str, "_models.MicrosoftSecurityProductName"],
        display_names_filter: Optional[List[str]] = None,
        display_names_exclude_filter: Optional[List[str]] = None,
        severities_filter: Optional[List[Union[str, "_models.AlertSeverity"]]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_names_filter: the alerts' displayNames on which the cases will be generated.
        :paramtype display_names_filter: list[str]
        :keyword display_names_exclude_filter: the alerts' displayNames on which the cases will not be
         generated.
        :paramtype display_names_exclude_filter: list[str]
        :keyword product_filter: The alerts' productName on which the cases will be generated.
         Required. Known values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure
         Advanced Threat Protection", "Azure Active Directory Identity Protection", and "Azure Security
         Center for IoT".
        :paramtype product_filter: str or
         ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
        :keyword severities_filter: the alerts' severities on which the cases will be generated.
        :paramtype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
        """
        super().__init__(**kwargs)
        self.display_names_filter = display_names_filter
        self.display_names_exclude_filter = display_names_exclude_filter
        self.product_filter = product_filter
        self.severities_filter = severities_filter


class MicrosoftSecurityIncidentCreationAlertRuleProperties(
    MicrosoftSecurityIncidentCreationAlertRuleCommonProperties
):  # pylint: disable=name-too-long
    """MicrosoftSecurityIncidentCreation rule property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar display_names_filter: the alerts' displayNames on which the cases will be generated.
    :vartype display_names_filter: list[str]
    :ivar display_names_exclude_filter: the alerts' displayNames on which the cases will not be
     generated.
    :vartype display_names_exclude_filter: list[str]
    :ivar product_filter: The alerts' productName on which the cases will be generated. Required.
     Known values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced
     Threat Protection", "Azure Active Directory Identity Protection", and "Azure Security Center
     for IoT".
    :vartype product_filter: str or ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
    :ivar severities_filter: the alerts' severities on which the cases will be generated.
    :vartype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
    :ivar alert_rule_template_name: The Name of the alert rule template used to create this rule.
    :vartype alert_rule_template_name: str
    :ivar description: The description of the alert rule.
    :vartype description: str
    :ivar display_name: The display name for alerts created by this alert rule. Required.
    :vartype display_name: str
    :ivar enabled: Determines whether this alert rule is enabled or disabled. Required.
    :vartype enabled: bool
    :ivar last_modified_utc: The last time that this alert has been modified.
    :vartype last_modified_utc: ~datetime.datetime
    """

    _validation = {
        "product_filter": {"required": True},
        "display_name": {"required": True},
        "enabled": {"required": True},
        "last_modified_utc": {"readonly": True},
    }

    _attribute_map = {
        "display_names_filter": {"key": "displayNamesFilter", "type": "[str]"},
        "display_names_exclude_filter": {"key": "displayNamesExcludeFilter", "type": "[str]"},
        "product_filter": {"key": "productFilter", "type": "str"},
        "severities_filter": {"key": "severitiesFilter", "type": "[str]"},
        "alert_rule_template_name": {"key": "alertRuleTemplateName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "enabled": {"key": "enabled", "type": "bool"},
        "last_modified_utc": {"key": "lastModifiedUtc", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        product_filter: Union[str, "_models.MicrosoftSecurityProductName"],
        display_name: str,
        enabled: bool,
        display_names_filter: Optional[List[str]] = None,
        display_names_exclude_filter: Optional[List[str]] = None,
        severities_filter: Optional[List[Union[str, "_models.AlertSeverity"]]] = None,
        alert_rule_template_name: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_names_filter: the alerts' displayNames on which the cases will be generated.
        :paramtype display_names_filter: list[str]
        :keyword display_names_exclude_filter: the alerts' displayNames on which the cases will not be
         generated.
        :paramtype display_names_exclude_filter: list[str]
        :keyword product_filter: The alerts' productName on which the cases will be generated.
         Required. Known values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure
         Advanced Threat Protection", "Azure Active Directory Identity Protection", and "Azure Security
         Center for IoT".
        :paramtype product_filter: str or
         ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
        :keyword severities_filter: the alerts' severities on which the cases will be generated.
        :paramtype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
        :keyword alert_rule_template_name: The Name of the alert rule template used to create this
         rule.
        :paramtype alert_rule_template_name: str
        :keyword description: The description of the alert rule.
        :paramtype description: str
        :keyword display_name: The display name for alerts created by this alert rule. Required.
        :paramtype display_name: str
        :keyword enabled: Determines whether this alert rule is enabled or disabled. Required.
        :paramtype enabled: bool
        """
        super().__init__(
            display_names_filter=display_names_filter,
            display_names_exclude_filter=display_names_exclude_filter,
            product_filter=product_filter,
            severities_filter=severities_filter,
            **kwargs
        )
        self.alert_rule_template_name = alert_rule_template_name
        self.description = description
        self.display_name = display_name
        self.enabled = enabled
        self.last_modified_utc = None


class MicrosoftSecurityIncidentCreationAlertRuleTemplate(AlertRuleTemplate):  # pylint: disable=name-too-long
    """Represents MicrosoftSecurityIncidentCreation rule template.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    :ivar alert_rules_created_by_template_count: the number of alert rules that were created by
     this template.
    :vartype alert_rules_created_by_template_count: int
    :ivar created_date_utc: The time that this alert rule template has been added.
    :vartype created_date_utc: ~datetime.datetime
    :ivar last_updated_date_utc: The time that this alert rule template was last updated.
    :vartype last_updated_date_utc: ~datetime.datetime
    :ivar description: The description of the alert rule template.
    :vartype description: str
    :ivar display_name: The display name for alert rule template.
    :vartype display_name: str
    :ivar required_data_connectors: The required data connectors for this template.
    :vartype required_data_connectors:
     list[~azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource]
    :ivar status: The alert rule template status. Known values are: "Installed", "Available", and
     "NotAvailable".
    :vartype status: str or ~azure.mgmt.securityinsight.models.TemplateStatus
    :ivar display_names_filter: the alerts' displayNames on which the cases will be generated.
    :vartype display_names_filter: list[str]
    :ivar display_names_exclude_filter: the alerts' displayNames on which the cases will not be
     generated.
    :vartype display_names_exclude_filter: list[str]
    :ivar product_filter: The alerts' productName on which the cases will be generated. Known
     values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced Threat
     Protection", "Azure Active Directory Identity Protection", and "Azure Security Center for IoT".
    :vartype product_filter: str or ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
    :ivar severities_filter: the alerts' severities on which the cases will be generated.
    :vartype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "created_date_utc": {"readonly": True},
        "last_updated_date_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "alert_rules_created_by_template_count": {"key": "properties.alertRulesCreatedByTemplateCount", "type": "int"},
        "created_date_utc": {"key": "properties.createdDateUTC", "type": "iso-8601"},
        "last_updated_date_utc": {"key": "properties.lastUpdatedDateUTC", "type": "iso-8601"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "required_data_connectors": {
            "key": "properties.requiredDataConnectors",
            "type": "[AlertRuleTemplateDataSource]",
        },
        "status": {"key": "properties.status", "type": "str"},
        "display_names_filter": {"key": "properties.displayNamesFilter", "type": "[str]"},
        "display_names_exclude_filter": {"key": "properties.displayNamesExcludeFilter", "type": "[str]"},
        "product_filter": {"key": "properties.productFilter", "type": "str"},
        "severities_filter": {"key": "properties.severitiesFilter", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        alert_rules_created_by_template_count: Optional[int] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        required_data_connectors: Optional[List["_models.AlertRuleTemplateDataSource"]] = None,
        status: Optional[Union[str, "_models.TemplateStatus"]] = None,
        display_names_filter: Optional[List[str]] = None,
        display_names_exclude_filter: Optional[List[str]] = None,
        product_filter: Optional[Union[str, "_models.MicrosoftSecurityProductName"]] = None,
        severities_filter: Optional[List[Union[str, "_models.AlertSeverity"]]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword alert_rules_created_by_template_count: the number of alert rules that were created by
         this template.
        :paramtype alert_rules_created_by_template_count: int
        :keyword description: The description of the alert rule template.
        :paramtype description: str
        :keyword display_name: The display name for alert rule template.
        :paramtype display_name: str
        :keyword required_data_connectors: The required data connectors for this template.
        :paramtype required_data_connectors:
         list[~azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource]
        :keyword status: The alert rule template status. Known values are: "Installed", "Available",
         and "NotAvailable".
        :paramtype status: str or ~azure.mgmt.securityinsight.models.TemplateStatus
        :keyword display_names_filter: the alerts' displayNames on which the cases will be generated.
        :paramtype display_names_filter: list[str]
        :keyword display_names_exclude_filter: the alerts' displayNames on which the cases will not be
         generated.
        :paramtype display_names_exclude_filter: list[str]
        :keyword product_filter: The alerts' productName on which the cases will be generated. Known
         values are: "Microsoft Cloud App Security", "Azure Security Center", "Azure Advanced Threat
         Protection", "Azure Active Directory Identity Protection", and "Azure Security Center for IoT".
        :paramtype product_filter: str or
         ~azure.mgmt.securityinsight.models.MicrosoftSecurityProductName
        :keyword severities_filter: the alerts' severities on which the cases will be generated.
        :paramtype severities_filter: list[str or ~azure.mgmt.securityinsight.models.AlertSeverity]
        """
        super().__init__(**kwargs)
        self.kind: str = "MicrosoftSecurityIncidentCreation"
        self.alert_rules_created_by_template_count = alert_rules_created_by_template_count
        self.created_date_utc = None
        self.last_updated_date_utc = None
        self.description = description
        self.display_name = display_name
        self.required_data_connectors = required_data_connectors
        self.status = status
        self.display_names_filter = display_names_filter
        self.display_names_exclude_filter = display_names_exclude_filter
        self.product_filter = product_filter
        self.severities_filter = severities_filter


class MSTIDataConnector(DataConnector):
    """Represents Microsoft Threat Intelligence data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.MSTIDataConnectorDataTypes
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "MSTIDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        data_types: Optional["_models.MSTIDataConnectorDataTypes"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.MSTIDataConnectorDataTypes
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "MicrosoftThreatIntelligence"
        self.tenant_id = tenant_id
        self.data_types = data_types


class MSTIDataConnectorDataTypes(_serialization.Model):
    """The available data types for Microsoft Threat Intelligence data connector.

    All required parameters must be populated in order to send to server.

    :ivar microsoft_emerging_threat_feed: Data type for Microsoft Threat Intelligence data
     connector. Required.
    :vartype microsoft_emerging_threat_feed:
     ~azure.mgmt.securityinsight.models.MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed
    """

    _validation = {
        "microsoft_emerging_threat_feed": {"required": True},
    }

    _attribute_map = {
        "microsoft_emerging_threat_feed": {
            "key": "microsoftEmergingThreatFeed",
            "type": "MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed",
        },
    }

    def __init__(
        self,
        *,
        microsoft_emerging_threat_feed: "_models.MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed",
        **kwargs: Any
    ) -> None:
        """
        :keyword microsoft_emerging_threat_feed: Data type for Microsoft Threat Intelligence data
         connector. Required.
        :paramtype microsoft_emerging_threat_feed:
         ~azure.mgmt.securityinsight.models.MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed
        """
        super().__init__(**kwargs)
        self.microsoft_emerging_threat_feed = microsoft_emerging_threat_feed


class MSTIDataConnectorDataTypesMicrosoftEmergingThreatFeed(
    DataConnectorDataTypeCommon
):  # pylint: disable=name-too-long
    """Data type for Microsoft Threat Intelligence data connector.

    All required parameters must be populated in order to send to server.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    :ivar lookback_period: The lookback period for the feed to be imported. The date-time to begin
     importing the feed from, for example: 2024-01-01T00:00:00.000Z. Required.
    :vartype lookback_period: ~datetime.datetime
    """

    _validation = {
        "lookback_period": {"required": True},
    }

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
        "lookback_period": {"key": "lookbackPeriod", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        lookback_period: datetime.datetime,
        state: Optional[Union[str, "_models.DataTypeState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Describe whether this data type connection is enabled or not. Known values are:
         "Enabled" and "Disabled".
        :paramtype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
        :keyword lookback_period: The lookback period for the feed to be imported. The date-time to
         begin importing the feed from, for example: 2024-01-01T00:00:00.000Z. Required.
        :paramtype lookback_period: ~datetime.datetime
        """
        super().__init__(state=state, **kwargs)
        self.lookback_period = lookback_period


class MSTIDataConnectorProperties(DataConnectorTenantId):
    """Microsoft Threat Intelligence data connector properties.

    All required parameters must be populated in order to send to server.

    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector. Required.
    :vartype data_types: ~azure.mgmt.securityinsight.models.MSTIDataConnectorDataTypes
    """

    _validation = {
        "data_types": {"required": True},
    }

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "data_types": {"key": "dataTypes", "type": "MSTIDataConnectorDataTypes"},
    }

    def __init__(
        self, *, data_types: "_models.MSTIDataConnectorDataTypes", tenant_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector. Required.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.MSTIDataConnectorDataTypes
        """
        super().__init__(tenant_id=tenant_id, **kwargs)
        self.data_types = data_types


class NoneAuthModel(CcpAuthConfig):
    """Model for API authentication with no authentication method - public API.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: str = "None"


class OAuthModel(CcpAuthConfig):
    """Model for API authentication with OAuth2.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar authorization_code: The user's authorization code.
    :vartype authorization_code: str
    :ivar client_secret: The Application (client) secret that the OAuth provider assigned to your
     app. Required.
    :vartype client_secret: str
    :ivar client_id: The Application (client) ID that the OAuth provider assigned to your app.
     Required.
    :vartype client_id: str
    :ivar is_credentials_in_headers: Indicating whether we want to send the clientId and
     clientSecret to token endpoint in the headers.
    :vartype is_credentials_in_headers: bool
    :ivar scope: The Application (client) Scope that the OAuth provider assigned to your app.
    :vartype scope: str
    :ivar redirect_uri: The Application redirect url that the user config in the OAuth provider.
    :vartype redirect_uri: str
    :ivar grant_type: The grant type, usually will be 'authorization code'. Required.
    :vartype grant_type: str
    :ivar token_endpoint: The token endpoint. Defines the OAuth2 refresh token. Required.
    :vartype token_endpoint: str
    :ivar token_endpoint_headers: The token endpoint headers.
    :vartype token_endpoint_headers: dict[str, str]
    :ivar token_endpoint_query_parameters: The token endpoint query parameters.
    :vartype token_endpoint_query_parameters: dict[str, str]
    :ivar authorization_endpoint: The authorization endpoint.
    :vartype authorization_endpoint: str
    :ivar authorization_endpoint_headers: The authorization endpoint headers.
    :vartype authorization_endpoint_headers: dict[str, str]
    :ivar authorization_endpoint_query_parameters: The authorization endpoint query parameters.
    :vartype authorization_endpoint_query_parameters: dict[str, str]
    :ivar is_jwt_bearer_flow: A value indicating whether it's a JWT flow.
    :vartype is_jwt_bearer_flow: bool
    :ivar access_token_prepend: Access token prepend. Default is 'Bearer'.
    :vartype access_token_prepend: str
    """

    _validation = {
        "type": {"required": True},
        "client_secret": {"required": True},
        "client_id": {"required": True},
        "grant_type": {"required": True},
        "token_endpoint": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "authorization_code": {"key": "authorizationCode", "type": "str"},
        "client_secret": {"key": "clientSecret", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "is_credentials_in_headers": {"key": "isCredentialsInHeaders", "type": "bool"},
        "scope": {"key": "scope", "type": "str"},
        "redirect_uri": {"key": "redirectUri", "type": "str"},
        "grant_type": {"key": "grantType", "type": "str"},
        "token_endpoint": {"key": "tokenEndpoint", "type": "str"},
        "token_endpoint_headers": {"key": "tokenEndpointHeaders", "type": "{str}"},
        "token_endpoint_query_parameters": {"key": "tokenEndpointQueryParameters", "type": "{str}"},
        "authorization_endpoint": {"key": "authorizationEndpoint", "type": "str"},
        "authorization_endpoint_headers": {"key": "authorizationEndpointHeaders", "type": "{str}"},
        "authorization_endpoint_query_parameters": {"key": "authorizationEndpointQueryParameters", "type": "{str}"},
        "is_jwt_bearer_flow": {"key": "isJwtBearerFlow", "type": "bool"},
        "access_token_prepend": {"key": "accessTokenPrepend", "type": "str"},
    }

    def __init__(
        self,
        *,
        client_secret: str,
        client_id: str,
        grant_type: str,
        token_endpoint: str,
        authorization_code: Optional[str] = None,
        is_credentials_in_headers: bool = False,
        scope: Optional[str] = None,
        redirect_uri: Optional[str] = None,
        token_endpoint_headers: Optional[Dict[str, str]] = None,
        token_endpoint_query_parameters: Optional[Dict[str, str]] = None,
        authorization_endpoint: Optional[str] = None,
        authorization_endpoint_headers: Optional[Dict[str, str]] = None,
        authorization_endpoint_query_parameters: Optional[Dict[str, str]] = None,
        is_jwt_bearer_flow: Optional[bool] = None,
        access_token_prepend: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword authorization_code: The user's authorization code.
        :paramtype authorization_code: str
        :keyword client_secret: The Application (client) secret that the OAuth provider assigned to
         your app. Required.
        :paramtype client_secret: str
        :keyword client_id: The Application (client) ID that the OAuth provider assigned to your app.
         Required.
        :paramtype client_id: str
        :keyword is_credentials_in_headers: Indicating whether we want to send the clientId and
         clientSecret to token endpoint in the headers.
        :paramtype is_credentials_in_headers: bool
        :keyword scope: The Application (client) Scope that the OAuth provider assigned to your app.
        :paramtype scope: str
        :keyword redirect_uri: The Application redirect url that the user config in the OAuth provider.
        :paramtype redirect_uri: str
        :keyword grant_type: The grant type, usually will be 'authorization code'. Required.
        :paramtype grant_type: str
        :keyword token_endpoint: The token endpoint. Defines the OAuth2 refresh token. Required.
        :paramtype token_endpoint: str
        :keyword token_endpoint_headers: The token endpoint headers.
        :paramtype token_endpoint_headers: dict[str, str]
        :keyword token_endpoint_query_parameters: The token endpoint query parameters.
        :paramtype token_endpoint_query_parameters: dict[str, str]
        :keyword authorization_endpoint: The authorization endpoint.
        :paramtype authorization_endpoint: str
        :keyword authorization_endpoint_headers: The authorization endpoint headers.
        :paramtype authorization_endpoint_headers: dict[str, str]
        :keyword authorization_endpoint_query_parameters: The authorization endpoint query parameters.
        :paramtype authorization_endpoint_query_parameters: dict[str, str]
        :keyword is_jwt_bearer_flow: A value indicating whether it's a JWT flow.
        :paramtype is_jwt_bearer_flow: bool
        :keyword access_token_prepend: Access token prepend. Default is 'Bearer'.
        :paramtype access_token_prepend: str
        """
        super().__init__(**kwargs)
        self.type: str = "OAuth2"
        self.authorization_code = authorization_code
        self.client_secret = client_secret
        self.client_id = client_id
        self.is_credentials_in_headers = is_credentials_in_headers
        self.scope = scope
        self.redirect_uri = redirect_uri
        self.grant_type = grant_type
        self.token_endpoint = token_endpoint
        self.token_endpoint_headers = token_endpoint_headers
        self.token_endpoint_query_parameters = token_endpoint_query_parameters
        self.authorization_endpoint = authorization_endpoint
        self.authorization_endpoint_headers = authorization_endpoint_headers
        self.authorization_endpoint_query_parameters = authorization_endpoint_query_parameters
        self.is_jwt_bearer_flow = is_jwt_bearer_flow
        self.access_token_prepend = access_token_prepend


class OfficeDataConnector(DataConnector):
    """Represents office data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypes
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "data_types": {"key": "properties.dataTypes", "type": "OfficeDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        data_types: Optional["_models.OfficeDataConnectorDataTypes"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypes
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "Office365"
        self.tenant_id = tenant_id
        self.data_types = data_types


class OfficeDataConnectorDataTypes(_serialization.Model):
    """The available data types for office data connector.

    :ivar exchange: Exchange data type connection.
    :vartype exchange: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypesExchange
    :ivar share_point: SharePoint data type connection.
    :vartype share_point: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypesSharePoint
    :ivar teams: Teams data type connection.
    :vartype teams: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypesTeams
    """

    _attribute_map = {
        "exchange": {"key": "exchange", "type": "OfficeDataConnectorDataTypesExchange"},
        "share_point": {"key": "sharePoint", "type": "OfficeDataConnectorDataTypesSharePoint"},
        "teams": {"key": "teams", "type": "OfficeDataConnectorDataTypesTeams"},
    }

    def __init__(
        self,
        *,
        exchange: Optional["_models.OfficeDataConnectorDataTypesExchange"] = None,
        share_point: Optional["_models.OfficeDataConnectorDataTypesSharePoint"] = None,
        teams: Optional["_models.OfficeDataConnectorDataTypesTeams"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword exchange: Exchange data type connection.
        :paramtype exchange: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypesExchange
        :keyword share_point: SharePoint data type connection.
        :paramtype share_point:
         ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypesSharePoint
        :keyword teams: Teams data type connection.
        :paramtype teams: ~azure.mgmt.securityinsight.models.OfficeDataConnectorDataTypesTeams
        """
        super().__init__(**kwargs)
        self.exchange = exchange
        self.share_point = share_point
        self.teams = teams


class OfficeDataConnectorDataTypesExchange(DataConnectorDataTypeCommon):
    """Exchange data type connection.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """


class OfficeDataConnectorDataTypesSharePoint(DataConnectorDataTypeCommon):
    """SharePoint data type connection.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """


class OfficeDataConnectorDataTypesTeams(DataConnectorDataTypeCommon):
    """Teams data type connection.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """


class Operation(_serialization.Model):
    """Operation provided by provider.

    :ivar display: Properties of the operation.
    :vartype display: ~azure.mgmt.securityinsight.models.OperationDisplay
    :ivar name: Name of the operation.
    :vartype name: str
    :ivar origin: The origin of the operation.
    :vartype origin: str
    :ivar is_data_action: Indicates whether the operation is a data action.
    :vartype is_data_action: bool
    """

    _attribute_map = {
        "display": {"key": "display", "type": "OperationDisplay"},
        "name": {"key": "name", "type": "str"},
        "origin": {"key": "origin", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
    }

    def __init__(
        self,
        *,
        display: Optional["_models.OperationDisplay"] = None,
        name: Optional[str] = None,
        origin: Optional[str] = None,
        is_data_action: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display: Properties of the operation.
        :paramtype display: ~azure.mgmt.securityinsight.models.OperationDisplay
        :keyword name: Name of the operation.
        :paramtype name: str
        :keyword origin: The origin of the operation.
        :paramtype origin: str
        :keyword is_data_action: Indicates whether the operation is a data action.
        :paramtype is_data_action: bool
        """
        super().__init__(**kwargs)
        self.display = display
        self.name = name
        self.origin = origin
        self.is_data_action = is_data_action


class OperationDisplay(_serialization.Model):
    """Properties of the operation.

    :ivar description: Description of the operation.
    :vartype description: str
    :ivar operation: Operation name.
    :vartype operation: str
    :ivar provider: Provider name.
    :vartype provider: str
    :ivar resource: Resource name.
    :vartype resource: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        operation: Optional[str] = None,
        provider: Optional[str] = None,
        resource: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: Description of the operation.
        :paramtype description: str
        :keyword operation: Operation name.
        :paramtype operation: str
        :keyword provider: Provider name.
        :paramtype provider: str
        :keyword resource: Resource name.
        :paramtype resource: str
        """
        super().__init__(**kwargs)
        self.description = description
        self.operation = operation
        self.provider = provider
        self.resource = resource


class OperationsList(_serialization.Model):
    """Lists the operations available in the SecurityInsights RP.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of operations.
    :vartype next_link: str
    :ivar value: Array of operations. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.Operation]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Operation]"},
    }

    def __init__(self, *, value: List["_models.Operation"], **kwargs: Any) -> None:
        """
        :keyword value: Array of operations. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.Operation]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class OracleAuthModel(CcpAuthConfig):
    """Model for API authentication for Oracle.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar tenant_id: Oracle tenant ID. Required.
    :vartype tenant_id: str
    :ivar user_id: Oracle user ID. Required.
    :vartype user_id: str
    :ivar public_fingerprint: Public Fingerprint. Required.
    :vartype public_fingerprint: str
    :ivar pem_file: Content of the PRM file. Required.
    :vartype pem_file: str
    """

    _validation = {
        "type": {"required": True},
        "tenant_id": {"required": True},
        "user_id": {"required": True},
        "public_fingerprint": {"required": True},
        "pem_file": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "user_id": {"key": "userId", "type": "str"},
        "public_fingerprint": {"key": "publicFingerprint", "type": "str"},
        "pem_file": {"key": "pemFile", "type": "str"},
    }

    def __init__(self, *, tenant_id: str, user_id: str, public_fingerprint: str, pem_file: str, **kwargs: Any) -> None:
        """
        :keyword tenant_id: Oracle tenant ID. Required.
        :paramtype tenant_id: str
        :keyword user_id: Oracle user ID. Required.
        :paramtype user_id: str
        :keyword public_fingerprint: Public Fingerprint. Required.
        :paramtype public_fingerprint: str
        :keyword pem_file: Content of the PRM file. Required.
        :paramtype pem_file: str
        """
        super().__init__(**kwargs)
        self.type: str = "Oracle"
        self.tenant_id = tenant_id
        self.user_id = user_id
        self.public_fingerprint = public_fingerprint
        self.pem_file = pem_file


class PackageBaseProperties(_serialization.Model):
    """Describes package properties.

    :ivar content_id: The content id of the package.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId, contentKind and the contentVersion of the package.
    :vartype content_product_id: str
    :ivar content_kind: The package kind. Known values are: "Solution" and "Standalone".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar content_schema_version: The version of the content schema.
    :vartype content_schema_version: str
    :ivar is_new: Flag indicates if this is a newly published package. Known values are: "true" and
     "false".
    :vartype is_new: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_preview: Flag indicates if this package is in preview. Known values are: "true" and
     "false".
    :vartype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_featured: Flag indicates if this package is among the featured list. Known values are:
     "true" and "false".
    :vartype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar version: the latest version number of the package.
    :vartype version: str
    :ivar display_name: The display name of the package.
    :vartype display_name: str
    :ivar description: The description of the package.
    :vartype description: str
    :ivar publisher_display_name: The publisher display name of the package.
    :vartype publisher_display_name: str
    :ivar source: The source of the package.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The author of the package.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: The support tier of the package.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: The support tier of the package.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar providers: Providers for the package item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date package item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the package item.
    :vartype last_publish_date: ~datetime.date
    :ivar categories: The categories of the package.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    """

    _attribute_map = {
        "content_id": {"key": "contentId", "type": "str"},
        "content_product_id": {"key": "contentProductId", "type": "str"},
        "content_kind": {"key": "contentKind", "type": "str"},
        "content_schema_version": {"key": "contentSchemaVersion", "type": "str"},
        "is_new": {"key": "isNew", "type": "str"},
        "is_preview": {"key": "isPreview", "type": "str"},
        "is_featured": {"key": "isFeatured", "type": "str"},
        "is_deprecated": {"key": "isDeprecated", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "publisher_display_name": {"key": "publisherDisplayName", "type": "str"},
        "source": {"key": "source", "type": "MetadataSource"},
        "author": {"key": "author", "type": "MetadataAuthor"},
        "support": {"key": "support", "type": "MetadataSupport"},
        "dependencies": {"key": "dependencies", "type": "MetadataDependencies"},
        "providers": {"key": "providers", "type": "[str]"},
        "first_publish_date": {"key": "firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "lastPublishDate", "type": "date"},
        "categories": {"key": "categories", "type": "MetadataCategories"},
        "threat_analysis_tactics": {"key": "threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "threatAnalysisTechniques", "type": "[str]"},
        "icon": {"key": "icon", "type": "str"},
    }

    def __init__(
        self,
        *,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        content_schema_version: Optional[str] = None,
        is_new: Optional[Union[str, "_models.Flag"]] = None,
        is_preview: Optional[Union[str, "_models.Flag"]] = None,
        is_featured: Optional[Union[str, "_models.Flag"]] = None,
        is_deprecated: Optional[Union[str, "_models.Flag"]] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        publisher_display_name: Optional[str] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        icon: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword content_id: The content id of the package.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId, contentKind and the contentVersion of the package.
        :paramtype content_product_id: str
        :keyword content_kind: The package kind. Known values are: "Solution" and "Standalone".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword content_schema_version: The version of the content schema.
        :paramtype content_schema_version: str
        :keyword is_new: Flag indicates if this is a newly published package. Known values are: "true"
         and "false".
        :paramtype is_new: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_preview: Flag indicates if this package is in preview. Known values are: "true" and
         "false".
        :paramtype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_featured: Flag indicates if this package is among the featured list. Known values
         are: "true" and "false".
        :paramtype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
         and "false".
        :paramtype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword version: the latest version number of the package.
        :paramtype version: str
        :keyword display_name: The display name of the package.
        :paramtype display_name: str
        :keyword description: The description of the package.
        :paramtype description: str
        :keyword publisher_display_name: The publisher display name of the package.
        :paramtype publisher_display_name: str
        :keyword source: The source of the package.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The author of the package.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: The support tier of the package.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: The support tier of the package.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword providers: Providers for the package item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date package item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the package item.
        :paramtype last_publish_date: ~datetime.date
        :keyword categories: The categories of the package.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        """
        super().__init__(**kwargs)
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.content_kind = content_kind
        self.content_schema_version = content_schema_version
        self.is_new = is_new
        self.is_preview = is_preview
        self.is_featured = is_featured
        self.is_deprecated = is_deprecated
        self.version = version
        self.display_name = display_name
        self.description = description
        self.publisher_display_name = publisher_display_name
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.categories = categories
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.icon = icon


class PackageList(_serialization.Model):
    """List available packages.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of packages.
    :vartype next_link: str
    :ivar value: Array of packages. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.PackageModel]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[PackageModel]"},
    }

    def __init__(self, *, value: List["_models.PackageModel"], **kwargs: Any) -> None:
        """
        :keyword value: Array of packages. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.PackageModel]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class PackageModel(ResourceWithEtag):
    """Represents a Package in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar content_id: The content id of the package.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId, contentKind and the contentVersion of the package.
    :vartype content_product_id: str
    :ivar content_kind: The package kind. Known values are: "Solution" and "Standalone".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar content_schema_version: The version of the content schema.
    :vartype content_schema_version: str
    :ivar is_new: Flag indicates if this is a newly published package. Known values are: "true" and
     "false".
    :vartype is_new: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_preview: Flag indicates if this package is in preview. Known values are: "true" and
     "false".
    :vartype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_featured: Flag indicates if this package is among the featured list. Known values are:
     "true" and "false".
    :vartype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar version: the latest version number of the package.
    :vartype version: str
    :ivar display_name: The display name of the package.
    :vartype display_name: str
    :ivar description: The description of the package.
    :vartype description: str
    :ivar publisher_display_name: The publisher display name of the package.
    :vartype publisher_display_name: str
    :ivar source: The source of the package.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The author of the package.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: The support tier of the package.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: The support tier of the package.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar providers: Providers for the package item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date package item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the package item.
    :vartype last_publish_date: ~datetime.date
    :ivar categories: The categories of the package.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "content_id": {"key": "properties.contentId", "type": "str"},
        "content_product_id": {"key": "properties.contentProductId", "type": "str"},
        "content_kind": {"key": "properties.contentKind", "type": "str"},
        "content_schema_version": {"key": "properties.contentSchemaVersion", "type": "str"},
        "is_new": {"key": "properties.isNew", "type": "str"},
        "is_preview": {"key": "properties.isPreview", "type": "str"},
        "is_featured": {"key": "properties.isFeatured", "type": "str"},
        "is_deprecated": {"key": "properties.isDeprecated", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "publisher_display_name": {"key": "properties.publisherDisplayName", "type": "str"},
        "source": {"key": "properties.source", "type": "MetadataSource"},
        "author": {"key": "properties.author", "type": "MetadataAuthor"},
        "support": {"key": "properties.support", "type": "MetadataSupport"},
        "dependencies": {"key": "properties.dependencies", "type": "MetadataDependencies"},
        "providers": {"key": "properties.providers", "type": "[str]"},
        "first_publish_date": {"key": "properties.firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "properties.lastPublishDate", "type": "date"},
        "categories": {"key": "properties.categories", "type": "MetadataCategories"},
        "threat_analysis_tactics": {"key": "properties.threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "properties.threatAnalysisTechniques", "type": "[str]"},
        "icon": {"key": "properties.icon", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        content_schema_version: Optional[str] = None,
        is_new: Optional[Union[str, "_models.Flag"]] = None,
        is_preview: Optional[Union[str, "_models.Flag"]] = None,
        is_featured: Optional[Union[str, "_models.Flag"]] = None,
        is_deprecated: Optional[Union[str, "_models.Flag"]] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        publisher_display_name: Optional[str] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        icon: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword content_id: The content id of the package.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId, contentKind and the contentVersion of the package.
        :paramtype content_product_id: str
        :keyword content_kind: The package kind. Known values are: "Solution" and "Standalone".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword content_schema_version: The version of the content schema.
        :paramtype content_schema_version: str
        :keyword is_new: Flag indicates if this is a newly published package. Known values are: "true"
         and "false".
        :paramtype is_new: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_preview: Flag indicates if this package is in preview. Known values are: "true" and
         "false".
        :paramtype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_featured: Flag indicates if this package is among the featured list. Known values
         are: "true" and "false".
        :paramtype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
         and "false".
        :paramtype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword version: the latest version number of the package.
        :paramtype version: str
        :keyword display_name: The display name of the package.
        :paramtype display_name: str
        :keyword description: The description of the package.
        :paramtype description: str
        :keyword publisher_display_name: The publisher display name of the package.
        :paramtype publisher_display_name: str
        :keyword source: The source of the package.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The author of the package.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: The support tier of the package.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: The support tier of the package.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword providers: Providers for the package item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date package item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the package item.
        :paramtype last_publish_date: ~datetime.date
        :keyword categories: The categories of the package.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        """
        super().__init__(etag=etag, **kwargs)
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.content_kind = content_kind
        self.content_schema_version = content_schema_version
        self.is_new = is_new
        self.is_preview = is_preview
        self.is_featured = is_featured
        self.is_deprecated = is_deprecated
        self.version = version
        self.display_name = display_name
        self.description = description
        self.publisher_display_name = publisher_display_name
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.categories = categories
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.icon = icon


class PackageProperties(PackageBaseProperties):
    """Describes package properties.

    :ivar content_id: The content id of the package.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId, contentKind and the contentVersion of the package.
    :vartype content_product_id: str
    :ivar content_kind: The package kind. Known values are: "Solution" and "Standalone".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar content_schema_version: The version of the content schema.
    :vartype content_schema_version: str
    :ivar is_new: Flag indicates if this is a newly published package. Known values are: "true" and
     "false".
    :vartype is_new: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_preview: Flag indicates if this package is in preview. Known values are: "true" and
     "false".
    :vartype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_featured: Flag indicates if this package is among the featured list. Known values are:
     "true" and "false".
    :vartype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar version: the latest version number of the package.
    :vartype version: str
    :ivar display_name: The display name of the package.
    :vartype display_name: str
    :ivar description: The description of the package.
    :vartype description: str
    :ivar publisher_display_name: The publisher display name of the package.
    :vartype publisher_display_name: str
    :ivar source: The source of the package.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The author of the package.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: The support tier of the package.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: The support tier of the package.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar providers: Providers for the package item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date package item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the package item.
    :vartype last_publish_date: ~datetime.date
    :ivar categories: The categories of the package.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    """


class PlaybookActionProperties(_serialization.Model):
    """PlaybookActionProperties.

    All required parameters must be populated in order to send to server.

    :ivar logic_app_resource_id: The resource id of the playbook resource. Required.
    :vartype logic_app_resource_id: str
    :ivar tenant_id: The tenant id of the playbook resource.
    :vartype tenant_id: str
    """

    _validation = {
        "logic_app_resource_id": {"required": True},
    }

    _attribute_map = {
        "logic_app_resource_id": {"key": "logicAppResourceId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
    }

    def __init__(self, *, logic_app_resource_id: str, tenant_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword logic_app_resource_id: The resource id of the playbook resource. Required.
        :paramtype logic_app_resource_id: str
        :keyword tenant_id: The tenant id of the playbook resource.
        :paramtype tenant_id: str
        """
        super().__init__(**kwargs)
        self.logic_app_resource_id = logic_app_resource_id
        self.tenant_id = tenant_id


class PremiumMdtiDataConnectorDataTypes(_serialization.Model):
    """The available data types for Premium Microsoft Defender for Threat Intelligence data connector.

    All required parameters must be populated in order to send to server.

    :ivar connector: Data type for Premium Microsoft Defender for Threat Intelligence data
     connector. Required.
    :vartype connector:
     ~azure.mgmt.securityinsight.models.PremiumMdtiDataConnectorDataTypesConnector
    """

    _validation = {
        "connector": {"required": True},
    }

    _attribute_map = {
        "connector": {"key": "connector", "type": "PremiumMdtiDataConnectorDataTypesConnector"},
    }

    def __init__(self, *, connector: "_models.PremiumMdtiDataConnectorDataTypesConnector", **kwargs: Any) -> None:
        """
        :keyword connector: Data type for Premium Microsoft Defender for Threat Intelligence data
         connector. Required.
        :paramtype connector:
         ~azure.mgmt.securityinsight.models.PremiumMdtiDataConnectorDataTypesConnector
        """
        super().__init__(**kwargs)
        self.connector = connector


class PremiumMdtiDataConnectorDataTypesConnector(DataConnectorDataTypeCommon):  # pylint: disable=name-too-long
    """Data type for Premium Microsoft Defender for Threat Intelligence data connector.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """


class PremiumMdtiDataConnectorProperties(DataConnectorTenantId):
    """Premium Microsoft Defender for Threat Intelligence data connector properties.

    All required parameters must be populated in order to send to server.

    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar lookback_period: The lookback period for the feed to be imported. The date-time to begin
     importing the feed from, for example: 2024-01-01T00:00:00.000Z. Required.
    :vartype lookback_period: ~datetime.datetime
    :ivar required_skus_present: The flag to indicate whether the tenant has the premium SKU
     required to access this connector.
    :vartype required_skus_present: bool
    :ivar data_types: The available data types for the connector. Required.
    :vartype data_types: ~azure.mgmt.securityinsight.models.PremiumMdtiDataConnectorDataTypes
    """

    _validation = {
        "lookback_period": {"required": True},
        "data_types": {"required": True},
    }

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "lookback_period": {"key": "lookbackPeriod", "type": "iso-8601"},
        "required_skus_present": {"key": "requiredSKUsPresent", "type": "bool"},
        "data_types": {"key": "dataTypes", "type": "PremiumMdtiDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        lookback_period: datetime.datetime,
        data_types: "_models.PremiumMdtiDataConnectorDataTypes",
        tenant_id: Optional[str] = None,
        required_skus_present: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword lookback_period: The lookback period for the feed to be imported. The date-time to
         begin importing the feed from, for example: 2024-01-01T00:00:00.000Z. Required.
        :paramtype lookback_period: ~datetime.datetime
        :keyword required_skus_present: The flag to indicate whether the tenant has the premium SKU
         required to access this connector.
        :paramtype required_skus_present: bool
        :keyword data_types: The available data types for the connector. Required.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.PremiumMdtiDataConnectorDataTypes
        """
        super().__init__(tenant_id=tenant_id, **kwargs)
        self.lookback_period = lookback_period
        self.required_skus_present = required_skus_present
        self.data_types = data_types


class PremiumMicrosoftDefenderForThreatIntelligence(DataConnector):  # pylint: disable=name-too-long
    """Represents Premium Microsoft Defender for Threat Intelligence data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar lookback_period: The lookback period for the feed to be imported. The date-time to begin
     importing the feed from, for example: 2024-01-01T00:00:00.000Z.
    :vartype lookback_period: ~datetime.datetime
    :ivar required_skus_present: The flag to indicate whether the tenant has the premium SKU
     required to access this connector.
    :vartype required_skus_present: bool
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.PremiumMdtiDataConnectorDataTypes
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "lookback_period": {"key": "properties.lookbackPeriod", "type": "iso-8601"},
        "required_skus_present": {"key": "properties.requiredSKUsPresent", "type": "bool"},
        "data_types": {"key": "properties.dataTypes", "type": "PremiumMdtiDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        lookback_period: Optional[datetime.datetime] = None,
        required_skus_present: Optional[bool] = None,
        data_types: Optional["_models.PremiumMdtiDataConnectorDataTypes"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword lookback_period: The lookback period for the feed to be imported. The date-time to
         begin importing the feed from, for example: 2024-01-01T00:00:00.000Z.
        :paramtype lookback_period: ~datetime.datetime
        :keyword required_skus_present: The flag to indicate whether the tenant has the premium SKU
         required to access this connector.
        :paramtype required_skus_present: bool
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.PremiumMdtiDataConnectorDataTypes
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "PremiumMicrosoftDefenderForThreatIntelligence"
        self.tenant_id = tenant_id
        self.lookback_period = lookback_period
        self.required_skus_present = required_skus_present
        self.data_types = data_types


class ProcessEntity(Entity):
    """Represents a process entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar account_entity_id: The account entity id running the processes.
    :vartype account_entity_id: str
    :ivar command_line: The command line used to create the process.
    :vartype command_line: str
    :ivar creation_time_utc: The time when the process started to run.
    :vartype creation_time_utc: ~datetime.datetime
    :ivar elevation_token: The elevation token associated with the process. Known values are:
     "Default", "Full", and "Limited".
    :vartype elevation_token: str or ~azure.mgmt.securityinsight.models.ElevationToken
    :ivar host_entity_id: The host entity id on which the process was running.
    :vartype host_entity_id: str
    :ivar host_logon_session_entity_id: The session entity id in which the process was running.
    :vartype host_logon_session_entity_id: str
    :ivar image_file_entity_id: Image file entity id.
    :vartype image_file_entity_id: str
    :ivar parent_process_entity_id: The parent process entity id.
    :vartype parent_process_entity_id: str
    :ivar process_id: The process ID.
    :vartype process_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "account_entity_id": {"readonly": True},
        "command_line": {"readonly": True},
        "creation_time_utc": {"readonly": True},
        "host_entity_id": {"readonly": True},
        "host_logon_session_entity_id": {"readonly": True},
        "image_file_entity_id": {"readonly": True},
        "parent_process_entity_id": {"readonly": True},
        "process_id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "account_entity_id": {"key": "properties.accountEntityId", "type": "str"},
        "command_line": {"key": "properties.commandLine", "type": "str"},
        "creation_time_utc": {"key": "properties.creationTimeUtc", "type": "iso-8601"},
        "elevation_token": {"key": "properties.elevationToken", "type": "str"},
        "host_entity_id": {"key": "properties.hostEntityId", "type": "str"},
        "host_logon_session_entity_id": {"key": "properties.hostLogonSessionEntityId", "type": "str"},
        "image_file_entity_id": {"key": "properties.imageFileEntityId", "type": "str"},
        "parent_process_entity_id": {"key": "properties.parentProcessEntityId", "type": "str"},
        "process_id": {"key": "properties.processId", "type": "str"},
    }

    def __init__(
        self, *, elevation_token: Optional[Union[str, "_models.ElevationToken"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword elevation_token: The elevation token associated with the process. Known values are:
         "Default", "Full", and "Limited".
        :paramtype elevation_token: str or ~azure.mgmt.securityinsight.models.ElevationToken
        """
        super().__init__(**kwargs)
        self.kind: str = "Process"
        self.additional_data = None
        self.friendly_name = None
        self.account_entity_id = None
        self.command_line = None
        self.creation_time_utc = None
        self.elevation_token = elevation_token
        self.host_entity_id = None
        self.host_logon_session_entity_id = None
        self.image_file_entity_id = None
        self.parent_process_entity_id = None
        self.process_id = None


class ProcessEntityProperties(EntityCommonProperties):
    """Process entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar account_entity_id: The account entity id running the processes.
    :vartype account_entity_id: str
    :ivar command_line: The command line used to create the process.
    :vartype command_line: str
    :ivar creation_time_utc: The time when the process started to run.
    :vartype creation_time_utc: ~datetime.datetime
    :ivar elevation_token: The elevation token associated with the process. Known values are:
     "Default", "Full", and "Limited".
    :vartype elevation_token: str or ~azure.mgmt.securityinsight.models.ElevationToken
    :ivar host_entity_id: The host entity id on which the process was running.
    :vartype host_entity_id: str
    :ivar host_logon_session_entity_id: The session entity id in which the process was running.
    :vartype host_logon_session_entity_id: str
    :ivar image_file_entity_id: Image file entity id.
    :vartype image_file_entity_id: str
    :ivar parent_process_entity_id: The parent process entity id.
    :vartype parent_process_entity_id: str
    :ivar process_id: The process ID.
    :vartype process_id: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "account_entity_id": {"readonly": True},
        "command_line": {"readonly": True},
        "creation_time_utc": {"readonly": True},
        "host_entity_id": {"readonly": True},
        "host_logon_session_entity_id": {"readonly": True},
        "image_file_entity_id": {"readonly": True},
        "parent_process_entity_id": {"readonly": True},
        "process_id": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "account_entity_id": {"key": "accountEntityId", "type": "str"},
        "command_line": {"key": "commandLine", "type": "str"},
        "creation_time_utc": {"key": "creationTimeUtc", "type": "iso-8601"},
        "elevation_token": {"key": "elevationToken", "type": "str"},
        "host_entity_id": {"key": "hostEntityId", "type": "str"},
        "host_logon_session_entity_id": {"key": "hostLogonSessionEntityId", "type": "str"},
        "image_file_entity_id": {"key": "imageFileEntityId", "type": "str"},
        "parent_process_entity_id": {"key": "parentProcessEntityId", "type": "str"},
        "process_id": {"key": "processId", "type": "str"},
    }

    def __init__(
        self, *, elevation_token: Optional[Union[str, "_models.ElevationToken"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword elevation_token: The elevation token associated with the process. Known values are:
         "Default", "Full", and "Limited".
        :paramtype elevation_token: str or ~azure.mgmt.securityinsight.models.ElevationToken
        """
        super().__init__(**kwargs)
        self.account_entity_id = None
        self.command_line = None
        self.creation_time_utc = None
        self.elevation_token = elevation_token
        self.host_entity_id = None
        self.host_logon_session_entity_id = None
        self.image_file_entity_id = None
        self.parent_process_entity_id = None
        self.process_id = None


class ProductPackageAdditionalProperties(_serialization.Model):
    """product package additional properties.

    :ivar installed_version: The version of the installed package, null or absent means not
     installed.
    :vartype installed_version: str
    :ivar metadata_resource_id: The metadata resource id.
    :vartype metadata_resource_id: str
    :ivar packaged_content: The json of the ARM template to deploy. Expandable.
    :vartype packaged_content: JSON
    """

    _attribute_map = {
        "installed_version": {"key": "installedVersion", "type": "str"},
        "metadata_resource_id": {"key": "metadataResourceId", "type": "str"},
        "packaged_content": {"key": "packagedContent", "type": "object"},
    }

    def __init__(
        self,
        *,
        installed_version: Optional[str] = None,
        metadata_resource_id: Optional[str] = None,
        packaged_content: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword installed_version: The version of the installed package, null or absent means not
         installed.
        :paramtype installed_version: str
        :keyword metadata_resource_id: The metadata resource id.
        :paramtype metadata_resource_id: str
        :keyword packaged_content: The json of the ARM template to deploy. Expandable.
        :paramtype packaged_content: JSON
        """
        super().__init__(**kwargs)
        self.installed_version = installed_version
        self.metadata_resource_id = metadata_resource_id
        self.packaged_content = packaged_content


class ProductPackageList(_serialization.Model):
    """List available packages.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of packages.
    :vartype next_link: str
    :ivar value: Array of packages. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.ProductPackageModel]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[ProductPackageModel]"},
    }

    def __init__(self, *, value: List["_models.ProductPackageModel"], **kwargs: Any) -> None:
        """
        :keyword value: Array of packages. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.ProductPackageModel]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class ProductPackageModel(ResourceWithEtag):
    """Represents a Package in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar content_id: The content id of the package.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId, contentKind and the contentVersion of the package.
    :vartype content_product_id: str
    :ivar content_kind: The package kind. Known values are: "Solution" and "Standalone".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar content_schema_version: The version of the content schema.
    :vartype content_schema_version: str
    :ivar is_new: Flag indicates if this is a newly published package. Known values are: "true" and
     "false".
    :vartype is_new: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_preview: Flag indicates if this package is in preview. Known values are: "true" and
     "false".
    :vartype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_featured: Flag indicates if this package is among the featured list. Known values are:
     "true" and "false".
    :vartype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar version: the latest version number of the package.
    :vartype version: str
    :ivar display_name: The display name of the package.
    :vartype display_name: str
    :ivar description: The description of the package.
    :vartype description: str
    :ivar publisher_display_name: The publisher display name of the package.
    :vartype publisher_display_name: str
    :ivar source: The source of the package.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The author of the package.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: The support tier of the package.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: The support tier of the package.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar providers: Providers for the package item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date package item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the package item.
    :vartype last_publish_date: ~datetime.date
    :ivar categories: The categories of the package.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    :ivar installed_version: The version of the installed package, null or absent means not
     installed.
    :vartype installed_version: str
    :ivar metadata_resource_id: The metadata resource id.
    :vartype metadata_resource_id: str
    :ivar packaged_content: The json of the ARM template to deploy. Expandable.
    :vartype packaged_content: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "content_id": {"key": "properties.contentId", "type": "str"},
        "content_product_id": {"key": "properties.contentProductId", "type": "str"},
        "content_kind": {"key": "properties.contentKind", "type": "str"},
        "content_schema_version": {"key": "properties.contentSchemaVersion", "type": "str"},
        "is_new": {"key": "properties.isNew", "type": "str"},
        "is_preview": {"key": "properties.isPreview", "type": "str"},
        "is_featured": {"key": "properties.isFeatured", "type": "str"},
        "is_deprecated": {"key": "properties.isDeprecated", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "publisher_display_name": {"key": "properties.publisherDisplayName", "type": "str"},
        "source": {"key": "properties.source", "type": "MetadataSource"},
        "author": {"key": "properties.author", "type": "MetadataAuthor"},
        "support": {"key": "properties.support", "type": "MetadataSupport"},
        "dependencies": {"key": "properties.dependencies", "type": "MetadataDependencies"},
        "providers": {"key": "properties.providers", "type": "[str]"},
        "first_publish_date": {"key": "properties.firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "properties.lastPublishDate", "type": "date"},
        "categories": {"key": "properties.categories", "type": "MetadataCategories"},
        "threat_analysis_tactics": {"key": "properties.threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "properties.threatAnalysisTechniques", "type": "[str]"},
        "icon": {"key": "properties.icon", "type": "str"},
        "installed_version": {"key": "properties.installedVersion", "type": "str"},
        "metadata_resource_id": {"key": "properties.metadataResourceId", "type": "str"},
        "packaged_content": {"key": "properties.packagedContent", "type": "object"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        content_schema_version: Optional[str] = None,
        is_new: Optional[Union[str, "_models.Flag"]] = None,
        is_preview: Optional[Union[str, "_models.Flag"]] = None,
        is_featured: Optional[Union[str, "_models.Flag"]] = None,
        is_deprecated: Optional[Union[str, "_models.Flag"]] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        publisher_display_name: Optional[str] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        icon: Optional[str] = None,
        installed_version: Optional[str] = None,
        metadata_resource_id: Optional[str] = None,
        packaged_content: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword content_id: The content id of the package.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId, contentKind and the contentVersion of the package.
        :paramtype content_product_id: str
        :keyword content_kind: The package kind. Known values are: "Solution" and "Standalone".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword content_schema_version: The version of the content schema.
        :paramtype content_schema_version: str
        :keyword is_new: Flag indicates if this is a newly published package. Known values are: "true"
         and "false".
        :paramtype is_new: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_preview: Flag indicates if this package is in preview. Known values are: "true" and
         "false".
        :paramtype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_featured: Flag indicates if this package is among the featured list. Known values
         are: "true" and "false".
        :paramtype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
         and "false".
        :paramtype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword version: the latest version number of the package.
        :paramtype version: str
        :keyword display_name: The display name of the package.
        :paramtype display_name: str
        :keyword description: The description of the package.
        :paramtype description: str
        :keyword publisher_display_name: The publisher display name of the package.
        :paramtype publisher_display_name: str
        :keyword source: The source of the package.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The author of the package.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: The support tier of the package.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: The support tier of the package.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword providers: Providers for the package item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date package item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the package item.
        :paramtype last_publish_date: ~datetime.date
        :keyword categories: The categories of the package.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        :keyword installed_version: The version of the installed package, null or absent means not
         installed.
        :paramtype installed_version: str
        :keyword metadata_resource_id: The metadata resource id.
        :paramtype metadata_resource_id: str
        :keyword packaged_content: The json of the ARM template to deploy. Expandable.
        :paramtype packaged_content: JSON
        """
        super().__init__(etag=etag, **kwargs)
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.content_kind = content_kind
        self.content_schema_version = content_schema_version
        self.is_new = is_new
        self.is_preview = is_preview
        self.is_featured = is_featured
        self.is_deprecated = is_deprecated
        self.version = version
        self.display_name = display_name
        self.description = description
        self.publisher_display_name = publisher_display_name
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.categories = categories
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.icon = icon
        self.installed_version = installed_version
        self.metadata_resource_id = metadata_resource_id
        self.packaged_content = packaged_content


class ProductPackageProperties(PackageBaseProperties, ProductPackageAdditionalProperties):
    """Describes package properties.

    :ivar installed_version: The version of the installed package, null or absent means not
     installed.
    :vartype installed_version: str
    :ivar metadata_resource_id: The metadata resource id.
    :vartype metadata_resource_id: str
    :ivar packaged_content: The json of the ARM template to deploy. Expandable.
    :vartype packaged_content: JSON
    :ivar content_id: The content id of the package.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId, contentKind and the contentVersion of the package.
    :vartype content_product_id: str
    :ivar content_kind: The package kind. Known values are: "Solution" and "Standalone".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar content_schema_version: The version of the content schema.
    :vartype content_schema_version: str
    :ivar is_new: Flag indicates if this is a newly published package. Known values are: "true" and
     "false".
    :vartype is_new: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_preview: Flag indicates if this package is in preview. Known values are: "true" and
     "false".
    :vartype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_featured: Flag indicates if this package is among the featured list. Known values are:
     "true" and "false".
    :vartype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar version: the latest version number of the package.
    :vartype version: str
    :ivar display_name: The display name of the package.
    :vartype display_name: str
    :ivar description: The description of the package.
    :vartype description: str
    :ivar publisher_display_name: The publisher display name of the package.
    :vartype publisher_display_name: str
    :ivar source: The source of the package.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The author of the package.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: The support tier of the package.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: The support tier of the package.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar providers: Providers for the package item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date package item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the package item.
    :vartype last_publish_date: ~datetime.date
    :ivar categories: The categories of the package.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    """

    _attribute_map = {
        "installed_version": {"key": "installedVersion", "type": "str"},
        "metadata_resource_id": {"key": "metadataResourceId", "type": "str"},
        "packaged_content": {"key": "packagedContent", "type": "object"},
        "content_id": {"key": "contentId", "type": "str"},
        "content_product_id": {"key": "contentProductId", "type": "str"},
        "content_kind": {"key": "contentKind", "type": "str"},
        "content_schema_version": {"key": "contentSchemaVersion", "type": "str"},
        "is_new": {"key": "isNew", "type": "str"},
        "is_preview": {"key": "isPreview", "type": "str"},
        "is_featured": {"key": "isFeatured", "type": "str"},
        "is_deprecated": {"key": "isDeprecated", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "publisher_display_name": {"key": "publisherDisplayName", "type": "str"},
        "source": {"key": "source", "type": "MetadataSource"},
        "author": {"key": "author", "type": "MetadataAuthor"},
        "support": {"key": "support", "type": "MetadataSupport"},
        "dependencies": {"key": "dependencies", "type": "MetadataDependencies"},
        "providers": {"key": "providers", "type": "[str]"},
        "first_publish_date": {"key": "firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "lastPublishDate", "type": "date"},
        "categories": {"key": "categories", "type": "MetadataCategories"},
        "threat_analysis_tactics": {"key": "threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "threatAnalysisTechniques", "type": "[str]"},
        "icon": {"key": "icon", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        installed_version: Optional[str] = None,
        metadata_resource_id: Optional[str] = None,
        packaged_content: Optional[JSON] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        content_schema_version: Optional[str] = None,
        is_new: Optional[Union[str, "_models.Flag"]] = None,
        is_preview: Optional[Union[str, "_models.Flag"]] = None,
        is_featured: Optional[Union[str, "_models.Flag"]] = None,
        is_deprecated: Optional[Union[str, "_models.Flag"]] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        publisher_display_name: Optional[str] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        icon: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword installed_version: The version of the installed package, null or absent means not
         installed.
        :paramtype installed_version: str
        :keyword metadata_resource_id: The metadata resource id.
        :paramtype metadata_resource_id: str
        :keyword packaged_content: The json of the ARM template to deploy. Expandable.
        :paramtype packaged_content: JSON
        :keyword content_id: The content id of the package.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId, contentKind and the contentVersion of the package.
        :paramtype content_product_id: str
        :keyword content_kind: The package kind. Known values are: "Solution" and "Standalone".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword content_schema_version: The version of the content schema.
        :paramtype content_schema_version: str
        :keyword is_new: Flag indicates if this is a newly published package. Known values are: "true"
         and "false".
        :paramtype is_new: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_preview: Flag indicates if this package is in preview. Known values are: "true" and
         "false".
        :paramtype is_preview: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_featured: Flag indicates if this package is among the featured list. Known values
         are: "true" and "false".
        :paramtype is_featured: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
         and "false".
        :paramtype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
        :keyword version: the latest version number of the package.
        :paramtype version: str
        :keyword display_name: The display name of the package.
        :paramtype display_name: str
        :keyword description: The description of the package.
        :paramtype description: str
        :keyword publisher_display_name: The publisher display name of the package.
        :paramtype publisher_display_name: str
        :keyword source: The source of the package.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The author of the package.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: The support tier of the package.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: The support tier of the package.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword providers: Providers for the package item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date package item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the package item.
        :paramtype last_publish_date: ~datetime.date
        :keyword categories: The categories of the package.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        """
        super().__init__(
            content_id=content_id,
            content_product_id=content_product_id,
            content_kind=content_kind,
            content_schema_version=content_schema_version,
            is_new=is_new,
            is_preview=is_preview,
            is_featured=is_featured,
            is_deprecated=is_deprecated,
            version=version,
            display_name=display_name,
            description=description,
            publisher_display_name=publisher_display_name,
            source=source,
            author=author,
            support=support,
            dependencies=dependencies,
            providers=providers,
            first_publish_date=first_publish_date,
            last_publish_date=last_publish_date,
            categories=categories,
            threat_analysis_tactics=threat_analysis_tactics,
            threat_analysis_techniques=threat_analysis_techniques,
            icon=icon,
            installed_version=installed_version,
            metadata_resource_id=metadata_resource_id,
            packaged_content=packaged_content,
            **kwargs
        )
        self.installed_version = installed_version
        self.metadata_resource_id = metadata_resource_id
        self.packaged_content = packaged_content
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.content_kind = content_kind
        self.content_schema_version = content_schema_version
        self.is_new = is_new
        self.is_preview = is_preview
        self.is_featured = is_featured
        self.is_deprecated = is_deprecated
        self.version = version
        self.display_name = display_name
        self.description = description
        self.publisher_display_name = publisher_display_name
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.categories = categories
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.icon = icon


class ProductTemplateAdditionalProperties(_serialization.Model):
    """additional properties of product template.

    :ivar packaged_content: The json of the ARM template to deploy.
    :vartype packaged_content: JSON
    """

    _attribute_map = {
        "packaged_content": {"key": "packagedContent", "type": "object"},
    }

    def __init__(self, *, packaged_content: Optional[JSON] = None, **kwargs: Any) -> None:
        """
        :keyword packaged_content: The json of the ARM template to deploy.
        :paramtype packaged_content: JSON
        """
        super().__init__(**kwargs)
        self.packaged_content = packaged_content


class ProductTemplateList(_serialization.Model):
    """List of all the template.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Array of templates. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.ProductTemplateModel]
    :ivar next_link: URL to fetch the next page of template.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ProductTemplateModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.ProductTemplateModel"], **kwargs: Any) -> None:
        """
        :keyword value: Array of templates. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.ProductTemplateModel]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ProductTemplateModel(ResourceWithEtag):
    """Template resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId of the package, contentId of the template, contentKind of the template and the
     contentVersion of the template.
    :vartype content_product_id: str
    :ivar package_version: Version of the package.  Default and recommended format is numeric (e.g.
     1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but
     then we cannot guarantee any version checks.
    :vartype package_version: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar display_name: The display name of the template.
    :vartype display_name: str
    :ivar content_kind: The kind of content the template is for. Known values are: "DataConnector",
     "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
     "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
     "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
     "AutomationRule".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the template - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    :ivar package_id: the package Id contains this template.
    :vartype package_id: str
    :ivar package_kind: the packageKind of the package contains this template. Known values are:
     "Solution" and "Standalone".
    :vartype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar package_name: the name of the package contains this template.
    :vartype package_name: str
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar packaged_content: The json of the ARM template to deploy.
    :vartype packaged_content: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "is_deprecated": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "content_id": {"key": "properties.contentId", "type": "str"},
        "content_product_id": {"key": "properties.contentProductId", "type": "str"},
        "package_version": {"key": "properties.packageVersion", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "content_kind": {"key": "properties.contentKind", "type": "str"},
        "source": {"key": "properties.source", "type": "MetadataSource"},
        "author": {"key": "properties.author", "type": "MetadataAuthor"},
        "support": {"key": "properties.support", "type": "MetadataSupport"},
        "dependencies": {"key": "properties.dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "properties.categories", "type": "MetadataCategories"},
        "providers": {"key": "properties.providers", "type": "[str]"},
        "first_publish_date": {"key": "properties.firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "properties.lastPublishDate", "type": "date"},
        "custom_version": {"key": "properties.customVersion", "type": "str"},
        "content_schema_version": {"key": "properties.contentSchemaVersion", "type": "str"},
        "icon": {"key": "properties.icon", "type": "str"},
        "threat_analysis_tactics": {"key": "properties.threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "properties.threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "properties.previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "properties.previewImagesDark", "type": "[str]"},
        "package_id": {"key": "properties.packageId", "type": "str"},
        "package_kind": {"key": "properties.packageKind", "type": "str"},
        "package_name": {"key": "properties.packageName", "type": "str"},
        "is_deprecated": {"key": "properties.isDeprecated", "type": "str"},
        "packaged_content": {"key": "properties.packagedContent", "type": "object"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        package_version: Optional[str] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.Kind"]] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        package_id: Optional[str] = None,
        package_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        package_name: Optional[str] = None,
        packaged_content: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId of the package, contentId of the template, contentKind of the template and the
         contentVersion of the template.
        :paramtype content_product_id: str
        :keyword package_version: Version of the package.  Default and recommended format is numeric
         (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string,
         but then we cannot guarantee any version checks.
        :paramtype package_version: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword display_name: The display name of the template.
        :paramtype display_name: str
        :keyword content_kind: The kind of content the template is for. Known values are:
         "DataConnector", "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
         "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
         "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
         "AutomationRule".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the template - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        :keyword package_id: the package Id contains this template.
        :paramtype package_id: str
        :keyword package_kind: the packageKind of the package contains this template. Known values are:
         "Solution" and "Standalone".
        :paramtype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword package_name: the name of the package contains this template.
        :paramtype package_name: str
        :keyword packaged_content: The json of the ARM template to deploy.
        :paramtype packaged_content: JSON
        """
        super().__init__(etag=etag, **kwargs)
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.package_version = package_version
        self.version = version
        self.display_name = display_name
        self.content_kind = content_kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark
        self.package_id = package_id
        self.package_kind = package_kind
        self.package_name = package_name
        self.is_deprecated = None
        self.packaged_content = packaged_content


class TemplateBaseProperties(_serialization.Model):
    """Template property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId of the package, contentId of the template, contentKind of the template and the
     contentVersion of the template.
    :vartype content_product_id: str
    :ivar package_version: Version of the package.  Default and recommended format is numeric (e.g.
     1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but
     then we cannot guarantee any version checks.
    :vartype package_version: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar display_name: The display name of the template.
    :vartype display_name: str
    :ivar content_kind: The kind of content the template is for. Known values are: "DataConnector",
     "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
     "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
     "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
     "AutomationRule".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the template - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    :ivar package_id: the package Id contains this template.
    :vartype package_id: str
    :ivar package_kind: the packageKind of the package contains this template. Known values are:
     "Solution" and "Standalone".
    :vartype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar package_name: the name of the package contains this template.
    :vartype package_name: str
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    """

    _validation = {
        "is_deprecated": {"readonly": True},
    }

    _attribute_map = {
        "content_id": {"key": "contentId", "type": "str"},
        "content_product_id": {"key": "contentProductId", "type": "str"},
        "package_version": {"key": "packageVersion", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "content_kind": {"key": "contentKind", "type": "str"},
        "source": {"key": "source", "type": "MetadataSource"},
        "author": {"key": "author", "type": "MetadataAuthor"},
        "support": {"key": "support", "type": "MetadataSupport"},
        "dependencies": {"key": "dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "categories", "type": "MetadataCategories"},
        "providers": {"key": "providers", "type": "[str]"},
        "first_publish_date": {"key": "firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "lastPublishDate", "type": "date"},
        "custom_version": {"key": "customVersion", "type": "str"},
        "content_schema_version": {"key": "contentSchemaVersion", "type": "str"},
        "icon": {"key": "icon", "type": "str"},
        "threat_analysis_tactics": {"key": "threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "previewImagesDark", "type": "[str]"},
        "package_id": {"key": "packageId", "type": "str"},
        "package_kind": {"key": "packageKind", "type": "str"},
        "package_name": {"key": "packageName", "type": "str"},
        "is_deprecated": {"key": "isDeprecated", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        package_version: Optional[str] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.Kind"]] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        package_id: Optional[str] = None,
        package_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        package_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId of the package, contentId of the template, contentKind of the template and the
         contentVersion of the template.
        :paramtype content_product_id: str
        :keyword package_version: Version of the package.  Default and recommended format is numeric
         (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string,
         but then we cannot guarantee any version checks.
        :paramtype package_version: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword display_name: The display name of the template.
        :paramtype display_name: str
        :keyword content_kind: The kind of content the template is for. Known values are:
         "DataConnector", "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
         "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
         "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
         "AutomationRule".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the template - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        :keyword package_id: the package Id contains this template.
        :paramtype package_id: str
        :keyword package_kind: the packageKind of the package contains this template. Known values are:
         "Solution" and "Standalone".
        :paramtype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword package_name: the name of the package contains this template.
        :paramtype package_name: str
        """
        super().__init__(**kwargs)
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.package_version = package_version
        self.version = version
        self.display_name = display_name
        self.content_kind = content_kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark
        self.package_id = package_id
        self.package_kind = package_kind
        self.package_name = package_name
        self.is_deprecated = None


class ProductTemplateProperties(TemplateBaseProperties, ProductTemplateAdditionalProperties):
    """Template property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar packaged_content: The json of the ARM template to deploy.
    :vartype packaged_content: JSON
    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId of the package, contentId of the template, contentKind of the template and the
     contentVersion of the template.
    :vartype content_product_id: str
    :ivar package_version: Version of the package.  Default and recommended format is numeric (e.g.
     1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but
     then we cannot guarantee any version checks.
    :vartype package_version: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar display_name: The display name of the template.
    :vartype display_name: str
    :ivar content_kind: The kind of content the template is for. Known values are: "DataConnector",
     "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
     "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
     "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
     "AutomationRule".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the template - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    :ivar package_id: the package Id contains this template.
    :vartype package_id: str
    :ivar package_kind: the packageKind of the package contains this template. Known values are:
     "Solution" and "Standalone".
    :vartype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar package_name: the name of the package contains this template.
    :vartype package_name: str
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    """

    _validation = {
        "is_deprecated": {"readonly": True},
    }

    _attribute_map = {
        "packaged_content": {"key": "packagedContent", "type": "object"},
        "content_id": {"key": "contentId", "type": "str"},
        "content_product_id": {"key": "contentProductId", "type": "str"},
        "package_version": {"key": "packageVersion", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "content_kind": {"key": "contentKind", "type": "str"},
        "source": {"key": "source", "type": "MetadataSource"},
        "author": {"key": "author", "type": "MetadataAuthor"},
        "support": {"key": "support", "type": "MetadataSupport"},
        "dependencies": {"key": "dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "categories", "type": "MetadataCategories"},
        "providers": {"key": "providers", "type": "[str]"},
        "first_publish_date": {"key": "firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "lastPublishDate", "type": "date"},
        "custom_version": {"key": "customVersion", "type": "str"},
        "content_schema_version": {"key": "contentSchemaVersion", "type": "str"},
        "icon": {"key": "icon", "type": "str"},
        "threat_analysis_tactics": {"key": "threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "previewImagesDark", "type": "[str]"},
        "package_id": {"key": "packageId", "type": "str"},
        "package_kind": {"key": "packageKind", "type": "str"},
        "package_name": {"key": "packageName", "type": "str"},
        "is_deprecated": {"key": "isDeprecated", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        packaged_content: Optional[JSON] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        package_version: Optional[str] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.Kind"]] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        package_id: Optional[str] = None,
        package_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        package_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword packaged_content: The json of the ARM template to deploy.
        :paramtype packaged_content: JSON
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId of the package, contentId of the template, contentKind of the template and the
         contentVersion of the template.
        :paramtype content_product_id: str
        :keyword package_version: Version of the package.  Default and recommended format is numeric
         (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string,
         but then we cannot guarantee any version checks.
        :paramtype package_version: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword display_name: The display name of the template.
        :paramtype display_name: str
        :keyword content_kind: The kind of content the template is for. Known values are:
         "DataConnector", "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
         "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
         "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
         "AutomationRule".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the template - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        :keyword package_id: the package Id contains this template.
        :paramtype package_id: str
        :keyword package_kind: the packageKind of the package contains this template. Known values are:
         "Solution" and "Standalone".
        :paramtype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword package_name: the name of the package contains this template.
        :paramtype package_name: str
        """
        super().__init__(
            content_id=content_id,
            content_product_id=content_product_id,
            package_version=package_version,
            version=version,
            display_name=display_name,
            content_kind=content_kind,
            source=source,
            author=author,
            support=support,
            dependencies=dependencies,
            categories=categories,
            providers=providers,
            first_publish_date=first_publish_date,
            last_publish_date=last_publish_date,
            custom_version=custom_version,
            content_schema_version=content_schema_version,
            icon=icon,
            threat_analysis_tactics=threat_analysis_tactics,
            threat_analysis_techniques=threat_analysis_techniques,
            preview_images=preview_images,
            preview_images_dark=preview_images_dark,
            package_id=package_id,
            package_kind=package_kind,
            package_name=package_name,
            packaged_content=packaged_content,
            **kwargs
        )
        self.packaged_content = packaged_content
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.package_version = package_version
        self.version = version
        self.display_name = display_name
        self.content_kind = content_kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark
        self.package_id = package_id
        self.package_kind = package_kind
        self.package_name = package_name
        self.is_deprecated = None


class PropertyArrayChangedConditionProperties(AutomationRuleCondition):
    """Describes an automation rule condition that evaluates an array property's value change.

    All required parameters must be populated in order to send to server.

    :ivar condition_type: Required. Known values are: "Property", "PropertyArray",
     "PropertyChanged", "PropertyArrayChanged", and "Boolean".
    :vartype condition_type: str or ~azure.mgmt.securityinsight.models.ConditionType
    :ivar condition_properties:
    :vartype condition_properties:
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayChangedValuesCondition
    """

    _validation = {
        "condition_type": {"required": True},
    }

    _attribute_map = {
        "condition_type": {"key": "conditionType", "type": "str"},
        "condition_properties": {
            "key": "conditionProperties",
            "type": "AutomationRulePropertyArrayChangedValuesCondition",
        },
    }

    def __init__(
        self,
        *,
        condition_properties: Optional["_models.AutomationRulePropertyArrayChangedValuesCondition"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword condition_properties:
        :paramtype condition_properties:
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayChangedValuesCondition
        """
        super().__init__(**kwargs)
        self.condition_type: str = "PropertyArrayChanged"
        self.condition_properties = condition_properties


class PropertyArrayConditionProperties(AutomationRuleCondition):
    """Describes an automation rule condition that evaluates an array property's value.

    All required parameters must be populated in order to send to server.

    :ivar condition_type: Required. Known values are: "Property", "PropertyArray",
     "PropertyChanged", "PropertyArrayChanged", and "Boolean".
    :vartype condition_type: str or ~azure.mgmt.securityinsight.models.ConditionType
    :ivar condition_properties: Describes an automation rule condition on array properties.
    :vartype condition_properties:
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayValuesCondition
    """

    _validation = {
        "condition_type": {"required": True},
    }

    _attribute_map = {
        "condition_type": {"key": "conditionType", "type": "str"},
        "condition_properties": {"key": "conditionProperties", "type": "AutomationRulePropertyArrayValuesCondition"},
    }

    def __init__(
        self,
        *,
        condition_properties: Optional["_models.AutomationRulePropertyArrayValuesCondition"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword condition_properties: Describes an automation rule condition on array properties.
        :paramtype condition_properties:
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyArrayValuesCondition
        """
        super().__init__(**kwargs)
        self.condition_type: str = "PropertyArray"
        self.condition_properties = condition_properties


class PropertyChangedConditionProperties(AutomationRuleCondition):
    """Describes an automation rule condition that evaluates a property's value change.

    All required parameters must be populated in order to send to server.

    :ivar condition_type: Required. Known values are: "Property", "PropertyArray",
     "PropertyChanged", "PropertyArrayChanged", and "Boolean".
    :vartype condition_type: str or ~azure.mgmt.securityinsight.models.ConditionType
    :ivar condition_properties:
    :vartype condition_properties:
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyValuesChangedCondition
    """

    _validation = {
        "condition_type": {"required": True},
    }

    _attribute_map = {
        "condition_type": {"key": "conditionType", "type": "str"},
        "condition_properties": {"key": "conditionProperties", "type": "AutomationRulePropertyValuesChangedCondition"},
    }

    def __init__(
        self,
        *,
        condition_properties: Optional["_models.AutomationRulePropertyValuesChangedCondition"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword condition_properties:
        :paramtype condition_properties:
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyValuesChangedCondition
        """
        super().__init__(**kwargs)
        self.condition_type: str = "PropertyChanged"
        self.condition_properties = condition_properties


class PropertyConditionProperties(AutomationRuleCondition):
    """Describes an automation rule condition that evaluates a property's value.

    All required parameters must be populated in order to send to server.

    :ivar condition_type: Required. Known values are: "Property", "PropertyArray",
     "PropertyChanged", "PropertyArrayChanged", and "Boolean".
    :vartype condition_type: str or ~azure.mgmt.securityinsight.models.ConditionType
    :ivar condition_properties:
    :vartype condition_properties:
     ~azure.mgmt.securityinsight.models.AutomationRulePropertyValuesCondition
    """

    _validation = {
        "condition_type": {"required": True},
    }

    _attribute_map = {
        "condition_type": {"key": "conditionType", "type": "str"},
        "condition_properties": {"key": "conditionProperties", "type": "AutomationRulePropertyValuesCondition"},
    }

    def __init__(
        self, *, condition_properties: Optional["_models.AutomationRulePropertyValuesCondition"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword condition_properties:
        :paramtype condition_properties:
         ~azure.mgmt.securityinsight.models.AutomationRulePropertyValuesCondition
        """
        super().__init__(**kwargs)
        self.condition_type: str = "Property"
        self.condition_properties = condition_properties


class PullRequest(_serialization.Model):
    """Information regarding pull request for protected branches.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar url: URL of pull request.
    :vartype url: str
    :ivar state: State of the pull request. Known values are: "Open" and "Closed".
    :vartype state: str or ~azure.mgmt.securityinsight.models.State
    """

    _validation = {
        "url": {"readonly": True},
        "state": {"readonly": True},
    }

    _attribute_map = {
        "url": {"key": "url", "type": "str"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.url = None
        self.state = None


class RegistryKeyEntity(Entity):
    """Represents a registry key entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar hive: the hive that holds the registry key. Known values are: "HKEY_LOCAL_MACHINE",
     "HKEY_CLASSES_ROOT", "HKEY_CURRENT_CONFIG", "HKEY_USERS", "HKEY_CURRENT_USER_LOCAL_SETTINGS",
     "HKEY_PERFORMANCE_DATA", "HKEY_PERFORMANCE_NLSTEXT", "HKEY_PERFORMANCE_TEXT", "HKEY_A", and
     "HKEY_CURRENT_USER".
    :vartype hive: str or ~azure.mgmt.securityinsight.models.RegistryHive
    :ivar key: The registry key path.
    :vartype key: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "hive": {"readonly": True},
        "key": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "hive": {"key": "properties.hive", "type": "str"},
        "key": {"key": "properties.key", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "RegistryKey"
        self.additional_data = None
        self.friendly_name = None
        self.hive = None
        self.key = None


class RegistryKeyEntityProperties(EntityCommonProperties):
    """RegistryKey entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar hive: the hive that holds the registry key. Known values are: "HKEY_LOCAL_MACHINE",
     "HKEY_CLASSES_ROOT", "HKEY_CURRENT_CONFIG", "HKEY_USERS", "HKEY_CURRENT_USER_LOCAL_SETTINGS",
     "HKEY_PERFORMANCE_DATA", "HKEY_PERFORMANCE_NLSTEXT", "HKEY_PERFORMANCE_TEXT", "HKEY_A", and
     "HKEY_CURRENT_USER".
    :vartype hive: str or ~azure.mgmt.securityinsight.models.RegistryHive
    :ivar key: The registry key path.
    :vartype key: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "hive": {"readonly": True},
        "key": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "hive": {"key": "hive", "type": "str"},
        "key": {"key": "key", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.hive = None
        self.key = None


class RegistryValueEntity(Entity):
    """Represents a registry value entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar key_entity_id: The registry key entity id.
    :vartype key_entity_id: str
    :ivar value_data: String formatted representation of the value data.
    :vartype value_data: str
    :ivar value_name: The registry value name.
    :vartype value_name: str
    :ivar value_type: Specifies the data types to use when storing values in the registry, or
     identifies the data type of a value in the registry. Known values are: "None", "Unknown",
     "String", "ExpandString", "Binary", "DWord", "MultiString", and "QWord".
    :vartype value_type: str or ~azure.mgmt.securityinsight.models.RegistryValueKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "key_entity_id": {"readonly": True},
        "value_data": {"readonly": True},
        "value_name": {"readonly": True},
        "value_type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "key_entity_id": {"key": "properties.keyEntityId", "type": "str"},
        "value_data": {"key": "properties.valueData", "type": "str"},
        "value_name": {"key": "properties.valueName", "type": "str"},
        "value_type": {"key": "properties.valueType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "RegistryValue"
        self.additional_data = None
        self.friendly_name = None
        self.key_entity_id = None
        self.value_data = None
        self.value_name = None
        self.value_type = None


class RegistryValueEntityProperties(EntityCommonProperties):
    """RegistryValue entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar key_entity_id: The registry key entity id.
    :vartype key_entity_id: str
    :ivar value_data: String formatted representation of the value data.
    :vartype value_data: str
    :ivar value_name: The registry value name.
    :vartype value_name: str
    :ivar value_type: Specifies the data types to use when storing values in the registry, or
     identifies the data type of a value in the registry. Known values are: "None", "Unknown",
     "String", "ExpandString", "Binary", "DWord", "MultiString", and "QWord".
    :vartype value_type: str or ~azure.mgmt.securityinsight.models.RegistryValueKind
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "key_entity_id": {"readonly": True},
        "value_data": {"readonly": True},
        "value_name": {"readonly": True},
        "value_type": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "key_entity_id": {"key": "keyEntityId", "type": "str"},
        "value_data": {"key": "valueData", "type": "str"},
        "value_name": {"key": "valueName", "type": "str"},
        "value_type": {"key": "valueType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.key_entity_id = None
        self.value_data = None
        self.value_name = None
        self.value_type = None


class Relation(ResourceWithEtag):
    """Represents a relation between two resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar related_resource_id: The resource ID of the related resource.
    :vartype related_resource_id: str
    :ivar related_resource_name: The name of the related resource.
    :vartype related_resource_name: str
    :ivar related_resource_type: The resource type of the related resource.
    :vartype related_resource_type: str
    :ivar related_resource_kind: The resource kind of the related resource.
    :vartype related_resource_kind: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "related_resource_name": {"readonly": True},
        "related_resource_type": {"readonly": True},
        "related_resource_kind": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "related_resource_id": {"key": "properties.relatedResourceId", "type": "str"},
        "related_resource_name": {"key": "properties.relatedResourceName", "type": "str"},
        "related_resource_type": {"key": "properties.relatedResourceType", "type": "str"},
        "related_resource_kind": {"key": "properties.relatedResourceKind", "type": "str"},
    }

    def __init__(self, *, etag: Optional[str] = None, related_resource_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword related_resource_id: The resource ID of the related resource.
        :paramtype related_resource_id: str
        """
        super().__init__(etag=etag, **kwargs)
        self.related_resource_id = related_resource_id
        self.related_resource_name = None
        self.related_resource_type = None
        self.related_resource_kind = None


class RelationList(_serialization.Model):
    """List of relations.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of relations.
    :vartype next_link: str
    :ivar value: Array of relations. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.Relation]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Relation]"},
    }

    def __init__(self, *, value: List["_models.Relation"], **kwargs: Any) -> None:
        """
        :keyword value: Array of relations. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.Relation]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class Repo(_serialization.Model):
    """Represents a repository.

    :ivar url: The url to access the repository.
    :vartype url: str
    :ivar full_name: The name of the repository.
    :vartype full_name: str
    :ivar installation_id: The installation id of the repository.
    :vartype installation_id: int
    :ivar branches: Array of branches.
    :vartype branches: list[str]
    """

    _attribute_map = {
        "url": {"key": "url", "type": "str"},
        "full_name": {"key": "fullName", "type": "str"},
        "installation_id": {"key": "installationId", "type": "int"},
        "branches": {"key": "branches", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        url: Optional[str] = None,
        full_name: Optional[str] = None,
        installation_id: Optional[int] = None,
        branches: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword url: The url to access the repository.
        :paramtype url: str
        :keyword full_name: The name of the repository.
        :paramtype full_name: str
        :keyword installation_id: The installation id of the repository.
        :paramtype installation_id: int
        :keyword branches: Array of branches.
        :paramtype branches: list[str]
        """
        super().__init__(**kwargs)
        self.url = url
        self.full_name = full_name
        self.installation_id = installation_id
        self.branches = branches


class RepoList(_serialization.Model):
    """List all the source controls.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of repositories.
    :vartype next_link: str
    :ivar value: Array of repositories. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.Repo]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Repo]"},
    }

    def __init__(self, *, value: List["_models.Repo"], **kwargs: Any) -> None:
        """
        :keyword value: Array of repositories. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.Repo]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class Repository(_serialization.Model):
    """metadata of a repository.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar url: Url of repository. Required.
    :vartype url: str
    :ivar branch: Branch name of repository. Required.
    :vartype branch: str
    :ivar display_url: Display url of repository.
    :vartype display_url: str
    :ivar deployment_logs_url: Url to access repository action logs.
    :vartype deployment_logs_url: str
    """

    _validation = {
        "url": {"required": True},
        "branch": {"required": True},
        "deployment_logs_url": {"readonly": True},
    }

    _attribute_map = {
        "url": {"key": "url", "type": "str"},
        "branch": {"key": "branch", "type": "str"},
        "display_url": {"key": "displayUrl", "type": "str"},
        "deployment_logs_url": {"key": "deploymentLogsUrl", "type": "str"},
    }

    def __init__(self, *, url: str, branch: str, display_url: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword url: Url of repository. Required.
        :paramtype url: str
        :keyword branch: Branch name of repository. Required.
        :paramtype branch: str
        :keyword display_url: Display url of repository.
        :paramtype display_url: str
        """
        super().__init__(**kwargs)
        self.url = url
        self.branch = branch
        self.display_url = display_url
        self.deployment_logs_url = None


class RepositoryAccess(_serialization.Model):
    """Credentials to access repository.

    All required parameters must be populated in order to send to server.

    :ivar kind: The kind of repository access credentials. Required. Known values are: "OAuth",
     "PAT", and "App".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.RepositoryAccessKind
    :ivar code: OAuth Code. Required when ``kind`` is ``OAuth``.
    :vartype code: str
    :ivar state: OAuth State. Required when ``kind`` is ``OAuth``.
    :vartype state: str
    :ivar client_id: OAuth ClientId. Required when ``kind`` is ``OAuth``.
    :vartype client_id: str
    :ivar token: Personal Access Token. Required when ``kind`` is ``PAT``.
    :vartype token: str
    :ivar installation_id: Application installation ID. Required when ``kind`` is ``App``.
     Supported by ``GitHub`` only.
    :vartype installation_id: str
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "code": {"key": "code", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "token": {"key": "token", "type": "str"},
        "installation_id": {"key": "installationId", "type": "str"},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "_models.RepositoryAccessKind"],
        code: Optional[str] = None,
        state: Optional[str] = None,
        client_id: Optional[str] = None,
        token: Optional[str] = None,
        installation_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword kind: The kind of repository access credentials. Required. Known values are: "OAuth",
         "PAT", and "App".
        :paramtype kind: str or ~azure.mgmt.securityinsight.models.RepositoryAccessKind
        :keyword code: OAuth Code. Required when ``kind`` is ``OAuth``.
        :paramtype code: str
        :keyword state: OAuth State. Required when ``kind`` is ``OAuth``.
        :paramtype state: str
        :keyword client_id: OAuth ClientId. Required when ``kind`` is ``OAuth``.
        :paramtype client_id: str
        :keyword token: Personal Access Token. Required when ``kind`` is ``PAT``.
        :paramtype token: str
        :keyword installation_id: Application installation ID. Required when ``kind`` is ``App``.
         Supported by ``GitHub`` only.
        :paramtype installation_id: str
        """
        super().__init__(**kwargs)
        self.kind = kind
        self.code = code
        self.state = state
        self.client_id = client_id
        self.token = token
        self.installation_id = installation_id


class RepositoryAccessProperties(_serialization.Model):
    """Credentials to access repository.

    All required parameters must be populated in order to send to server.

    :ivar kind: The kind of repository access credentials. Required. Known values are: "OAuth",
     "PAT", and "App".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.RepositoryAccessKind
    :ivar code: OAuth Code. Required when ``kind`` is ``OAuth``.
    :vartype code: str
    :ivar state: OAuth State. Required when ``kind`` is ``OAuth``.
    :vartype state: str
    :ivar client_id: OAuth ClientId. Required when ``kind`` is ``OAuth``.
    :vartype client_id: str
    :ivar token: Personal Access Token. Required when ``kind`` is ``PAT``.
    :vartype token: str
    :ivar installation_id: Application installation ID. Required when ``kind`` is ``App``.
     Supported by ``GitHub`` only.
    :vartype installation_id: str
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "properties.repositoryAccess.kind", "type": "str"},
        "code": {"key": "properties.repositoryAccess.code", "type": "str"},
        "state": {"key": "properties.repositoryAccess.state", "type": "str"},
        "client_id": {"key": "properties.repositoryAccess.clientId", "type": "str"},
        "token": {"key": "properties.repositoryAccess.token", "type": "str"},
        "installation_id": {"key": "properties.repositoryAccess.installationId", "type": "str"},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "_models.RepositoryAccessKind"],
        code: Optional[str] = None,
        state: Optional[str] = None,
        client_id: Optional[str] = None,
        token: Optional[str] = None,
        installation_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword kind: The kind of repository access credentials. Required. Known values are: "OAuth",
         "PAT", and "App".
        :paramtype kind: str or ~azure.mgmt.securityinsight.models.RepositoryAccessKind
        :keyword code: OAuth Code. Required when ``kind`` is ``OAuth``.
        :paramtype code: str
        :keyword state: OAuth State. Required when ``kind`` is ``OAuth``.
        :paramtype state: str
        :keyword client_id: OAuth ClientId. Required when ``kind`` is ``OAuth``.
        :paramtype client_id: str
        :keyword token: Personal Access Token. Required when ``kind`` is ``PAT``.
        :paramtype token: str
        :keyword installation_id: Application installation ID. Required when ``kind`` is ``App``.
         Supported by ``GitHub`` only.
        :paramtype installation_id: str
        """
        super().__init__(**kwargs)
        self.kind = kind
        self.code = code
        self.state = state
        self.client_id = client_id
        self.token = token
        self.installation_id = installation_id


class RepositoryResourceInfo(_serialization.Model):
    """Resources created in user's repository for the source-control.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar webhook: The webhook object created for the source-control.
    :vartype webhook: ~azure.mgmt.securityinsight.models.Webhook
    :ivar git_hub_resource_info: Resources created in GitHub for this source-control.
    :vartype git_hub_resource_info: ~azure.mgmt.securityinsight.models.GitHubResourceInfo
    :ivar azure_dev_ops_resource_info: Resources created in Azure DevOps for this source-control.
    :vartype azure_dev_ops_resource_info:
     ~azure.mgmt.securityinsight.models.AzureDevOpsResourceInfo
    """

    _validation = {
        "git_hub_resource_info": {"readonly": True},
        "azure_dev_ops_resource_info": {"readonly": True},
    }

    _attribute_map = {
        "webhook": {"key": "webhook", "type": "Webhook"},
        "git_hub_resource_info": {"key": "gitHubResourceInfo", "type": "GitHubResourceInfo"},
        "azure_dev_ops_resource_info": {"key": "azureDevOpsResourceInfo", "type": "AzureDevOpsResourceInfo"},
    }

    def __init__(self, *, webhook: Optional["_models.Webhook"] = None, **kwargs: Any) -> None:
        """
        :keyword webhook: The webhook object created for the source-control.
        :paramtype webhook: ~azure.mgmt.securityinsight.models.Webhook
        """
        super().__init__(**kwargs)
        self.webhook = webhook
        self.git_hub_resource_info = None
        self.azure_dev_ops_resource_info = None


class ResourceProviderRequiredPermissions(_serialization.Model):
    """Required permissions for the connector resource provider that define in ResourceProviders.
    For more information about the permissions see :code:`<see
    href="https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format">here</see>`.

    :ivar read: Gets or sets a value indicating whether the permission is read action (GET).
    :vartype read: bool
    :ivar write: Gets or sets a value indicating whether the permission is write action (PUT or
     PATCH).
    :vartype write: bool
    :ivar delete: Gets or sets a value indicating whether the permission is delete action (DELETE).
    :vartype delete: bool
    :ivar action: Gets or sets a value indicating whether the permission is custom actions (POST).
    :vartype action: bool
    """

    _attribute_map = {
        "read": {"key": "read", "type": "bool"},
        "write": {"key": "write", "type": "bool"},
        "delete": {"key": "delete", "type": "bool"},
        "action": {"key": "action", "type": "bool"},
    }

    def __init__(
        self,
        *,
        read: Optional[bool] = None,
        write: Optional[bool] = None,
        delete: Optional[bool] = None,
        action: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword read: Gets or sets a value indicating whether the permission is read action (GET).
        :paramtype read: bool
        :keyword write: Gets or sets a value indicating whether the permission is write action (PUT or
         PATCH).
        :paramtype write: bool
        :keyword delete: Gets or sets a value indicating whether the permission is delete action
         (DELETE).
        :paramtype delete: bool
        :keyword action: Gets or sets a value indicating whether the permission is custom actions
         (POST).
        :paramtype action: bool
        """
        super().__init__(**kwargs)
        self.read = read
        self.write = write
        self.delete = delete
        self.action = action


class RestApiPollerDataConnector(DataConnector):
    """Represents Rest Api Poller data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar connector_definition_name: The connector definition name (the dataConnectorDefinition
     resource id).
    :vartype connector_definition_name: str
    :ivar auth: The a authentication model.
    :vartype auth: ~azure.mgmt.securityinsight.models.CcpAuthConfig
    :ivar request: The request configuration.
    :vartype request: ~azure.mgmt.securityinsight.models.RestApiPollerRequestConfig
    :ivar dcr_config: The DCR related properties.
    :vartype dcr_config: ~azure.mgmt.securityinsight.models.DCRConfiguration
    :ivar is_active: Indicates whether the connector is active or not.
    :vartype is_active: bool
    :ivar data_type: The Log Analytics table destination.
    :vartype data_type: str
    :ivar response: The response configuration.
    :vartype response: ~azure.mgmt.securityinsight.models.CcpResponseConfig
    :ivar paging: The paging configuration.
    :vartype paging: ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingConfig
    :ivar add_on_attributes: The add on attributes. The key name will become attribute name (a
     column) and the value will become the attribute value in the payload.
    :vartype add_on_attributes: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "connector_definition_name": {"key": "properties.connectorDefinitionName", "type": "str"},
        "auth": {"key": "properties.auth", "type": "CcpAuthConfig"},
        "request": {"key": "properties.request", "type": "RestApiPollerRequestConfig"},
        "dcr_config": {"key": "properties.dcrConfig", "type": "DCRConfiguration"},
        "is_active": {"key": "properties.isActive", "type": "bool"},
        "data_type": {"key": "properties.dataType", "type": "str"},
        "response": {"key": "properties.response", "type": "CcpResponseConfig"},
        "paging": {"key": "properties.paging", "type": "RestApiPollerRequestPagingConfig"},
        "add_on_attributes": {"key": "properties.addOnAttributes", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        connector_definition_name: Optional[str] = None,
        auth: Optional["_models.CcpAuthConfig"] = None,
        request: Optional["_models.RestApiPollerRequestConfig"] = None,
        dcr_config: Optional["_models.DCRConfiguration"] = None,
        is_active: Optional[bool] = None,
        data_type: Optional[str] = None,
        response: Optional["_models.CcpResponseConfig"] = None,
        paging: Optional["_models.RestApiPollerRequestPagingConfig"] = None,
        add_on_attributes: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword connector_definition_name: The connector definition name (the dataConnectorDefinition
         resource id).
        :paramtype connector_definition_name: str
        :keyword auth: The a authentication model.
        :paramtype auth: ~azure.mgmt.securityinsight.models.CcpAuthConfig
        :keyword request: The request configuration.
        :paramtype request: ~azure.mgmt.securityinsight.models.RestApiPollerRequestConfig
        :keyword dcr_config: The DCR related properties.
        :paramtype dcr_config: ~azure.mgmt.securityinsight.models.DCRConfiguration
        :keyword is_active: Indicates whether the connector is active or not.
        :paramtype is_active: bool
        :keyword data_type: The Log Analytics table destination.
        :paramtype data_type: str
        :keyword response: The response configuration.
        :paramtype response: ~azure.mgmt.securityinsight.models.CcpResponseConfig
        :keyword paging: The paging configuration.
        :paramtype paging: ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingConfig
        :keyword add_on_attributes: The add on attributes. The key name will become attribute name (a
         column) and the value will become the attribute value in the payload.
        :paramtype add_on_attributes: dict[str, str]
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "RestApiPoller"
        self.connector_definition_name = connector_definition_name
        self.auth = auth
        self.request = request
        self.dcr_config = dcr_config
        self.is_active = is_active
        self.data_type = data_type
        self.response = response
        self.paging = paging
        self.add_on_attributes = add_on_attributes


class RestApiPollerRequestConfig(_serialization.Model):
    """The request configuration.

    All required parameters must be populated in order to send to server.

    :ivar api_endpoint: The API endpoint. Required.
    :vartype api_endpoint: str
    :ivar rate_limit_qps: The Rate limit queries per second for the request..
    :vartype rate_limit_qps: int
    :ivar query_window_in_min: The query window in minutes for the request.
    :vartype query_window_in_min: int
    :ivar http_method: The HTTP method, default value GET. Known values are: "GET", "POST", "PUT",
     and "DELETE".
    :vartype http_method: str or ~azure.mgmt.securityinsight.models.HttpMethodVerb
    :ivar query_time_format: The query time format. A remote server can have a query to pull data
     from range 'start' to 'end'. This property indicate what is the expected time format the remote
     server know to parse.
    :vartype query_time_format: str
    :ivar retry_count: The retry count.
    :vartype retry_count: int
    :ivar timeout_in_seconds: The timeout in seconds.
    :vartype timeout_in_seconds: int
    :ivar is_post_payload_json: Flag to indicate if HTTP POST payload is in JSON format (vs
     form-urlencoded).
    :vartype is_post_payload_json: bool
    :ivar headers: The header for the request for the remote server.
    :vartype headers: dict[str, str]
    :ivar query_parameters: The HTTP query parameters to RESTful API.
    :vartype query_parameters: dict[str, any]
    :ivar query_parameters_template: the query parameters template. Defines the query parameters
     template to use when passing query parameters in advanced scenarios.
    :vartype query_parameters_template: str
    :ivar start_time_attribute_name: The query parameter name which the remote server expect to
     start query. This property goes hand to hand with ``endTimeAttributeName``.
    :vartype start_time_attribute_name: str
    :ivar end_time_attribute_name: The query parameter name which the remote server expect to end
     query. This property goes hand to hand with ``startTimeAttributeName``.
    :vartype end_time_attribute_name: str
    :ivar query_time_interval_attribute_name: The query parameter name which we need to send the
     server for query logs in time interval. Should be defined with ``queryTimeIntervalPrepend`` and
     ``queryTimeIntervalDelimiter``.
    :vartype query_time_interval_attribute_name: str
    :ivar query_time_interval_prepend: The string prepend to the value of the query parameter in
     ``queryTimeIntervalAttributeName``.
    :vartype query_time_interval_prepend: str
    :ivar query_time_interval_delimiter: The delimiter string between 2 QueryTimeFormat in the
     query parameter ``queryTimeIntervalAttributeName``.
    :vartype query_time_interval_delimiter: str
    """

    _validation = {
        "api_endpoint": {"required": True},
    }

    _attribute_map = {
        "api_endpoint": {"key": "apiEndpoint", "type": "str"},
        "rate_limit_qps": {"key": "rateLimitQPS", "type": "int"},
        "query_window_in_min": {"key": "queryWindowInMin", "type": "int"},
        "http_method": {"key": "httpMethod", "type": "str"},
        "query_time_format": {"key": "queryTimeFormat", "type": "str"},
        "retry_count": {"key": "retryCount", "type": "int"},
        "timeout_in_seconds": {"key": "timeoutInSeconds", "type": "int"},
        "is_post_payload_json": {"key": "isPostPayloadJson", "type": "bool"},
        "headers": {"key": "headers", "type": "{str}"},
        "query_parameters": {"key": "queryParameters", "type": "{object}"},
        "query_parameters_template": {"key": "queryParametersTemplate", "type": "str"},
        "start_time_attribute_name": {"key": "startTimeAttributeName", "type": "str"},
        "end_time_attribute_name": {"key": "endTimeAttributeName", "type": "str"},
        "query_time_interval_attribute_name": {"key": "queryTimeIntervalAttributeName", "type": "str"},
        "query_time_interval_prepend": {"key": "queryTimeIntervalPrepend", "type": "str"},
        "query_time_interval_delimiter": {"key": "queryTimeIntervalDelimiter", "type": "str"},
    }

    def __init__(
        self,
        *,
        api_endpoint: str,
        rate_limit_qps: Optional[int] = None,
        query_window_in_min: Optional[int] = None,
        http_method: Optional[Union[str, "_models.HttpMethodVerb"]] = None,
        query_time_format: Optional[str] = None,
        retry_count: Optional[int] = None,
        timeout_in_seconds: Optional[int] = None,
        is_post_payload_json: Optional[bool] = None,
        headers: Optional[Dict[str, str]] = None,
        query_parameters: Optional[Dict[str, Any]] = None,
        query_parameters_template: Optional[str] = None,
        start_time_attribute_name: Optional[str] = None,
        end_time_attribute_name: Optional[str] = None,
        query_time_interval_attribute_name: Optional[str] = None,
        query_time_interval_prepend: Optional[str] = None,
        query_time_interval_delimiter: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword api_endpoint: The API endpoint. Required.
        :paramtype api_endpoint: str
        :keyword rate_limit_qps: The Rate limit queries per second for the request..
        :paramtype rate_limit_qps: int
        :keyword query_window_in_min: The query window in minutes for the request.
        :paramtype query_window_in_min: int
        :keyword http_method: The HTTP method, default value GET. Known values are: "GET", "POST",
         "PUT", and "DELETE".
        :paramtype http_method: str or ~azure.mgmt.securityinsight.models.HttpMethodVerb
        :keyword query_time_format: The query time format. A remote server can have a query to pull
         data from range 'start' to 'end'. This property indicate what is the expected time format the
         remote server know to parse.
        :paramtype query_time_format: str
        :keyword retry_count: The retry count.
        :paramtype retry_count: int
        :keyword timeout_in_seconds: The timeout in seconds.
        :paramtype timeout_in_seconds: int
        :keyword is_post_payload_json: Flag to indicate if HTTP POST payload is in JSON format (vs
         form-urlencoded).
        :paramtype is_post_payload_json: bool
        :keyword headers: The header for the request for the remote server.
        :paramtype headers: dict[str, str]
        :keyword query_parameters: The HTTP query parameters to RESTful API.
        :paramtype query_parameters: dict[str, any]
        :keyword query_parameters_template: the query parameters template. Defines the query parameters
         template to use when passing query parameters in advanced scenarios.
        :paramtype query_parameters_template: str
        :keyword start_time_attribute_name: The query parameter name which the remote server expect to
         start query. This property goes hand to hand with ``endTimeAttributeName``.
        :paramtype start_time_attribute_name: str
        :keyword end_time_attribute_name: The query parameter name which the remote server expect to
         end query. This property goes hand to hand with ``startTimeAttributeName``.
        :paramtype end_time_attribute_name: str
        :keyword query_time_interval_attribute_name: The query parameter name which we need to send the
         server for query logs in time interval. Should be defined with ``queryTimeIntervalPrepend`` and
         ``queryTimeIntervalDelimiter``.
        :paramtype query_time_interval_attribute_name: str
        :keyword query_time_interval_prepend: The string prepend to the value of the query parameter in
         ``queryTimeIntervalAttributeName``.
        :paramtype query_time_interval_prepend: str
        :keyword query_time_interval_delimiter: The delimiter string between 2 QueryTimeFormat in the
         query parameter ``queryTimeIntervalAttributeName``.
        :paramtype query_time_interval_delimiter: str
        """
        super().__init__(**kwargs)
        self.api_endpoint = api_endpoint
        self.rate_limit_qps = rate_limit_qps
        self.query_window_in_min = query_window_in_min
        self.http_method = http_method
        self.query_time_format = query_time_format
        self.retry_count = retry_count
        self.timeout_in_seconds = timeout_in_seconds
        self.is_post_payload_json = is_post_payload_json
        self.headers = headers
        self.query_parameters = query_parameters
        self.query_parameters_template = query_parameters_template
        self.start_time_attribute_name = start_time_attribute_name
        self.end_time_attribute_name = end_time_attribute_name
        self.query_time_interval_attribute_name = query_time_interval_attribute_name
        self.query_time_interval_prepend = query_time_interval_prepend
        self.query_time_interval_delimiter = query_time_interval_delimiter


class RestApiPollerRequestPagingConfig(_serialization.Model):
    """The request paging configuration.

    All required parameters must be populated in order to send to server.

    :ivar paging_type: Type of paging. Required. Known values are: "LinkHeader", "NextPageToken",
     "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and "CountBasedPaging".
    :vartype paging_type: str or ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar page_size_parameter_name: Page size parameter name.
    :vartype page_size_parameter_name: str
    """

    _validation = {
        "paging_type": {"required": True},
    }

    _attribute_map = {
        "paging_type": {"key": "pagingType", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "page_size_parameter_name": {"key": "pageSizeParameterName", "type": "str"},
    }

    def __init__(
        self,
        *,
        paging_type: Union[str, "_models.RestApiPollerRequestPagingKind"],
        page_size: Optional[int] = None,
        page_size_parameter_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword paging_type: Type of paging. Required. Known values are: "LinkHeader",
         "NextPageToken", "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and
         "CountBasedPaging".
        :paramtype paging_type: str or
         ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword page_size_parameter_name: Page size parameter name.
        :paramtype page_size_parameter_name: str
        """
        super().__init__(**kwargs)
        self.paging_type = paging_type
        self.page_size = page_size
        self.page_size_parameter_name = page_size_parameter_name


class RestApiPollerRequestPagingCountBaseConfig(RestApiPollerRequestPagingConfig):  # pylint: disable=name-too-long
    """The request paging configuration for Count base paging type parameters.

    All required parameters must be populated in order to send to server.

    :ivar paging_type: Type of paging. Required. Known values are: "LinkHeader", "NextPageToken",
     "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and "CountBasedPaging".
    :vartype paging_type: str or ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar page_size_parameter_name: Page size parameter name.
    :vartype page_size_parameter_name: str
    :ivar zero_based_indexing: Indicates whether the count is zero based.
    :vartype zero_based_indexing: bool
    :ivar page_count_json_path: JSON path of page count in HTTP response payload.
    :vartype page_count_json_path: str
    :ivar page_number_para_name: Parameter name of page number in HTTP request.
    :vartype page_number_para_name: str
    :ivar page_number_json_path: JSON path of page number in HTTP response payload.
    :vartype page_number_json_path: str
    :ivar total_results_json_path: JSON path of total number of results in HTTP response payload.
    :vartype total_results_json_path: str
    """

    _validation = {
        "paging_type": {"required": True},
    }

    _attribute_map = {
        "paging_type": {"key": "pagingType", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "page_size_parameter_name": {"key": "pageSizeParameterName", "type": "str"},
        "zero_based_indexing": {"key": "zeroBasedIndexing", "type": "bool"},
        "page_count_json_path": {"key": "pageCountJsonPath", "type": "str"},
        "page_number_para_name": {"key": "pageNumberParaName", "type": "str"},
        "page_number_json_path": {"key": "pageNumberJsonPath", "type": "str"},
        "total_results_json_path": {"key": "totalResultsJsonPath", "type": "str"},
    }

    def __init__(
        self,
        *,
        paging_type: Union[str, "_models.RestApiPollerRequestPagingKind"],
        page_size: Optional[int] = None,
        page_size_parameter_name: Optional[str] = None,
        zero_based_indexing: Optional[bool] = None,
        page_count_json_path: Optional[str] = None,
        page_number_para_name: Optional[str] = None,
        page_number_json_path: Optional[str] = None,
        total_results_json_path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword paging_type: Type of paging. Required. Known values are: "LinkHeader",
         "NextPageToken", "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and
         "CountBasedPaging".
        :paramtype paging_type: str or
         ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword page_size_parameter_name: Page size parameter name.
        :paramtype page_size_parameter_name: str
        :keyword zero_based_indexing: Indicates whether the count is zero based.
        :paramtype zero_based_indexing: bool
        :keyword page_count_json_path: JSON path of page count in HTTP response payload.
        :paramtype page_count_json_path: str
        :keyword page_number_para_name: Parameter name of page number in HTTP request.
        :paramtype page_number_para_name: str
        :keyword page_number_json_path: JSON path of page number in HTTP response payload.
        :paramtype page_number_json_path: str
        :keyword total_results_json_path: JSON path of total number of results in HTTP response
         payload.
        :paramtype total_results_json_path: str
        """
        super().__init__(
            paging_type=paging_type, page_size=page_size, page_size_parameter_name=page_size_parameter_name, **kwargs
        )
        self.zero_based_indexing = zero_based_indexing
        self.page_count_json_path = page_count_json_path
        self.page_number_para_name = page_number_para_name
        self.page_number_json_path = page_number_json_path
        self.total_results_json_path = total_results_json_path


class RestApiPollerRequestPagingLinkHeaderConfig(RestApiPollerRequestPagingConfig):  # pylint: disable=name-too-long
    """The request paging configuration for LinkHeader and PersistentLinkHeader paging type
    parameters.

    All required parameters must be populated in order to send to server.

    :ivar paging_type: Type of paging. Required. Known values are: "LinkHeader", "NextPageToken",
     "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and "CountBasedPaging".
    :vartype paging_type: str or ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar page_size_parameter_name: Page size parameter name.
    :vartype page_size_parameter_name: str
    :ivar link_header_token_json_path: JSON path of link header token in HTTP response payload.
    :vartype link_header_token_json_path: str
    :ivar link_header_rel_link_name: Rel link name from the link header.
    :vartype link_header_rel_link_name: str
    """

    _validation = {
        "paging_type": {"required": True},
    }

    _attribute_map = {
        "paging_type": {"key": "pagingType", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "page_size_parameter_name": {"key": "pageSizeParameterName", "type": "str"},
        "link_header_token_json_path": {"key": "linkHeaderTokenJsonPath", "type": "str"},
        "link_header_rel_link_name": {"key": "linkHeaderRelLinkName", "type": "str"},
    }

    def __init__(
        self,
        *,
        paging_type: Union[str, "_models.RestApiPollerRequestPagingKind"],
        page_size: Optional[int] = None,
        page_size_parameter_name: Optional[str] = None,
        link_header_token_json_path: Optional[str] = None,
        link_header_rel_link_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword paging_type: Type of paging. Required. Known values are: "LinkHeader",
         "NextPageToken", "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and
         "CountBasedPaging".
        :paramtype paging_type: str or
         ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword page_size_parameter_name: Page size parameter name.
        :paramtype page_size_parameter_name: str
        :keyword link_header_token_json_path: JSON path of link header token in HTTP response payload.
        :paramtype link_header_token_json_path: str
        :keyword link_header_rel_link_name: Rel link name from the link header.
        :paramtype link_header_rel_link_name: str
        """
        super().__init__(
            paging_type=paging_type, page_size=page_size, page_size_parameter_name=page_size_parameter_name, **kwargs
        )
        self.link_header_token_json_path = link_header_token_json_path
        self.link_header_rel_link_name = link_header_rel_link_name


class RestApiPollerRequestPagingNextPageUrlConfig(RestApiPollerRequestPagingConfig):  # pylint: disable=name-too-long
    """The request paging configuration for NextPageUrl paging type parameters.

    All required parameters must be populated in order to send to server.

    :ivar paging_type: Type of paging. Required. Known values are: "LinkHeader", "NextPageToken",
     "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and "CountBasedPaging".
    :vartype paging_type: str or ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar page_size_parameter_name: Page size parameter name.
    :vartype page_size_parameter_name: str
    :ivar next_page_url: Next page URL.
    :vartype next_page_url: str
    :ivar next_page_url_query_parameters: Query parameters of next page URL.
    :vartype next_page_url_query_parameters: dict[str, str]
    :ivar next_page_url_query_parameters_template: Paging query parameters in string template
     format.
    :vartype next_page_url_query_parameters_template: str
    :ivar next_page_para_name: Next page parameter name in HTTP request.
    :vartype next_page_para_name: str
    :ivar next_page_request_header: Next page header name in the request.
    :vartype next_page_request_header: str
    :ivar has_next_flag_json_path: JSON path of flag in HTTP response payload to indicate more
     pages.
    :vartype has_next_flag_json_path: str
    """

    _validation = {
        "paging_type": {"required": True},
    }

    _attribute_map = {
        "paging_type": {"key": "pagingType", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "page_size_parameter_name": {"key": "pageSizeParameterName", "type": "str"},
        "next_page_url": {"key": "nextPageUrl", "type": "str"},
        "next_page_url_query_parameters": {"key": "nextPageUrlQueryParameters", "type": "{str}"},
        "next_page_url_query_parameters_template": {"key": "nextPageUrlQueryParametersTemplate", "type": "str"},
        "next_page_para_name": {"key": "nextPageParaName", "type": "str"},
        "next_page_request_header": {"key": "nextPageRequestHeader", "type": "str"},
        "has_next_flag_json_path": {"key": "hasNextFlagJsonPath", "type": "str"},
    }

    def __init__(
        self,
        *,
        paging_type: Union[str, "_models.RestApiPollerRequestPagingKind"],
        page_size: Optional[int] = None,
        page_size_parameter_name: Optional[str] = None,
        next_page_url: Optional[str] = None,
        next_page_url_query_parameters: Optional[Dict[str, str]] = None,
        next_page_url_query_parameters_template: Optional[str] = None,
        next_page_para_name: Optional[str] = None,
        next_page_request_header: Optional[str] = None,
        has_next_flag_json_path: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword paging_type: Type of paging. Required. Known values are: "LinkHeader",
         "NextPageToken", "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and
         "CountBasedPaging".
        :paramtype paging_type: str or
         ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword page_size_parameter_name: Page size parameter name.
        :paramtype page_size_parameter_name: str
        :keyword next_page_url: Next page URL.
        :paramtype next_page_url: str
        :keyword next_page_url_query_parameters: Query parameters of next page URL.
        :paramtype next_page_url_query_parameters: dict[str, str]
        :keyword next_page_url_query_parameters_template: Paging query parameters in string template
         format.
        :paramtype next_page_url_query_parameters_template: str
        :keyword next_page_para_name: Next page parameter name in HTTP request.
        :paramtype next_page_para_name: str
        :keyword next_page_request_header: Next page header name in the request.
        :paramtype next_page_request_header: str
        :keyword has_next_flag_json_path: JSON path of flag in HTTP response payload to indicate more
         pages.
        :paramtype has_next_flag_json_path: str
        """
        super().__init__(
            paging_type=paging_type, page_size=page_size, page_size_parameter_name=page_size_parameter_name, **kwargs
        )
        self.next_page_url = next_page_url
        self.next_page_url_query_parameters = next_page_url_query_parameters
        self.next_page_url_query_parameters_template = next_page_url_query_parameters_template
        self.next_page_para_name = next_page_para_name
        self.next_page_request_header = next_page_request_header
        self.has_next_flag_json_path = has_next_flag_json_path


class RestApiPollerRequestPagingOffsetConfig(RestApiPollerRequestPagingConfig):
    """The request paging configuration for Offset paging type parameters.

    All required parameters must be populated in order to send to server.

    :ivar paging_type: Type of paging. Required. Known values are: "LinkHeader", "NextPageToken",
     "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and "CountBasedPaging".
    :vartype paging_type: str or ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar page_size_parameter_name: Page size parameter name.
    :vartype page_size_parameter_name: str
    :ivar offset_para_name: Offset parameter name in HTTP request.
    :vartype offset_para_name: str
    """

    _validation = {
        "paging_type": {"required": True},
    }

    _attribute_map = {
        "paging_type": {"key": "pagingType", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "page_size_parameter_name": {"key": "pageSizeParameterName", "type": "str"},
        "offset_para_name": {"key": "offsetParaName", "type": "str"},
    }

    def __init__(
        self,
        *,
        paging_type: Union[str, "_models.RestApiPollerRequestPagingKind"],
        page_size: Optional[int] = None,
        page_size_parameter_name: Optional[str] = None,
        offset_para_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword paging_type: Type of paging. Required. Known values are: "LinkHeader",
         "NextPageToken", "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and
         "CountBasedPaging".
        :paramtype paging_type: str or
         ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword page_size_parameter_name: Page size parameter name.
        :paramtype page_size_parameter_name: str
        :keyword offset_para_name: Offset parameter name in HTTP request.
        :paramtype offset_para_name: str
        """
        super().__init__(
            paging_type=paging_type, page_size=page_size, page_size_parameter_name=page_size_parameter_name, **kwargs
        )
        self.offset_para_name = offset_para_name


class RestApiPollerRequestPagingTokenConfig(RestApiPollerRequestPagingConfig):
    """The request paging configuration for NextPageToken and PersistentToken paging type parameters.

    All required parameters must be populated in order to send to server.

    :ivar paging_type: Type of paging. Required. Known values are: "LinkHeader", "NextPageToken",
     "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and "CountBasedPaging".
    :vartype paging_type: str or ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar page_size_parameter_name: Page size parameter name.
    :vartype page_size_parameter_name: str
    :ivar next_page_token_json_path: JSON path of next page token in HTTP response payload.
    :vartype next_page_token_json_path: str
    :ivar has_next_flag_json_path: JSON path of flag in HTTP response payload to indicate more
     pages.
    :vartype has_next_flag_json_path: str
    :ivar next_page_token_response_header: HTTP response header name of next page token.
    :vartype next_page_token_response_header: str
    :ivar next_page_para_name: Next page parameter name in HTTP request.
    :vartype next_page_para_name: str
    :ivar next_page_request_header: Next page header name in the request.
    :vartype next_page_request_header: str
    """

    _validation = {
        "paging_type": {"required": True},
    }

    _attribute_map = {
        "paging_type": {"key": "pagingType", "type": "str"},
        "page_size": {"key": "pageSize", "type": "int"},
        "page_size_parameter_name": {"key": "pageSizeParameterName", "type": "str"},
        "next_page_token_json_path": {"key": "nextPageTokenJsonPath", "type": "str"},
        "has_next_flag_json_path": {"key": "hasNextFlagJsonPath", "type": "str"},
        "next_page_token_response_header": {"key": "nextPageTokenResponseHeader", "type": "str"},
        "next_page_para_name": {"key": "nextPageParaName", "type": "str"},
        "next_page_request_header": {"key": "nextPageRequestHeader", "type": "str"},
    }

    def __init__(
        self,
        *,
        paging_type: Union[str, "_models.RestApiPollerRequestPagingKind"],
        page_size: Optional[int] = None,
        page_size_parameter_name: Optional[str] = None,
        next_page_token_json_path: Optional[str] = None,
        has_next_flag_json_path: Optional[str] = None,
        next_page_token_response_header: Optional[str] = None,
        next_page_para_name: Optional[str] = None,
        next_page_request_header: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword paging_type: Type of paging. Required. Known values are: "LinkHeader",
         "NextPageToken", "NextPageUrl", "PersistentToken", "PersistentLinkHeader", "Offset", and
         "CountBasedPaging".
        :paramtype paging_type: str or
         ~azure.mgmt.securityinsight.models.RestApiPollerRequestPagingKind
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword page_size_parameter_name: Page size parameter name.
        :paramtype page_size_parameter_name: str
        :keyword next_page_token_json_path: JSON path of next page token in HTTP response payload.
        :paramtype next_page_token_json_path: str
        :keyword has_next_flag_json_path: JSON path of flag in HTTP response payload to indicate more
         pages.
        :paramtype has_next_flag_json_path: str
        :keyword next_page_token_response_header: HTTP response header name of next page token.
        :paramtype next_page_token_response_header: str
        :keyword next_page_para_name: Next page parameter name in HTTP request.
        :paramtype next_page_para_name: str
        :keyword next_page_request_header: Next page header name in the request.
        :paramtype next_page_request_header: str
        """
        super().__init__(
            paging_type=paging_type, page_size=page_size, page_size_parameter_name=page_size_parameter_name, **kwargs
        )
        self.next_page_token_json_path = next_page_token_json_path
        self.has_next_flag_json_path = has_next_flag_json_path
        self.next_page_token_response_header = next_page_token_response_header
        self.next_page_para_name = next_page_para_name
        self.next_page_request_header = next_page_request_header


class ScheduledAlertRule(AlertRule):
    """Represents scheduled alert rule.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    :ivar query: The query that creates alerts for this rule.
    :vartype query: str
    :ivar query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to run.
    :vartype query_frequency: ~datetime.timedelta
    :ivar query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
    :vartype query_period: ~datetime.timedelta
    :ivar severity: The severity for alerts created by this alert rule. Known values are: "High",
     "Medium", "Low", and "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar trigger_operator: The operation against the threshold that triggers alert rule. Known
     values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
    :vartype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
    :ivar trigger_threshold: The threshold triggers this alert rule.
    :vartype trigger_threshold: int
    :ivar event_grouping_settings: The event grouping settings.
    :vartype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
    :ivar custom_details: Dictionary of string key-value pairs of columns to be attached to the
     alert.
    :vartype custom_details: dict[str, str]
    :ivar entity_mappings: Array of the entity mappings of the alert rule.
    :vartype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
    :ivar alert_details_override: The alert details override settings.
    :vartype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
    :ivar alert_rule_template_name: The Name of the alert rule template used to create this rule.
    :vartype alert_rule_template_name: str
    :ivar template_version: The version of the alert rule template used to create this rule - in
     format <a.b.c>, where all are numbers, for example 0 <1.0.2>.
    :vartype template_version: str
    :ivar description: The description of the alert rule.
    :vartype description: str
    :ivar display_name: The display name for alerts created by this alert rule.
    :vartype display_name: str
    :ivar enabled: Determines whether this alert rule is enabled or disabled.
    :vartype enabled: bool
    :ivar last_modified_utc: The last time that this alert rule has been modified.
    :vartype last_modified_utc: ~datetime.datetime
    :ivar suppression_duration: The suppression (in ISO 8601 duration format) to wait since last
     time this alert rule been triggered.
    :vartype suppression_duration: ~datetime.timedelta
    :ivar suppression_enabled: Determines whether the suppression for this alert rule is enabled or
     disabled.
    :vartype suppression_enabled: bool
    :ivar tactics: The tactics of the alert rule.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar techniques: The techniques of the alert rule.
    :vartype techniques: list[str]
    :ivar incident_configuration: The settings of the incidents that created from alerts triggered
     by this analytics rule.
    :vartype incident_configuration: ~azure.mgmt.securityinsight.models.IncidentConfiguration
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "last_modified_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "query": {"key": "properties.query", "type": "str"},
        "query_frequency": {"key": "properties.queryFrequency", "type": "duration"},
        "query_period": {"key": "properties.queryPeriod", "type": "duration"},
        "severity": {"key": "properties.severity", "type": "str"},
        "trigger_operator": {"key": "properties.triggerOperator", "type": "str"},
        "trigger_threshold": {"key": "properties.triggerThreshold", "type": "int"},
        "event_grouping_settings": {"key": "properties.eventGroupingSettings", "type": "EventGroupingSettings"},
        "custom_details": {"key": "properties.customDetails", "type": "{str}"},
        "entity_mappings": {"key": "properties.entityMappings", "type": "[EntityMapping]"},
        "alert_details_override": {"key": "properties.alertDetailsOverride", "type": "AlertDetailsOverride"},
        "alert_rule_template_name": {"key": "properties.alertRuleTemplateName", "type": "str"},
        "template_version": {"key": "properties.templateVersion", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "last_modified_utc": {"key": "properties.lastModifiedUtc", "type": "iso-8601"},
        "suppression_duration": {"key": "properties.suppressionDuration", "type": "duration"},
        "suppression_enabled": {"key": "properties.suppressionEnabled", "type": "bool"},
        "tactics": {"key": "properties.tactics", "type": "[str]"},
        "techniques": {"key": "properties.techniques", "type": "[str]"},
        "incident_configuration": {"key": "properties.incidentConfiguration", "type": "IncidentConfiguration"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        query: Optional[str] = None,
        query_frequency: Optional[datetime.timedelta] = None,
        query_period: Optional[datetime.timedelta] = None,
        severity: Optional[Union[str, "_models.AlertSeverity"]] = None,
        trigger_operator: Optional[Union[str, "_models.TriggerOperator"]] = None,
        trigger_threshold: Optional[int] = None,
        event_grouping_settings: Optional["_models.EventGroupingSettings"] = None,
        custom_details: Optional[Dict[str, str]] = None,
        entity_mappings: Optional[List["_models.EntityMapping"]] = None,
        alert_details_override: Optional["_models.AlertDetailsOverride"] = None,
        alert_rule_template_name: Optional[str] = None,
        template_version: Optional[str] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        enabled: Optional[bool] = None,
        suppression_duration: Optional[datetime.timedelta] = None,
        suppression_enabled: Optional[bool] = None,
        tactics: Optional[List[Union[str, "_models.AttackTactic"]]] = None,
        techniques: Optional[List[str]] = None,
        incident_configuration: Optional["_models.IncidentConfiguration"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword query: The query that creates alerts for this rule.
        :paramtype query: str
        :keyword query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to
         run.
        :paramtype query_frequency: ~datetime.timedelta
        :keyword query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
        :paramtype query_period: ~datetime.timedelta
        :keyword severity: The severity for alerts created by this alert rule. Known values are:
         "High", "Medium", "Low", and "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        :keyword trigger_operator: The operation against the threshold that triggers alert rule. Known
         values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
        :paramtype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
        :keyword trigger_threshold: The threshold triggers this alert rule.
        :paramtype trigger_threshold: int
        :keyword event_grouping_settings: The event grouping settings.
        :paramtype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
        :keyword custom_details: Dictionary of string key-value pairs of columns to be attached to the
         alert.
        :paramtype custom_details: dict[str, str]
        :keyword entity_mappings: Array of the entity mappings of the alert rule.
        :paramtype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
        :keyword alert_details_override: The alert details override settings.
        :paramtype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
        :keyword alert_rule_template_name: The Name of the alert rule template used to create this
         rule.
        :paramtype alert_rule_template_name: str
        :keyword template_version: The version of the alert rule template used to create this rule - in
         format <a.b.c>, where all are numbers, for example 0 <1.0.2>.
        :paramtype template_version: str
        :keyword description: The description of the alert rule.
        :paramtype description: str
        :keyword display_name: The display name for alerts created by this alert rule.
        :paramtype display_name: str
        :keyword enabled: Determines whether this alert rule is enabled or disabled.
        :paramtype enabled: bool
        :keyword suppression_duration: The suppression (in ISO 8601 duration format) to wait since last
         time this alert rule been triggered.
        :paramtype suppression_duration: ~datetime.timedelta
        :keyword suppression_enabled: Determines whether the suppression for this alert rule is enabled
         or disabled.
        :paramtype suppression_enabled: bool
        :keyword tactics: The tactics of the alert rule.
        :paramtype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
        :keyword techniques: The techniques of the alert rule.
        :paramtype techniques: list[str]
        :keyword incident_configuration: The settings of the incidents that created from alerts
         triggered by this analytics rule.
        :paramtype incident_configuration: ~azure.mgmt.securityinsight.models.IncidentConfiguration
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "Scheduled"
        self.query = query
        self.query_frequency = query_frequency
        self.query_period = query_period
        self.severity = severity
        self.trigger_operator = trigger_operator
        self.trigger_threshold = trigger_threshold
        self.event_grouping_settings = event_grouping_settings
        self.custom_details = custom_details
        self.entity_mappings = entity_mappings
        self.alert_details_override = alert_details_override
        self.alert_rule_template_name = alert_rule_template_name
        self.template_version = template_version
        self.description = description
        self.display_name = display_name
        self.enabled = enabled
        self.last_modified_utc = None
        self.suppression_duration = suppression_duration
        self.suppression_enabled = suppression_enabled
        self.tactics = tactics
        self.techniques = techniques
        self.incident_configuration = incident_configuration


class ScheduledAlertRuleCommonProperties(_serialization.Model):
    """Scheduled alert rule template property bag.

    :ivar query: The query that creates alerts for this rule.
    :vartype query: str
    :ivar query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to run.
    :vartype query_frequency: ~datetime.timedelta
    :ivar query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
    :vartype query_period: ~datetime.timedelta
    :ivar severity: The severity for alerts created by this alert rule. Known values are: "High",
     "Medium", "Low", and "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar trigger_operator: The operation against the threshold that triggers alert rule. Known
     values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
    :vartype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
    :ivar trigger_threshold: The threshold triggers this alert rule.
    :vartype trigger_threshold: int
    :ivar event_grouping_settings: The event grouping settings.
    :vartype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
    :ivar custom_details: Dictionary of string key-value pairs of columns to be attached to the
     alert.
    :vartype custom_details: dict[str, str]
    :ivar entity_mappings: Array of the entity mappings of the alert rule.
    :vartype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
    :ivar alert_details_override: The alert details override settings.
    :vartype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
    """

    _attribute_map = {
        "query": {"key": "query", "type": "str"},
        "query_frequency": {"key": "queryFrequency", "type": "duration"},
        "query_period": {"key": "queryPeriod", "type": "duration"},
        "severity": {"key": "severity", "type": "str"},
        "trigger_operator": {"key": "triggerOperator", "type": "str"},
        "trigger_threshold": {"key": "triggerThreshold", "type": "int"},
        "event_grouping_settings": {"key": "eventGroupingSettings", "type": "EventGroupingSettings"},
        "custom_details": {"key": "customDetails", "type": "{str}"},
        "entity_mappings": {"key": "entityMappings", "type": "[EntityMapping]"},
        "alert_details_override": {"key": "alertDetailsOverride", "type": "AlertDetailsOverride"},
    }

    def __init__(
        self,
        *,
        query: Optional[str] = None,
        query_frequency: Optional[datetime.timedelta] = None,
        query_period: Optional[datetime.timedelta] = None,
        severity: Optional[Union[str, "_models.AlertSeverity"]] = None,
        trigger_operator: Optional[Union[str, "_models.TriggerOperator"]] = None,
        trigger_threshold: Optional[int] = None,
        event_grouping_settings: Optional["_models.EventGroupingSettings"] = None,
        custom_details: Optional[Dict[str, str]] = None,
        entity_mappings: Optional[List["_models.EntityMapping"]] = None,
        alert_details_override: Optional["_models.AlertDetailsOverride"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword query: The query that creates alerts for this rule.
        :paramtype query: str
        :keyword query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to
         run.
        :paramtype query_frequency: ~datetime.timedelta
        :keyword query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
        :paramtype query_period: ~datetime.timedelta
        :keyword severity: The severity for alerts created by this alert rule. Known values are:
         "High", "Medium", "Low", and "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        :keyword trigger_operator: The operation against the threshold that triggers alert rule. Known
         values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
        :paramtype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
        :keyword trigger_threshold: The threshold triggers this alert rule.
        :paramtype trigger_threshold: int
        :keyword event_grouping_settings: The event grouping settings.
        :paramtype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
        :keyword custom_details: Dictionary of string key-value pairs of columns to be attached to the
         alert.
        :paramtype custom_details: dict[str, str]
        :keyword entity_mappings: Array of the entity mappings of the alert rule.
        :paramtype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
        :keyword alert_details_override: The alert details override settings.
        :paramtype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
        """
        super().__init__(**kwargs)
        self.query = query
        self.query_frequency = query_frequency
        self.query_period = query_period
        self.severity = severity
        self.trigger_operator = trigger_operator
        self.trigger_threshold = trigger_threshold
        self.event_grouping_settings = event_grouping_settings
        self.custom_details = custom_details
        self.entity_mappings = entity_mappings
        self.alert_details_override = alert_details_override


class ScheduledAlertRuleProperties(ScheduledAlertRuleCommonProperties):
    """Scheduled alert rule base property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar query: The query that creates alerts for this rule.
    :vartype query: str
    :ivar query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to run.
    :vartype query_frequency: ~datetime.timedelta
    :ivar query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
    :vartype query_period: ~datetime.timedelta
    :ivar severity: The severity for alerts created by this alert rule. Known values are: "High",
     "Medium", "Low", and "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar trigger_operator: The operation against the threshold that triggers alert rule. Known
     values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
    :vartype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
    :ivar trigger_threshold: The threshold triggers this alert rule.
    :vartype trigger_threshold: int
    :ivar event_grouping_settings: The event grouping settings.
    :vartype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
    :ivar custom_details: Dictionary of string key-value pairs of columns to be attached to the
     alert.
    :vartype custom_details: dict[str, str]
    :ivar entity_mappings: Array of the entity mappings of the alert rule.
    :vartype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
    :ivar alert_details_override: The alert details override settings.
    :vartype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
    :ivar alert_rule_template_name: The Name of the alert rule template used to create this rule.
    :vartype alert_rule_template_name: str
    :ivar template_version: The version of the alert rule template used to create this rule - in
     format <a.b.c>, where all are numbers, for example 0 <1.0.2>.
    :vartype template_version: str
    :ivar description: The description of the alert rule.
    :vartype description: str
    :ivar display_name: The display name for alerts created by this alert rule. Required.
    :vartype display_name: str
    :ivar enabled: Determines whether this alert rule is enabled or disabled. Required.
    :vartype enabled: bool
    :ivar last_modified_utc: The last time that this alert rule has been modified.
    :vartype last_modified_utc: ~datetime.datetime
    :ivar suppression_duration: The suppression (in ISO 8601 duration format) to wait since last
     time this alert rule been triggered. Required.
    :vartype suppression_duration: ~datetime.timedelta
    :ivar suppression_enabled: Determines whether the suppression for this alert rule is enabled or
     disabled. Required.
    :vartype suppression_enabled: bool
    :ivar tactics: The tactics of the alert rule.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar techniques: The techniques of the alert rule.
    :vartype techniques: list[str]
    :ivar incident_configuration: The settings of the incidents that created from alerts triggered
     by this analytics rule.
    :vartype incident_configuration: ~azure.mgmt.securityinsight.models.IncidentConfiguration
    """

    _validation = {
        "display_name": {"required": True},
        "enabled": {"required": True},
        "last_modified_utc": {"readonly": True},
        "suppression_duration": {"required": True},
        "suppression_enabled": {"required": True},
    }

    _attribute_map = {
        "query": {"key": "query", "type": "str"},
        "query_frequency": {"key": "queryFrequency", "type": "duration"},
        "query_period": {"key": "queryPeriod", "type": "duration"},
        "severity": {"key": "severity", "type": "str"},
        "trigger_operator": {"key": "triggerOperator", "type": "str"},
        "trigger_threshold": {"key": "triggerThreshold", "type": "int"},
        "event_grouping_settings": {"key": "eventGroupingSettings", "type": "EventGroupingSettings"},
        "custom_details": {"key": "customDetails", "type": "{str}"},
        "entity_mappings": {"key": "entityMappings", "type": "[EntityMapping]"},
        "alert_details_override": {"key": "alertDetailsOverride", "type": "AlertDetailsOverride"},
        "alert_rule_template_name": {"key": "alertRuleTemplateName", "type": "str"},
        "template_version": {"key": "templateVersion", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "enabled": {"key": "enabled", "type": "bool"},
        "last_modified_utc": {"key": "lastModifiedUtc", "type": "iso-8601"},
        "suppression_duration": {"key": "suppressionDuration", "type": "duration"},
        "suppression_enabled": {"key": "suppressionEnabled", "type": "bool"},
        "tactics": {"key": "tactics", "type": "[str]"},
        "techniques": {"key": "techniques", "type": "[str]"},
        "incident_configuration": {"key": "incidentConfiguration", "type": "IncidentConfiguration"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        enabled: bool,
        suppression_duration: datetime.timedelta,
        suppression_enabled: bool,
        query: Optional[str] = None,
        query_frequency: Optional[datetime.timedelta] = None,
        query_period: Optional[datetime.timedelta] = None,
        severity: Optional[Union[str, "_models.AlertSeverity"]] = None,
        trigger_operator: Optional[Union[str, "_models.TriggerOperator"]] = None,
        trigger_threshold: Optional[int] = None,
        event_grouping_settings: Optional["_models.EventGroupingSettings"] = None,
        custom_details: Optional[Dict[str, str]] = None,
        entity_mappings: Optional[List["_models.EntityMapping"]] = None,
        alert_details_override: Optional["_models.AlertDetailsOverride"] = None,
        alert_rule_template_name: Optional[str] = None,
        template_version: Optional[str] = None,
        description: Optional[str] = None,
        tactics: Optional[List[Union[str, "_models.AttackTactic"]]] = None,
        techniques: Optional[List[str]] = None,
        incident_configuration: Optional["_models.IncidentConfiguration"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword query: The query that creates alerts for this rule.
        :paramtype query: str
        :keyword query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to
         run.
        :paramtype query_frequency: ~datetime.timedelta
        :keyword query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
        :paramtype query_period: ~datetime.timedelta
        :keyword severity: The severity for alerts created by this alert rule. Known values are:
         "High", "Medium", "Low", and "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        :keyword trigger_operator: The operation against the threshold that triggers alert rule. Known
         values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
        :paramtype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
        :keyword trigger_threshold: The threshold triggers this alert rule.
        :paramtype trigger_threshold: int
        :keyword event_grouping_settings: The event grouping settings.
        :paramtype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
        :keyword custom_details: Dictionary of string key-value pairs of columns to be attached to the
         alert.
        :paramtype custom_details: dict[str, str]
        :keyword entity_mappings: Array of the entity mappings of the alert rule.
        :paramtype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
        :keyword alert_details_override: The alert details override settings.
        :paramtype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
        :keyword alert_rule_template_name: The Name of the alert rule template used to create this
         rule.
        :paramtype alert_rule_template_name: str
        :keyword template_version: The version of the alert rule template used to create this rule - in
         format <a.b.c>, where all are numbers, for example 0 <1.0.2>.
        :paramtype template_version: str
        :keyword description: The description of the alert rule.
        :paramtype description: str
        :keyword display_name: The display name for alerts created by this alert rule. Required.
        :paramtype display_name: str
        :keyword enabled: Determines whether this alert rule is enabled or disabled. Required.
        :paramtype enabled: bool
        :keyword suppression_duration: The suppression (in ISO 8601 duration format) to wait since last
         time this alert rule been triggered. Required.
        :paramtype suppression_duration: ~datetime.timedelta
        :keyword suppression_enabled: Determines whether the suppression for this alert rule is enabled
         or disabled. Required.
        :paramtype suppression_enabled: bool
        :keyword tactics: The tactics of the alert rule.
        :paramtype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
        :keyword techniques: The techniques of the alert rule.
        :paramtype techniques: list[str]
        :keyword incident_configuration: The settings of the incidents that created from alerts
         triggered by this analytics rule.
        :paramtype incident_configuration: ~azure.mgmt.securityinsight.models.IncidentConfiguration
        """
        super().__init__(
            query=query,
            query_frequency=query_frequency,
            query_period=query_period,
            severity=severity,
            trigger_operator=trigger_operator,
            trigger_threshold=trigger_threshold,
            event_grouping_settings=event_grouping_settings,
            custom_details=custom_details,
            entity_mappings=entity_mappings,
            alert_details_override=alert_details_override,
            **kwargs
        )
        self.alert_rule_template_name = alert_rule_template_name
        self.template_version = template_version
        self.description = description
        self.display_name = display_name
        self.enabled = enabled
        self.last_modified_utc = None
        self.suppression_duration = suppression_duration
        self.suppression_enabled = suppression_enabled
        self.tactics = tactics
        self.techniques = techniques
        self.incident_configuration = incident_configuration


class ScheduledAlertRuleTemplate(AlertRuleTemplate):
    """Represents scheduled alert rule template.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The alert rule kind. Required. Known values are: "Scheduled",
     "MicrosoftSecurityIncidentCreation", and "Fusion".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.AlertRuleKind
    :ivar alert_rules_created_by_template_count: the number of alert rules that were created by
     this template.
    :vartype alert_rules_created_by_template_count: int
    :ivar created_date_utc: The time that this alert rule template has been added.
    :vartype created_date_utc: ~datetime.datetime
    :ivar last_updated_date_utc: The time that this alert rule template was last updated.
    :vartype last_updated_date_utc: ~datetime.datetime
    :ivar description: The description of the alert rule template.
    :vartype description: str
    :ivar display_name: The display name for alert rule template.
    :vartype display_name: str
    :ivar required_data_connectors: The required data connectors for this template.
    :vartype required_data_connectors:
     list[~azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource]
    :ivar status: The alert rule template status. Known values are: "Installed", "Available", and
     "NotAvailable".
    :vartype status: str or ~azure.mgmt.securityinsight.models.TemplateStatus
    :ivar query: The query that creates alerts for this rule.
    :vartype query: str
    :ivar query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to run.
    :vartype query_frequency: ~datetime.timedelta
    :ivar query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
    :vartype query_period: ~datetime.timedelta
    :ivar severity: The severity for alerts created by this alert rule. Known values are: "High",
     "Medium", "Low", and "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar trigger_operator: The operation against the threshold that triggers alert rule. Known
     values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
    :vartype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
    :ivar trigger_threshold: The threshold triggers this alert rule.
    :vartype trigger_threshold: int
    :ivar tactics: The tactics of the alert rule template.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar techniques: The techniques of the alert rule template.
    :vartype techniques: list[str]
    :ivar version: The version of this template - in format <a.b.c>, where all are numbers. For
     example <1.0.2>.
    :vartype version: str
    :ivar event_grouping_settings: The event grouping settings.
    :vartype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
    :ivar custom_details: Dictionary of string key-value pairs of columns to be attached to the
     alert.
    :vartype custom_details: dict[str, str]
    :ivar entity_mappings: Array of the entity mappings of the alert rule.
    :vartype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
    :ivar alert_details_override: The alert details override settings.
    :vartype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "created_date_utc": {"readonly": True},
        "last_updated_date_utc": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "alert_rules_created_by_template_count": {"key": "properties.alertRulesCreatedByTemplateCount", "type": "int"},
        "created_date_utc": {"key": "properties.createdDateUTC", "type": "iso-8601"},
        "last_updated_date_utc": {"key": "properties.lastUpdatedDateUTC", "type": "iso-8601"},
        "description": {"key": "properties.description", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "required_data_connectors": {
            "key": "properties.requiredDataConnectors",
            "type": "[AlertRuleTemplateDataSource]",
        },
        "status": {"key": "properties.status", "type": "str"},
        "query": {"key": "properties.query", "type": "str"},
        "query_frequency": {"key": "properties.queryFrequency", "type": "duration"},
        "query_period": {"key": "properties.queryPeriod", "type": "duration"},
        "severity": {"key": "properties.severity", "type": "str"},
        "trigger_operator": {"key": "properties.triggerOperator", "type": "str"},
        "trigger_threshold": {"key": "properties.triggerThreshold", "type": "int"},
        "tactics": {"key": "properties.tactics", "type": "[str]"},
        "techniques": {"key": "properties.techniques", "type": "[str]"},
        "version": {"key": "properties.version", "type": "str"},
        "event_grouping_settings": {"key": "properties.eventGroupingSettings", "type": "EventGroupingSettings"},
        "custom_details": {"key": "properties.customDetails", "type": "{str}"},
        "entity_mappings": {"key": "properties.entityMappings", "type": "[EntityMapping]"},
        "alert_details_override": {"key": "properties.alertDetailsOverride", "type": "AlertDetailsOverride"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        alert_rules_created_by_template_count: Optional[int] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        required_data_connectors: Optional[List["_models.AlertRuleTemplateDataSource"]] = None,
        status: Optional[Union[str, "_models.TemplateStatus"]] = None,
        query: Optional[str] = None,
        query_frequency: Optional[datetime.timedelta] = None,
        query_period: Optional[datetime.timedelta] = None,
        severity: Optional[Union[str, "_models.AlertSeverity"]] = None,
        trigger_operator: Optional[Union[str, "_models.TriggerOperator"]] = None,
        trigger_threshold: Optional[int] = None,
        tactics: Optional[List[Union[str, "_models.AttackTactic"]]] = None,
        techniques: Optional[List[str]] = None,
        version: Optional[str] = None,
        event_grouping_settings: Optional["_models.EventGroupingSettings"] = None,
        custom_details: Optional[Dict[str, str]] = None,
        entity_mappings: Optional[List["_models.EntityMapping"]] = None,
        alert_details_override: Optional["_models.AlertDetailsOverride"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword alert_rules_created_by_template_count: the number of alert rules that were created by
         this template.
        :paramtype alert_rules_created_by_template_count: int
        :keyword description: The description of the alert rule template.
        :paramtype description: str
        :keyword display_name: The display name for alert rule template.
        :paramtype display_name: str
        :keyword required_data_connectors: The required data connectors for this template.
        :paramtype required_data_connectors:
         list[~azure.mgmt.securityinsight.models.AlertRuleTemplateDataSource]
        :keyword status: The alert rule template status. Known values are: "Installed", "Available",
         and "NotAvailable".
        :paramtype status: str or ~azure.mgmt.securityinsight.models.TemplateStatus
        :keyword query: The query that creates alerts for this rule.
        :paramtype query: str
        :keyword query_frequency: The frequency (in ISO 8601 duration format) for this alert rule to
         run.
        :paramtype query_frequency: ~datetime.timedelta
        :keyword query_period: The period (in ISO 8601 duration format) that this alert rule looks at.
        :paramtype query_period: ~datetime.timedelta
        :keyword severity: The severity for alerts created by this alert rule. Known values are:
         "High", "Medium", "Low", and "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        :keyword trigger_operator: The operation against the threshold that triggers alert rule. Known
         values are: "GreaterThan", "LessThan", "Equal", and "NotEqual".
        :paramtype trigger_operator: str or ~azure.mgmt.securityinsight.models.TriggerOperator
        :keyword trigger_threshold: The threshold triggers this alert rule.
        :paramtype trigger_threshold: int
        :keyword tactics: The tactics of the alert rule template.
        :paramtype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
        :keyword techniques: The techniques of the alert rule template.
        :paramtype techniques: list[str]
        :keyword version: The version of this template - in format <a.b.c>, where all are numbers. For
         example <1.0.2>.
        :paramtype version: str
        :keyword event_grouping_settings: The event grouping settings.
        :paramtype event_grouping_settings: ~azure.mgmt.securityinsight.models.EventGroupingSettings
        :keyword custom_details: Dictionary of string key-value pairs of columns to be attached to the
         alert.
        :paramtype custom_details: dict[str, str]
        :keyword entity_mappings: Array of the entity mappings of the alert rule.
        :paramtype entity_mappings: list[~azure.mgmt.securityinsight.models.EntityMapping]
        :keyword alert_details_override: The alert details override settings.
        :paramtype alert_details_override: ~azure.mgmt.securityinsight.models.AlertDetailsOverride
        """
        super().__init__(**kwargs)
        self.kind: str = "Scheduled"
        self.alert_rules_created_by_template_count = alert_rules_created_by_template_count
        self.created_date_utc = None
        self.last_updated_date_utc = None
        self.description = description
        self.display_name = display_name
        self.required_data_connectors = required_data_connectors
        self.status = status
        self.query = query
        self.query_frequency = query_frequency
        self.query_period = query_period
        self.severity = severity
        self.trigger_operator = trigger_operator
        self.trigger_threshold = trigger_threshold
        self.tactics = tactics
        self.techniques = techniques
        self.version = version
        self.event_grouping_settings = event_grouping_settings
        self.custom_details = custom_details
        self.entity_mappings = entity_mappings
        self.alert_details_override = alert_details_override


class SecurityAlert(Entity):
    """Represents a security alert entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar alert_display_name: The display name of the alert.
    :vartype alert_display_name: str
    :ivar alert_type: The type name of the alert.
    :vartype alert_type: str
    :ivar compromised_entity: Display name of the main entity being reported on.
    :vartype compromised_entity: str
    :ivar confidence_level: The confidence level of this alert. Known values are: "Unknown", "Low",
     and "High".
    :vartype confidence_level: str or ~azure.mgmt.securityinsight.models.ConfidenceLevel
    :ivar confidence_reasons: The confidence reasons.
    :vartype confidence_reasons:
     list[~azure.mgmt.securityinsight.models.SecurityAlertPropertiesConfidenceReasonsItem]
    :ivar confidence_score: The confidence score of the alert.
    :vartype confidence_score: float
    :ivar confidence_score_status: The confidence score calculation status, i.e. indicating if
     score calculation is pending for this alert, not applicable or final. Known values are:
     "NotApplicable", "InProcess", "NotFinal", and "Final".
    :vartype confidence_score_status: str or
     ~azure.mgmt.securityinsight.models.ConfidenceScoreStatus
    :ivar description: Alert description.
    :vartype description: str
    :ivar end_time_utc: The impact end time of the alert (the time of the last event contributing
     to the alert).
    :vartype end_time_utc: ~datetime.datetime
    :ivar intent: Holds the alert intent stage(s) mapping for this alert. Known values are:
     "Unknown", "Probing", "Exploitation", "Persistence", "PrivilegeEscalation", "DefenseEvasion",
     "CredentialAccess", "Discovery", "LateralMovement", "Execution", "Collection", "Exfiltration",
     "CommandAndControl", and "Impact".
    :vartype intent: str or ~azure.mgmt.securityinsight.models.KillChainIntent
    :ivar provider_alert_id: The identifier of the alert inside the product which generated the
     alert.
    :vartype provider_alert_id: str
    :ivar processing_end_time: The time the alert was made available for consumption.
    :vartype processing_end_time: ~datetime.datetime
    :ivar product_component_name: The name of a component inside the product which generated the
     alert.
    :vartype product_component_name: str
    :ivar product_name: The name of the product which published this alert.
    :vartype product_name: str
    :ivar product_version: The version of the product generating the alert.
    :vartype product_version: str
    :ivar remediation_steps: Manual action items to take to remediate the alert.
    :vartype remediation_steps: list[str]
    :ivar severity: The severity of the alert. Known values are: "High", "Medium", "Low", and
     "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar start_time_utc: The impact start time of the alert (the time of the first event
     contributing to the alert).
    :vartype start_time_utc: ~datetime.datetime
    :ivar status: The lifecycle status of the alert. Known values are: "Unknown", "New",
     "Resolved", "Dismissed", and "InProgress".
    :vartype status: str or ~azure.mgmt.securityinsight.models.AlertStatus
    :ivar system_alert_id: Holds the product identifier of the alert for the product.
    :vartype system_alert_id: str
    :ivar tactics: The tactics of the alert.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar time_generated: The time the alert was generated.
    :vartype time_generated: ~datetime.datetime
    :ivar vendor_name: The name of the vendor that raise the alert.
    :vartype vendor_name: str
    :ivar alert_link: The uri link of the alert.
    :vartype alert_link: str
    :ivar resource_identifiers: The list of resource identifiers of the alert.
    :vartype resource_identifiers: list[JSON]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "alert_display_name": {"readonly": True},
        "alert_type": {"readonly": True},
        "compromised_entity": {"readonly": True},
        "confidence_level": {"readonly": True},
        "confidence_reasons": {"readonly": True},
        "confidence_score": {"readonly": True},
        "confidence_score_status": {"readonly": True},
        "description": {"readonly": True},
        "end_time_utc": {"readonly": True},
        "intent": {"readonly": True},
        "provider_alert_id": {"readonly": True},
        "processing_end_time": {"readonly": True},
        "product_component_name": {"readonly": True},
        "product_name": {"readonly": True},
        "product_version": {"readonly": True},
        "remediation_steps": {"readonly": True},
        "start_time_utc": {"readonly": True},
        "status": {"readonly": True},
        "system_alert_id": {"readonly": True},
        "tactics": {"readonly": True},
        "time_generated": {"readonly": True},
        "vendor_name": {"readonly": True},
        "alert_link": {"readonly": True},
        "resource_identifiers": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "alert_display_name": {"key": "properties.alertDisplayName", "type": "str"},
        "alert_type": {"key": "properties.alertType", "type": "str"},
        "compromised_entity": {"key": "properties.compromisedEntity", "type": "str"},
        "confidence_level": {"key": "properties.confidenceLevel", "type": "str"},
        "confidence_reasons": {
            "key": "properties.confidenceReasons",
            "type": "[SecurityAlertPropertiesConfidenceReasonsItem]",
        },
        "confidence_score": {"key": "properties.confidenceScore", "type": "float"},
        "confidence_score_status": {"key": "properties.confidenceScoreStatus", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "end_time_utc": {"key": "properties.endTimeUtc", "type": "iso-8601"},
        "intent": {"key": "properties.intent", "type": "str"},
        "provider_alert_id": {"key": "properties.providerAlertId", "type": "str"},
        "processing_end_time": {"key": "properties.processingEndTime", "type": "iso-8601"},
        "product_component_name": {"key": "properties.productComponentName", "type": "str"},
        "product_name": {"key": "properties.productName", "type": "str"},
        "product_version": {"key": "properties.productVersion", "type": "str"},
        "remediation_steps": {"key": "properties.remediationSteps", "type": "[str]"},
        "severity": {"key": "properties.severity", "type": "str"},
        "start_time_utc": {"key": "properties.startTimeUtc", "type": "iso-8601"},
        "status": {"key": "properties.status", "type": "str"},
        "system_alert_id": {"key": "properties.systemAlertId", "type": "str"},
        "tactics": {"key": "properties.tactics", "type": "[str]"},
        "time_generated": {"key": "properties.timeGenerated", "type": "iso-8601"},
        "vendor_name": {"key": "properties.vendorName", "type": "str"},
        "alert_link": {"key": "properties.alertLink", "type": "str"},
        "resource_identifiers": {"key": "properties.resourceIdentifiers", "type": "[object]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self, *, severity: Optional[Union[str, "_models.AlertSeverity"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword severity: The severity of the alert. Known values are: "High", "Medium", "Low", and
         "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        """
        super().__init__(**kwargs)
        self.kind: str = "SecurityAlert"
        self.additional_data = None
        self.friendly_name = None
        self.alert_display_name = None
        self.alert_type = None
        self.compromised_entity = None
        self.confidence_level = None
        self.confidence_reasons = None
        self.confidence_score = None
        self.confidence_score_status = None
        self.description = None
        self.end_time_utc = None
        self.intent = None
        self.provider_alert_id = None
        self.processing_end_time = None
        self.product_component_name = None
        self.product_name = None
        self.product_version = None
        self.remediation_steps = None
        self.severity = severity
        self.start_time_utc = None
        self.status = None
        self.system_alert_id = None
        self.tactics = None
        self.time_generated = None
        self.vendor_name = None
        self.alert_link = None
        self.resource_identifiers = None


class SecurityAlertProperties(EntityCommonProperties):
    """SecurityAlert entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar alert_display_name: The display name of the alert.
    :vartype alert_display_name: str
    :ivar alert_type: The type name of the alert.
    :vartype alert_type: str
    :ivar compromised_entity: Display name of the main entity being reported on.
    :vartype compromised_entity: str
    :ivar confidence_level: The confidence level of this alert. Known values are: "Unknown", "Low",
     and "High".
    :vartype confidence_level: str or ~azure.mgmt.securityinsight.models.ConfidenceLevel
    :ivar confidence_reasons: The confidence reasons.
    :vartype confidence_reasons:
     list[~azure.mgmt.securityinsight.models.SecurityAlertPropertiesConfidenceReasonsItem]
    :ivar confidence_score: The confidence score of the alert.
    :vartype confidence_score: float
    :ivar confidence_score_status: The confidence score calculation status, i.e. indicating if
     score calculation is pending for this alert, not applicable or final. Known values are:
     "NotApplicable", "InProcess", "NotFinal", and "Final".
    :vartype confidence_score_status: str or
     ~azure.mgmt.securityinsight.models.ConfidenceScoreStatus
    :ivar description: Alert description.
    :vartype description: str
    :ivar end_time_utc: The impact end time of the alert (the time of the last event contributing
     to the alert).
    :vartype end_time_utc: ~datetime.datetime
    :ivar intent: Holds the alert intent stage(s) mapping for this alert. Known values are:
     "Unknown", "Probing", "Exploitation", "Persistence", "PrivilegeEscalation", "DefenseEvasion",
     "CredentialAccess", "Discovery", "LateralMovement", "Execution", "Collection", "Exfiltration",
     "CommandAndControl", and "Impact".
    :vartype intent: str or ~azure.mgmt.securityinsight.models.KillChainIntent
    :ivar provider_alert_id: The identifier of the alert inside the product which generated the
     alert.
    :vartype provider_alert_id: str
    :ivar processing_end_time: The time the alert was made available for consumption.
    :vartype processing_end_time: ~datetime.datetime
    :ivar product_component_name: The name of a component inside the product which generated the
     alert.
    :vartype product_component_name: str
    :ivar product_name: The name of the product which published this alert.
    :vartype product_name: str
    :ivar product_version: The version of the product generating the alert.
    :vartype product_version: str
    :ivar remediation_steps: Manual action items to take to remediate the alert.
    :vartype remediation_steps: list[str]
    :ivar severity: The severity of the alert. Known values are: "High", "Medium", "Low", and
     "Informational".
    :vartype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
    :ivar start_time_utc: The impact start time of the alert (the time of the first event
     contributing to the alert).
    :vartype start_time_utc: ~datetime.datetime
    :ivar status: The lifecycle status of the alert. Known values are: "Unknown", "New",
     "Resolved", "Dismissed", and "InProgress".
    :vartype status: str or ~azure.mgmt.securityinsight.models.AlertStatus
    :ivar system_alert_id: Holds the product identifier of the alert for the product.
    :vartype system_alert_id: str
    :ivar tactics: The tactics of the alert.
    :vartype tactics: list[str or ~azure.mgmt.securityinsight.models.AttackTactic]
    :ivar time_generated: The time the alert was generated.
    :vartype time_generated: ~datetime.datetime
    :ivar vendor_name: The name of the vendor that raise the alert.
    :vartype vendor_name: str
    :ivar alert_link: The uri link of the alert.
    :vartype alert_link: str
    :ivar resource_identifiers: The list of resource identifiers of the alert.
    :vartype resource_identifiers: list[JSON]
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "alert_display_name": {"readonly": True},
        "alert_type": {"readonly": True},
        "compromised_entity": {"readonly": True},
        "confidence_level": {"readonly": True},
        "confidence_reasons": {"readonly": True},
        "confidence_score": {"readonly": True},
        "confidence_score_status": {"readonly": True},
        "description": {"readonly": True},
        "end_time_utc": {"readonly": True},
        "intent": {"readonly": True},
        "provider_alert_id": {"readonly": True},
        "processing_end_time": {"readonly": True},
        "product_component_name": {"readonly": True},
        "product_name": {"readonly": True},
        "product_version": {"readonly": True},
        "remediation_steps": {"readonly": True},
        "start_time_utc": {"readonly": True},
        "status": {"readonly": True},
        "system_alert_id": {"readonly": True},
        "tactics": {"readonly": True},
        "time_generated": {"readonly": True},
        "vendor_name": {"readonly": True},
        "alert_link": {"readonly": True},
        "resource_identifiers": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "alert_display_name": {"key": "alertDisplayName", "type": "str"},
        "alert_type": {"key": "alertType", "type": "str"},
        "compromised_entity": {"key": "compromisedEntity", "type": "str"},
        "confidence_level": {"key": "confidenceLevel", "type": "str"},
        "confidence_reasons": {"key": "confidenceReasons", "type": "[SecurityAlertPropertiesConfidenceReasonsItem]"},
        "confidence_score": {"key": "confidenceScore", "type": "float"},
        "confidence_score_status": {"key": "confidenceScoreStatus", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "end_time_utc": {"key": "endTimeUtc", "type": "iso-8601"},
        "intent": {"key": "intent", "type": "str"},
        "provider_alert_id": {"key": "providerAlertId", "type": "str"},
        "processing_end_time": {"key": "processingEndTime", "type": "iso-8601"},
        "product_component_name": {"key": "productComponentName", "type": "str"},
        "product_name": {"key": "productName", "type": "str"},
        "product_version": {"key": "productVersion", "type": "str"},
        "remediation_steps": {"key": "remediationSteps", "type": "[str]"},
        "severity": {"key": "severity", "type": "str"},
        "start_time_utc": {"key": "startTimeUtc", "type": "iso-8601"},
        "status": {"key": "status", "type": "str"},
        "system_alert_id": {"key": "systemAlertId", "type": "str"},
        "tactics": {"key": "tactics", "type": "[str]"},
        "time_generated": {"key": "timeGenerated", "type": "iso-8601"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "alert_link": {"key": "alertLink", "type": "str"},
        "resource_identifiers": {"key": "resourceIdentifiers", "type": "[object]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self, *, severity: Optional[Union[str, "_models.AlertSeverity"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword severity: The severity of the alert. Known values are: "High", "Medium", "Low", and
         "Informational".
        :paramtype severity: str or ~azure.mgmt.securityinsight.models.AlertSeverity
        """
        super().__init__(**kwargs)
        self.alert_display_name = None
        self.alert_type = None
        self.compromised_entity = None
        self.confidence_level = None
        self.confidence_reasons = None
        self.confidence_score = None
        self.confidence_score_status = None
        self.description = None
        self.end_time_utc = None
        self.intent = None
        self.provider_alert_id = None
        self.processing_end_time = None
        self.product_component_name = None
        self.product_name = None
        self.product_version = None
        self.remediation_steps = None
        self.severity = severity
        self.start_time_utc = None
        self.status = None
        self.system_alert_id = None
        self.tactics = None
        self.time_generated = None
        self.vendor_name = None
        self.alert_link = None
        self.resource_identifiers = None


class SecurityAlertPropertiesConfidenceReasonsItem(_serialization.Model):  # pylint: disable=name-too-long
    """confidence reason item.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar reason: The reason's description.
    :vartype reason: str
    :ivar reason_type: The type (category) of the reason.
    :vartype reason_type: str
    """

    _validation = {
        "reason": {"readonly": True},
        "reason_type": {"readonly": True},
    }

    _attribute_map = {
        "reason": {"key": "reason", "type": "str"},
        "reason_type": {"key": "reasonType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.reason = None
        self.reason_type = None


class SecurityGroupEntity(Entity):
    """Represents a security group entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar distinguished_name: The group distinguished name.
    :vartype distinguished_name: str
    :ivar object_guid: A single-value attribute that is the unique identifier for the object,
     assigned by active directory.
    :vartype object_guid: str
    :ivar sid: The SID attribute is a single-value attribute that specifies the security identifier
     (SID) of the group.
    :vartype sid: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "distinguished_name": {"readonly": True},
        "object_guid": {"readonly": True},
        "sid": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "distinguished_name": {"key": "properties.distinguishedName", "type": "str"},
        "object_guid": {"key": "properties.objectGuid", "type": "str"},
        "sid": {"key": "properties.sid", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "SecurityGroup"
        self.additional_data = None
        self.friendly_name = None
        self.distinguished_name = None
        self.object_guid = None
        self.sid = None


class SecurityGroupEntityProperties(EntityCommonProperties):
    """SecurityGroup entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar distinguished_name: The group distinguished name.
    :vartype distinguished_name: str
    :ivar object_guid: A single-value attribute that is the unique identifier for the object,
     assigned by active directory.
    :vartype object_guid: str
    :ivar sid: The SID attribute is a single-value attribute that specifies the security identifier
     (SID) of the group.
    :vartype sid: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "distinguished_name": {"readonly": True},
        "object_guid": {"readonly": True},
        "sid": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "distinguished_name": {"key": "distinguishedName", "type": "str"},
        "object_guid": {"key": "objectGuid", "type": "str"},
        "sid": {"key": "sid", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.distinguished_name = None
        self.object_guid = None
        self.sid = None


class SecurityMLAnalyticsSettingsDataSource(_serialization.Model):
    """security ml analytics settings data sources.

    :ivar connector_id: The connector id that provides the following data types.
    :vartype connector_id: str
    :ivar data_types: The data types used by the security ml analytics settings.
    :vartype data_types: list[str]
    """

    _attribute_map = {
        "connector_id": {"key": "connectorId", "type": "str"},
        "data_types": {"key": "dataTypes", "type": "[str]"},
    }

    def __init__(
        self, *, connector_id: Optional[str] = None, data_types: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword connector_id: The connector id that provides the following data types.
        :paramtype connector_id: str
        :keyword data_types: The data types used by the security ml analytics settings.
        :paramtype data_types: list[str]
        """
        super().__init__(**kwargs)
        self.connector_id = connector_id
        self.data_types = data_types


class SecurityMLAnalyticsSettingsList(_serialization.Model):
    """List all the SecurityMLAnalyticsSettings.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of SecurityMLAnalyticsSettings.
    :vartype next_link: str
    :ivar value: Array of SecurityMLAnalyticsSettings. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.SecurityMLAnalyticsSetting]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[SecurityMLAnalyticsSetting]"},
    }

    def __init__(self, *, value: List["_models.SecurityMLAnalyticsSetting"], **kwargs: Any) -> None:
        """
        :keyword value: Array of SecurityMLAnalyticsSettings. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.SecurityMLAnalyticsSetting]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class SentinelOnboardingState(ResourceWithEtag):
    """Sentinel onboarding state.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar customer_managed_key: Flag that indicates the status of the CMK setting.
    :vartype customer_managed_key: bool
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "customer_managed_key": {"key": "properties.customerManagedKey", "type": "bool"},
    }

    def __init__(
        self, *, etag: Optional[str] = None, customer_managed_key: Optional[bool] = None, **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword customer_managed_key: Flag that indicates the status of the CMK setting.
        :paramtype customer_managed_key: bool
        """
        super().__init__(etag=etag, **kwargs)
        self.customer_managed_key = customer_managed_key


class SentinelOnboardingStatesList(_serialization.Model):
    """List of the Sentinel onboarding states.

    All required parameters must be populated in order to send to server.

    :ivar value: Array of Sentinel onboarding states. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.SentinelOnboardingState]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SentinelOnboardingState]"},
    }

    def __init__(self, *, value: List["_models.SentinelOnboardingState"], **kwargs: Any) -> None:
        """
        :keyword value: Array of Sentinel onboarding states. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.SentinelOnboardingState]
        """
        super().__init__(**kwargs)
        self.value = value


class ServicePrincipal(_serialization.Model):
    """Service principal metadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Id of service principal.
    :vartype id: str
    :ivar tenant_id: Tenant id of service principal.
    :vartype tenant_id: str
    :ivar app_id: App id of service principal.
    :vartype app_id: str
    :ivar credentials_expire_on: Expiration time of service principal credentials.
    :vartype credentials_expire_on: ~datetime.datetime
    """

    _validation = {
        "id": {"readonly": True},
        "tenant_id": {"readonly": True},
        "app_id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "app_id": {"key": "appId", "type": "str"},
        "credentials_expire_on": {"key": "credentialsExpireOn", "type": "iso-8601"},
    }

    def __init__(self, *, credentials_expire_on: Optional[datetime.datetime] = None, **kwargs: Any) -> None:
        """
        :keyword credentials_expire_on: Expiration time of service principal credentials.
        :paramtype credentials_expire_on: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.id = None
        self.tenant_id = None
        self.app_id = None
        self.credentials_expire_on = credentials_expire_on


class SessionAuthModel(CcpAuthConfig):
    """Model for API authentication with session cookie.

    All required parameters must be populated in order to send to server.

    :ivar type: The auth type. Required. Known values are: "Basic", "APIKey", "OAuth2", "AWS",
     "GCP", "Session", "JwtToken", "GitHub", "ServiceBus", "Oracle", and "None".
    :vartype type: str or ~azure.mgmt.securityinsight.models.CcpAuthType
    :ivar user_name: The user name attribute key value. Required.
    :vartype user_name: dict[str, str]
    :ivar password: The password attribute name. Required.
    :vartype password: dict[str, str]
    :ivar query_parameters: Query parameters to session service endpoint.
    :vartype query_parameters: dict[str, any]
    :ivar is_post_payload_json: Indicating whether API key is set in HTTP POST payload.
    :vartype is_post_payload_json: bool
    :ivar headers: HTTP request headers to session service endpoint.
    :vartype headers: dict[str, str]
    :ivar session_timeout_in_minutes: Session timeout in minutes.
    :vartype session_timeout_in_minutes: int
    :ivar session_id_name: Session id attribute name from HTTP response header.
    :vartype session_id_name: str
    :ivar session_login_request_uri: HTTP request URL to session service endpoint.
    :vartype session_login_request_uri: str
    """

    _validation = {
        "type": {"required": True},
        "user_name": {"required": True},
        "password": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "user_name": {"key": "userName", "type": "{str}"},
        "password": {"key": "password", "type": "{str}"},
        "query_parameters": {"key": "queryParameters", "type": "{object}"},
        "is_post_payload_json": {"key": "isPostPayloadJson", "type": "bool"},
        "headers": {"key": "headers", "type": "{str}"},
        "session_timeout_in_minutes": {"key": "sessionTimeoutInMinutes", "type": "int"},
        "session_id_name": {"key": "sessionIdName", "type": "str"},
        "session_login_request_uri": {"key": "sessionLoginRequestUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        user_name: Dict[str, str],
        password: Dict[str, str],
        query_parameters: Optional[Dict[str, Any]] = None,
        is_post_payload_json: Optional[bool] = None,
        headers: Optional[Dict[str, str]] = None,
        session_timeout_in_minutes: Optional[int] = None,
        session_id_name: Optional[str] = None,
        session_login_request_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword user_name: The user name attribute key value. Required.
        :paramtype user_name: dict[str, str]
        :keyword password: The password attribute name. Required.
        :paramtype password: dict[str, str]
        :keyword query_parameters: Query parameters to session service endpoint.
        :paramtype query_parameters: dict[str, any]
        :keyword is_post_payload_json: Indicating whether API key is set in HTTP POST payload.
        :paramtype is_post_payload_json: bool
        :keyword headers: HTTP request headers to session service endpoint.
        :paramtype headers: dict[str, str]
        :keyword session_timeout_in_minutes: Session timeout in minutes.
        :paramtype session_timeout_in_minutes: int
        :keyword session_id_name: Session id attribute name from HTTP response header.
        :paramtype session_id_name: str
        :keyword session_login_request_uri: HTTP request URL to session service endpoint.
        :paramtype session_login_request_uri: str
        """
        super().__init__(**kwargs)
        self.type: str = "Session"
        self.user_name = user_name
        self.password = password
        self.query_parameters = query_parameters
        self.is_post_payload_json = is_post_payload_json
        self.headers = headers
        self.session_timeout_in_minutes = session_timeout_in_minutes
        self.session_id_name = session_id_name
        self.session_login_request_uri = session_login_request_uri


class SourceControl(ResourceWithEtag):
    """Represents a SourceControl in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar id_properties_id: The id (a Guid) of the source control.
    :vartype id_properties_id: str
    :ivar version: The version number associated with the source control. Known values are: "V1"
     and "V2".
    :vartype version: str or ~azure.mgmt.securityinsight.models.Version
    :ivar display_name: The display name of the source control. Required.
    :vartype display_name: str
    :ivar description: A description of the source control.
    :vartype description: str
    :ivar repo_type: The repository type of the source control. Required. Known values are:
     "Github" and "AzureDevOps".
    :vartype repo_type: str or ~azure.mgmt.securityinsight.models.RepoType
    :ivar content_types: Array of source control content types. Required.
    :vartype content_types: list[str or ~azure.mgmt.securityinsight.models.ContentType]
    :ivar repository: Repository metadata. Required.
    :vartype repository: ~azure.mgmt.securityinsight.models.Repository
    :ivar service_principal: Service principal metadata.
    :vartype service_principal: ~azure.mgmt.securityinsight.models.ServicePrincipal
    :ivar repository_access: Repository access credentials. This is write-only object and it never
     returns back to a user.
    :vartype repository_access: ~azure.mgmt.securityinsight.models.RepositoryAccess
    :ivar repository_resource_info: Information regarding the resources created in user's
     repository.
    :vartype repository_resource_info: ~azure.mgmt.securityinsight.models.RepositoryResourceInfo
    :ivar last_deployment_info: Information regarding the latest deployment for the source control.
    :vartype last_deployment_info: ~azure.mgmt.securityinsight.models.DeploymentInfo
    :ivar pull_request: Information regarding the pull request of the source control.
    :vartype pull_request: ~azure.mgmt.securityinsight.models.PullRequest
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "id_properties_id": {"readonly": True},
        "version": {"readonly": True},
        "display_name": {"required": True},
        "repo_type": {"required": True},
        "content_types": {"required": True},
        "repository": {"required": True},
        "last_deployment_info": {"readonly": True},
        "pull_request": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "id_properties_id": {"key": "properties.id", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "repo_type": {"key": "properties.repoType", "type": "str"},
        "content_types": {"key": "properties.contentTypes", "type": "[str]"},
        "repository": {"key": "properties.repository", "type": "Repository"},
        "service_principal": {"key": "properties.servicePrincipal", "type": "ServicePrincipal"},
        "repository_access": {"key": "properties.repositoryAccess", "type": "RepositoryAccess"},
        "repository_resource_info": {"key": "properties.repositoryResourceInfo", "type": "RepositoryResourceInfo"},
        "last_deployment_info": {"key": "properties.lastDeploymentInfo", "type": "DeploymentInfo"},
        "pull_request": {"key": "properties.pullRequest", "type": "PullRequest"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        repo_type: Union[str, "_models.RepoType"],
        content_types: List[Union[str, "_models.ContentType"]],
        repository: "_models.Repository",
        etag: Optional[str] = None,
        description: Optional[str] = None,
        service_principal: Optional["_models.ServicePrincipal"] = None,
        repository_access: Optional["_models.RepositoryAccess"] = None,
        repository_resource_info: Optional["_models.RepositoryResourceInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword display_name: The display name of the source control. Required.
        :paramtype display_name: str
        :keyword description: A description of the source control.
        :paramtype description: str
        :keyword repo_type: The repository type of the source control. Required. Known values are:
         "Github" and "AzureDevOps".
        :paramtype repo_type: str or ~azure.mgmt.securityinsight.models.RepoType
        :keyword content_types: Array of source control content types. Required.
        :paramtype content_types: list[str or ~azure.mgmt.securityinsight.models.ContentType]
        :keyword repository: Repository metadata. Required.
        :paramtype repository: ~azure.mgmt.securityinsight.models.Repository
        :keyword service_principal: Service principal metadata.
        :paramtype service_principal: ~azure.mgmt.securityinsight.models.ServicePrincipal
        :keyword repository_access: Repository access credentials. This is write-only object and it
         never returns back to a user.
        :paramtype repository_access: ~azure.mgmt.securityinsight.models.RepositoryAccess
        :keyword repository_resource_info: Information regarding the resources created in user's
         repository.
        :paramtype repository_resource_info: ~azure.mgmt.securityinsight.models.RepositoryResourceInfo
        """
        super().__init__(etag=etag, **kwargs)
        self.id_properties_id = None
        self.version = None
        self.display_name = display_name
        self.description = description
        self.repo_type = repo_type
        self.content_types = content_types
        self.repository = repository
        self.service_principal = service_principal
        self.repository_access = repository_access
        self.repository_resource_info = repository_resource_info
        self.last_deployment_info = None
        self.pull_request = None


class SourceControlList(_serialization.Model):
    """List all the source controls.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of source controls.
    :vartype next_link: str
    :ivar value: Array of source controls. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.SourceControl]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[SourceControl]"},
    }

    def __init__(self, *, value: List["_models.SourceControl"], **kwargs: Any) -> None:
        """
        :keyword value: Array of source controls. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.SourceControl]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class SubmissionMailEntity(Entity):
    """Represents a submission mail entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar network_message_id: The network message id of email to which submission belongs.
    :vartype network_message_id: str
    :ivar submission_id: The submission id.
    :vartype submission_id: str
    :ivar submitter: The submitter.
    :vartype submitter: str
    :ivar submission_date: The submission date.
    :vartype submission_date: ~datetime.datetime
    :ivar timestamp: The Time stamp when the message is received (Mail).
    :vartype timestamp: ~datetime.datetime
    :ivar recipient: The recipient of the mail.
    :vartype recipient: str
    :ivar sender: The sender of the mail.
    :vartype sender: str
    :ivar sender_ip: The sender's IP.
    :vartype sender_ip: str
    :ivar subject: The subject of submission mail.
    :vartype subject: str
    :ivar report_type: The submission type for the given instance. This maps to Junk, Phish,
     Malware or NotJunk.
    :vartype report_type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "network_message_id": {"readonly": True},
        "submission_id": {"readonly": True},
        "submitter": {"readonly": True},
        "submission_date": {"readonly": True},
        "timestamp": {"readonly": True},
        "recipient": {"readonly": True},
        "sender": {"readonly": True},
        "sender_ip": {"readonly": True},
        "subject": {"readonly": True},
        "report_type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "network_message_id": {"key": "properties.networkMessageId", "type": "str"},
        "submission_id": {"key": "properties.submissionId", "type": "str"},
        "submitter": {"key": "properties.submitter", "type": "str"},
        "submission_date": {"key": "properties.submissionDate", "type": "iso-8601"},
        "timestamp": {"key": "properties.timestamp", "type": "iso-8601"},
        "recipient": {"key": "properties.recipient", "type": "str"},
        "sender": {"key": "properties.sender", "type": "str"},
        "sender_ip": {"key": "properties.senderIp", "type": "str"},
        "subject": {"key": "properties.subject", "type": "str"},
        "report_type": {"key": "properties.reportType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "SubmissionMail"
        self.additional_data = None
        self.friendly_name = None
        self.network_message_id = None
        self.submission_id = None
        self.submitter = None
        self.submission_date = None
        self.timestamp = None
        self.recipient = None
        self.sender = None
        self.sender_ip = None
        self.subject = None
        self.report_type = None


class SubmissionMailEntityProperties(EntityCommonProperties):
    """Submission mail entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar network_message_id: The network message id of email to which submission belongs.
    :vartype network_message_id: str
    :ivar submission_id: The submission id.
    :vartype submission_id: str
    :ivar submitter: The submitter.
    :vartype submitter: str
    :ivar submission_date: The submission date.
    :vartype submission_date: ~datetime.datetime
    :ivar timestamp: The Time stamp when the message is received (Mail).
    :vartype timestamp: ~datetime.datetime
    :ivar recipient: The recipient of the mail.
    :vartype recipient: str
    :ivar sender: The sender of the mail.
    :vartype sender: str
    :ivar sender_ip: The sender's IP.
    :vartype sender_ip: str
    :ivar subject: The subject of submission mail.
    :vartype subject: str
    :ivar report_type: The submission type for the given instance. This maps to Junk, Phish,
     Malware or NotJunk.
    :vartype report_type: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "network_message_id": {"readonly": True},
        "submission_id": {"readonly": True},
        "submitter": {"readonly": True},
        "submission_date": {"readonly": True},
        "timestamp": {"readonly": True},
        "recipient": {"readonly": True},
        "sender": {"readonly": True},
        "sender_ip": {"readonly": True},
        "subject": {"readonly": True},
        "report_type": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "network_message_id": {"key": "networkMessageId", "type": "str"},
        "submission_id": {"key": "submissionId", "type": "str"},
        "submitter": {"key": "submitter", "type": "str"},
        "submission_date": {"key": "submissionDate", "type": "iso-8601"},
        "timestamp": {"key": "timestamp", "type": "iso-8601"},
        "recipient": {"key": "recipient", "type": "str"},
        "sender": {"key": "sender", "type": "str"},
        "sender_ip": {"key": "senderIp", "type": "str"},
        "subject": {"key": "subject", "type": "str"},
        "report_type": {"key": "reportType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.network_message_id = None
        self.submission_id = None
        self.submitter = None
        self.submission_date = None
        self.timestamp = None
        self.recipient = None
        self.sender = None
        self.sender_ip = None
        self.subject = None
        self.report_type = None


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.securityinsight.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.securityinsight.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.securityinsight.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.securityinsight.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TemplateAdditionalProperties(_serialization.Model):
    """additional properties of product template.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar main_template: The JSON of the ARM template to deploy active content. Expandable.
    :vartype main_template: JSON
    :ivar dependant_templates: Dependant templates. Expandable.
    :vartype dependant_templates: list[~azure.mgmt.securityinsight.models.TemplateProperties]
    """

    _validation = {
        "dependant_templates": {"readonly": True},
    }

    _attribute_map = {
        "main_template": {"key": "mainTemplate", "type": "object"},
        "dependant_templates": {"key": "dependantTemplates", "type": "[TemplateProperties]"},
    }

    def __init__(self, *, main_template: Optional[JSON] = None, **kwargs: Any) -> None:
        """
        :keyword main_template: The JSON of the ARM template to deploy active content. Expandable.
        :paramtype main_template: JSON
        """
        super().__init__(**kwargs)
        self.main_template = main_template
        self.dependant_templates = None


class TemplateList(_serialization.Model):
    """List of all the template.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: Array of templates. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.TemplateModel]
    :ivar next_link: URL to fetch the next page of template.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[TemplateModel]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.TemplateModel"], **kwargs: Any) -> None:
        """
        :keyword value: Array of templates. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.TemplateModel]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class TemplateModel(ResourceWithEtag):
    """Template resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId of the package, contentId of the template, contentKind of the template and the
     contentVersion of the template.
    :vartype content_product_id: str
    :ivar package_version: Version of the package.  Default and recommended format is numeric (e.g.
     1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but
     then we cannot guarantee any version checks.
    :vartype package_version: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar display_name: The display name of the template.
    :vartype display_name: str
    :ivar content_kind: The kind of content the template is for. Known values are: "DataConnector",
     "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
     "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
     "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
     "AutomationRule".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the template - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    :ivar package_id: the package Id contains this template.
    :vartype package_id: str
    :ivar package_kind: the packageKind of the package contains this template. Known values are:
     "Solution" and "Standalone".
    :vartype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar package_name: the name of the package contains this template.
    :vartype package_name: str
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    :ivar main_template: The JSON of the ARM template to deploy active content. Expandable.
    :vartype main_template: JSON
    :ivar dependant_templates: Dependant templates. Expandable.
    :vartype dependant_templates: list[~azure.mgmt.securityinsight.models.TemplateProperties]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "is_deprecated": {"readonly": True},
        "dependant_templates": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "content_id": {"key": "properties.contentId", "type": "str"},
        "content_product_id": {"key": "properties.contentProductId", "type": "str"},
        "package_version": {"key": "properties.packageVersion", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "content_kind": {"key": "properties.contentKind", "type": "str"},
        "source": {"key": "properties.source", "type": "MetadataSource"},
        "author": {"key": "properties.author", "type": "MetadataAuthor"},
        "support": {"key": "properties.support", "type": "MetadataSupport"},
        "dependencies": {"key": "properties.dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "properties.categories", "type": "MetadataCategories"},
        "providers": {"key": "properties.providers", "type": "[str]"},
        "first_publish_date": {"key": "properties.firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "properties.lastPublishDate", "type": "date"},
        "custom_version": {"key": "properties.customVersion", "type": "str"},
        "content_schema_version": {"key": "properties.contentSchemaVersion", "type": "str"},
        "icon": {"key": "properties.icon", "type": "str"},
        "threat_analysis_tactics": {"key": "properties.threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "properties.threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "properties.previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "properties.previewImagesDark", "type": "[str]"},
        "package_id": {"key": "properties.packageId", "type": "str"},
        "package_kind": {"key": "properties.packageKind", "type": "str"},
        "package_name": {"key": "properties.packageName", "type": "str"},
        "is_deprecated": {"key": "properties.isDeprecated", "type": "str"},
        "main_template": {"key": "properties.mainTemplate", "type": "object"},
        "dependant_templates": {"key": "properties.dependantTemplates", "type": "[TemplateProperties]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        package_version: Optional[str] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.Kind"]] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        package_id: Optional[str] = None,
        package_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        package_name: Optional[str] = None,
        main_template: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId of the package, contentId of the template, contentKind of the template and the
         contentVersion of the template.
        :paramtype content_product_id: str
        :keyword package_version: Version of the package.  Default and recommended format is numeric
         (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string,
         but then we cannot guarantee any version checks.
        :paramtype package_version: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword display_name: The display name of the template.
        :paramtype display_name: str
        :keyword content_kind: The kind of content the template is for. Known values are:
         "DataConnector", "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
         "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
         "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
         "AutomationRule".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the template - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        :keyword package_id: the package Id contains this template.
        :paramtype package_id: str
        :keyword package_kind: the packageKind of the package contains this template. Known values are:
         "Solution" and "Standalone".
        :paramtype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword package_name: the name of the package contains this template.
        :paramtype package_name: str
        :keyword main_template: The JSON of the ARM template to deploy active content. Expandable.
        :paramtype main_template: JSON
        """
        super().__init__(etag=etag, **kwargs)
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.package_version = package_version
        self.version = version
        self.display_name = display_name
        self.content_kind = content_kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark
        self.package_id = package_id
        self.package_kind = package_kind
        self.package_name = package_name
        self.is_deprecated = None
        self.main_template = main_template
        self.dependant_templates = None


class TemplateProperties(TemplateBaseProperties, TemplateAdditionalProperties):
    """Template property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar main_template: The JSON of the ARM template to deploy active content. Expandable.
    :vartype main_template: JSON
    :ivar dependant_templates: Dependant templates. Expandable.
    :vartype dependant_templates: list[~azure.mgmt.securityinsight.models.TemplateProperties]
    :ivar content_id: Static ID for the content.  Used to identify dependencies and content from
     solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
     for user-created.  This is the resource name.
    :vartype content_id: str
    :ivar content_product_id: Unique ID for the content. It should be generated based on the
     contentId of the package, contentId of the template, contentKind of the template and the
     contentVersion of the template.
    :vartype content_product_id: str
    :ivar package_version: Version of the package.  Default and recommended format is numeric (e.g.
     1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but
     then we cannot guarantee any version checks.
    :vartype package_version: str
    :ivar version: Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0,
     1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we
     cannot guarantee any version checks.
    :vartype version: str
    :ivar display_name: The display name of the template.
    :vartype display_name: str
    :ivar content_kind: The kind of content the template is for. Known values are: "DataConnector",
     "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
     "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
     "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
     "AutomationRule".
    :vartype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
    :ivar source: Source of the content.  This is where/how it was created.
    :vartype source: ~azure.mgmt.securityinsight.models.MetadataSource
    :ivar author: The creator of the content item.
    :vartype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
    :ivar support: Support information for the template - type, name, contact information.
    :vartype support: ~azure.mgmt.securityinsight.models.MetadataSupport
    :ivar dependencies: Dependencies for the content item, what other content items it requires to
     work.  Can describe more complex dependencies using a recursive/nested structure. For a single
     dependency an id/kind/version can be supplied or operator/criteria for complex formats.
    :vartype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
    :ivar categories: Categories for the item.
    :vartype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
    :ivar providers: Providers for the content item.
    :vartype providers: list[str]
    :ivar first_publish_date: first publish date content item.
    :vartype first_publish_date: ~datetime.date
    :ivar last_publish_date: last publish date for the content item.
    :vartype last_publish_date: ~datetime.date
    :ivar custom_version: The custom version of the content. A optional free text.
    :vartype custom_version: str
    :ivar content_schema_version: Schema version of the content. Can be used to distinguish between
     different flow based on the schema version.
    :vartype content_schema_version: str
    :ivar icon: the icon identifier. this id can later be fetched from the content metadata.
    :vartype icon: str
    :ivar threat_analysis_tactics: the tactics the resource covers.
    :vartype threat_analysis_tactics: list[str]
    :ivar threat_analysis_techniques: the techniques the resource covers, these have to be aligned
     with the tactics being used.
    :vartype threat_analysis_techniques: list[str]
    :ivar preview_images: preview image file names. These will be taken from the solution
     artifacts.
    :vartype preview_images: list[str]
    :ivar preview_images_dark: preview image file names. These will be taken from the solution
     artifacts. used for dark theme support.
    :vartype preview_images_dark: list[str]
    :ivar package_id: the package Id contains this template.
    :vartype package_id: str
    :ivar package_kind: the packageKind of the package contains this template. Known values are:
     "Solution" and "Standalone".
    :vartype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
    :ivar package_name: the name of the package contains this template.
    :vartype package_name: str
    :ivar is_deprecated: Flag indicates if this template is deprecated. Known values are: "true"
     and "false".
    :vartype is_deprecated: str or ~azure.mgmt.securityinsight.models.Flag
    """

    _validation = {
        "dependant_templates": {"readonly": True},
        "is_deprecated": {"readonly": True},
    }

    _attribute_map = {
        "main_template": {"key": "mainTemplate", "type": "object"},
        "dependant_templates": {"key": "dependantTemplates", "type": "[TemplateProperties]"},
        "content_id": {"key": "contentId", "type": "str"},
        "content_product_id": {"key": "contentProductId", "type": "str"},
        "package_version": {"key": "packageVersion", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "content_kind": {"key": "contentKind", "type": "str"},
        "source": {"key": "source", "type": "MetadataSource"},
        "author": {"key": "author", "type": "MetadataAuthor"},
        "support": {"key": "support", "type": "MetadataSupport"},
        "dependencies": {"key": "dependencies", "type": "MetadataDependencies"},
        "categories": {"key": "categories", "type": "MetadataCategories"},
        "providers": {"key": "providers", "type": "[str]"},
        "first_publish_date": {"key": "firstPublishDate", "type": "date"},
        "last_publish_date": {"key": "lastPublishDate", "type": "date"},
        "custom_version": {"key": "customVersion", "type": "str"},
        "content_schema_version": {"key": "contentSchemaVersion", "type": "str"},
        "icon": {"key": "icon", "type": "str"},
        "threat_analysis_tactics": {"key": "threatAnalysisTactics", "type": "[str]"},
        "threat_analysis_techniques": {"key": "threatAnalysisTechniques", "type": "[str]"},
        "preview_images": {"key": "previewImages", "type": "[str]"},
        "preview_images_dark": {"key": "previewImagesDark", "type": "[str]"},
        "package_id": {"key": "packageId", "type": "str"},
        "package_kind": {"key": "packageKind", "type": "str"},
        "package_name": {"key": "packageName", "type": "str"},
        "is_deprecated": {"key": "isDeprecated", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        main_template: Optional[JSON] = None,
        content_id: Optional[str] = None,
        content_product_id: Optional[str] = None,
        package_version: Optional[str] = None,
        version: Optional[str] = None,
        display_name: Optional[str] = None,
        content_kind: Optional[Union[str, "_models.Kind"]] = None,
        source: Optional["_models.MetadataSource"] = None,
        author: Optional["_models.MetadataAuthor"] = None,
        support: Optional["_models.MetadataSupport"] = None,
        dependencies: Optional["_models.MetadataDependencies"] = None,
        categories: Optional["_models.MetadataCategories"] = None,
        providers: Optional[List[str]] = None,
        first_publish_date: Optional[datetime.date] = None,
        last_publish_date: Optional[datetime.date] = None,
        custom_version: Optional[str] = None,
        content_schema_version: Optional[str] = None,
        icon: Optional[str] = None,
        threat_analysis_tactics: Optional[List[str]] = None,
        threat_analysis_techniques: Optional[List[str]] = None,
        preview_images: Optional[List[str]] = None,
        preview_images_dark: Optional[List[str]] = None,
        package_id: Optional[str] = None,
        package_kind: Optional[Union[str, "_models.PackageKind"]] = None,
        package_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword main_template: The JSON of the ARM template to deploy active content. Expandable.
        :paramtype main_template: JSON
        :keyword content_id: Static ID for the content.  Used to identify dependencies and content from
         solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic
         for user-created.  This is the resource name.
        :paramtype content_id: str
        :keyword content_product_id: Unique ID for the content. It should be generated based on the
         contentId of the package, contentId of the template, contentKind of the template and the
         contentVersion of the template.
        :paramtype content_product_id: str
        :keyword package_version: Version of the package.  Default and recommended format is numeric
         (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string,
         but then we cannot guarantee any version checks.
        :paramtype package_version: str
        :keyword version: Version of the content.  Default and recommended format is numeric (e.g. 1,
         1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then
         we cannot guarantee any version checks.
        :paramtype version: str
        :keyword display_name: The display name of the template.
        :paramtype display_name: str
        :keyword content_kind: The kind of content the template is for. Known values are:
         "DataConnector", "DataType", "Workbook", "WorkbookTemplate", "Playbook", "PlaybookTemplate",
         "AnalyticsRuleTemplate", "AnalyticsRule", "HuntingQuery", "InvestigationQuery", "Parser",
         "Watchlist", "WatchlistTemplate", "Solution", "AzureFunction", "LogicAppsCustomConnector", and
         "AutomationRule".
        :paramtype content_kind: str or ~azure.mgmt.securityinsight.models.Kind
        :keyword source: Source of the content.  This is where/how it was created.
        :paramtype source: ~azure.mgmt.securityinsight.models.MetadataSource
        :keyword author: The creator of the content item.
        :paramtype author: ~azure.mgmt.securityinsight.models.MetadataAuthor
        :keyword support: Support information for the template - type, name, contact information.
        :paramtype support: ~azure.mgmt.securityinsight.models.MetadataSupport
        :keyword dependencies: Dependencies for the content item, what other content items it requires
         to work.  Can describe more complex dependencies using a recursive/nested structure. For a
         single dependency an id/kind/version can be supplied or operator/criteria for complex formats.
        :paramtype dependencies: ~azure.mgmt.securityinsight.models.MetadataDependencies
        :keyword categories: Categories for the item.
        :paramtype categories: ~azure.mgmt.securityinsight.models.MetadataCategories
        :keyword providers: Providers for the content item.
        :paramtype providers: list[str]
        :keyword first_publish_date: first publish date content item.
        :paramtype first_publish_date: ~datetime.date
        :keyword last_publish_date: last publish date for the content item.
        :paramtype last_publish_date: ~datetime.date
        :keyword custom_version: The custom version of the content. A optional free text.
        :paramtype custom_version: str
        :keyword content_schema_version: Schema version of the content. Can be used to distinguish
         between different flow based on the schema version.
        :paramtype content_schema_version: str
        :keyword icon: the icon identifier. this id can later be fetched from the content metadata.
        :paramtype icon: str
        :keyword threat_analysis_tactics: the tactics the resource covers.
        :paramtype threat_analysis_tactics: list[str]
        :keyword threat_analysis_techniques: the techniques the resource covers, these have to be
         aligned with the tactics being used.
        :paramtype threat_analysis_techniques: list[str]
        :keyword preview_images: preview image file names. These will be taken from the solution
         artifacts.
        :paramtype preview_images: list[str]
        :keyword preview_images_dark: preview image file names. These will be taken from the solution
         artifacts. used for dark theme support.
        :paramtype preview_images_dark: list[str]
        :keyword package_id: the package Id contains this template.
        :paramtype package_id: str
        :keyword package_kind: the packageKind of the package contains this template. Known values are:
         "Solution" and "Standalone".
        :paramtype package_kind: str or ~azure.mgmt.securityinsight.models.PackageKind
        :keyword package_name: the name of the package contains this template.
        :paramtype package_name: str
        """
        super().__init__(
            content_id=content_id,
            content_product_id=content_product_id,
            package_version=package_version,
            version=version,
            display_name=display_name,
            content_kind=content_kind,
            source=source,
            author=author,
            support=support,
            dependencies=dependencies,
            categories=categories,
            providers=providers,
            first_publish_date=first_publish_date,
            last_publish_date=last_publish_date,
            custom_version=custom_version,
            content_schema_version=content_schema_version,
            icon=icon,
            threat_analysis_tactics=threat_analysis_tactics,
            threat_analysis_techniques=threat_analysis_techniques,
            preview_images=preview_images,
            preview_images_dark=preview_images_dark,
            package_id=package_id,
            package_kind=package_kind,
            package_name=package_name,
            main_template=main_template,
            **kwargs
        )
        self.main_template = main_template
        self.dependant_templates = None
        self.content_id = content_id
        self.content_product_id = content_product_id
        self.package_version = package_version
        self.version = version
        self.display_name = display_name
        self.content_kind = content_kind
        self.source = source
        self.author = author
        self.support = support
        self.dependencies = dependencies
        self.categories = categories
        self.providers = providers
        self.first_publish_date = first_publish_date
        self.last_publish_date = last_publish_date
        self.custom_version = custom_version
        self.content_schema_version = content_schema_version
        self.icon = icon
        self.threat_analysis_tactics = threat_analysis_tactics
        self.threat_analysis_techniques = threat_analysis_techniques
        self.preview_images = preview_images
        self.preview_images_dark = preview_images_dark
        self.package_id = package_id
        self.package_kind = package_kind
        self.package_name = package_name
        self.is_deprecated = None


class ThreatIntelligence(_serialization.Model):
    """ThreatIntelligence property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar confidence: Confidence (must be between 0 and 1).
    :vartype confidence: float
    :ivar provider_name: Name of the provider from whom this Threat Intelligence information was
     received.
    :vartype provider_name: str
    :ivar report_link: Report link.
    :vartype report_link: str
    :ivar threat_description: Threat description (free text).
    :vartype threat_description: str
    :ivar threat_name: Threat name (e.g. "Jedobot malware").
    :vartype threat_name: str
    :ivar threat_type: Threat type (e.g. "Botnet").
    :vartype threat_type: str
    """

    _validation = {
        "confidence": {"readonly": True},
        "provider_name": {"readonly": True},
        "report_link": {"readonly": True},
        "threat_description": {"readonly": True},
        "threat_name": {"readonly": True},
        "threat_type": {"readonly": True},
    }

    _attribute_map = {
        "confidence": {"key": "confidence", "type": "float"},
        "provider_name": {"key": "providerName", "type": "str"},
        "report_link": {"key": "reportLink", "type": "str"},
        "threat_description": {"key": "threatDescription", "type": "str"},
        "threat_name": {"key": "threatName", "type": "str"},
        "threat_type": {"key": "threatType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.confidence = None
        self.provider_name = None
        self.report_link = None
        self.threat_description = None
        self.threat_name = None
        self.threat_type = None


class ThreatIntelligenceAppendTags(_serialization.Model):
    """Array of tags to be appended to the threat intelligence indicator.

    :ivar threat_intelligence_tags: List of tags to be appended.
    :vartype threat_intelligence_tags: list[str]
    """

    _attribute_map = {
        "threat_intelligence_tags": {"key": "threatIntelligenceTags", "type": "[str]"},
    }

    def __init__(self, *, threat_intelligence_tags: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword threat_intelligence_tags: List of tags to be appended.
        :paramtype threat_intelligence_tags: list[str]
        """
        super().__init__(**kwargs)
        self.threat_intelligence_tags = threat_intelligence_tags


class ThreatIntelligenceExternalReference(_serialization.Model):
    """Describes external reference.

    :ivar description: External reference description.
    :vartype description: str
    :ivar external_id: External reference ID.
    :vartype external_id: str
    :ivar source_name: External reference source name.
    :vartype source_name: str
    :ivar url: External reference URL.
    :vartype url: str
    :ivar hashes: External reference hashes.
    :vartype hashes: dict[str, str]
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "external_id": {"key": "externalId", "type": "str"},
        "source_name": {"key": "sourceName", "type": "str"},
        "url": {"key": "url", "type": "str"},
        "hashes": {"key": "hashes", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        external_id: Optional[str] = None,
        source_name: Optional[str] = None,
        url: Optional[str] = None,
        hashes: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: External reference description.
        :paramtype description: str
        :keyword external_id: External reference ID.
        :paramtype external_id: str
        :keyword source_name: External reference source name.
        :paramtype source_name: str
        :keyword url: External reference URL.
        :paramtype url: str
        :keyword hashes: External reference hashes.
        :paramtype hashes: dict[str, str]
        """
        super().__init__(**kwargs)
        self.description = description
        self.external_id = external_id
        self.source_name = source_name
        self.url = url
        self.hashes = hashes


class ThreatIntelligenceFilteringCriteria(_serialization.Model):
    """Filtering criteria for querying threat intelligence indicators.

    :ivar page_size: Page size.
    :vartype page_size: int
    :ivar min_confidence: Minimum confidence.
    :vartype min_confidence: int
    :ivar max_confidence: Maximum confidence.
    :vartype max_confidence: int
    :ivar min_valid_until: Start time for ValidUntil filter.
    :vartype min_valid_until: str
    :ivar max_valid_until: End time for ValidUntil filter.
    :vartype max_valid_until: str
    :ivar include_disabled: Parameter to include/exclude disabled indicators.
    :vartype include_disabled: bool
    :ivar sort_by: Columns to sort by and sorting order.
    :vartype sort_by: list[~azure.mgmt.securityinsight.models.ThreatIntelligenceSortingCriteria]
    :ivar sources: Sources of threat intelligence indicators.
    :vartype sources: list[str]
    :ivar pattern_types: Pattern types.
    :vartype pattern_types: list[str]
    :ivar threat_types: Threat types of threat intelligence indicators.
    :vartype threat_types: list[str]
    :ivar ids: Ids of threat intelligence indicators.
    :vartype ids: list[str]
    :ivar keywords: Keywords for searching threat intelligence indicators.
    :vartype keywords: list[str]
    :ivar skip_token: Skip token.
    :vartype skip_token: str
    """

    _attribute_map = {
        "page_size": {"key": "pageSize", "type": "int"},
        "min_confidence": {"key": "minConfidence", "type": "int"},
        "max_confidence": {"key": "maxConfidence", "type": "int"},
        "min_valid_until": {"key": "minValidUntil", "type": "str"},
        "max_valid_until": {"key": "maxValidUntil", "type": "str"},
        "include_disabled": {"key": "includeDisabled", "type": "bool"},
        "sort_by": {"key": "sortBy", "type": "[ThreatIntelligenceSortingCriteria]"},
        "sources": {"key": "sources", "type": "[str]"},
        "pattern_types": {"key": "patternTypes", "type": "[str]"},
        "threat_types": {"key": "threatTypes", "type": "[str]"},
        "ids": {"key": "ids", "type": "[str]"},
        "keywords": {"key": "keywords", "type": "[str]"},
        "skip_token": {"key": "skipToken", "type": "str"},
    }

    def __init__(
        self,
        *,
        page_size: Optional[int] = None,
        min_confidence: Optional[int] = None,
        max_confidence: Optional[int] = None,
        min_valid_until: Optional[str] = None,
        max_valid_until: Optional[str] = None,
        include_disabled: Optional[bool] = None,
        sort_by: Optional[List["_models.ThreatIntelligenceSortingCriteria"]] = None,
        sources: Optional[List[str]] = None,
        pattern_types: Optional[List[str]] = None,
        threat_types: Optional[List[str]] = None,
        ids: Optional[List[str]] = None,
        keywords: Optional[List[str]] = None,
        skip_token: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword page_size: Page size.
        :paramtype page_size: int
        :keyword min_confidence: Minimum confidence.
        :paramtype min_confidence: int
        :keyword max_confidence: Maximum confidence.
        :paramtype max_confidence: int
        :keyword min_valid_until: Start time for ValidUntil filter.
        :paramtype min_valid_until: str
        :keyword max_valid_until: End time for ValidUntil filter.
        :paramtype max_valid_until: str
        :keyword include_disabled: Parameter to include/exclude disabled indicators.
        :paramtype include_disabled: bool
        :keyword sort_by: Columns to sort by and sorting order.
        :paramtype sort_by: list[~azure.mgmt.securityinsight.models.ThreatIntelligenceSortingCriteria]
        :keyword sources: Sources of threat intelligence indicators.
        :paramtype sources: list[str]
        :keyword pattern_types: Pattern types.
        :paramtype pattern_types: list[str]
        :keyword threat_types: Threat types of threat intelligence indicators.
        :paramtype threat_types: list[str]
        :keyword ids: Ids of threat intelligence indicators.
        :paramtype ids: list[str]
        :keyword keywords: Keywords for searching threat intelligence indicators.
        :paramtype keywords: list[str]
        :keyword skip_token: Skip token.
        :paramtype skip_token: str
        """
        super().__init__(**kwargs)
        self.page_size = page_size
        self.min_confidence = min_confidence
        self.max_confidence = max_confidence
        self.min_valid_until = min_valid_until
        self.max_valid_until = max_valid_until
        self.include_disabled = include_disabled
        self.sort_by = sort_by
        self.sources = sources
        self.pattern_types = pattern_types
        self.threat_types = threat_types
        self.ids = ids
        self.keywords = keywords
        self.skip_token = skip_token


class ThreatIntelligenceGranularMarkingModel(_serialization.Model):
    """Describes threat granular marking model entity.

    :ivar language: Language granular marking model.
    :vartype language: str
    :ivar marking_ref: marking reference granular marking model.
    :vartype marking_ref: int
    :ivar selectors: granular marking model selectors.
    :vartype selectors: list[str]
    """

    _attribute_map = {
        "language": {"key": "language", "type": "str"},
        "marking_ref": {"key": "markingRef", "type": "int"},
        "selectors": {"key": "selectors", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        language: Optional[str] = None,
        marking_ref: Optional[int] = None,
        selectors: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword language: Language granular marking model.
        :paramtype language: str
        :keyword marking_ref: marking reference granular marking model.
        :paramtype marking_ref: int
        :keyword selectors: granular marking model selectors.
        :paramtype selectors: list[str]
        """
        super().__init__(**kwargs)
        self.language = language
        self.marking_ref = marking_ref
        self.selectors = selectors


class ThreatIntelligenceInformation(ResourceWithEtag):
    """Threat intelligence information object.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ThreatIntelligenceIndicatorModel

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The kind of the entity. Required. "indicator"
    :vartype kind: str or ~azure.mgmt.securityinsight.models.ThreatIntelligenceResourceInnerKind
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {"kind": {"indicator": "ThreatIntelligenceIndicatorModel"}}

    def __init__(self, *, etag: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: Optional[str] = None


class ThreatIntelligenceIndicatorModel(ThreatIntelligenceInformation):
    """Threat intelligence indicator entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The kind of the entity. Required. "indicator"
    :vartype kind: str or ~azure.mgmt.securityinsight.models.ThreatIntelligenceResourceInnerKind
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar threat_intelligence_tags: List of tags.
    :vartype threat_intelligence_tags: list[str]
    :ivar last_updated_time_utc: Last updated time in UTC.
    :vartype last_updated_time_utc: str
    :ivar source: Source of a threat intelligence entity.
    :vartype source: str
    :ivar display_name: Display name of a threat intelligence entity.
    :vartype display_name: str
    :ivar description: Description of a threat intelligence entity.
    :vartype description: str
    :ivar indicator_types: Indicator types of threat intelligence entities.
    :vartype indicator_types: list[str]
    :ivar pattern: Pattern of a threat intelligence entity.
    :vartype pattern: str
    :ivar pattern_type: Pattern type of a threat intelligence entity.
    :vartype pattern_type: str
    :ivar pattern_version: Pattern version of a threat intelligence entity.
    :vartype pattern_version: str
    :ivar kill_chain_phases: Kill chain phases.
    :vartype kill_chain_phases:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceKillChainPhase]
    :ivar parsed_pattern: Parsed patterns.
    :vartype parsed_pattern:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceParsedPattern]
    :ivar external_id: External ID of threat intelligence entity.
    :vartype external_id: str
    :ivar created_by_ref: Created by reference of threat intelligence entity.
    :vartype created_by_ref: str
    :ivar defanged: Is threat intelligence entity defanged.
    :vartype defanged: bool
    :ivar external_last_updated_time_utc: External last updated time in UTC.
    :vartype external_last_updated_time_utc: str
    :ivar external_references: External References.
    :vartype external_references:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceExternalReference]
    :ivar granular_markings: Granular Markings.
    :vartype granular_markings:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceGranularMarkingModel]
    :ivar labels: Labels  of threat intelligence entity.
    :vartype labels: list[str]
    :ivar revoked: Is threat intelligence entity revoked.
    :vartype revoked: bool
    :ivar confidence: Confidence of threat intelligence entity.
    :vartype confidence: int
    :ivar object_marking_refs: Threat intelligence entity object marking references.
    :vartype object_marking_refs: list[str]
    :ivar language: Language of threat intelligence entity.
    :vartype language: str
    :ivar threat_types: Threat types.
    :vartype threat_types: list[str]
    :ivar valid_from: Valid from.
    :vartype valid_from: str
    :ivar valid_until: Valid until.
    :vartype valid_until: str
    :ivar created: Created by.
    :vartype created: str
    :ivar modified: Modified by.
    :vartype modified: str
    :ivar extensions: Extensions map.
    :vartype extensions: dict[str, any]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "threat_intelligence_tags": {"key": "properties.threatIntelligenceTags", "type": "[str]"},
        "last_updated_time_utc": {"key": "properties.lastUpdatedTimeUtc", "type": "str"},
        "source": {"key": "properties.source", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "indicator_types": {"key": "properties.indicatorTypes", "type": "[str]"},
        "pattern": {"key": "properties.pattern", "type": "str"},
        "pattern_type": {"key": "properties.patternType", "type": "str"},
        "pattern_version": {"key": "properties.patternVersion", "type": "str"},
        "kill_chain_phases": {"key": "properties.killChainPhases", "type": "[ThreatIntelligenceKillChainPhase]"},
        "parsed_pattern": {"key": "properties.parsedPattern", "type": "[ThreatIntelligenceParsedPattern]"},
        "external_id": {"key": "properties.externalId", "type": "str"},
        "created_by_ref": {"key": "properties.createdByRef", "type": "str"},
        "defanged": {"key": "properties.defanged", "type": "bool"},
        "external_last_updated_time_utc": {"key": "properties.externalLastUpdatedTimeUtc", "type": "str"},
        "external_references": {
            "key": "properties.externalReferences",
            "type": "[ThreatIntelligenceExternalReference]",
        },
        "granular_markings": {"key": "properties.granularMarkings", "type": "[ThreatIntelligenceGranularMarkingModel]"},
        "labels": {"key": "properties.labels", "type": "[str]"},
        "revoked": {"key": "properties.revoked", "type": "bool"},
        "confidence": {"key": "properties.confidence", "type": "int"},
        "object_marking_refs": {"key": "properties.objectMarkingRefs", "type": "[str]"},
        "language": {"key": "properties.language", "type": "str"},
        "threat_types": {"key": "properties.threatTypes", "type": "[str]"},
        "valid_from": {"key": "properties.validFrom", "type": "str"},
        "valid_until": {"key": "properties.validUntil", "type": "str"},
        "created": {"key": "properties.created", "type": "str"},
        "modified": {"key": "properties.modified", "type": "str"},
        "extensions": {"key": "properties.extensions", "type": "{object}"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        threat_intelligence_tags: Optional[List[str]] = None,
        last_updated_time_utc: Optional[str] = None,
        source: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        indicator_types: Optional[List[str]] = None,
        pattern: Optional[str] = None,
        pattern_type: Optional[str] = None,
        pattern_version: Optional[str] = None,
        kill_chain_phases: Optional[List["_models.ThreatIntelligenceKillChainPhase"]] = None,
        parsed_pattern: Optional[List["_models.ThreatIntelligenceParsedPattern"]] = None,
        external_id: Optional[str] = None,
        created_by_ref: Optional[str] = None,
        defanged: Optional[bool] = None,
        external_last_updated_time_utc: Optional[str] = None,
        external_references: Optional[List["_models.ThreatIntelligenceExternalReference"]] = None,
        granular_markings: Optional[List["_models.ThreatIntelligenceGranularMarkingModel"]] = None,
        labels: Optional[List[str]] = None,
        revoked: Optional[bool] = None,
        confidence: Optional[int] = None,
        object_marking_refs: Optional[List[str]] = None,
        language: Optional[str] = None,
        threat_types: Optional[List[str]] = None,
        valid_from: Optional[str] = None,
        valid_until: Optional[str] = None,
        created: Optional[str] = None,
        modified: Optional[str] = None,
        extensions: Optional[Dict[str, Any]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword threat_intelligence_tags: List of tags.
        :paramtype threat_intelligence_tags: list[str]
        :keyword last_updated_time_utc: Last updated time in UTC.
        :paramtype last_updated_time_utc: str
        :keyword source: Source of a threat intelligence entity.
        :paramtype source: str
        :keyword display_name: Display name of a threat intelligence entity.
        :paramtype display_name: str
        :keyword description: Description of a threat intelligence entity.
        :paramtype description: str
        :keyword indicator_types: Indicator types of threat intelligence entities.
        :paramtype indicator_types: list[str]
        :keyword pattern: Pattern of a threat intelligence entity.
        :paramtype pattern: str
        :keyword pattern_type: Pattern type of a threat intelligence entity.
        :paramtype pattern_type: str
        :keyword pattern_version: Pattern version of a threat intelligence entity.
        :paramtype pattern_version: str
        :keyword kill_chain_phases: Kill chain phases.
        :paramtype kill_chain_phases:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceKillChainPhase]
        :keyword parsed_pattern: Parsed patterns.
        :paramtype parsed_pattern:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceParsedPattern]
        :keyword external_id: External ID of threat intelligence entity.
        :paramtype external_id: str
        :keyword created_by_ref: Created by reference of threat intelligence entity.
        :paramtype created_by_ref: str
        :keyword defanged: Is threat intelligence entity defanged.
        :paramtype defanged: bool
        :keyword external_last_updated_time_utc: External last updated time in UTC.
        :paramtype external_last_updated_time_utc: str
        :keyword external_references: External References.
        :paramtype external_references:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceExternalReference]
        :keyword granular_markings: Granular Markings.
        :paramtype granular_markings:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceGranularMarkingModel]
        :keyword labels: Labels  of threat intelligence entity.
        :paramtype labels: list[str]
        :keyword revoked: Is threat intelligence entity revoked.
        :paramtype revoked: bool
        :keyword confidence: Confidence of threat intelligence entity.
        :paramtype confidence: int
        :keyword object_marking_refs: Threat intelligence entity object marking references.
        :paramtype object_marking_refs: list[str]
        :keyword language: Language of threat intelligence entity.
        :paramtype language: str
        :keyword threat_types: Threat types.
        :paramtype threat_types: list[str]
        :keyword valid_from: Valid from.
        :paramtype valid_from: str
        :keyword valid_until: Valid until.
        :paramtype valid_until: str
        :keyword created: Created by.
        :paramtype created: str
        :keyword modified: Modified by.
        :paramtype modified: str
        :keyword extensions: Extensions map.
        :paramtype extensions: dict[str, any]
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "indicator"
        self.additional_data = None
        self.friendly_name = None
        self.threat_intelligence_tags = threat_intelligence_tags
        self.last_updated_time_utc = last_updated_time_utc
        self.source = source
        self.display_name = display_name
        self.description = description
        self.indicator_types = indicator_types
        self.pattern = pattern
        self.pattern_type = pattern_type
        self.pattern_version = pattern_version
        self.kill_chain_phases = kill_chain_phases
        self.parsed_pattern = parsed_pattern
        self.external_id = external_id
        self.created_by_ref = created_by_ref
        self.defanged = defanged
        self.external_last_updated_time_utc = external_last_updated_time_utc
        self.external_references = external_references
        self.granular_markings = granular_markings
        self.labels = labels
        self.revoked = revoked
        self.confidence = confidence
        self.object_marking_refs = object_marking_refs
        self.language = language
        self.threat_types = threat_types
        self.valid_from = valid_from
        self.valid_until = valid_until
        self.created = created
        self.modified = modified
        self.extensions = extensions


class ThreatIntelligenceIndicatorProperties(EntityCommonProperties):
    """Describes threat intelligence entity properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar threat_intelligence_tags: List of tags.
    :vartype threat_intelligence_tags: list[str]
    :ivar last_updated_time_utc: Last updated time in UTC.
    :vartype last_updated_time_utc: str
    :ivar source: Source of a threat intelligence entity.
    :vartype source: str
    :ivar display_name: Display name of a threat intelligence entity.
    :vartype display_name: str
    :ivar description: Description of a threat intelligence entity.
    :vartype description: str
    :ivar indicator_types: Indicator types of threat intelligence entities.
    :vartype indicator_types: list[str]
    :ivar pattern: Pattern of a threat intelligence entity.
    :vartype pattern: str
    :ivar pattern_type: Pattern type of a threat intelligence entity.
    :vartype pattern_type: str
    :ivar pattern_version: Pattern version of a threat intelligence entity.
    :vartype pattern_version: str
    :ivar kill_chain_phases: Kill chain phases.
    :vartype kill_chain_phases:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceKillChainPhase]
    :ivar parsed_pattern: Parsed patterns.
    :vartype parsed_pattern:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceParsedPattern]
    :ivar external_id: External ID of threat intelligence entity.
    :vartype external_id: str
    :ivar created_by_ref: Created by reference of threat intelligence entity.
    :vartype created_by_ref: str
    :ivar defanged: Is threat intelligence entity defanged.
    :vartype defanged: bool
    :ivar external_last_updated_time_utc: External last updated time in UTC.
    :vartype external_last_updated_time_utc: str
    :ivar external_references: External References.
    :vartype external_references:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceExternalReference]
    :ivar granular_markings: Granular Markings.
    :vartype granular_markings:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceGranularMarkingModel]
    :ivar labels: Labels  of threat intelligence entity.
    :vartype labels: list[str]
    :ivar revoked: Is threat intelligence entity revoked.
    :vartype revoked: bool
    :ivar confidence: Confidence of threat intelligence entity.
    :vartype confidence: int
    :ivar object_marking_refs: Threat intelligence entity object marking references.
    :vartype object_marking_refs: list[str]
    :ivar language: Language of threat intelligence entity.
    :vartype language: str
    :ivar threat_types: Threat types.
    :vartype threat_types: list[str]
    :ivar valid_from: Valid from.
    :vartype valid_from: str
    :ivar valid_until: Valid until.
    :vartype valid_until: str
    :ivar created: Created by.
    :vartype created: str
    :ivar modified: Modified by.
    :vartype modified: str
    :ivar extensions: Extensions map.
    :vartype extensions: dict[str, any]
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "threat_intelligence_tags": {"key": "threatIntelligenceTags", "type": "[str]"},
        "last_updated_time_utc": {"key": "lastUpdatedTimeUtc", "type": "str"},
        "source": {"key": "source", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "indicator_types": {"key": "indicatorTypes", "type": "[str]"},
        "pattern": {"key": "pattern", "type": "str"},
        "pattern_type": {"key": "patternType", "type": "str"},
        "pattern_version": {"key": "patternVersion", "type": "str"},
        "kill_chain_phases": {"key": "killChainPhases", "type": "[ThreatIntelligenceKillChainPhase]"},
        "parsed_pattern": {"key": "parsedPattern", "type": "[ThreatIntelligenceParsedPattern]"},
        "external_id": {"key": "externalId", "type": "str"},
        "created_by_ref": {"key": "createdByRef", "type": "str"},
        "defanged": {"key": "defanged", "type": "bool"},
        "external_last_updated_time_utc": {"key": "externalLastUpdatedTimeUtc", "type": "str"},
        "external_references": {"key": "externalReferences", "type": "[ThreatIntelligenceExternalReference]"},
        "granular_markings": {"key": "granularMarkings", "type": "[ThreatIntelligenceGranularMarkingModel]"},
        "labels": {"key": "labels", "type": "[str]"},
        "revoked": {"key": "revoked", "type": "bool"},
        "confidence": {"key": "confidence", "type": "int"},
        "object_marking_refs": {"key": "objectMarkingRefs", "type": "[str]"},
        "language": {"key": "language", "type": "str"},
        "threat_types": {"key": "threatTypes", "type": "[str]"},
        "valid_from": {"key": "validFrom", "type": "str"},
        "valid_until": {"key": "validUntil", "type": "str"},
        "created": {"key": "created", "type": "str"},
        "modified": {"key": "modified", "type": "str"},
        "extensions": {"key": "extensions", "type": "{object}"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        threat_intelligence_tags: Optional[List[str]] = None,
        last_updated_time_utc: Optional[str] = None,
        source: Optional[str] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        indicator_types: Optional[List[str]] = None,
        pattern: Optional[str] = None,
        pattern_type: Optional[str] = None,
        pattern_version: Optional[str] = None,
        kill_chain_phases: Optional[List["_models.ThreatIntelligenceKillChainPhase"]] = None,
        parsed_pattern: Optional[List["_models.ThreatIntelligenceParsedPattern"]] = None,
        external_id: Optional[str] = None,
        created_by_ref: Optional[str] = None,
        defanged: Optional[bool] = None,
        external_last_updated_time_utc: Optional[str] = None,
        external_references: Optional[List["_models.ThreatIntelligenceExternalReference"]] = None,
        granular_markings: Optional[List["_models.ThreatIntelligenceGranularMarkingModel"]] = None,
        labels: Optional[List[str]] = None,
        revoked: Optional[bool] = None,
        confidence: Optional[int] = None,
        object_marking_refs: Optional[List[str]] = None,
        language: Optional[str] = None,
        threat_types: Optional[List[str]] = None,
        valid_from: Optional[str] = None,
        valid_until: Optional[str] = None,
        created: Optional[str] = None,
        modified: Optional[str] = None,
        extensions: Optional[Dict[str, Any]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword threat_intelligence_tags: List of tags.
        :paramtype threat_intelligence_tags: list[str]
        :keyword last_updated_time_utc: Last updated time in UTC.
        :paramtype last_updated_time_utc: str
        :keyword source: Source of a threat intelligence entity.
        :paramtype source: str
        :keyword display_name: Display name of a threat intelligence entity.
        :paramtype display_name: str
        :keyword description: Description of a threat intelligence entity.
        :paramtype description: str
        :keyword indicator_types: Indicator types of threat intelligence entities.
        :paramtype indicator_types: list[str]
        :keyword pattern: Pattern of a threat intelligence entity.
        :paramtype pattern: str
        :keyword pattern_type: Pattern type of a threat intelligence entity.
        :paramtype pattern_type: str
        :keyword pattern_version: Pattern version of a threat intelligence entity.
        :paramtype pattern_version: str
        :keyword kill_chain_phases: Kill chain phases.
        :paramtype kill_chain_phases:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceKillChainPhase]
        :keyword parsed_pattern: Parsed patterns.
        :paramtype parsed_pattern:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceParsedPattern]
        :keyword external_id: External ID of threat intelligence entity.
        :paramtype external_id: str
        :keyword created_by_ref: Created by reference of threat intelligence entity.
        :paramtype created_by_ref: str
        :keyword defanged: Is threat intelligence entity defanged.
        :paramtype defanged: bool
        :keyword external_last_updated_time_utc: External last updated time in UTC.
        :paramtype external_last_updated_time_utc: str
        :keyword external_references: External References.
        :paramtype external_references:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceExternalReference]
        :keyword granular_markings: Granular Markings.
        :paramtype granular_markings:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceGranularMarkingModel]
        :keyword labels: Labels  of threat intelligence entity.
        :paramtype labels: list[str]
        :keyword revoked: Is threat intelligence entity revoked.
        :paramtype revoked: bool
        :keyword confidence: Confidence of threat intelligence entity.
        :paramtype confidence: int
        :keyword object_marking_refs: Threat intelligence entity object marking references.
        :paramtype object_marking_refs: list[str]
        :keyword language: Language of threat intelligence entity.
        :paramtype language: str
        :keyword threat_types: Threat types.
        :paramtype threat_types: list[str]
        :keyword valid_from: Valid from.
        :paramtype valid_from: str
        :keyword valid_until: Valid until.
        :paramtype valid_until: str
        :keyword created: Created by.
        :paramtype created: str
        :keyword modified: Modified by.
        :paramtype modified: str
        :keyword extensions: Extensions map.
        :paramtype extensions: dict[str, any]
        """
        super().__init__(**kwargs)
        self.threat_intelligence_tags = threat_intelligence_tags
        self.last_updated_time_utc = last_updated_time_utc
        self.source = source
        self.display_name = display_name
        self.description = description
        self.indicator_types = indicator_types
        self.pattern = pattern
        self.pattern_type = pattern_type
        self.pattern_version = pattern_version
        self.kill_chain_phases = kill_chain_phases
        self.parsed_pattern = parsed_pattern
        self.external_id = external_id
        self.created_by_ref = created_by_ref
        self.defanged = defanged
        self.external_last_updated_time_utc = external_last_updated_time_utc
        self.external_references = external_references
        self.granular_markings = granular_markings
        self.labels = labels
        self.revoked = revoked
        self.confidence = confidence
        self.object_marking_refs = object_marking_refs
        self.language = language
        self.threat_types = threat_types
        self.valid_from = valid_from
        self.valid_until = valid_until
        self.created = created
        self.modified = modified
        self.extensions = extensions


class ThreatIntelligenceInformationList(_serialization.Model):
    """List of all the threat intelligence information objects.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of information objects.
    :vartype next_link: str
    :ivar value: Array of threat intelligence information objects. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.ThreatIntelligenceInformation]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[ThreatIntelligenceInformation]"},
    }

    def __init__(self, *, value: List["_models.ThreatIntelligenceInformation"], **kwargs: Any) -> None:
        """
        :keyword value: Array of threat intelligence information objects. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.ThreatIntelligenceInformation]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class ThreatIntelligenceKillChainPhase(_serialization.Model):
    """Describes threat kill chain phase entity.

    :ivar kill_chain_name: Kill chainName name.
    :vartype kill_chain_name: str
    :ivar phase_name: Phase name.
    :vartype phase_name: str
    """

    _attribute_map = {
        "kill_chain_name": {"key": "killChainName", "type": "str"},
        "phase_name": {"key": "phaseName", "type": "str"},
    }

    def __init__(
        self, *, kill_chain_name: Optional[str] = None, phase_name: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword kill_chain_name: Kill chainName name.
        :paramtype kill_chain_name: str
        :keyword phase_name: Phase name.
        :paramtype phase_name: str
        """
        super().__init__(**kwargs)
        self.kill_chain_name = kill_chain_name
        self.phase_name = phase_name


class ThreatIntelligenceMetric(_serialization.Model):
    """Describes threat intelligence metric.

    :ivar last_updated_time_utc: Last updated indicator metric.
    :vartype last_updated_time_utc: str
    :ivar threat_type_metrics: Threat type metrics.
    :vartype threat_type_metrics:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetricEntity]
    :ivar pattern_type_metrics: Pattern type metrics.
    :vartype pattern_type_metrics:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetricEntity]
    :ivar source_metrics: Source metrics.
    :vartype source_metrics:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetricEntity]
    """

    _attribute_map = {
        "last_updated_time_utc": {"key": "lastUpdatedTimeUtc", "type": "str"},
        "threat_type_metrics": {"key": "threatTypeMetrics", "type": "[ThreatIntelligenceMetricEntity]"},
        "pattern_type_metrics": {"key": "patternTypeMetrics", "type": "[ThreatIntelligenceMetricEntity]"},
        "source_metrics": {"key": "sourceMetrics", "type": "[ThreatIntelligenceMetricEntity]"},
    }

    def __init__(
        self,
        *,
        last_updated_time_utc: Optional[str] = None,
        threat_type_metrics: Optional[List["_models.ThreatIntelligenceMetricEntity"]] = None,
        pattern_type_metrics: Optional[List["_models.ThreatIntelligenceMetricEntity"]] = None,
        source_metrics: Optional[List["_models.ThreatIntelligenceMetricEntity"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword last_updated_time_utc: Last updated indicator metric.
        :paramtype last_updated_time_utc: str
        :keyword threat_type_metrics: Threat type metrics.
        :paramtype threat_type_metrics:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetricEntity]
        :keyword pattern_type_metrics: Pattern type metrics.
        :paramtype pattern_type_metrics:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetricEntity]
        :keyword source_metrics: Source metrics.
        :paramtype source_metrics:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetricEntity]
        """
        super().__init__(**kwargs)
        self.last_updated_time_utc = last_updated_time_utc
        self.threat_type_metrics = threat_type_metrics
        self.pattern_type_metrics = pattern_type_metrics
        self.source_metrics = source_metrics


class ThreatIntelligenceMetricEntity(_serialization.Model):
    """Describes threat intelligence metric entity.

    :ivar metric_name: Metric name.
    :vartype metric_name: str
    :ivar metric_value: Metric value.
    :vartype metric_value: int
    """

    _attribute_map = {
        "metric_name": {"key": "metricName", "type": "str"},
        "metric_value": {"key": "metricValue", "type": "int"},
    }

    def __init__(self, *, metric_name: Optional[str] = None, metric_value: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword metric_name: Metric name.
        :paramtype metric_name: str
        :keyword metric_value: Metric value.
        :paramtype metric_value: int
        """
        super().__init__(**kwargs)
        self.metric_name = metric_name
        self.metric_value = metric_value


class ThreatIntelligenceMetrics(_serialization.Model):
    """Threat intelligence metrics.

    :ivar properties: Threat intelligence metrics.
    :vartype properties: ~azure.mgmt.securityinsight.models.ThreatIntelligenceMetric
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "ThreatIntelligenceMetric"},
    }

    def __init__(self, *, properties: Optional["_models.ThreatIntelligenceMetric"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Threat intelligence metrics.
        :paramtype properties: ~azure.mgmt.securityinsight.models.ThreatIntelligenceMetric
        """
        super().__init__(**kwargs)
        self.properties = properties


class ThreatIntelligenceMetricsList(_serialization.Model):
    """List of all the threat intelligence metric fields (type/threat type/source).

    All required parameters must be populated in order to send to server.

    :ivar value: Array of threat intelligence metric fields (type/threat type/source). Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetrics]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ThreatIntelligenceMetrics]"},
    }

    def __init__(self, *, value: List["_models.ThreatIntelligenceMetrics"], **kwargs: Any) -> None:
        """
        :keyword value: Array of threat intelligence metric fields (type/threat type/source). Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.ThreatIntelligenceMetrics]
        """
        super().__init__(**kwargs)
        self.value = value


class ThreatIntelligenceParsedPattern(_serialization.Model):
    """Describes parsed pattern entity.

    :ivar pattern_type_key: Pattern type key.
    :vartype pattern_type_key: str
    :ivar pattern_type_values: Pattern type keys.
    :vartype pattern_type_values:
     list[~azure.mgmt.securityinsight.models.ThreatIntelligenceParsedPatternTypeValue]
    """

    _attribute_map = {
        "pattern_type_key": {"key": "patternTypeKey", "type": "str"},
        "pattern_type_values": {"key": "patternTypeValues", "type": "[ThreatIntelligenceParsedPatternTypeValue]"},
    }

    def __init__(
        self,
        *,
        pattern_type_key: Optional[str] = None,
        pattern_type_values: Optional[List["_models.ThreatIntelligenceParsedPatternTypeValue"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword pattern_type_key: Pattern type key.
        :paramtype pattern_type_key: str
        :keyword pattern_type_values: Pattern type keys.
        :paramtype pattern_type_values:
         list[~azure.mgmt.securityinsight.models.ThreatIntelligenceParsedPatternTypeValue]
        """
        super().__init__(**kwargs)
        self.pattern_type_key = pattern_type_key
        self.pattern_type_values = pattern_type_values


class ThreatIntelligenceParsedPatternTypeValue(_serialization.Model):
    """Describes threat kill chain phase entity.

    :ivar value_type: Type of the value.
    :vartype value_type: str
    :ivar value: Value of parsed pattern.
    :vartype value: str
    """

    _attribute_map = {
        "value_type": {"key": "valueType", "type": "str"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(self, *, value_type: Optional[str] = None, value: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value_type: Type of the value.
        :paramtype value_type: str
        :keyword value: Value of parsed pattern.
        :paramtype value: str
        """
        super().__init__(**kwargs)
        self.value_type = value_type
        self.value = value


class ThreatIntelligenceSortingCriteria(_serialization.Model):
    """List of available columns for sorting.

    :ivar item_key: Column name.
    :vartype item_key: str
    :ivar sort_order: Sorting order (ascending/descending/unsorted). Known values are: "unsorted",
     "ascending", and "descending".
    :vartype sort_order: str or ~azure.mgmt.securityinsight.models.ThreatIntelligenceSortingOrder
    """

    _attribute_map = {
        "item_key": {"key": "itemKey", "type": "str"},
        "sort_order": {"key": "sortOrder", "type": "str"},
    }

    def __init__(
        self,
        *,
        item_key: Optional[str] = None,
        sort_order: Optional[Union[str, "_models.ThreatIntelligenceSortingOrder"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword item_key: Column name.
        :paramtype item_key: str
        :keyword sort_order: Sorting order (ascending/descending/unsorted). Known values are:
         "unsorted", "ascending", and "descending".
        :paramtype sort_order: str or ~azure.mgmt.securityinsight.models.ThreatIntelligenceSortingOrder
        """
        super().__init__(**kwargs)
        self.item_key = item_key
        self.sort_order = sort_order


class TIDataConnector(DataConnector):
    """Represents threat intelligence data connector.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar kind: The data connector kind. Required. Known values are: "AzureActiveDirectory",
     "AzureSecurityCenter", "MicrosoftCloudAppSecurity", "ThreatIntelligence",
     "MicrosoftThreatIntelligence", "PremiumMicrosoftDefenderForThreatIntelligence", "Office365",
     "AmazonWebServicesCloudTrail", "AzureAdvancedThreatProtection",
     "MicrosoftDefenderAdvancedThreatProtection", and "RestApiPoller".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.DataConnectorKind
    :ivar tenant_id: The tenant id to connect to, and get the data from.
    :vartype tenant_id: str
    :ivar tip_lookback_period: The lookback period for the feed to be imported.
    :vartype tip_lookback_period: ~datetime.datetime
    :ivar data_types: The available data types for the connector.
    :vartype data_types: ~azure.mgmt.securityinsight.models.TIDataConnectorDataTypes
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "tip_lookback_period": {"key": "properties.tipLookbackPeriod", "type": "iso-8601"},
        "data_types": {"key": "properties.dataTypes", "type": "TIDataConnectorDataTypes"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        tenant_id: Optional[str] = None,
        tip_lookback_period: Optional[datetime.datetime] = None,
        data_types: Optional["_models.TIDataConnectorDataTypes"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword tenant_id: The tenant id to connect to, and get the data from.
        :paramtype tenant_id: str
        :keyword tip_lookback_period: The lookback period for the feed to be imported.
        :paramtype tip_lookback_period: ~datetime.datetime
        :keyword data_types: The available data types for the connector.
        :paramtype data_types: ~azure.mgmt.securityinsight.models.TIDataConnectorDataTypes
        """
        super().__init__(etag=etag, **kwargs)
        self.kind: str = "ThreatIntelligence"
        self.tenant_id = tenant_id
        self.tip_lookback_period = tip_lookback_period
        self.data_types = data_types


class TIDataConnectorDataTypes(_serialization.Model):
    """The available data types for TI (Threat Intelligence) data connector.

    :ivar indicators: Data type for indicators connection.
    :vartype indicators: ~azure.mgmt.securityinsight.models.TIDataConnectorDataTypesIndicators
    """

    _attribute_map = {
        "indicators": {"key": "indicators", "type": "TIDataConnectorDataTypesIndicators"},
    }

    def __init__(
        self, *, indicators: Optional["_models.TIDataConnectorDataTypesIndicators"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword indicators: Data type for indicators connection.
        :paramtype indicators: ~azure.mgmt.securityinsight.models.TIDataConnectorDataTypesIndicators
        """
        super().__init__(**kwargs)
        self.indicators = indicators


class TIDataConnectorDataTypesIndicators(DataConnectorDataTypeCommon):
    """Data type for indicators connection.

    :ivar state: Describe whether this data type connection is enabled or not. Known values are:
     "Enabled" and "Disabled".
    :vartype state: str or ~azure.mgmt.securityinsight.models.DataTypeState
    """


class UrlEntity(Entity):
    """Represents a url entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar kind: The kind of the entity. Required. Known values are: "Account", "Host", "File",
     "AzureResource", "CloudApplication", "DnsResolution", "FileHash", "Ip", "Malware", "Process",
     "RegistryKey", "RegistryValue", "SecurityGroup", "Url", "IoTDevice", "SecurityAlert",
     "Bookmark", "MailCluster", "MailMessage", "Mailbox", and "SubmissionMail".
    :vartype kind: str or ~azure.mgmt.securityinsight.models.EntityKindEnum
    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar url: A full URL the entity points to.
    :vartype url: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "kind": {"required": True},
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "url": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "kind": {"key": "kind", "type": "str"},
        "additional_data": {"key": "properties.additionalData", "type": "{object}"},
        "friendly_name": {"key": "properties.friendlyName", "type": "str"},
        "url": {"key": "properties.url", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: str = "Url"
        self.additional_data = None
        self.friendly_name = None
        self.url = None


class UrlEntityProperties(EntityCommonProperties):
    """Url entity property bag.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_data: A bag of custom fields that should be part of the entity and will be
     presented to the user.
    :vartype additional_data: dict[str, any]
    :ivar friendly_name: The graph item display name which is a short humanly readable description
     of the graph item instance. This property is optional and might be system generated.
    :vartype friendly_name: str
    :ivar url: A full URL the entity points to.
    :vartype url: str
    """

    _validation = {
        "additional_data": {"readonly": True},
        "friendly_name": {"readonly": True},
        "url": {"readonly": True},
    }

    _attribute_map = {
        "additional_data": {"key": "additionalData", "type": "{object}"},
        "friendly_name": {"key": "friendlyName", "type": "str"},
        "url": {"key": "url", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.url = None


class UserInfo(_serialization.Model):
    """User information that made some action.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar email: The email of the user.
    :vartype email: str
    :ivar name: The name of the user.
    :vartype name: str
    :ivar object_id: The object id of the user.
    :vartype object_id: str
    """

    _validation = {
        "email": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "email": {"key": "email", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "object_id": {"key": "objectId", "type": "str"},
    }

    def __init__(self, *, object_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword object_id: The object id of the user.
        :paramtype object_id: str
        """
        super().__init__(**kwargs)
        self.email = None
        self.name = None
        self.object_id = object_id


class Warning(_serialization.Model):
    """Warning response structure.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar warning: Warning data.
    :vartype warning: ~azure.mgmt.securityinsight.models.WarningBody
    """

    _validation = {
        "warning": {"readonly": True},
    }

    _attribute_map = {
        "warning": {"key": "warning", "type": "WarningBody"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.warning = None


class WarningBody(_serialization.Model):
    """Warning details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: An identifier for the warning. Codes are invariant and are intended to be consumed
     programmatically. Known values are: "SourceControlWarning_DeleteServicePrincipal",
     "SourceControlWarning_DeletePipelineFromAzureDevOps",
     "SourceControlWarning_DeleteWorkflowAndSecretFromGitHub",
     "SourceControlWarning_DeleteRoleAssignment", and "SourceControl_DeletedWithWarnings".
    :vartype code: str or ~azure.mgmt.securityinsight.models.WarningCode
    :ivar message: A message describing the warning, intended to be suitable for display in a user
     interface.
    :vartype message: str
    :ivar details:
    :vartype details: list[~azure.mgmt.securityinsight.models.WarningBody]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "details": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "details": {"key": "details", "type": "[WarningBody]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.details = None


class Watchlist(ResourceWithEtag):
    """Represents a Watchlist in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar watchlist_id: The id (a Guid) of the watchlist.
    :vartype watchlist_id: str
    :ivar display_name: The display name of the watchlist.
    :vartype display_name: str
    :ivar provider: The provider of the watchlist.
    :vartype provider: str
    :ivar source: The filename of the watchlist, called 'source'.
    :vartype source: str
    :ivar source_type: The sourceType of the watchlist. Known values are: "Local file" and "Remote
     storage".
    :vartype source_type: str or ~azure.mgmt.securityinsight.models.SourceType
    :ivar created: The time the watchlist was created.
    :vartype created: ~datetime.datetime
    :ivar updated: The last time the watchlist was updated.
    :vartype updated: ~datetime.datetime
    :ivar created_by: Describes a user that created the watchlist.
    :vartype created_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar updated_by: Describes a user that updated the watchlist.
    :vartype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar description: A description of the watchlist.
    :vartype description: str
    :ivar watchlist_type: The type of the watchlist.
    :vartype watchlist_type: str
    :ivar watchlist_alias: The alias of the watchlist.
    :vartype watchlist_alias: str
    :ivar is_deleted: A flag that indicates if the watchlist is deleted or not.
    :vartype is_deleted: bool
    :ivar labels: List of labels relevant to this watchlist.
    :vartype labels: list[str]
    :ivar default_duration: The default duration of a watchlist (in ISO 8601 duration format).
    :vartype default_duration: ~datetime.timedelta
    :ivar tenant_id: The tenantId where the watchlist belongs to.
    :vartype tenant_id: str
    :ivar number_of_lines_to_skip: The number of lines in a csv/tsv content to skip before the
     header.
    :vartype number_of_lines_to_skip: int
    :ivar raw_content: The raw content that represents to watchlist items to create. In case of
     csv/tsv content type, it's the content of the file that will parsed by the endpoint.
    :vartype raw_content: str
    :ivar items_search_key: The search key is used to optimize query performance when using
     watchlists for joins with other data. For example, enable a column with IP addresses to be the
     designated SearchKey field, then use this field as the key field when joining to other event
     data by IP address.
    :vartype items_search_key: str
    :ivar content_type: The content type of the raw content. Example : text/csv or text/tsv.
    :vartype content_type: str
    :ivar upload_status: The status of the Watchlist upload : New, InProgress or Complete. **Note**
     : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted.
    :vartype upload_status: str
    :ivar provisioning_state: Describes provisioning state. Known values are: "New", "InProgress",
     "Uploading", "Deleting", "Succeeded", "Failed", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.securityinsight.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "watchlist_id": {"key": "properties.watchlistId", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "provider": {"key": "properties.provider", "type": "str"},
        "source": {"key": "properties.source", "type": "str"},
        "source_type": {"key": "properties.sourceType", "type": "str"},
        "created": {"key": "properties.created", "type": "iso-8601"},
        "updated": {"key": "properties.updated", "type": "iso-8601"},
        "created_by": {"key": "properties.createdBy", "type": "UserInfo"},
        "updated_by": {"key": "properties.updatedBy", "type": "UserInfo"},
        "description": {"key": "properties.description", "type": "str"},
        "watchlist_type": {"key": "properties.watchlistType", "type": "str"},
        "watchlist_alias": {"key": "properties.watchlistAlias", "type": "str"},
        "is_deleted": {"key": "properties.isDeleted", "type": "bool"},
        "labels": {"key": "properties.labels", "type": "[str]"},
        "default_duration": {"key": "properties.defaultDuration", "type": "duration"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "number_of_lines_to_skip": {"key": "properties.numberOfLinesToSkip", "type": "int"},
        "raw_content": {"key": "properties.rawContent", "type": "str"},
        "items_search_key": {"key": "properties.itemsSearchKey", "type": "str"},
        "content_type": {"key": "properties.contentType", "type": "str"},
        "upload_status": {"key": "properties.uploadStatus", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        etag: Optional[str] = None,
        watchlist_id: Optional[str] = None,
        display_name: Optional[str] = None,
        provider: Optional[str] = None,
        source: Optional[str] = None,
        source_type: Optional[Union[str, "_models.SourceType"]] = None,
        created: Optional[datetime.datetime] = None,
        updated: Optional[datetime.datetime] = None,
        created_by: Optional["_models.UserInfo"] = None,
        updated_by: Optional["_models.UserInfo"] = None,
        description: Optional[str] = None,
        watchlist_type: Optional[str] = None,
        watchlist_alias: Optional[str] = None,
        is_deleted: Optional[bool] = None,
        labels: Optional[List[str]] = None,
        default_duration: Optional[datetime.timedelta] = None,
        tenant_id: Optional[str] = None,
        number_of_lines_to_skip: Optional[int] = None,
        raw_content: Optional[str] = None,
        items_search_key: Optional[str] = None,
        content_type: Optional[str] = None,
        upload_status: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword watchlist_id: The id (a Guid) of the watchlist.
        :paramtype watchlist_id: str
        :keyword display_name: The display name of the watchlist.
        :paramtype display_name: str
        :keyword provider: The provider of the watchlist.
        :paramtype provider: str
        :keyword source: The filename of the watchlist, called 'source'.
        :paramtype source: str
        :keyword source_type: The sourceType of the watchlist. Known values are: "Local file" and
         "Remote storage".
        :paramtype source_type: str or ~azure.mgmt.securityinsight.models.SourceType
        :keyword created: The time the watchlist was created.
        :paramtype created: ~datetime.datetime
        :keyword updated: The last time the watchlist was updated.
        :paramtype updated: ~datetime.datetime
        :keyword created_by: Describes a user that created the watchlist.
        :paramtype created_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword updated_by: Describes a user that updated the watchlist.
        :paramtype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword description: A description of the watchlist.
        :paramtype description: str
        :keyword watchlist_type: The type of the watchlist.
        :paramtype watchlist_type: str
        :keyword watchlist_alias: The alias of the watchlist.
        :paramtype watchlist_alias: str
        :keyword is_deleted: A flag that indicates if the watchlist is deleted or not.
        :paramtype is_deleted: bool
        :keyword labels: List of labels relevant to this watchlist.
        :paramtype labels: list[str]
        :keyword default_duration: The default duration of a watchlist (in ISO 8601 duration format).
        :paramtype default_duration: ~datetime.timedelta
        :keyword tenant_id: The tenantId where the watchlist belongs to.
        :paramtype tenant_id: str
        :keyword number_of_lines_to_skip: The number of lines in a csv/tsv content to skip before the
         header.
        :paramtype number_of_lines_to_skip: int
        :keyword raw_content: The raw content that represents to watchlist items to create. In case of
         csv/tsv content type, it's the content of the file that will parsed by the endpoint.
        :paramtype raw_content: str
        :keyword items_search_key: The search key is used to optimize query performance when using
         watchlists for joins with other data. For example, enable a column with IP addresses to be the
         designated SearchKey field, then use this field as the key field when joining to other event
         data by IP address.
        :paramtype items_search_key: str
        :keyword content_type: The content type of the raw content. Example : text/csv or text/tsv.
        :paramtype content_type: str
        :keyword upload_status: The status of the Watchlist upload : New, InProgress or Complete.
         **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted.
        :paramtype upload_status: str
        """
        super().__init__(etag=etag, **kwargs)
        self.watchlist_id = watchlist_id
        self.display_name = display_name
        self.provider = provider
        self.source = source
        self.source_type = source_type
        self.created = created
        self.updated = updated
        self.created_by = created_by
        self.updated_by = updated_by
        self.description = description
        self.watchlist_type = watchlist_type
        self.watchlist_alias = watchlist_alias
        self.is_deleted = is_deleted
        self.labels = labels
        self.default_duration = default_duration
        self.tenant_id = tenant_id
        self.number_of_lines_to_skip = number_of_lines_to_skip
        self.raw_content = raw_content
        self.items_search_key = items_search_key
        self.content_type = content_type
        self.upload_status = upload_status
        self.provisioning_state = None


class WatchlistItem(ResourceWithEtag):
    """Represents a Watchlist Item in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.securityinsight.models.SystemData
    :ivar etag: Etag of the azure resource.
    :vartype etag: str
    :ivar watchlist_item_type: The type of the watchlist item.
    :vartype watchlist_item_type: str
    :ivar watchlist_item_id: The id (a Guid) of the watchlist item.
    :vartype watchlist_item_id: str
    :ivar tenant_id: The tenantId to which the watchlist item belongs to.
    :vartype tenant_id: str
    :ivar is_deleted: A flag that indicates if the watchlist item is deleted or not.
    :vartype is_deleted: bool
    :ivar created: The time the watchlist item was created.
    :vartype created: ~datetime.datetime
    :ivar updated: The last time the watchlist item was updated.
    :vartype updated: ~datetime.datetime
    :ivar created_by: Describes a user that created the watchlist item.
    :vartype created_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar updated_by: Describes a user that updated the watchlist item.
    :vartype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
    :ivar items_key_value: key-value pairs for a watchlist item.
    :vartype items_key_value: JSON
    :ivar entity_mapping: key-value pairs for a watchlist item entity mapping.
    :vartype entity_mapping: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "etag": {"key": "etag", "type": "str"},
        "watchlist_item_type": {"key": "properties.watchlistItemType", "type": "str"},
        "watchlist_item_id": {"key": "properties.watchlistItemId", "type": "str"},
        "tenant_id": {"key": "properties.tenantId", "type": "str"},
        "is_deleted": {"key": "properties.isDeleted", "type": "bool"},
        "created": {"key": "properties.created", "type": "iso-8601"},
        "updated": {"key": "properties.updated", "type": "iso-8601"},
        "created_by": {"key": "properties.createdBy", "type": "UserInfo"},
        "updated_by": {"key": "properties.updatedBy", "type": "UserInfo"},
        "items_key_value": {"key": "properties.itemsKeyValue", "type": "object"},
        "entity_mapping": {"key": "properties.entityMapping", "type": "object"},
    }

    def __init__(
        self,
        *,
        etag: Optional[str] = None,
        watchlist_item_type: Optional[str] = None,
        watchlist_item_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        is_deleted: Optional[bool] = None,
        created: Optional[datetime.datetime] = None,
        updated: Optional[datetime.datetime] = None,
        created_by: Optional["_models.UserInfo"] = None,
        updated_by: Optional["_models.UserInfo"] = None,
        items_key_value: Optional[JSON] = None,
        entity_mapping: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword etag: Etag of the azure resource.
        :paramtype etag: str
        :keyword watchlist_item_type: The type of the watchlist item.
        :paramtype watchlist_item_type: str
        :keyword watchlist_item_id: The id (a Guid) of the watchlist item.
        :paramtype watchlist_item_id: str
        :keyword tenant_id: The tenantId to which the watchlist item belongs to.
        :paramtype tenant_id: str
        :keyword is_deleted: A flag that indicates if the watchlist item is deleted or not.
        :paramtype is_deleted: bool
        :keyword created: The time the watchlist item was created.
        :paramtype created: ~datetime.datetime
        :keyword updated: The last time the watchlist item was updated.
        :paramtype updated: ~datetime.datetime
        :keyword created_by: Describes a user that created the watchlist item.
        :paramtype created_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword updated_by: Describes a user that updated the watchlist item.
        :paramtype updated_by: ~azure.mgmt.securityinsight.models.UserInfo
        :keyword items_key_value: key-value pairs for a watchlist item.
        :paramtype items_key_value: JSON
        :keyword entity_mapping: key-value pairs for a watchlist item entity mapping.
        :paramtype entity_mapping: JSON
        """
        super().__init__(etag=etag, **kwargs)
        self.watchlist_item_type = watchlist_item_type
        self.watchlist_item_id = watchlist_item_id
        self.tenant_id = tenant_id
        self.is_deleted = is_deleted
        self.created = created
        self.updated = updated
        self.created_by = created_by
        self.updated_by = updated_by
        self.items_key_value = items_key_value
        self.entity_mapping = entity_mapping


class WatchlistItemList(_serialization.Model):
    """List all the watchlist items.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of watchlist items.
    :vartype next_link: str
    :ivar value: Array of watchlist items. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.WatchlistItem]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[WatchlistItem]"},
    }

    def __init__(self, *, value: List["_models.WatchlistItem"], **kwargs: Any) -> None:
        """
        :keyword value: Array of watchlist items. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.WatchlistItem]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class WatchlistList(_serialization.Model):
    """List all the watchlists.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar next_link: URL to fetch the next set of watchlists.
    :vartype next_link: str
    :ivar value: Array of watchlist. Required.
    :vartype value: list[~azure.mgmt.securityinsight.models.Watchlist]
    """

    _validation = {
        "next_link": {"readonly": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "next_link": {"key": "nextLink", "type": "str"},
        "value": {"key": "value", "type": "[Watchlist]"},
    }

    def __init__(self, *, value: List["_models.Watchlist"], **kwargs: Any) -> None:
        """
        :keyword value: Array of watchlist. Required.
        :paramtype value: list[~azure.mgmt.securityinsight.models.Watchlist]
        """
        super().__init__(**kwargs)
        self.next_link = None
        self.value = value


class Webhook(_serialization.Model):
    """Detail about the webhook object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar webhook_id: Unique identifier for the webhook.
    :vartype webhook_id: str
    :ivar webhook_url: URL that gets invoked by the webhook.
    :vartype webhook_url: str
    :ivar webhook_secret_update_time: Time when the webhook secret was updated.
    :vartype webhook_secret_update_time: ~datetime.datetime
    :ivar rotate_webhook_secret: A flag to instruct the backend service to rotate webhook secret.
    :vartype rotate_webhook_secret: bool
    """

    _validation = {
        "webhook_id": {"readonly": True},
        "webhook_url": {"readonly": True},
        "webhook_secret_update_time": {"readonly": True},
    }

    _attribute_map = {
        "webhook_id": {"key": "webhookId", "type": "str"},
        "webhook_url": {"key": "webhookUrl", "type": "str"},
        "webhook_secret_update_time": {"key": "webhookSecretUpdateTime", "type": "iso-8601"},
        "rotate_webhook_secret": {"key": "rotateWebhookSecret", "type": "bool"},
    }

    def __init__(self, *, rotate_webhook_secret: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword rotate_webhook_secret: A flag to instruct the backend service to rotate webhook
         secret.
        :paramtype rotate_webhook_secret: bool
        """
        super().__init__(**kwargs)
        self.webhook_id = None
        self.webhook_url = None
        self.webhook_secret_update_time = None
        self.rotate_webhook_secret = rotate_webhook_secret
