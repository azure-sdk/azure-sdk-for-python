# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class AuthorizationActionMapping(_serialization.Model):
    """AuthorizationActionMapping.

    :ivar original:
    :vartype original: str
    :ivar desired:
    :vartype desired: str
    """

    _attribute_map = {
        "original": {"key": "original", "type": "str"},
        "desired": {"key": "desired", "type": "str"},
    }

    def __init__(self, *, original: Optional[str] = None, desired: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword original:
        :paramtype original: str
        :keyword desired:
        :paramtype desired: str
        """
        super().__init__(**kwargs)
        self.original = original
        self.desired = desired


class CanaryTrafficRegionRolloutConfiguration(_serialization.Model):
    """CanaryTrafficRegionRolloutConfiguration.

    :ivar skip_regions:
    :vartype skip_regions: list[str]
    :ivar regions:
    :vartype regions: list[str]
    """

    _attribute_map = {
        "skip_regions": {"key": "skipRegions", "type": "[str]"},
        "regions": {"key": "regions", "type": "[str]"},
    }

    def __init__(
        self, *, skip_regions: Optional[List[str]] = None, regions: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword skip_regions:
        :paramtype skip_regions: list[str]
        :keyword regions:
        :paramtype regions: list[str]
        """
        super().__init__(**kwargs)
        self.skip_regions = skip_regions
        self.regions = regions


class CheckinManifestInfo(_serialization.Model):
    """CheckinManifestInfo.

    All required parameters must be populated in order to send to server.

    :ivar is_checked_in: Required.
    :vartype is_checked_in: bool
    :ivar status_message: Required.
    :vartype status_message: str
    :ivar pull_request:
    :vartype pull_request: str
    :ivar commit_id:
    :vartype commit_id: str
    """

    _validation = {
        "is_checked_in": {"required": True},
        "status_message": {"required": True},
    }

    _attribute_map = {
        "is_checked_in": {"key": "isCheckedIn", "type": "bool"},
        "status_message": {"key": "statusMessage", "type": "str"},
        "pull_request": {"key": "pullRequest", "type": "str"},
        "commit_id": {"key": "commitId", "type": "str"},
    }

    def __init__(
        self,
        *,
        is_checked_in: bool,
        status_message: str,
        pull_request: Optional[str] = None,
        commit_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword is_checked_in: Required.
        :paramtype is_checked_in: bool
        :keyword status_message: Required.
        :paramtype status_message: str
        :keyword pull_request:
        :paramtype pull_request: str
        :keyword commit_id:
        :paramtype commit_id: str
        """
        super().__init__(**kwargs)
        self.is_checked_in = is_checked_in
        self.status_message = status_message
        self.pull_request = pull_request
        self.commit_id = commit_id


class CheckinManifestParams(_serialization.Model):
    """CheckinManifestParams.

    All required parameters must be populated in order to send to server.

    :ivar environment: The environment supplied to the checkin manifest operation. Required.
    :vartype environment: str
    :ivar baseline_arm_manifest_location: The baseline ARM manifest location supplied to the
     checkin manifest operation. Required.
    :vartype baseline_arm_manifest_location: str
    """

    _validation = {
        "environment": {"required": True},
        "baseline_arm_manifest_location": {"required": True},
    }

    _attribute_map = {
        "environment": {"key": "environment", "type": "str"},
        "baseline_arm_manifest_location": {"key": "baselineArmManifestLocation", "type": "str"},
    }

    def __init__(self, *, environment: str, baseline_arm_manifest_location: str, **kwargs: Any) -> None:
        """
        :keyword environment: The environment supplied to the checkin manifest operation. Required.
        :paramtype environment: str
        :keyword baseline_arm_manifest_location: The baseline ARM manifest location supplied to the
         checkin manifest operation. Required.
        :paramtype baseline_arm_manifest_location: str
        """
        super().__init__(**kwargs)
        self.environment = environment
        self.baseline_arm_manifest_location = baseline_arm_manifest_location


class CheckNameAvailabilitySpecifications(_serialization.Model):
    """CheckNameAvailabilitySpecifications.

    :ivar enable_default_validation:
    :vartype enable_default_validation: bool
    :ivar resource_types_with_custom_validation:
    :vartype resource_types_with_custom_validation: list[str]
    """

    _attribute_map = {
        "enable_default_validation": {"key": "enableDefaultValidation", "type": "bool"},
        "resource_types_with_custom_validation": {"key": "resourceTypesWithCustomValidation", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        enable_default_validation: Optional[bool] = None,
        resource_types_with_custom_validation: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enable_default_validation:
        :paramtype enable_default_validation: bool
        :keyword resource_types_with_custom_validation:
        :paramtype resource_types_with_custom_validation: list[str]
        """
        super().__init__(**kwargs)
        self.enable_default_validation = enable_default_validation
        self.resource_types_with_custom_validation = resource_types_with_custom_validation


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """


class CustomRollout(ProxyResource):
    """Rollout details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties: Properties of the rollout. Required.
    :vartype properties: ~azure.mgmt.providerhub.models.CustomRolloutProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "properties": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "CustomRolloutProperties"},
    }

    def __init__(self, *, properties: "_models.CustomRolloutProperties", **kwargs: Any) -> None:
        """
        :keyword properties: Properties of the rollout. Required.
        :paramtype properties: ~azure.mgmt.providerhub.models.CustomRolloutProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class CustomRolloutArrayResponseWithContinuation(_serialization.Model):  # pylint: disable=name-too-long
    """CustomRolloutArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.CustomRollout]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[CustomRollout]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.CustomRollout"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.CustomRollout]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CustomRolloutPropertiesAutoGenerated(_serialization.Model):
    """CustomRolloutPropertiesAutoGenerated.

    All required parameters must be populated in order to send to server.

    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar specification: Required.
    :vartype specification: ~azure.mgmt.providerhub.models.CustomRolloutPropertiesSpecification
    :ivar status:
    :vartype status: ~azure.mgmt.providerhub.models.CustomRolloutPropertiesStatus
    """

    _validation = {
        "specification": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "specification": {"key": "specification", "type": "CustomRolloutPropertiesSpecification"},
        "status": {"key": "status", "type": "CustomRolloutPropertiesStatus"},
    }

    def __init__(
        self,
        *,
        specification: "_models.CustomRolloutPropertiesSpecification",
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        status: Optional["_models.CustomRolloutPropertiesStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provisioning_state: Known values are: "NotSpecified", "Accepted", "Running",
         "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded",
         "MovingResources", "TransientFailure", and "RolloutInProgress".
        :paramtype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
        :keyword specification: Required.
        :paramtype specification: ~azure.mgmt.providerhub.models.CustomRolloutPropertiesSpecification
        :keyword status:
        :paramtype status: ~azure.mgmt.providerhub.models.CustomRolloutPropertiesStatus
        """
        super().__init__(**kwargs)
        self.provisioning_state = provisioning_state
        self.specification = specification
        self.status = status


class CustomRolloutProperties(CustomRolloutPropertiesAutoGenerated):
    """Properties of the rollout.

    All required parameters must be populated in order to send to server.

    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar specification: Required.
    :vartype specification: ~azure.mgmt.providerhub.models.CustomRolloutPropertiesSpecification
    :ivar status:
    :vartype status: ~azure.mgmt.providerhub.models.CustomRolloutPropertiesStatus
    """


class CustomRolloutSpecification(_serialization.Model):
    """CustomRolloutSpecification.

    All required parameters must be populated in order to send to server.

    :ivar canary: Required.
    :vartype canary: ~azure.mgmt.providerhub.models.CustomRolloutSpecificationCanary
    :ivar provider_registration:
    :vartype provider_registration:
     ~azure.mgmt.providerhub.models.CustomRolloutSpecificationProviderRegistration
    :ivar resource_type_registrations:
    :vartype resource_type_registrations:
     list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
    """

    _validation = {
        "canary": {"required": True},
    }

    _attribute_map = {
        "canary": {"key": "canary", "type": "CustomRolloutSpecificationCanary"},
        "provider_registration": {
            "key": "providerRegistration",
            "type": "CustomRolloutSpecificationProviderRegistration",
        },
        "resource_type_registrations": {"key": "resourceTypeRegistrations", "type": "[ResourceTypeRegistration]"},
    }

    def __init__(
        self,
        *,
        canary: "_models.CustomRolloutSpecificationCanary",
        provider_registration: Optional["_models.CustomRolloutSpecificationProviderRegistration"] = None,
        resource_type_registrations: Optional[List["_models.ResourceTypeRegistration"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword canary: Required.
        :paramtype canary: ~azure.mgmt.providerhub.models.CustomRolloutSpecificationCanary
        :keyword provider_registration:
        :paramtype provider_registration:
         ~azure.mgmt.providerhub.models.CustomRolloutSpecificationProviderRegistration
        :keyword resource_type_registrations:
        :paramtype resource_type_registrations:
         list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
        """
        super().__init__(**kwargs)
        self.canary = canary
        self.provider_registration = provider_registration
        self.resource_type_registrations = resource_type_registrations


class CustomRolloutPropertiesSpecification(CustomRolloutSpecification):
    """CustomRolloutPropertiesSpecification.

    All required parameters must be populated in order to send to server.

    :ivar canary: Required.
    :vartype canary: ~azure.mgmt.providerhub.models.CustomRolloutSpecificationCanary
    :ivar provider_registration:
    :vartype provider_registration:
     ~azure.mgmt.providerhub.models.CustomRolloutSpecificationProviderRegistration
    :ivar resource_type_registrations:
    :vartype resource_type_registrations:
     list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
    """


class CustomRolloutStatus(_serialization.Model):
    """CustomRolloutStatus.

    :ivar completed_regions:
    :vartype completed_regions: list[str]
    :ivar failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
    :vartype failed_or_skipped_regions: dict[str, ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
    """

    _attribute_map = {
        "completed_regions": {"key": "completedRegions", "type": "[str]"},
        "failed_or_skipped_regions": {"key": "failedOrSkippedRegions", "type": "{ExtendedErrorInfo}"},
    }

    def __init__(
        self,
        *,
        completed_regions: Optional[List[str]] = None,
        failed_or_skipped_regions: Optional[Dict[str, "_models.ExtendedErrorInfo"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword completed_regions:
        :paramtype completed_regions: list[str]
        :keyword failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
        :paramtype failed_or_skipped_regions: dict[str,
         ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
        """
        super().__init__(**kwargs)
        self.completed_regions = completed_regions
        self.failed_or_skipped_regions = failed_or_skipped_regions


class CustomRolloutPropertiesStatus(CustomRolloutStatus):
    """CustomRolloutPropertiesStatus.

    :ivar completed_regions:
    :vartype completed_regions: list[str]
    :ivar failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
    :vartype failed_or_skipped_regions: dict[str, ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
    """


class TrafficRegions(_serialization.Model):
    """TrafficRegions.

    :ivar regions:
    :vartype regions: list[str]
    """

    _attribute_map = {
        "regions": {"key": "regions", "type": "[str]"},
    }

    def __init__(self, *, regions: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword regions:
        :paramtype regions: list[str]
        """
        super().__init__(**kwargs)
        self.regions = regions


class CustomRolloutSpecificationCanary(TrafficRegions):
    """CustomRolloutSpecificationCanary.

    :ivar regions:
    :vartype regions: list[str]
    """


class ProviderRegistration(ProxyResource):
    """ProviderRegistration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties:
    :vartype properties: ~azure.mgmt.providerhub.models.ProviderRegistrationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "ProviderRegistrationProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ProviderRegistrationProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.providerhub.models.ProviderRegistrationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class CustomRolloutSpecificationProviderRegistration(ProviderRegistration):  # pylint: disable=name-too-long
    """CustomRolloutSpecificationProviderRegistration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties:
    :vartype properties: ~azure.mgmt.providerhub.models.ProviderRegistrationProperties
    """


class DefaultRollout(ProxyResource):
    """Default rollout definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties: Properties of the rollout.
    :vartype properties: ~azure.mgmt.providerhub.models.DefaultRolloutProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "DefaultRolloutProperties"},
    }

    def __init__(self, *, properties: Optional["_models.DefaultRolloutProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Properties of the rollout.
        :paramtype properties: ~azure.mgmt.providerhub.models.DefaultRolloutProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DefaultRolloutArrayResponseWithContinuation(_serialization.Model):  # pylint: disable=name-too-long
    """DefaultRolloutArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.DefaultRollout]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[DefaultRollout]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.DefaultRollout"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.DefaultRollout]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DefaultRolloutPropertiesAutoGenerated(_serialization.Model):
    """DefaultRolloutPropertiesAutoGenerated.

    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar specification:
    :vartype specification: ~azure.mgmt.providerhub.models.DefaultRolloutPropertiesSpecification
    :ivar status:
    :vartype status: ~azure.mgmt.providerhub.models.DefaultRolloutPropertiesStatus
    """

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "specification": {"key": "specification", "type": "DefaultRolloutPropertiesSpecification"},
        "status": {"key": "status", "type": "DefaultRolloutPropertiesStatus"},
    }

    def __init__(
        self,
        *,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        specification: Optional["_models.DefaultRolloutPropertiesSpecification"] = None,
        status: Optional["_models.DefaultRolloutPropertiesStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provisioning_state: Known values are: "NotSpecified", "Accepted", "Running",
         "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded",
         "MovingResources", "TransientFailure", and "RolloutInProgress".
        :paramtype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
        :keyword specification:
        :paramtype specification: ~azure.mgmt.providerhub.models.DefaultRolloutPropertiesSpecification
        :keyword status:
        :paramtype status: ~azure.mgmt.providerhub.models.DefaultRolloutPropertiesStatus
        """
        super().__init__(**kwargs)
        self.provisioning_state = provisioning_state
        self.specification = specification
        self.status = status


class DefaultRolloutProperties(DefaultRolloutPropertiesAutoGenerated):
    """Properties of the rollout.

    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar specification:
    :vartype specification: ~azure.mgmt.providerhub.models.DefaultRolloutPropertiesSpecification
    :ivar status:
    :vartype status: ~azure.mgmt.providerhub.models.DefaultRolloutPropertiesStatus
    """


class DefaultRolloutSpecification(_serialization.Model):
    """DefaultRolloutSpecification.

    :ivar canary:
    :vartype canary: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationCanary
    :ivar low_traffic:
    :vartype low_traffic: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationLowTraffic
    :ivar medium_traffic:
    :vartype medium_traffic:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationMediumTraffic
    :ivar high_traffic:
    :vartype high_traffic: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationHighTraffic
    :ivar rest_of_the_world_group_one:
    :vartype rest_of_the_world_group_one:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupOne
    :ivar rest_of_the_world_group_two:
    :vartype rest_of_the_world_group_two:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupTwo
    :ivar provider_registration:
    :vartype provider_registration:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationProviderRegistration
    :ivar resource_type_registrations:
    :vartype resource_type_registrations:
     list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
    """

    _attribute_map = {
        "canary": {"key": "canary", "type": "DefaultRolloutSpecificationCanary"},
        "low_traffic": {"key": "lowTraffic", "type": "DefaultRolloutSpecificationLowTraffic"},
        "medium_traffic": {"key": "mediumTraffic", "type": "DefaultRolloutSpecificationMediumTraffic"},
        "high_traffic": {"key": "highTraffic", "type": "DefaultRolloutSpecificationHighTraffic"},
        "rest_of_the_world_group_one": {
            "key": "restOfTheWorldGroupOne",
            "type": "DefaultRolloutSpecificationRestOfTheWorldGroupOne",
        },
        "rest_of_the_world_group_two": {
            "key": "restOfTheWorldGroupTwo",
            "type": "DefaultRolloutSpecificationRestOfTheWorldGroupTwo",
        },
        "provider_registration": {
            "key": "providerRegistration",
            "type": "DefaultRolloutSpecificationProviderRegistration",
        },
        "resource_type_registrations": {"key": "resourceTypeRegistrations", "type": "[ResourceTypeRegistration]"},
    }

    def __init__(
        self,
        *,
        canary: Optional["_models.DefaultRolloutSpecificationCanary"] = None,
        low_traffic: Optional["_models.DefaultRolloutSpecificationLowTraffic"] = None,
        medium_traffic: Optional["_models.DefaultRolloutSpecificationMediumTraffic"] = None,
        high_traffic: Optional["_models.DefaultRolloutSpecificationHighTraffic"] = None,
        rest_of_the_world_group_one: Optional["_models.DefaultRolloutSpecificationRestOfTheWorldGroupOne"] = None,
        rest_of_the_world_group_two: Optional["_models.DefaultRolloutSpecificationRestOfTheWorldGroupTwo"] = None,
        provider_registration: Optional["_models.DefaultRolloutSpecificationProviderRegistration"] = None,
        resource_type_registrations: Optional[List["_models.ResourceTypeRegistration"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword canary:
        :paramtype canary: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationCanary
        :keyword low_traffic:
        :paramtype low_traffic: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationLowTraffic
        :keyword medium_traffic:
        :paramtype medium_traffic:
         ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationMediumTraffic
        :keyword high_traffic:
        :paramtype high_traffic: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationHighTraffic
        :keyword rest_of_the_world_group_one:
        :paramtype rest_of_the_world_group_one:
         ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupOne
        :keyword rest_of_the_world_group_two:
        :paramtype rest_of_the_world_group_two:
         ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupTwo
        :keyword provider_registration:
        :paramtype provider_registration:
         ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationProviderRegistration
        :keyword resource_type_registrations:
        :paramtype resource_type_registrations:
         list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
        """
        super().__init__(**kwargs)
        self.canary = canary
        self.low_traffic = low_traffic
        self.medium_traffic = medium_traffic
        self.high_traffic = high_traffic
        self.rest_of_the_world_group_one = rest_of_the_world_group_one
        self.rest_of_the_world_group_two = rest_of_the_world_group_two
        self.provider_registration = provider_registration
        self.resource_type_registrations = resource_type_registrations


class DefaultRolloutPropertiesSpecification(DefaultRolloutSpecification):
    """DefaultRolloutPropertiesSpecification.

    :ivar canary:
    :vartype canary: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationCanary
    :ivar low_traffic:
    :vartype low_traffic: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationLowTraffic
    :ivar medium_traffic:
    :vartype medium_traffic:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationMediumTraffic
    :ivar high_traffic:
    :vartype high_traffic: ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationHighTraffic
    :ivar rest_of_the_world_group_one:
    :vartype rest_of_the_world_group_one:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupOne
    :ivar rest_of_the_world_group_two:
    :vartype rest_of_the_world_group_two:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationRestOfTheWorldGroupTwo
    :ivar provider_registration:
    :vartype provider_registration:
     ~azure.mgmt.providerhub.models.DefaultRolloutSpecificationProviderRegistration
    :ivar resource_type_registrations:
    :vartype resource_type_registrations:
     list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
    """


class RolloutStatusBase(_serialization.Model):
    """RolloutStatusBase.

    :ivar completed_regions:
    :vartype completed_regions: list[str]
    :ivar failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
    :vartype failed_or_skipped_regions: dict[str, ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
    """

    _attribute_map = {
        "completed_regions": {"key": "completedRegions", "type": "[str]"},
        "failed_or_skipped_regions": {"key": "failedOrSkippedRegions", "type": "{ExtendedErrorInfo}"},
    }

    def __init__(
        self,
        *,
        completed_regions: Optional[List[str]] = None,
        failed_or_skipped_regions: Optional[Dict[str, "_models.ExtendedErrorInfo"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword completed_regions:
        :paramtype completed_regions: list[str]
        :keyword failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
        :paramtype failed_or_skipped_regions: dict[str,
         ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
        """
        super().__init__(**kwargs)
        self.completed_regions = completed_regions
        self.failed_or_skipped_regions = failed_or_skipped_regions


class DefaultRolloutStatus(RolloutStatusBase):
    """DefaultRolloutStatus.

    :ivar completed_regions:
    :vartype completed_regions: list[str]
    :ivar failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
    :vartype failed_or_skipped_regions: dict[str, ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
    :ivar next_traffic_region: Known values are: "NotSpecified", "Canary", "LowTraffic",
     "MediumTraffic", "HighTraffic", "None", "RestOfTheWorldGroupOne", and "RestOfTheWorldGroupTwo".
    :vartype next_traffic_region: str or ~azure.mgmt.providerhub.models.TrafficRegionCategory
    :ivar next_traffic_region_scheduled_time:
    :vartype next_traffic_region_scheduled_time: ~datetime.datetime
    :ivar subscription_reregistration_result: Known values are: "NotApplicable",
     "ConditionalUpdate", "ForcedUpdate", and "Failed".
    :vartype subscription_reregistration_result: str or
     ~azure.mgmt.providerhub.models.SubscriptionReregistrationResult
    """

    _attribute_map = {
        "completed_regions": {"key": "completedRegions", "type": "[str]"},
        "failed_or_skipped_regions": {"key": "failedOrSkippedRegions", "type": "{ExtendedErrorInfo}"},
        "next_traffic_region": {"key": "nextTrafficRegion", "type": "str"},
        "next_traffic_region_scheduled_time": {"key": "nextTrafficRegionScheduledTime", "type": "iso-8601"},
        "subscription_reregistration_result": {"key": "subscriptionReregistrationResult", "type": "str"},
    }

    def __init__(
        self,
        *,
        completed_regions: Optional[List[str]] = None,
        failed_or_skipped_regions: Optional[Dict[str, "_models.ExtendedErrorInfo"]] = None,
        next_traffic_region: Optional[Union[str, "_models.TrafficRegionCategory"]] = None,
        next_traffic_region_scheduled_time: Optional[datetime.datetime] = None,
        subscription_reregistration_result: Optional[Union[str, "_models.SubscriptionReregistrationResult"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword completed_regions:
        :paramtype completed_regions: list[str]
        :keyword failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
        :paramtype failed_or_skipped_regions: dict[str,
         ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
        :keyword next_traffic_region: Known values are: "NotSpecified", "Canary", "LowTraffic",
         "MediumTraffic", "HighTraffic", "None", "RestOfTheWorldGroupOne", and "RestOfTheWorldGroupTwo".
        :paramtype next_traffic_region: str or ~azure.mgmt.providerhub.models.TrafficRegionCategory
        :keyword next_traffic_region_scheduled_time:
        :paramtype next_traffic_region_scheduled_time: ~datetime.datetime
        :keyword subscription_reregistration_result: Known values are: "NotApplicable",
         "ConditionalUpdate", "ForcedUpdate", and "Failed".
        :paramtype subscription_reregistration_result: str or
         ~azure.mgmt.providerhub.models.SubscriptionReregistrationResult
        """
        super().__init__(
            completed_regions=completed_regions, failed_or_skipped_regions=failed_or_skipped_regions, **kwargs
        )
        self.next_traffic_region = next_traffic_region
        self.next_traffic_region_scheduled_time = next_traffic_region_scheduled_time
        self.subscription_reregistration_result = subscription_reregistration_result


class DefaultRolloutPropertiesStatus(DefaultRolloutStatus):
    """DefaultRolloutPropertiesStatus.

    :ivar completed_regions:
    :vartype completed_regions: list[str]
    :ivar failed_or_skipped_regions: Dictionary of :code:`<ExtendedErrorInfo>`.
    :vartype failed_or_skipped_regions: dict[str, ~azure.mgmt.providerhub.models.ExtendedErrorInfo]
    :ivar next_traffic_region: Known values are: "NotSpecified", "Canary", "LowTraffic",
     "MediumTraffic", "HighTraffic", "None", "RestOfTheWorldGroupOne", and "RestOfTheWorldGroupTwo".
    :vartype next_traffic_region: str or ~azure.mgmt.providerhub.models.TrafficRegionCategory
    :ivar next_traffic_region_scheduled_time:
    :vartype next_traffic_region_scheduled_time: ~datetime.datetime
    :ivar subscription_reregistration_result: Known values are: "NotApplicable",
     "ConditionalUpdate", "ForcedUpdate", and "Failed".
    :vartype subscription_reregistration_result: str or
     ~azure.mgmt.providerhub.models.SubscriptionReregistrationResult
    """


class DefaultRolloutSpecificationCanary(CanaryTrafficRegionRolloutConfiguration):
    """DefaultRolloutSpecificationCanary.

    :ivar skip_regions:
    :vartype skip_regions: list[str]
    :ivar regions:
    :vartype regions: list[str]
    """


class TrafficRegionRolloutConfiguration(TrafficRegions):
    """TrafficRegionRolloutConfiguration.

    :ivar regions:
    :vartype regions: list[str]
    :ivar wait_duration:
    :vartype wait_duration: ~datetime.timedelta
    """

    _attribute_map = {
        "regions": {"key": "regions", "type": "[str]"},
        "wait_duration": {"key": "waitDuration", "type": "duration"},
    }

    def __init__(
        self, *, regions: Optional[List[str]] = None, wait_duration: Optional[datetime.timedelta] = None, **kwargs: Any
    ) -> None:
        """
        :keyword regions:
        :paramtype regions: list[str]
        :keyword wait_duration:
        :paramtype wait_duration: ~datetime.timedelta
        """
        super().__init__(regions=regions, **kwargs)
        self.wait_duration = wait_duration


class DefaultRolloutSpecificationHighTraffic(TrafficRegionRolloutConfiguration):
    """DefaultRolloutSpecificationHighTraffic.

    :ivar regions:
    :vartype regions: list[str]
    :ivar wait_duration:
    :vartype wait_duration: ~datetime.timedelta
    """


class DefaultRolloutSpecificationLowTraffic(TrafficRegionRolloutConfiguration):
    """DefaultRolloutSpecificationLowTraffic.

    :ivar regions:
    :vartype regions: list[str]
    :ivar wait_duration:
    :vartype wait_duration: ~datetime.timedelta
    """


class DefaultRolloutSpecificationMediumTraffic(TrafficRegionRolloutConfiguration):
    """DefaultRolloutSpecificationMediumTraffic.

    :ivar regions:
    :vartype regions: list[str]
    :ivar wait_duration:
    :vartype wait_duration: ~datetime.timedelta
    """


class DefaultRolloutSpecificationProviderRegistration(ProviderRegistration):  # pylint: disable=name-too-long
    """DefaultRolloutSpecificationProviderRegistration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties:
    :vartype properties: ~azure.mgmt.providerhub.models.ProviderRegistrationProperties
    """


class DefaultRolloutSpecificationRestOfTheWorldGroupOne(
    TrafficRegionRolloutConfiguration
):  # pylint: disable=name-too-long
    """DefaultRolloutSpecificationRestOfTheWorldGroupOne.

    :ivar regions:
    :vartype regions: list[str]
    :ivar wait_duration:
    :vartype wait_duration: ~datetime.timedelta
    """


class DefaultRolloutSpecificationRestOfTheWorldGroupTwo(
    TrafficRegionRolloutConfiguration
):  # pylint: disable=name-too-long
    """DefaultRolloutSpecificationRestOfTheWorldGroupTwo.

    :ivar regions:
    :vartype regions: list[str]
    :ivar wait_duration:
    :vartype wait_duration: ~datetime.timedelta
    """


class Error(_serialization.Model):
    """Standard error object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Server-defined set of error codes.
    :vartype code: str
    :ivar message: Human-readable representation of the error.
    :vartype message: str
    :ivar target: Target of the error.
    :vartype target: str
    :ivar details: Array of details about specific errors that led to this reported error.
    :vartype details: list[~azure.mgmt.providerhub.models.Error]
    :ivar inner_error: Object containing more specific information than  the current object about
     the error.
    :vartype inner_error: ~azure.mgmt.providerhub.models.ErrorInnerError
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "inner_error": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[Error]"},
        "inner_error": {"key": "innerError", "type": "ErrorInnerError"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.inner_error = None


class InnerError(_serialization.Model):
    """Inner error containing list of errors.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :vartype additional_properties: dict[str, JSON]
    :ivar code: Specific error code than was provided by the containing error.
    :vartype code: str
    :ivar inner_error: Object containing more specific information than the current object about
     the error.
    :vartype inner_error: JSON
    """

    _validation = {
        "code": {"readonly": True},
        "inner_error": {"readonly": True},
    }

    _attribute_map = {
        "additional_properties": {"key": "", "type": "{object}"},
        "code": {"key": "code", "type": "str"},
        "inner_error": {"key": "innerError", "type": "object"},
    }

    def __init__(self, *, additional_properties: Optional[Dict[str, JSON]] = None, **kwargs: Any) -> None:
        """
        :keyword additional_properties: Unmatched properties from the message are deserialized to this
         collection.
        :paramtype additional_properties: dict[str, JSON]
        """
        super().__init__(**kwargs)
        self.additional_properties = additional_properties
        self.code = None
        self.inner_error = None


class ErrorInnerError(InnerError):
    """Object containing more specific information than  the current object about the error.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :vartype additional_properties: dict[str, JSON]
    :ivar code: Specific error code than was provided by the containing error.
    :vartype code: str
    :ivar inner_error: Object containing more specific information than the current object about
     the error.
    :vartype inner_error: JSON
    """


class ErrorResponse(_serialization.Model):
    """Standard error response.

    :ivar error: Standard error object.
    :vartype error: ~azure.mgmt.providerhub.models.ErrorResponseError
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorResponseError"},
    }

    def __init__(self, *, error: Optional["_models.ErrorResponseError"] = None, **kwargs: Any) -> None:
        """
        :keyword error: Standard error object.
        :paramtype error: ~azure.mgmt.providerhub.models.ErrorResponseError
        """
        super().__init__(**kwargs)
        self.error = error


class ErrorResponseError(Error):
    """Standard error object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Server-defined set of error codes.
    :vartype code: str
    :ivar message: Human-readable representation of the error.
    :vartype message: str
    :ivar target: Target of the error.
    :vartype target: str
    :ivar details: Array of details about specific errors that led to this reported error.
    :vartype details: list[~azure.mgmt.providerhub.models.Error]
    :ivar inner_error: Object containing more specific information than  the current object about
     the error.
    :vartype inner_error: ~azure.mgmt.providerhub.models.ErrorInnerError
    """


class ExtendedErrorInfo(_serialization.Model):
    """ExtendedErrorInfo.

    :ivar code:
    :vartype code: str
    :ivar target:
    :vartype target: str
    :ivar message:
    :vartype message: str
    :ivar details:
    :vartype details: list[~azure.mgmt.providerhub.models.ExtendedErrorInfo]
    :ivar additional_info:
    :vartype additional_info: list[~azure.mgmt.providerhub.models.TypedErrorInfo]
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "details": {"key": "details", "type": "[ExtendedErrorInfo]"},
        "additional_info": {"key": "additionalInfo", "type": "[TypedErrorInfo]"},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        target: Optional[str] = None,
        message: Optional[str] = None,
        details: Optional[List["_models.ExtendedErrorInfo"]] = None,
        additional_info: Optional[List["_models.TypedErrorInfo"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword code:
        :paramtype code: str
        :keyword target:
        :paramtype target: str
        :keyword message:
        :paramtype message: str
        :keyword details:
        :paramtype details: list[~azure.mgmt.providerhub.models.ExtendedErrorInfo]
        :keyword additional_info:
        :paramtype additional_info: list[~azure.mgmt.providerhub.models.TypedErrorInfo]
        """
        super().__init__(**kwargs)
        self.code = code
        self.target = target
        self.message = message
        self.details = details
        self.additional_info = additional_info


class ExtendedLocationOptions(_serialization.Model):
    """ExtendedLocationOptions.

    :ivar type:
    :vartype type: str
    :ivar supported_policy:
    :vartype supported_policy: str
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "supported_policy": {"key": "supportedPolicy", "type": "str"},
    }

    def __init__(self, *, type: Optional[str] = None, supported_policy: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword type:
        :paramtype type: str
        :keyword supported_policy:
        :paramtype supported_policy: str
        """
        super().__init__(**kwargs)
        self.type = type
        self.supported_policy = supported_policy


class ExtensionOptions(_serialization.Model):
    """ExtensionOptions.

    :ivar request:
    :vartype request: list[str or ~azure.mgmt.providerhub.models.ExtensionOptionType]
    :ivar response:
    :vartype response: list[str or ~azure.mgmt.providerhub.models.ExtensionOptionType]
    """

    _attribute_map = {
        "request": {"key": "request", "type": "[str]"},
        "response": {"key": "response", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        request: Optional[List[Union[str, "_models.ExtensionOptionType"]]] = None,
        response: Optional[List[Union[str, "_models.ExtensionOptionType"]]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword request:
        :paramtype request: list[str or ~azure.mgmt.providerhub.models.ExtensionOptionType]
        :keyword response:
        :paramtype response: list[str or ~azure.mgmt.providerhub.models.ExtensionOptionType]
        """
        super().__init__(**kwargs)
        self.request = request
        self.response = response


class FeaturesRule(_serialization.Model):
    """FeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """

    _validation = {
        "required_features_policy": {"required": True},
    }

    _attribute_map = {
        "required_features_policy": {"key": "requiredFeaturesPolicy", "type": "str"},
    }

    def __init__(self, *, required_features_policy: Union[str, "_models.FeaturesPolicy"], **kwargs: Any) -> None:
        """
        :keyword required_features_policy: Required. Known values are: "Any" and "All".
        :paramtype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
        """
        super().__init__(**kwargs)
        self.required_features_policy = required_features_policy


class IdentityManagement(_serialization.Model):
    """IdentityManagement.

    :ivar type: Known values are: "NotSpecified", "SystemAssigned", "UserAssigned", "Actor", and
     "DelegatedResourceIdentity".
    :vartype type: str or ~azure.mgmt.providerhub.models.IdentityManagementTypes
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, type: Optional[Union[str, "_models.IdentityManagementTypes"]] = None, **kwargs: Any) -> None:
        """
        :keyword type: Known values are: "NotSpecified", "SystemAssigned", "UserAssigned", "Actor", and
         "DelegatedResourceIdentity".
        :paramtype type: str or ~azure.mgmt.providerhub.models.IdentityManagementTypes
        """
        super().__init__(**kwargs)
        self.type = type


class IdentityManagementProperties(_serialization.Model):
    """IdentityManagementProperties.

    :ivar type: Known values are: "NotSpecified", "SystemAssigned", "UserAssigned", "Actor", and
     "DelegatedResourceIdentity".
    :vartype type: str or ~azure.mgmt.providerhub.models.IdentityManagementTypes
    :ivar application_id:
    :vartype application_id: str
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "application_id": {"key": "applicationId", "type": "str"},
    }

    def __init__(
        self,
        *,
        type: Optional[Union[str, "_models.IdentityManagementTypes"]] = None,
        application_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Known values are: "NotSpecified", "SystemAssigned", "UserAssigned", "Actor", and
         "DelegatedResourceIdentity".
        :paramtype type: str or ~azure.mgmt.providerhub.models.IdentityManagementTypes
        :keyword application_id:
        :paramtype application_id: str
        """
        super().__init__(**kwargs)
        self.type = type
        self.application_id = application_id


class LightHouseAuthorization(_serialization.Model):
    """LightHouseAuthorization.

    All required parameters must be populated in order to send to server.

    :ivar principal_id: Required.
    :vartype principal_id: str
    :ivar role_definition_id: Required.
    :vartype role_definition_id: str
    """

    _validation = {
        "principal_id": {"required": True},
        "role_definition_id": {"required": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "role_definition_id": {"key": "roleDefinitionId", "type": "str"},
    }

    def __init__(self, *, principal_id: str, role_definition_id: str, **kwargs: Any) -> None:
        """
        :keyword principal_id: Required.
        :paramtype principal_id: str
        :keyword role_definition_id: Required.
        :paramtype role_definition_id: str
        """
        super().__init__(**kwargs)
        self.principal_id = principal_id
        self.role_definition_id = role_definition_id


class LinkedAccessCheck(_serialization.Model):
    """LinkedAccessCheck.

    :ivar action_name:
    :vartype action_name: str
    :ivar linked_property:
    :vartype linked_property: str
    :ivar linked_action:
    :vartype linked_action: str
    :ivar linked_action_verb:
    :vartype linked_action_verb: str
    :ivar linked_type:
    :vartype linked_type: str
    """

    _attribute_map = {
        "action_name": {"key": "actionName", "type": "str"},
        "linked_property": {"key": "linkedProperty", "type": "str"},
        "linked_action": {"key": "linkedAction", "type": "str"},
        "linked_action_verb": {"key": "linkedActionVerb", "type": "str"},
        "linked_type": {"key": "linkedType", "type": "str"},
    }

    def __init__(
        self,
        *,
        action_name: Optional[str] = None,
        linked_property: Optional[str] = None,
        linked_action: Optional[str] = None,
        linked_action_verb: Optional[str] = None,
        linked_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword action_name:
        :paramtype action_name: str
        :keyword linked_property:
        :paramtype linked_property: str
        :keyword linked_action:
        :paramtype linked_action: str
        :keyword linked_action_verb:
        :paramtype linked_action_verb: str
        :keyword linked_type:
        :paramtype linked_type: str
        """
        super().__init__(**kwargs)
        self.action_name = action_name
        self.linked_property = linked_property
        self.linked_action = linked_action
        self.linked_action_verb = linked_action_verb
        self.linked_type = linked_type


class LinkedOperationRule(_serialization.Model):
    """LinkedOperationRule.

    All required parameters must be populated in order to send to server.

    :ivar linked_operation: Required. Known values are: "None", "CrossResourceGroupResourceMove",
     and "CrossSubscriptionResourceMove".
    :vartype linked_operation: str or ~azure.mgmt.providerhub.models.LinkedOperation
    :ivar linked_action: Required. Known values are: "NotSpecified", "Blocked", "Validate", and
     "Enabled".
    :vartype linked_action: str or ~azure.mgmt.providerhub.models.LinkedAction
    """

    _validation = {
        "linked_operation": {"required": True},
        "linked_action": {"required": True},
    }

    _attribute_map = {
        "linked_operation": {"key": "linkedOperation", "type": "str"},
        "linked_action": {"key": "linkedAction", "type": "str"},
    }

    def __init__(
        self,
        *,
        linked_operation: Union[str, "_models.LinkedOperation"],
        linked_action: Union[str, "_models.LinkedAction"],
        **kwargs: Any
    ) -> None:
        """
        :keyword linked_operation: Required. Known values are: "None",
         "CrossResourceGroupResourceMove", and "CrossSubscriptionResourceMove".
        :paramtype linked_operation: str or ~azure.mgmt.providerhub.models.LinkedOperation
        :keyword linked_action: Required. Known values are: "NotSpecified", "Blocked", "Validate", and
         "Enabled".
        :paramtype linked_action: str or ~azure.mgmt.providerhub.models.LinkedAction
        """
        super().__init__(**kwargs)
        self.linked_operation = linked_operation
        self.linked_action = linked_action


class LoggingHiddenPropertyPath(_serialization.Model):
    """LoggingHiddenPropertyPath.

    :ivar hidden_paths_on_request:
    :vartype hidden_paths_on_request: list[str]
    :ivar hidden_paths_on_response:
    :vartype hidden_paths_on_response: list[str]
    """

    _attribute_map = {
        "hidden_paths_on_request": {"key": "hiddenPathsOnRequest", "type": "[str]"},
        "hidden_paths_on_response": {"key": "hiddenPathsOnResponse", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        hidden_paths_on_request: Optional[List[str]] = None,
        hidden_paths_on_response: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword hidden_paths_on_request:
        :paramtype hidden_paths_on_request: list[str]
        :keyword hidden_paths_on_response:
        :paramtype hidden_paths_on_response: list[str]
        """
        super().__init__(**kwargs)
        self.hidden_paths_on_request = hidden_paths_on_request
        self.hidden_paths_on_response = hidden_paths_on_response


class LoggingRule(_serialization.Model):
    """LoggingRule.

    All required parameters must be populated in order to send to server.

    :ivar action: Required.
    :vartype action: str
    :ivar direction: Required. Known values are: "None", "Request", and "Response".
    :vartype direction: str or ~azure.mgmt.providerhub.models.LoggingDirections
    :ivar detail_level: Required. Known values are: "None" and "Body".
    :vartype detail_level: str or ~azure.mgmt.providerhub.models.LoggingDetails
    :ivar hidden_property_paths:
    :vartype hidden_property_paths: ~azure.mgmt.providerhub.models.LoggingRuleHiddenPropertyPaths
    """

    _validation = {
        "action": {"required": True},
        "direction": {"required": True},
        "detail_level": {"required": True},
    }

    _attribute_map = {
        "action": {"key": "action", "type": "str"},
        "direction": {"key": "direction", "type": "str"},
        "detail_level": {"key": "detailLevel", "type": "str"},
        "hidden_property_paths": {"key": "hiddenPropertyPaths", "type": "LoggingRuleHiddenPropertyPaths"},
    }

    def __init__(
        self,
        *,
        action: str,
        direction: Union[str, "_models.LoggingDirections"],
        detail_level: Union[str, "_models.LoggingDetails"],
        hidden_property_paths: Optional["_models.LoggingRuleHiddenPropertyPaths"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword action: Required.
        :paramtype action: str
        :keyword direction: Required. Known values are: "None", "Request", and "Response".
        :paramtype direction: str or ~azure.mgmt.providerhub.models.LoggingDirections
        :keyword detail_level: Required. Known values are: "None" and "Body".
        :paramtype detail_level: str or ~azure.mgmt.providerhub.models.LoggingDetails
        :keyword hidden_property_paths:
        :paramtype hidden_property_paths: ~azure.mgmt.providerhub.models.LoggingRuleHiddenPropertyPaths
        """
        super().__init__(**kwargs)
        self.action = action
        self.direction = direction
        self.detail_level = detail_level
        self.hidden_property_paths = hidden_property_paths


class LoggingRuleHiddenPropertyPaths(LoggingHiddenPropertyPath):
    """LoggingRuleHiddenPropertyPaths.

    :ivar hidden_paths_on_request:
    :vartype hidden_paths_on_request: list[str]
    :ivar hidden_paths_on_response:
    :vartype hidden_paths_on_response: list[str]
    """


class NotificationEndpoint(_serialization.Model):
    """NotificationEndpoint.

    :ivar notification_destination:
    :vartype notification_destination: str
    :ivar locations:
    :vartype locations: list[str]
    """

    _attribute_map = {
        "notification_destination": {"key": "notificationDestination", "type": "str"},
        "locations": {"key": "locations", "type": "[str]"},
    }

    def __init__(
        self, *, notification_destination: Optional[str] = None, locations: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword notification_destination:
        :paramtype notification_destination: str
        :keyword locations:
        :paramtype locations: list[str]
        """
        super().__init__(**kwargs)
        self.notification_destination = notification_destination
        self.locations = locations


class NotificationRegistration(Resource):
    """The notification registration definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties:
    :vartype properties: ~azure.mgmt.providerhub.models.NotificationRegistrationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "NotificationRegistrationProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.NotificationRegistrationProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.providerhub.models.NotificationRegistrationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class NotificationRegistrationArrayResponseWithContinuation(_serialization.Model):  # pylint: disable=name-too-long
    """NotificationRegistrationArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.NotificationRegistration]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NotificationRegistration]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.NotificationRegistration"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.NotificationRegistration]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NotificationRegistrationPropertiesAutoGenerated(_serialization.Model):  # pylint: disable=name-too-long
    """NotificationRegistrationPropertiesAutoGenerated.

    :ivar notification_mode: Known values are: "NotSpecified", "EventHub", and "WebHook".
    :vartype notification_mode: str or ~azure.mgmt.providerhub.models.NotificationMode
    :ivar message_scope: Known values are: "NotSpecified" and "RegisteredSubscriptions".
    :vartype message_scope: str or ~azure.mgmt.providerhub.models.MessageScope
    :ivar included_events:
    :vartype included_events: list[str]
    :ivar notification_endpoints:
    :vartype notification_endpoints: list[~azure.mgmt.providerhub.models.NotificationEndpoint]
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    """

    _attribute_map = {
        "notification_mode": {"key": "notificationMode", "type": "str"},
        "message_scope": {"key": "messageScope", "type": "str"},
        "included_events": {"key": "includedEvents", "type": "[str]"},
        "notification_endpoints": {"key": "notificationEndpoints", "type": "[NotificationEndpoint]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        notification_mode: Optional[Union[str, "_models.NotificationMode"]] = None,
        message_scope: Optional[Union[str, "_models.MessageScope"]] = None,
        included_events: Optional[List[str]] = None,
        notification_endpoints: Optional[List["_models.NotificationEndpoint"]] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword notification_mode: Known values are: "NotSpecified", "EventHub", and "WebHook".
        :paramtype notification_mode: str or ~azure.mgmt.providerhub.models.NotificationMode
        :keyword message_scope: Known values are: "NotSpecified" and "RegisteredSubscriptions".
        :paramtype message_scope: str or ~azure.mgmt.providerhub.models.MessageScope
        :keyword included_events:
        :paramtype included_events: list[str]
        :keyword notification_endpoints:
        :paramtype notification_endpoints: list[~azure.mgmt.providerhub.models.NotificationEndpoint]
        :keyword provisioning_state: Known values are: "NotSpecified", "Accepted", "Running",
         "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded",
         "MovingResources", "TransientFailure", and "RolloutInProgress".
        :paramtype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.notification_mode = notification_mode
        self.message_scope = message_scope
        self.included_events = included_events
        self.notification_endpoints = notification_endpoints
        self.provisioning_state = provisioning_state


class NotificationRegistrationProperties(NotificationRegistrationPropertiesAutoGenerated):
    """NotificationRegistrationProperties.

    :ivar notification_mode: Known values are: "NotSpecified", "EventHub", and "WebHook".
    :vartype notification_mode: str or ~azure.mgmt.providerhub.models.NotificationMode
    :ivar message_scope: Known values are: "NotSpecified" and "RegisteredSubscriptions".
    :vartype message_scope: str or ~azure.mgmt.providerhub.models.MessageScope
    :ivar included_events:
    :vartype included_events: list[str]
    :ivar notification_endpoints:
    :vartype notification_endpoints: list[~azure.mgmt.providerhub.models.NotificationEndpoint]
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    """


class OperationsContent(Resource):
    """OperationsContent.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar name_properties_name: Name of the operation.
    :vartype name_properties_name: str
    :ivar is_data_action: Indicates whether the operation applies to data-plane.
    :vartype is_data_action: bool
    :ivar origin: Known values are: "NotSpecified", "User", and "System".
    :vartype origin: str or ~azure.mgmt.providerhub.models.OperationOrigins
    :ivar display: Display information of the operation.
    :vartype display: ~azure.mgmt.providerhub.models.OperationsDefinitionDisplay
    :ivar action_type: Known values are: "NotSpecified" and "Internal".
    :vartype action_type: str or ~azure.mgmt.providerhub.models.OperationActionType
    :ivar properties: Anything.
    :vartype properties: any
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name_properties_name": {"key": "properties.name", "type": "str"},
        "is_data_action": {"key": "properties.isDataAction", "type": "bool"},
        "origin": {"key": "properties.origin", "type": "str"},
        "display": {"key": "properties.display", "type": "OperationsDefinitionDisplay"},
        "action_type": {"key": "properties.actionType", "type": "str"},
        "properties": {"key": "properties.properties", "type": "object"},
    }

    def __init__(
        self,
        *,
        name_properties_name: Optional[str] = None,
        is_data_action: Optional[bool] = None,
        origin: Optional[Union[str, "_models.OperationOrigins"]] = None,
        display: Optional["_models.OperationsDefinitionDisplay"] = None,
        action_type: Optional[Union[str, "_models.OperationActionType"]] = None,
        properties: Optional[Any] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name_properties_name: Name of the operation.
        :paramtype name_properties_name: str
        :keyword is_data_action: Indicates whether the operation applies to data-plane.
        :paramtype is_data_action: bool
        :keyword origin: Known values are: "NotSpecified", "User", and "System".
        :paramtype origin: str or ~azure.mgmt.providerhub.models.OperationOrigins
        :keyword display: Display information of the operation.
        :paramtype display: ~azure.mgmt.providerhub.models.OperationsDefinitionDisplay
        :keyword action_type: Known values are: "NotSpecified" and "Internal".
        :paramtype action_type: str or ~azure.mgmt.providerhub.models.OperationActionType
        :keyword properties: Anything.
        :paramtype properties: any
        """
        super().__init__(**kwargs)
        self.name_properties_name = name_properties_name
        self.is_data_action = is_data_action
        self.origin = origin
        self.display = display
        self.action_type = action_type
        self.properties = properties


class OperationsDefinition(_serialization.Model):
    """Properties of an Operation.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the operation. Required.
    :vartype name: str
    :ivar is_data_action: Indicates whether the operation applies to data-plane.
    :vartype is_data_action: bool
    :ivar origin: Known values are: "NotSpecified", "User", and "System".
    :vartype origin: str or ~azure.mgmt.providerhub.models.OperationOrigins
    :ivar display: Display information of the operation. Required.
    :vartype display: ~azure.mgmt.providerhub.models.OperationsDefinitionDisplay
    :ivar action_type: Known values are: "NotSpecified" and "Internal".
    :vartype action_type: str or ~azure.mgmt.providerhub.models.OperationActionType
    :ivar properties: Anything.
    :vartype properties: any
    """

    _validation = {
        "name": {"required": True},
        "display": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "origin": {"key": "origin", "type": "str"},
        "display": {"key": "display", "type": "OperationsDefinitionDisplay"},
        "action_type": {"key": "actionType", "type": "str"},
        "properties": {"key": "properties", "type": "object"},
    }

    def __init__(
        self,
        *,
        name: str,
        display: "_models.OperationsDefinitionDisplay",
        is_data_action: Optional[bool] = None,
        origin: Optional[Union[str, "_models.OperationOrigins"]] = None,
        action_type: Optional[Union[str, "_models.OperationActionType"]] = None,
        properties: Optional[Any] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Name of the operation. Required.
        :paramtype name: str
        :keyword is_data_action: Indicates whether the operation applies to data-plane.
        :paramtype is_data_action: bool
        :keyword origin: Known values are: "NotSpecified", "User", and "System".
        :paramtype origin: str or ~azure.mgmt.providerhub.models.OperationOrigins
        :keyword display: Display information of the operation. Required.
        :paramtype display: ~azure.mgmt.providerhub.models.OperationsDefinitionDisplay
        :keyword action_type: Known values are: "NotSpecified" and "Internal".
        :paramtype action_type: str or ~azure.mgmt.providerhub.models.OperationActionType
        :keyword properties: Anything.
        :paramtype properties: any
        """
        super().__init__(**kwargs)
        self.name = name
        self.is_data_action = is_data_action
        self.origin = origin
        self.display = display
        self.action_type = action_type
        self.properties = properties


class OperationsDefinitionArrayResponseWithContinuation(_serialization.Model):  # pylint: disable=name-too-long
    """OperationsDefinitionArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.OperationsDefinition]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[OperationsDefinition]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.OperationsDefinition"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.OperationsDefinition]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class OperationsDisplayDefinition(_serialization.Model):
    """OperationsDisplayDefinition.

    All required parameters must be populated in order to send to server.

    :ivar provider: Required.
    :vartype provider: str
    :ivar resource: Required.
    :vartype resource: str
    :ivar operation: Required.
    :vartype operation: str
    :ivar description: Required.
    :vartype description: str
    """

    _validation = {
        "provider": {"required": True},
        "resource": {"required": True},
        "operation": {"required": True},
        "description": {"required": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, provider: str, resource: str, operation: str, description: str, **kwargs: Any) -> None:
        """
        :keyword provider: Required.
        :paramtype provider: str
        :keyword resource: Required.
        :paramtype resource: str
        :keyword operation: Required.
        :paramtype operation: str
        :keyword description: Required.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class OperationsDefinitionDisplay(OperationsDisplayDefinition):
    """Display information of the operation.

    All required parameters must be populated in order to send to server.

    :ivar provider: Required.
    :vartype provider: str
    :ivar resource: Required.
    :vartype resource: str
    :ivar operation: Required.
    :vartype operation: str
    :ivar description: Required.
    :vartype description: str
    """


class OperationsPutContent(_serialization.Model):
    """OperationsPutContent.

    All required parameters must be populated in order to send to server.

    :ivar contents: Required.
    :vartype contents: list[~azure.mgmt.providerhub.models.OperationsDefinition]
    """

    _validation = {
        "contents": {"required": True},
    }

    _attribute_map = {
        "contents": {"key": "contents", "type": "[OperationsDefinition]"},
    }

    def __init__(self, *, contents: List["_models.OperationsDefinition"], **kwargs: Any) -> None:
        """
        :keyword contents: Required.
        :paramtype contents: list[~azure.mgmt.providerhub.models.OperationsDefinition]
        """
        super().__init__(**kwargs)
        self.contents = contents


class ProviderHubMetadata(_serialization.Model):
    """ProviderHubMetadata.

    :ivar provider_authorizations:
    :vartype provider_authorizations:
     list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
    :ivar provider_authentication:
    :vartype provider_authentication:
     ~azure.mgmt.providerhub.models.ProviderHubMetadataProviderAuthentication
    :ivar third_party_provider_authorization:
    :vartype third_party_provider_authorization:
     ~azure.mgmt.providerhub.models.ProviderHubMetadataThirdPartyProviderAuthorization
    """

    _attribute_map = {
        "provider_authorizations": {"key": "providerAuthorizations", "type": "[ResourceProviderAuthorization]"},
        "provider_authentication": {
            "key": "providerAuthentication",
            "type": "ProviderHubMetadataProviderAuthentication",
        },
        "third_party_provider_authorization": {
            "key": "thirdPartyProviderAuthorization",
            "type": "ProviderHubMetadataThirdPartyProviderAuthorization",
        },
    }

    def __init__(
        self,
        *,
        provider_authorizations: Optional[List["_models.ResourceProviderAuthorization"]] = None,
        provider_authentication: Optional["_models.ProviderHubMetadataProviderAuthentication"] = None,
        third_party_provider_authorization: Optional[
            "_models.ProviderHubMetadataThirdPartyProviderAuthorization"
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider_authorizations:
        :paramtype provider_authorizations:
         list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
        :keyword provider_authentication:
        :paramtype provider_authentication:
         ~azure.mgmt.providerhub.models.ProviderHubMetadataProviderAuthentication
        :keyword third_party_provider_authorization:
        :paramtype third_party_provider_authorization:
         ~azure.mgmt.providerhub.models.ProviderHubMetadataThirdPartyProviderAuthorization
        """
        super().__init__(**kwargs)
        self.provider_authorizations = provider_authorizations
        self.provider_authentication = provider_authentication
        self.third_party_provider_authorization = third_party_provider_authorization


class ResourceProviderAuthentication(_serialization.Model):
    """ResourceProviderAuthentication.

    All required parameters must be populated in order to send to server.

    :ivar allowed_audiences: Required.
    :vartype allowed_audiences: list[str]
    """

    _validation = {
        "allowed_audiences": {"required": True},
    }

    _attribute_map = {
        "allowed_audiences": {"key": "allowedAudiences", "type": "[str]"},
    }

    def __init__(self, *, allowed_audiences: List[str], **kwargs: Any) -> None:
        """
        :keyword allowed_audiences: Required.
        :paramtype allowed_audiences: list[str]
        """
        super().__init__(**kwargs)
        self.allowed_audiences = allowed_audiences


class ProviderHubMetadataProviderAuthentication(ResourceProviderAuthentication):  # pylint: disable=name-too-long
    """ProviderHubMetadataProviderAuthentication.

    All required parameters must be populated in order to send to server.

    :ivar allowed_audiences: Required.
    :vartype allowed_audiences: list[str]
    """


class ThirdPartyProviderAuthorization(_serialization.Model):
    """ThirdPartyProviderAuthorization.

    :ivar authorizations:
    :vartype authorizations: list[~azure.mgmt.providerhub.models.LightHouseAuthorization]
    :ivar managed_by_tenant_id:
    :vartype managed_by_tenant_id: str
    """

    _attribute_map = {
        "authorizations": {"key": "authorizations", "type": "[LightHouseAuthorization]"},
        "managed_by_tenant_id": {"key": "managedByTenantId", "type": "str"},
    }

    def __init__(
        self,
        *,
        authorizations: Optional[List["_models.LightHouseAuthorization"]] = None,
        managed_by_tenant_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword authorizations:
        :paramtype authorizations: list[~azure.mgmt.providerhub.models.LightHouseAuthorization]
        :keyword managed_by_tenant_id:
        :paramtype managed_by_tenant_id: str
        """
        super().__init__(**kwargs)
        self.authorizations = authorizations
        self.managed_by_tenant_id = managed_by_tenant_id


class ProviderHubMetadataThirdPartyProviderAuthorization(
    ThirdPartyProviderAuthorization
):  # pylint: disable=name-too-long
    """ProviderHubMetadataThirdPartyProviderAuthorization.

    :ivar authorizations:
    :vartype authorizations: list[~azure.mgmt.providerhub.models.LightHouseAuthorization]
    :ivar managed_by_tenant_id:
    :vartype managed_by_tenant_id: str
    """


class ProviderRegistrationArrayResponseWithContinuation(_serialization.Model):  # pylint: disable=name-too-long
    """ProviderRegistrationArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.ProviderRegistration]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ProviderRegistration]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.ProviderRegistration"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.ProviderRegistration]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ResourceProviderManifestProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """ResourceProviderManifestProperties.

    :ivar provider_authentication:
    :vartype provider_authentication:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesProviderAuthentication
    :ivar provider_authorizations:
    :vartype provider_authorizations:
     list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
    :ivar namespace:
    :vartype namespace: str
    :ivar provider_version:
    :vartype provider_version: str
    :ivar provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
     "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
    :vartype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesFeaturesRule
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesRequestHeaderOptions
    :ivar management:
    :vartype management:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesManagement
    :ivar capabilities:
    :vartype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
    :ivar metadata: Anything.
    :vartype metadata: any
    :ivar template_deployment_options:
    :vartype template_deployment_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesTemplateDeploymentOptions
    """

    _attribute_map = {
        "provider_authentication": {
            "key": "providerAuthentication",
            "type": "ResourceProviderManifestPropertiesProviderAuthentication",
        },
        "provider_authorizations": {"key": "providerAuthorizations", "type": "[ResourceProviderAuthorization]"},
        "namespace": {"key": "namespace", "type": "str"},
        "provider_version": {"key": "providerVersion", "type": "str"},
        "provider_type": {"key": "providerType", "type": "str"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceProviderManifestPropertiesFeaturesRule"},
        "request_header_options": {
            "key": "requestHeaderOptions",
            "type": "ResourceProviderManifestPropertiesRequestHeaderOptions",
        },
        "management": {"key": "management", "type": "ResourceProviderManifestPropertiesManagement"},
        "capabilities": {"key": "capabilities", "type": "[ResourceProviderCapabilities]"},
        "metadata": {"key": "metadata", "type": "object"},
        "template_deployment_options": {
            "key": "templateDeploymentOptions",
            "type": "ResourceProviderManifestPropertiesTemplateDeploymentOptions",
        },
    }

    def __init__(
        self,
        *,
        provider_authentication: Optional["_models.ResourceProviderManifestPropertiesProviderAuthentication"] = None,
        provider_authorizations: Optional[List["_models.ResourceProviderAuthorization"]] = None,
        namespace: Optional[str] = None,
        provider_version: Optional[str] = None,
        provider_type: Optional[Union[str, "_models.ResourceProviderType"]] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceProviderManifestPropertiesFeaturesRule"] = None,
        request_header_options: Optional["_models.ResourceProviderManifestPropertiesRequestHeaderOptions"] = None,
        management: Optional["_models.ResourceProviderManifestPropertiesManagement"] = None,
        capabilities: Optional[List["_models.ResourceProviderCapabilities"]] = None,
        metadata: Optional[Any] = None,
        template_deployment_options: Optional[
            "_models.ResourceProviderManifestPropertiesTemplateDeploymentOptions"
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider_authentication:
        :paramtype provider_authentication:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesProviderAuthentication
        :keyword provider_authorizations:
        :paramtype provider_authorizations:
         list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
        :keyword namespace:
        :paramtype namespace: str
        :keyword provider_version:
        :paramtype provider_version: str
        :keyword provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
         "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
        :paramtype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesFeaturesRule
        :keyword request_header_options:
        :paramtype request_header_options:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesRequestHeaderOptions
        :keyword management:
        :paramtype management:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesManagement
        :keyword capabilities:
        :paramtype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
        :keyword metadata: Anything.
        :paramtype metadata: any
        :keyword template_deployment_options:
        :paramtype template_deployment_options:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesTemplateDeploymentOptions
        """
        super().__init__(**kwargs)
        self.provider_authentication = provider_authentication
        self.provider_authorizations = provider_authorizations
        self.namespace = namespace
        self.provider_version = provider_version
        self.provider_type = provider_type
        self.required_features = required_features
        self.features_rule = features_rule
        self.request_header_options = request_header_options
        self.management = management
        self.capabilities = capabilities
        self.metadata = metadata
        self.template_deployment_options = template_deployment_options


class ProviderRegistrationPropertiesAutoGenerated(
    ResourceProviderManifestProperties
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """ProviderRegistrationPropertiesAutoGenerated.

    :ivar provider_authentication:
    :vartype provider_authentication:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesProviderAuthentication
    :ivar provider_authorizations:
    :vartype provider_authorizations:
     list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
    :ivar namespace:
    :vartype namespace: str
    :ivar provider_version:
    :vartype provider_version: str
    :ivar provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
     "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
    :vartype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesFeaturesRule
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesRequestHeaderOptions
    :ivar management:
    :vartype management:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesManagement
    :ivar capabilities:
    :vartype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
    :ivar metadata: Anything.
    :vartype metadata: any
    :ivar template_deployment_options:
    :vartype template_deployment_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesTemplateDeploymentOptions
    :ivar provider_hub_metadata:
    :vartype provider_hub_metadata:
     ~azure.mgmt.providerhub.models.ProviderRegistrationPropertiesProviderHubMetadata
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar subscription_lifecycle_notification_specifications:
    :vartype subscription_lifecycle_notification_specifications:
     ~azure.mgmt.providerhub.models.ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
    """

    _attribute_map = {
        "provider_authentication": {
            "key": "providerAuthentication",
            "type": "ResourceProviderManifestPropertiesProviderAuthentication",
        },
        "provider_authorizations": {"key": "providerAuthorizations", "type": "[ResourceProviderAuthorization]"},
        "namespace": {"key": "namespace", "type": "str"},
        "provider_version": {"key": "providerVersion", "type": "str"},
        "provider_type": {"key": "providerType", "type": "str"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceProviderManifestPropertiesFeaturesRule"},
        "request_header_options": {
            "key": "requestHeaderOptions",
            "type": "ResourceProviderManifestPropertiesRequestHeaderOptions",
        },
        "management": {"key": "management", "type": "ResourceProviderManifestPropertiesManagement"},
        "capabilities": {"key": "capabilities", "type": "[ResourceProviderCapabilities]"},
        "metadata": {"key": "metadata", "type": "object"},
        "template_deployment_options": {
            "key": "templateDeploymentOptions",
            "type": "ResourceProviderManifestPropertiesTemplateDeploymentOptions",
        },
        "provider_hub_metadata": {
            "key": "providerHubMetadata",
            "type": "ProviderRegistrationPropertiesProviderHubMetadata",
        },
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "subscription_lifecycle_notification_specifications": {
            "key": "subscriptionLifecycleNotificationSpecifications",
            "type": "ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications",
        },
    }

    def __init__(
        self,
        *,
        provider_authentication: Optional["_models.ResourceProviderManifestPropertiesProviderAuthentication"] = None,
        provider_authorizations: Optional[List["_models.ResourceProviderAuthorization"]] = None,
        namespace: Optional[str] = None,
        provider_version: Optional[str] = None,
        provider_type: Optional[Union[str, "_models.ResourceProviderType"]] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceProviderManifestPropertiesFeaturesRule"] = None,
        request_header_options: Optional["_models.ResourceProviderManifestPropertiesRequestHeaderOptions"] = None,
        management: Optional["_models.ResourceProviderManifestPropertiesManagement"] = None,
        capabilities: Optional[List["_models.ResourceProviderCapabilities"]] = None,
        metadata: Optional[Any] = None,
        template_deployment_options: Optional[
            "_models.ResourceProviderManifestPropertiesTemplateDeploymentOptions"
        ] = None,
        provider_hub_metadata: Optional["_models.ProviderRegistrationPropertiesProviderHubMetadata"] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        subscription_lifecycle_notification_specifications: Optional[
            "_models.ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications"
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider_authentication:
        :paramtype provider_authentication:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesProviderAuthentication
        :keyword provider_authorizations:
        :paramtype provider_authorizations:
         list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
        :keyword namespace:
        :paramtype namespace: str
        :keyword provider_version:
        :paramtype provider_version: str
        :keyword provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
         "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
        :paramtype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesFeaturesRule
        :keyword request_header_options:
        :paramtype request_header_options:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesRequestHeaderOptions
        :keyword management:
        :paramtype management:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesManagement
        :keyword capabilities:
        :paramtype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
        :keyword metadata: Anything.
        :paramtype metadata: any
        :keyword template_deployment_options:
        :paramtype template_deployment_options:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesTemplateDeploymentOptions
        :keyword provider_hub_metadata:
        :paramtype provider_hub_metadata:
         ~azure.mgmt.providerhub.models.ProviderRegistrationPropertiesProviderHubMetadata
        :keyword provisioning_state: Known values are: "NotSpecified", "Accepted", "Running",
         "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded",
         "MovingResources", "TransientFailure", and "RolloutInProgress".
        :paramtype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
        :keyword subscription_lifecycle_notification_specifications:
        :paramtype subscription_lifecycle_notification_specifications:
         ~azure.mgmt.providerhub.models.ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
        """
        super().__init__(
            provider_authentication=provider_authentication,
            provider_authorizations=provider_authorizations,
            namespace=namespace,
            provider_version=provider_version,
            provider_type=provider_type,
            required_features=required_features,
            features_rule=features_rule,
            request_header_options=request_header_options,
            management=management,
            capabilities=capabilities,
            metadata=metadata,
            template_deployment_options=template_deployment_options,
            **kwargs
        )
        self.provider_hub_metadata = provider_hub_metadata
        self.provisioning_state = provisioning_state
        self.subscription_lifecycle_notification_specifications = subscription_lifecycle_notification_specifications


class ProviderRegistrationProperties(
    ProviderRegistrationPropertiesAutoGenerated
):  # pylint: disable=too-many-instance-attributes
    """ProviderRegistrationProperties.

    :ivar provider_authentication:
    :vartype provider_authentication:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesProviderAuthentication
    :ivar provider_authorizations:
    :vartype provider_authorizations:
     list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
    :ivar namespace:
    :vartype namespace: str
    :ivar provider_version:
    :vartype provider_version: str
    :ivar provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
     "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
    :vartype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesFeaturesRule
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesRequestHeaderOptions
    :ivar management:
    :vartype management:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesManagement
    :ivar capabilities:
    :vartype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
    :ivar metadata: Anything.
    :vartype metadata: any
    :ivar template_deployment_options:
    :vartype template_deployment_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestPropertiesTemplateDeploymentOptions
    :ivar provider_hub_metadata:
    :vartype provider_hub_metadata:
     ~azure.mgmt.providerhub.models.ProviderRegistrationPropertiesProviderHubMetadata
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar subscription_lifecycle_notification_specifications:
    :vartype subscription_lifecycle_notification_specifications:
     ~azure.mgmt.providerhub.models.ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
    """


class ProviderRegistrationPropertiesProviderHubMetadata(ProviderHubMetadata):  # pylint: disable=name-too-long
    """ProviderRegistrationPropertiesProviderHubMetadata.

    :ivar provider_authorizations:
    :vartype provider_authorizations:
     list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
    :ivar provider_authentication:
    :vartype provider_authentication:
     ~azure.mgmt.providerhub.models.ProviderHubMetadataProviderAuthentication
    :ivar third_party_provider_authorization:
    :vartype third_party_provider_authorization:
     ~azure.mgmt.providerhub.models.ProviderHubMetadataThirdPartyProviderAuthorization
    """


class SubscriptionLifecycleNotificationSpecifications(_serialization.Model):  # pylint: disable=name-too-long
    """SubscriptionLifecycleNotificationSpecifications.

    :ivar subscription_state_override_actions:
    :vartype subscription_state_override_actions:
     list[~azure.mgmt.providerhub.models.SubscriptionStateOverrideAction]
    :ivar soft_delete_ttl:
    :vartype soft_delete_ttl: ~datetime.timedelta
    """

    _attribute_map = {
        "subscription_state_override_actions": {
            "key": "subscriptionStateOverrideActions",
            "type": "[SubscriptionStateOverrideAction]",
        },
        "soft_delete_ttl": {"key": "softDeleteTTL", "type": "duration"},
    }

    def __init__(
        self,
        *,
        subscription_state_override_actions: Optional[List["_models.SubscriptionStateOverrideAction"]] = None,
        soft_delete_ttl: Optional[datetime.timedelta] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword subscription_state_override_actions:
        :paramtype subscription_state_override_actions:
         list[~azure.mgmt.providerhub.models.SubscriptionStateOverrideAction]
        :keyword soft_delete_ttl:
        :paramtype soft_delete_ttl: ~datetime.timedelta
        """
        super().__init__(**kwargs)
        self.subscription_state_override_actions = subscription_state_override_actions
        self.soft_delete_ttl = soft_delete_ttl


class ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications(
    SubscriptionLifecycleNotificationSpecifications
):  # pylint: disable=name-too-long
    """ProviderRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications.

    :ivar subscription_state_override_actions:
    :vartype subscription_state_override_actions:
     list[~azure.mgmt.providerhub.models.SubscriptionStateOverrideAction]
    :ivar soft_delete_ttl:
    :vartype soft_delete_ttl: ~datetime.timedelta
    """


class RequestHeaderOptions(_serialization.Model):
    """RequestHeaderOptions.

    :ivar opt_in_headers: Known values are: "NotSpecified", "SignedUserToken",
     "ClientGroupMembership", "SignedAuxiliaryTokens", and "UnboundedClientGroupMembership".
    :vartype opt_in_headers: str or ~azure.mgmt.providerhub.models.OptInHeaderType
    """

    _attribute_map = {
        "opt_in_headers": {"key": "optInHeaders", "type": "str"},
    }

    def __init__(
        self, *, opt_in_headers: Optional[Union[str, "_models.OptInHeaderType"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword opt_in_headers: Known values are: "NotSpecified", "SignedUserToken",
         "ClientGroupMembership", "SignedAuxiliaryTokens", and "UnboundedClientGroupMembership".
        :paramtype opt_in_headers: str or ~azure.mgmt.providerhub.models.OptInHeaderType
        """
        super().__init__(**kwargs)
        self.opt_in_headers = opt_in_headers


class ReRegisterSubscriptionMetadata(_serialization.Model):
    """ReRegisterSubscriptionMetadata.

    All required parameters must be populated in order to send to server.

    :ivar enabled: Required.
    :vartype enabled: bool
    :ivar concurrency_limit:
    :vartype concurrency_limit: int
    """

    _validation = {
        "enabled": {"required": True},
    }

    _attribute_map = {
        "enabled": {"key": "enabled", "type": "bool"},
        "concurrency_limit": {"key": "concurrencyLimit", "type": "int"},
    }

    def __init__(self, *, enabled: bool, concurrency_limit: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword enabled: Required.
        :paramtype enabled: bool
        :keyword concurrency_limit:
        :paramtype concurrency_limit: int
        """
        super().__init__(**kwargs)
        self.enabled = enabled
        self.concurrency_limit = concurrency_limit


class ResourceMovePolicy(_serialization.Model):
    """ResourceMovePolicy.

    :ivar validation_required:
    :vartype validation_required: bool
    :ivar cross_resource_group_move_enabled:
    :vartype cross_resource_group_move_enabled: bool
    :ivar cross_subscription_move_enabled:
    :vartype cross_subscription_move_enabled: bool
    """

    _attribute_map = {
        "validation_required": {"key": "validationRequired", "type": "bool"},
        "cross_resource_group_move_enabled": {"key": "crossResourceGroupMoveEnabled", "type": "bool"},
        "cross_subscription_move_enabled": {"key": "crossSubscriptionMoveEnabled", "type": "bool"},
    }

    def __init__(
        self,
        *,
        validation_required: Optional[bool] = None,
        cross_resource_group_move_enabled: Optional[bool] = None,
        cross_subscription_move_enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword validation_required:
        :paramtype validation_required: bool
        :keyword cross_resource_group_move_enabled:
        :paramtype cross_resource_group_move_enabled: bool
        :keyword cross_subscription_move_enabled:
        :paramtype cross_subscription_move_enabled: bool
        """
        super().__init__(**kwargs)
        self.validation_required = validation_required
        self.cross_resource_group_move_enabled = cross_resource_group_move_enabled
        self.cross_subscription_move_enabled = cross_subscription_move_enabled


class ResourceProviderAuthorization(_serialization.Model):
    """ResourceProviderAuthorization.

    :ivar application_id:
    :vartype application_id: str
    :ivar role_definition_id:
    :vartype role_definition_id: str
    :ivar managed_by_role_definition_id:
    :vartype managed_by_role_definition_id: str
    """

    _attribute_map = {
        "application_id": {"key": "applicationId", "type": "str"},
        "role_definition_id": {"key": "roleDefinitionId", "type": "str"},
        "managed_by_role_definition_id": {"key": "managedByRoleDefinitionId", "type": "str"},
    }

    def __init__(
        self,
        *,
        application_id: Optional[str] = None,
        role_definition_id: Optional[str] = None,
        managed_by_role_definition_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword application_id:
        :paramtype application_id: str
        :keyword role_definition_id:
        :paramtype role_definition_id: str
        :keyword managed_by_role_definition_id:
        :paramtype managed_by_role_definition_id: str
        """
        super().__init__(**kwargs)
        self.application_id = application_id
        self.role_definition_id = role_definition_id
        self.managed_by_role_definition_id = managed_by_role_definition_id


class ResourceProviderCapabilities(_serialization.Model):
    """ResourceProviderCapabilities.

    All required parameters must be populated in order to send to server.

    :ivar quota_id: Required.
    :vartype quota_id: str
    :ivar effect: Required. Known values are: "NotSpecified", "Allow", and "Disallow".
    :vartype effect: str or ~azure.mgmt.providerhub.models.ResourceProviderCapabilitiesEffect
    :ivar required_features:
    :vartype required_features: list[str]
    """

    _validation = {
        "quota_id": {"required": True},
        "effect": {"required": True},
    }

    _attribute_map = {
        "quota_id": {"key": "quotaId", "type": "str"},
        "effect": {"key": "effect", "type": "str"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        quota_id: str,
        effect: Union[str, "_models.ResourceProviderCapabilitiesEffect"],
        required_features: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword quota_id: Required.
        :paramtype quota_id: str
        :keyword effect: Required. Known values are: "NotSpecified", "Allow", and "Disallow".
        :paramtype effect: str or ~azure.mgmt.providerhub.models.ResourceProviderCapabilitiesEffect
        :keyword required_features:
        :paramtype required_features: list[str]
        """
        super().__init__(**kwargs)
        self.quota_id = quota_id
        self.effect = effect
        self.required_features = required_features


class ResourceProviderEndpoint(_serialization.Model):
    """ResourceProviderEndpoint.

    :ivar enabled:
    :vartype enabled: bool
    :ivar api_versions:
    :vartype api_versions: list[str]
    :ivar endpoint_uri:
    :vartype endpoint_uri: str
    :ivar locations:
    :vartype locations: list[str]
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule: ~azure.mgmt.providerhub.models.ResourceProviderEndpointFeaturesRule
    :ivar timeout:
    :vartype timeout: ~datetime.timedelta
    """

    _attribute_map = {
        "enabled": {"key": "enabled", "type": "bool"},
        "api_versions": {"key": "apiVersions", "type": "[str]"},
        "endpoint_uri": {"key": "endpointUri", "type": "str"},
        "locations": {"key": "locations", "type": "[str]"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceProviderEndpointFeaturesRule"},
        "timeout": {"key": "timeout", "type": "duration"},
    }

    def __init__(
        self,
        *,
        enabled: Optional[bool] = None,
        api_versions: Optional[List[str]] = None,
        endpoint_uri: Optional[str] = None,
        locations: Optional[List[str]] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceProviderEndpointFeaturesRule"] = None,
        timeout: Optional[datetime.timedelta] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enabled:
        :paramtype enabled: bool
        :keyword api_versions:
        :paramtype api_versions: list[str]
        :keyword endpoint_uri:
        :paramtype endpoint_uri: str
        :keyword locations:
        :paramtype locations: list[str]
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule: ~azure.mgmt.providerhub.models.ResourceProviderEndpointFeaturesRule
        :keyword timeout:
        :paramtype timeout: ~datetime.timedelta
        """
        super().__init__(**kwargs)
        self.enabled = enabled
        self.api_versions = api_versions
        self.endpoint_uri = endpoint_uri
        self.locations = locations
        self.required_features = required_features
        self.features_rule = features_rule
        self.timeout = timeout


class ResourceProviderEndpointFeaturesRule(FeaturesRule):
    """ResourceProviderEndpointFeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """


class ResourceProviderManagement(_serialization.Model):
    """ResourceProviderManagement.

    :ivar schema_owners:
    :vartype schema_owners: list[str]
    :ivar manifest_owners:
    :vartype manifest_owners: list[str]
    :ivar incident_routing_service:
    :vartype incident_routing_service: str
    :ivar incident_routing_team:
    :vartype incident_routing_team: str
    :ivar incident_contact_email:
    :vartype incident_contact_email: str
    :ivar service_tree_infos:
    :vartype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
    :ivar resource_access_policy: Known values are: "NotSpecified", "AcisReadAllowed", and
     "AcisActionAllowed".
    :vartype resource_access_policy: str or ~azure.mgmt.providerhub.models.ResourceAccessPolicy
    :ivar resource_access_roles:
    :vartype resource_access_roles: list[any]
    """

    _attribute_map = {
        "schema_owners": {"key": "schemaOwners", "type": "[str]"},
        "manifest_owners": {"key": "manifestOwners", "type": "[str]"},
        "incident_routing_service": {"key": "incidentRoutingService", "type": "str"},
        "incident_routing_team": {"key": "incidentRoutingTeam", "type": "str"},
        "incident_contact_email": {"key": "incidentContactEmail", "type": "str"},
        "service_tree_infos": {"key": "serviceTreeInfos", "type": "[ServiceTreeInfo]"},
        "resource_access_policy": {"key": "resourceAccessPolicy", "type": "str"},
        "resource_access_roles": {"key": "resourceAccessRoles", "type": "[object]"},
    }

    def __init__(
        self,
        *,
        schema_owners: Optional[List[str]] = None,
        manifest_owners: Optional[List[str]] = None,
        incident_routing_service: Optional[str] = None,
        incident_routing_team: Optional[str] = None,
        incident_contact_email: Optional[str] = None,
        service_tree_infos: Optional[List["_models.ServiceTreeInfo"]] = None,
        resource_access_policy: Optional[Union[str, "_models.ResourceAccessPolicy"]] = None,
        resource_access_roles: Optional[List[Any]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword schema_owners:
        :paramtype schema_owners: list[str]
        :keyword manifest_owners:
        :paramtype manifest_owners: list[str]
        :keyword incident_routing_service:
        :paramtype incident_routing_service: str
        :keyword incident_routing_team:
        :paramtype incident_routing_team: str
        :keyword incident_contact_email:
        :paramtype incident_contact_email: str
        :keyword service_tree_infos:
        :paramtype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
        :keyword resource_access_policy: Known values are: "NotSpecified", "AcisReadAllowed", and
         "AcisActionAllowed".
        :paramtype resource_access_policy: str or ~azure.mgmt.providerhub.models.ResourceAccessPolicy
        :keyword resource_access_roles:
        :paramtype resource_access_roles: list[any]
        """
        super().__init__(**kwargs)
        self.schema_owners = schema_owners
        self.manifest_owners = manifest_owners
        self.incident_routing_service = incident_routing_service
        self.incident_routing_team = incident_routing_team
        self.incident_contact_email = incident_contact_email
        self.service_tree_infos = service_tree_infos
        self.resource_access_policy = resource_access_policy
        self.resource_access_roles = resource_access_roles


class ResourceProviderManifest(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """ResourceProviderManifest.

    :ivar provider_authentication:
    :vartype provider_authentication:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestProviderAuthentication
    :ivar provider_authorizations:
    :vartype provider_authorizations:
     list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
    :ivar namespace:
    :vartype namespace: str
    :ivar provider_version:
    :vartype provider_version: str
    :ivar provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
     "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
    :vartype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule: ~azure.mgmt.providerhub.models.ResourceProviderManifestFeaturesRule
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestRequestHeaderOptions
    :ivar resource_types:
    :vartype resource_types: list[~azure.mgmt.providerhub.models.ResourceType]
    :ivar management:
    :vartype management: ~azure.mgmt.providerhub.models.ResourceProviderManifestManagement
    :ivar capabilities:
    :vartype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
    :ivar metadata: Anything.
    :vartype metadata: any
    :ivar global_notification_endpoints:
    :vartype global_notification_endpoints:
     list[~azure.mgmt.providerhub.models.ResourceProviderEndpoint]
    :ivar re_register_subscription_metadata:
    :vartype re_register_subscription_metadata:
     ~azure.mgmt.providerhub.models.ResourceProviderManifestReRegisterSubscriptionMetadata
    """

    _attribute_map = {
        "provider_authentication": {
            "key": "providerAuthentication",
            "type": "ResourceProviderManifestProviderAuthentication",
        },
        "provider_authorizations": {"key": "providerAuthorizations", "type": "[ResourceProviderAuthorization]"},
        "namespace": {"key": "namespace", "type": "str"},
        "provider_version": {"key": "providerVersion", "type": "str"},
        "provider_type": {"key": "providerType", "type": "str"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceProviderManifestFeaturesRule"},
        "request_header_options": {
            "key": "requestHeaderOptions",
            "type": "ResourceProviderManifestRequestHeaderOptions",
        },
        "resource_types": {"key": "resourceTypes", "type": "[ResourceType]"},
        "management": {"key": "management", "type": "ResourceProviderManifestManagement"},
        "capabilities": {"key": "capabilities", "type": "[ResourceProviderCapabilities]"},
        "metadata": {"key": "metadata", "type": "object"},
        "global_notification_endpoints": {"key": "globalNotificationEndpoints", "type": "[ResourceProviderEndpoint]"},
        "re_register_subscription_metadata": {
            "key": "reRegisterSubscriptionMetadata",
            "type": "ResourceProviderManifestReRegisterSubscriptionMetadata",
        },
    }

    def __init__(
        self,
        *,
        provider_authentication: Optional["_models.ResourceProviderManifestProviderAuthentication"] = None,
        provider_authorizations: Optional[List["_models.ResourceProviderAuthorization"]] = None,
        namespace: Optional[str] = None,
        provider_version: Optional[str] = None,
        provider_type: Optional[Union[str, "_models.ResourceProviderType"]] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceProviderManifestFeaturesRule"] = None,
        request_header_options: Optional["_models.ResourceProviderManifestRequestHeaderOptions"] = None,
        resource_types: Optional[List["_models.ResourceType"]] = None,
        management: Optional["_models.ResourceProviderManifestManagement"] = None,
        capabilities: Optional[List["_models.ResourceProviderCapabilities"]] = None,
        metadata: Optional[Any] = None,
        global_notification_endpoints: Optional[List["_models.ResourceProviderEndpoint"]] = None,
        re_register_subscription_metadata: Optional[
            "_models.ResourceProviderManifestReRegisterSubscriptionMetadata"
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider_authentication:
        :paramtype provider_authentication:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestProviderAuthentication
        :keyword provider_authorizations:
        :paramtype provider_authorizations:
         list[~azure.mgmt.providerhub.models.ResourceProviderAuthorization]
        :keyword namespace:
        :paramtype namespace: str
        :keyword provider_version:
        :paramtype provider_version: str
        :keyword provider_type: Known values are: "NotSpecified", "Internal", "External", "Hidden",
         "RegistrationFree", "LegacyRegistrationRequired", "TenantOnly", and "AuthorizationFree".
        :paramtype provider_type: str or ~azure.mgmt.providerhub.models.ResourceProviderType
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule: ~azure.mgmt.providerhub.models.ResourceProviderManifestFeaturesRule
        :keyword request_header_options:
        :paramtype request_header_options:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestRequestHeaderOptions
        :keyword resource_types:
        :paramtype resource_types: list[~azure.mgmt.providerhub.models.ResourceType]
        :keyword management:
        :paramtype management: ~azure.mgmt.providerhub.models.ResourceProviderManifestManagement
        :keyword capabilities:
        :paramtype capabilities: list[~azure.mgmt.providerhub.models.ResourceProviderCapabilities]
        :keyword metadata: Anything.
        :paramtype metadata: any
        :keyword global_notification_endpoints:
        :paramtype global_notification_endpoints:
         list[~azure.mgmt.providerhub.models.ResourceProviderEndpoint]
        :keyword re_register_subscription_metadata:
        :paramtype re_register_subscription_metadata:
         ~azure.mgmt.providerhub.models.ResourceProviderManifestReRegisterSubscriptionMetadata
        """
        super().__init__(**kwargs)
        self.provider_authentication = provider_authentication
        self.provider_authorizations = provider_authorizations
        self.namespace = namespace
        self.provider_version = provider_version
        self.provider_type = provider_type
        self.required_features = required_features
        self.features_rule = features_rule
        self.request_header_options = request_header_options
        self.resource_types = resource_types
        self.management = management
        self.capabilities = capabilities
        self.metadata = metadata
        self.global_notification_endpoints = global_notification_endpoints
        self.re_register_subscription_metadata = re_register_subscription_metadata


class ResourceProviderManifestFeaturesRule(FeaturesRule):
    """ResourceProviderManifestFeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """


class ResourceProviderManifestManagement(ResourceProviderManagement):
    """ResourceProviderManifestManagement.

    :ivar schema_owners:
    :vartype schema_owners: list[str]
    :ivar manifest_owners:
    :vartype manifest_owners: list[str]
    :ivar incident_routing_service:
    :vartype incident_routing_service: str
    :ivar incident_routing_team:
    :vartype incident_routing_team: str
    :ivar incident_contact_email:
    :vartype incident_contact_email: str
    :ivar service_tree_infos:
    :vartype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
    :ivar resource_access_policy: Known values are: "NotSpecified", "AcisReadAllowed", and
     "AcisActionAllowed".
    :vartype resource_access_policy: str or ~azure.mgmt.providerhub.models.ResourceAccessPolicy
    :ivar resource_access_roles:
    :vartype resource_access_roles: list[any]
    """


class ResourceProviderManifestPropertiesFeaturesRule(FeaturesRule):  # pylint: disable=name-too-long
    """ResourceProviderManifestPropertiesFeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """


class ResourceProviderManifestPropertiesManagement(ResourceProviderManagement):  # pylint: disable=name-too-long
    """ResourceProviderManifestPropertiesManagement.

    :ivar schema_owners:
    :vartype schema_owners: list[str]
    :ivar manifest_owners:
    :vartype manifest_owners: list[str]
    :ivar incident_routing_service:
    :vartype incident_routing_service: str
    :ivar incident_routing_team:
    :vartype incident_routing_team: str
    :ivar incident_contact_email:
    :vartype incident_contact_email: str
    :ivar service_tree_infos:
    :vartype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
    :ivar resource_access_policy: Known values are: "NotSpecified", "AcisReadAllowed", and
     "AcisActionAllowed".
    :vartype resource_access_policy: str or ~azure.mgmt.providerhub.models.ResourceAccessPolicy
    :ivar resource_access_roles:
    :vartype resource_access_roles: list[any]
    """


class ResourceProviderManifestPropertiesProviderAuthentication(
    ResourceProviderAuthentication
):  # pylint: disable=name-too-long
    """ResourceProviderManifestPropertiesProviderAuthentication.

    All required parameters must be populated in order to send to server.

    :ivar allowed_audiences: Required.
    :vartype allowed_audiences: list[str]
    """


class ResourceProviderManifestPropertiesRequestHeaderOptions(RequestHeaderOptions):  # pylint: disable=name-too-long
    """ResourceProviderManifestPropertiesRequestHeaderOptions.

    :ivar opt_in_headers: Known values are: "NotSpecified", "SignedUserToken",
     "ClientGroupMembership", "SignedAuxiliaryTokens", and "UnboundedClientGroupMembership".
    :vartype opt_in_headers: str or ~azure.mgmt.providerhub.models.OptInHeaderType
    """


class TemplateDeploymentOptions(_serialization.Model):
    """TemplateDeploymentOptions.

    :ivar preflight_supported:
    :vartype preflight_supported: bool
    :ivar preflight_options:
    :vartype preflight_options: list[str or ~azure.mgmt.providerhub.models.PreflightOption]
    """

    _attribute_map = {
        "preflight_supported": {"key": "preflightSupported", "type": "bool"},
        "preflight_options": {"key": "preflightOptions", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        preflight_supported: Optional[bool] = None,
        preflight_options: Optional[List[Union[str, "_models.PreflightOption"]]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword preflight_supported:
        :paramtype preflight_supported: bool
        :keyword preflight_options:
        :paramtype preflight_options: list[str or ~azure.mgmt.providerhub.models.PreflightOption]
        """
        super().__init__(**kwargs)
        self.preflight_supported = preflight_supported
        self.preflight_options = preflight_options


class ResourceProviderManifestPropertiesTemplateDeploymentOptions(
    TemplateDeploymentOptions
):  # pylint: disable=name-too-long
    """ResourceProviderManifestPropertiesTemplateDeploymentOptions.

    :ivar preflight_supported:
    :vartype preflight_supported: bool
    :ivar preflight_options:
    :vartype preflight_options: list[str or ~azure.mgmt.providerhub.models.PreflightOption]
    """


class ResourceProviderManifestProviderAuthentication(ResourceProviderAuthentication):  # pylint: disable=name-too-long
    """ResourceProviderManifestProviderAuthentication.

    All required parameters must be populated in order to send to server.

    :ivar allowed_audiences: Required.
    :vartype allowed_audiences: list[str]
    """


class ResourceProviderManifestRequestHeaderOptions(RequestHeaderOptions):  # pylint: disable=name-too-long
    """ResourceProviderManifestRequestHeaderOptions.

    :ivar opt_in_headers: Known values are: "NotSpecified", "SignedUserToken",
     "ClientGroupMembership", "SignedAuxiliaryTokens", and "UnboundedClientGroupMembership".
    :vartype opt_in_headers: str or ~azure.mgmt.providerhub.models.OptInHeaderType
    """


class ResourceProviderManifestReRegisterSubscriptionMetadata(
    ReRegisterSubscriptionMetadata
):  # pylint: disable=name-too-long
    """ResourceProviderManifestReRegisterSubscriptionMetadata.

    All required parameters must be populated in order to send to server.

    :ivar enabled: Required.
    :vartype enabled: bool
    :ivar concurrency_limit:
    :vartype concurrency_limit: int
    """


class ResourceType(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """ResourceType.

    :ivar name:
    :vartype name: str
    :ivar routing_type: Known values are: "Default", "ProxyOnly", "HostBased", "Extension",
     "Tenant", "Fanout", "LocationBased", "Failover", and "CascadeExtension".
    :vartype routing_type: str or ~azure.mgmt.providerhub.models.RoutingType
    :ivar resource_validation: Known values are: "NotSpecified", "ReservedWords", and
     "ProfaneWords".
    :vartype resource_validation: str or ~azure.mgmt.providerhub.models.ResourceValidation
    :ivar allowed_unauthorized_actions:
    :vartype allowed_unauthorized_actions: list[str]
    :ivar authorization_action_mappings:
    :vartype authorization_action_mappings:
     list[~azure.mgmt.providerhub.models.AuthorizationActionMapping]
    :ivar linked_access_checks:
    :vartype linked_access_checks: list[~azure.mgmt.providerhub.models.LinkedAccessCheck]
    :ivar default_api_version:
    :vartype default_api_version: str
    :ivar logging_rules:
    :vartype logging_rules: list[~azure.mgmt.providerhub.models.LoggingRule]
    :ivar throttling_rules:
    :vartype throttling_rules: list[~azure.mgmt.providerhub.models.ThrottlingRule]
    :ivar endpoints:
    :vartype endpoints: list[~azure.mgmt.providerhub.models.ResourceProviderEndpoint]
    :ivar marketplace_type: Known values are: "NotSpecified", "AddOn", "Bypass", and "Store".
    :vartype marketplace_type: str or ~azure.mgmt.providerhub.models.MarketplaceType
    :ivar identity_management:
    :vartype identity_management: ~azure.mgmt.providerhub.models.ResourceTypeIdentityManagement
    :ivar metadata: Anything.
    :vartype metadata: any
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule: ~azure.mgmt.providerhub.models.ResourceTypeFeaturesRule
    :ivar subscription_state_rules:
    :vartype subscription_state_rules: list[~azure.mgmt.providerhub.models.SubscriptionStateRule]
    :ivar service_tree_infos:
    :vartype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRequestHeaderOptions
    :ivar sku_link:
    :vartype sku_link: str
    :ivar disallowed_action_verbs:
    :vartype disallowed_action_verbs: list[str]
    :ivar template_deployment_policy:
    :vartype template_deployment_policy:
     ~azure.mgmt.providerhub.models.ResourceTypeTemplateDeploymentPolicy
    :ivar extended_locations:
    :vartype extended_locations: list[~azure.mgmt.providerhub.models.ExtendedLocationOptions]
    :ivar linked_operation_rules:
    :vartype linked_operation_rules: list[~azure.mgmt.providerhub.models.LinkedOperationRule]
    :ivar resource_deletion_policy: Known values are: "NotSpecified", "Cascade", and "Force".
    :vartype resource_deletion_policy: str or
     ~azure.mgmt.providerhub.models.ManifestResourceDeletionPolicy
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "routing_type": {"key": "routingType", "type": "str"},
        "resource_validation": {"key": "resourceValidation", "type": "str"},
        "allowed_unauthorized_actions": {"key": "allowedUnauthorizedActions", "type": "[str]"},
        "authorization_action_mappings": {"key": "authorizationActionMappings", "type": "[AuthorizationActionMapping]"},
        "linked_access_checks": {"key": "linkedAccessChecks", "type": "[LinkedAccessCheck]"},
        "default_api_version": {"key": "defaultApiVersion", "type": "str"},
        "logging_rules": {"key": "loggingRules", "type": "[LoggingRule]"},
        "throttling_rules": {"key": "throttlingRules", "type": "[ThrottlingRule]"},
        "endpoints": {"key": "endpoints", "type": "[ResourceProviderEndpoint]"},
        "marketplace_type": {"key": "marketplaceType", "type": "str"},
        "identity_management": {"key": "identityManagement", "type": "ResourceTypeIdentityManagement"},
        "metadata": {"key": "metadata", "type": "object"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceTypeFeaturesRule"},
        "subscription_state_rules": {"key": "subscriptionStateRules", "type": "[SubscriptionStateRule]"},
        "service_tree_infos": {"key": "serviceTreeInfos", "type": "[ServiceTreeInfo]"},
        "request_header_options": {"key": "requestHeaderOptions", "type": "ResourceTypeRequestHeaderOptions"},
        "sku_link": {"key": "skuLink", "type": "str"},
        "disallowed_action_verbs": {"key": "disallowedActionVerbs", "type": "[str]"},
        "template_deployment_policy": {
            "key": "templateDeploymentPolicy",
            "type": "ResourceTypeTemplateDeploymentPolicy",
        },
        "extended_locations": {"key": "extendedLocations", "type": "[ExtendedLocationOptions]"},
        "linked_operation_rules": {"key": "linkedOperationRules", "type": "[LinkedOperationRule]"},
        "resource_deletion_policy": {"key": "resourceDeletionPolicy", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        name: Optional[str] = None,
        routing_type: Optional[Union[str, "_models.RoutingType"]] = None,
        resource_validation: Optional[Union[str, "_models.ResourceValidation"]] = None,
        allowed_unauthorized_actions: Optional[List[str]] = None,
        authorization_action_mappings: Optional[List["_models.AuthorizationActionMapping"]] = None,
        linked_access_checks: Optional[List["_models.LinkedAccessCheck"]] = None,
        default_api_version: Optional[str] = None,
        logging_rules: Optional[List["_models.LoggingRule"]] = None,
        throttling_rules: Optional[List["_models.ThrottlingRule"]] = None,
        endpoints: Optional[List["_models.ResourceProviderEndpoint"]] = None,
        marketplace_type: Optional[Union[str, "_models.MarketplaceType"]] = None,
        identity_management: Optional["_models.ResourceTypeIdentityManagement"] = None,
        metadata: Optional[Any] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceTypeFeaturesRule"] = None,
        subscription_state_rules: Optional[List["_models.SubscriptionStateRule"]] = None,
        service_tree_infos: Optional[List["_models.ServiceTreeInfo"]] = None,
        request_header_options: Optional["_models.ResourceTypeRequestHeaderOptions"] = None,
        sku_link: Optional[str] = None,
        disallowed_action_verbs: Optional[List[str]] = None,
        template_deployment_policy: Optional["_models.ResourceTypeTemplateDeploymentPolicy"] = None,
        extended_locations: Optional[List["_models.ExtendedLocationOptions"]] = None,
        linked_operation_rules: Optional[List["_models.LinkedOperationRule"]] = None,
        resource_deletion_policy: Optional[Union[str, "_models.ManifestResourceDeletionPolicy"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name:
        :paramtype name: str
        :keyword routing_type: Known values are: "Default", "ProxyOnly", "HostBased", "Extension",
         "Tenant", "Fanout", "LocationBased", "Failover", and "CascadeExtension".
        :paramtype routing_type: str or ~azure.mgmt.providerhub.models.RoutingType
        :keyword resource_validation: Known values are: "NotSpecified", "ReservedWords", and
         "ProfaneWords".
        :paramtype resource_validation: str or ~azure.mgmt.providerhub.models.ResourceValidation
        :keyword allowed_unauthorized_actions:
        :paramtype allowed_unauthorized_actions: list[str]
        :keyword authorization_action_mappings:
        :paramtype authorization_action_mappings:
         list[~azure.mgmt.providerhub.models.AuthorizationActionMapping]
        :keyword linked_access_checks:
        :paramtype linked_access_checks: list[~azure.mgmt.providerhub.models.LinkedAccessCheck]
        :keyword default_api_version:
        :paramtype default_api_version: str
        :keyword logging_rules:
        :paramtype logging_rules: list[~azure.mgmt.providerhub.models.LoggingRule]
        :keyword throttling_rules:
        :paramtype throttling_rules: list[~azure.mgmt.providerhub.models.ThrottlingRule]
        :keyword endpoints:
        :paramtype endpoints: list[~azure.mgmt.providerhub.models.ResourceProviderEndpoint]
        :keyword marketplace_type: Known values are: "NotSpecified", "AddOn", "Bypass", and "Store".
        :paramtype marketplace_type: str or ~azure.mgmt.providerhub.models.MarketplaceType
        :keyword identity_management:
        :paramtype identity_management: ~azure.mgmt.providerhub.models.ResourceTypeIdentityManagement
        :keyword metadata: Anything.
        :paramtype metadata: any
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule: ~azure.mgmt.providerhub.models.ResourceTypeFeaturesRule
        :keyword subscription_state_rules:
        :paramtype subscription_state_rules: list[~azure.mgmt.providerhub.models.SubscriptionStateRule]
        :keyword service_tree_infos:
        :paramtype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
        :keyword request_header_options:
        :paramtype request_header_options:
         ~azure.mgmt.providerhub.models.ResourceTypeRequestHeaderOptions
        :keyword sku_link:
        :paramtype sku_link: str
        :keyword disallowed_action_verbs:
        :paramtype disallowed_action_verbs: list[str]
        :keyword template_deployment_policy:
        :paramtype template_deployment_policy:
         ~azure.mgmt.providerhub.models.ResourceTypeTemplateDeploymentPolicy
        :keyword extended_locations:
        :paramtype extended_locations: list[~azure.mgmt.providerhub.models.ExtendedLocationOptions]
        :keyword linked_operation_rules:
        :paramtype linked_operation_rules: list[~azure.mgmt.providerhub.models.LinkedOperationRule]
        :keyword resource_deletion_policy: Known values are: "NotSpecified", "Cascade", and "Force".
        :paramtype resource_deletion_policy: str or
         ~azure.mgmt.providerhub.models.ManifestResourceDeletionPolicy
        """
        super().__init__(**kwargs)
        self.name = name
        self.routing_type = routing_type
        self.resource_validation = resource_validation
        self.allowed_unauthorized_actions = allowed_unauthorized_actions
        self.authorization_action_mappings = authorization_action_mappings
        self.linked_access_checks = linked_access_checks
        self.default_api_version = default_api_version
        self.logging_rules = logging_rules
        self.throttling_rules = throttling_rules
        self.endpoints = endpoints
        self.marketplace_type = marketplace_type
        self.identity_management = identity_management
        self.metadata = metadata
        self.required_features = required_features
        self.features_rule = features_rule
        self.subscription_state_rules = subscription_state_rules
        self.service_tree_infos = service_tree_infos
        self.request_header_options = request_header_options
        self.sku_link = sku_link
        self.disallowed_action_verbs = disallowed_action_verbs
        self.template_deployment_policy = template_deployment_policy
        self.extended_locations = extended_locations
        self.linked_operation_rules = linked_operation_rules
        self.resource_deletion_policy = resource_deletion_policy


class ResourceTypeEndpoint(_serialization.Model):
    """ResourceTypeEndpoint.

    :ivar enabled:
    :vartype enabled: bool
    :ivar api_versions:
    :vartype api_versions: list[str]
    :ivar locations:
    :vartype locations: list[str]
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule: ~azure.mgmt.providerhub.models.ResourceTypeEndpointFeaturesRule
    :ivar extensions:
    :vartype extensions: list[~azure.mgmt.providerhub.models.ResourceTypeExtension]
    :ivar timeout:
    :vartype timeout: ~datetime.timedelta
    """

    _attribute_map = {
        "enabled": {"key": "enabled", "type": "bool"},
        "api_versions": {"key": "apiVersions", "type": "[str]"},
        "locations": {"key": "locations", "type": "[str]"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceTypeEndpointFeaturesRule"},
        "extensions": {"key": "extensions", "type": "[ResourceTypeExtension]"},
        "timeout": {"key": "timeout", "type": "duration"},
    }

    def __init__(
        self,
        *,
        enabled: Optional[bool] = None,
        api_versions: Optional[List[str]] = None,
        locations: Optional[List[str]] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceTypeEndpointFeaturesRule"] = None,
        extensions: Optional[List["_models.ResourceTypeExtension"]] = None,
        timeout: Optional[datetime.timedelta] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enabled:
        :paramtype enabled: bool
        :keyword api_versions:
        :paramtype api_versions: list[str]
        :keyword locations:
        :paramtype locations: list[str]
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule: ~azure.mgmt.providerhub.models.ResourceTypeEndpointFeaturesRule
        :keyword extensions:
        :paramtype extensions: list[~azure.mgmt.providerhub.models.ResourceTypeExtension]
        :keyword timeout:
        :paramtype timeout: ~datetime.timedelta
        """
        super().__init__(**kwargs)
        self.enabled = enabled
        self.api_versions = api_versions
        self.locations = locations
        self.required_features = required_features
        self.features_rule = features_rule
        self.extensions = extensions
        self.timeout = timeout


class ResourceTypeEndpointFeaturesRule(FeaturesRule):
    """ResourceTypeEndpointFeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """


class ResourceTypeExtension(_serialization.Model):
    """ResourceTypeExtension.

    :ivar endpoint_uri:
    :vartype endpoint_uri: str
    :ivar extension_categories:
    :vartype extension_categories: list[str or ~azure.mgmt.providerhub.models.ExtensionCategory]
    :ivar timeout:
    :vartype timeout: ~datetime.timedelta
    """

    _attribute_map = {
        "endpoint_uri": {"key": "endpointUri", "type": "str"},
        "extension_categories": {"key": "extensionCategories", "type": "[str]"},
        "timeout": {"key": "timeout", "type": "duration"},
    }

    def __init__(
        self,
        *,
        endpoint_uri: Optional[str] = None,
        extension_categories: Optional[List[Union[str, "_models.ExtensionCategory"]]] = None,
        timeout: Optional[datetime.timedelta] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword endpoint_uri:
        :paramtype endpoint_uri: str
        :keyword extension_categories:
        :paramtype extension_categories: list[str or ~azure.mgmt.providerhub.models.ExtensionCategory]
        :keyword timeout:
        :paramtype timeout: ~datetime.timedelta
        """
        super().__init__(**kwargs)
        self.endpoint_uri = endpoint_uri
        self.extension_categories = extension_categories
        self.timeout = timeout


class ResourceTypeExtensionOptions(_serialization.Model):
    """ResourceTypeExtensionOptions.

    :ivar resource_creation_begin:
    :vartype resource_creation_begin:
     ~azure.mgmt.providerhub.models.ResourceTypeExtensionOptionsResourceCreationBegin
    """

    _attribute_map = {
        "resource_creation_begin": {
            "key": "resourceCreationBegin",
            "type": "ResourceTypeExtensionOptionsResourceCreationBegin",
        },
    }

    def __init__(
        self,
        *,
        resource_creation_begin: Optional["_models.ResourceTypeExtensionOptionsResourceCreationBegin"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword resource_creation_begin:
        :paramtype resource_creation_begin:
         ~azure.mgmt.providerhub.models.ResourceTypeExtensionOptionsResourceCreationBegin
        """
        super().__init__(**kwargs)
        self.resource_creation_begin = resource_creation_begin


class ResourceTypeExtensionOptionsResourceCreationBegin(ExtensionOptions):  # pylint: disable=name-too-long
    """ResourceTypeExtensionOptionsResourceCreationBegin.

    :ivar request:
    :vartype request: list[str or ~azure.mgmt.providerhub.models.ExtensionOptionType]
    :ivar response:
    :vartype response: list[str or ~azure.mgmt.providerhub.models.ExtensionOptionType]
    """


class ResourceTypeFeaturesRule(FeaturesRule):
    """ResourceTypeFeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """


class ResourceTypeIdentityManagement(IdentityManagement):
    """ResourceTypeIdentityManagement.

    :ivar type: Known values are: "NotSpecified", "SystemAssigned", "UserAssigned", "Actor", and
     "DelegatedResourceIdentity".
    :vartype type: str or ~azure.mgmt.providerhub.models.IdentityManagementTypes
    """


class ResourceTypeRegistration(ProxyResource):
    """ResourceTypeRegistration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties:
    :vartype properties: ~azure.mgmt.providerhub.models.ResourceTypeRegistrationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "ResourceTypeRegistrationProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.ResourceTypeRegistrationProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.providerhub.models.ResourceTypeRegistrationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ResourceTypeRegistrationArrayResponseWithContinuation(_serialization.Model):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ResourceTypeRegistration]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.ResourceTypeRegistration"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.ResourceTypeRegistration]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ResourceTypeRegistrationPropertiesAutoGenerated(
    _serialization.Model
):  # pylint: disable=too-many-instance-attributes,name-too-long
    """ResourceTypeRegistrationPropertiesAutoGenerated.

    :ivar routing_type: Known values are: "Default", "ProxyOnly", "HostBased", "Extension",
     "Tenant", "Fanout", "LocationBased", "Failover", and "CascadeExtension".
    :vartype routing_type: str or ~azure.mgmt.providerhub.models.RoutingType
    :ivar regionality: Known values are: "NotSpecified", "Global", and "Regional".
    :vartype regionality: str or ~azure.mgmt.providerhub.models.Regionality
    :ivar endpoints:
    :vartype endpoints: list[~azure.mgmt.providerhub.models.ResourceTypeEndpoint]
    :ivar extension_options:
    :vartype extension_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesExtensionOptions
    :ivar marketplace_type: Known values are: "NotSpecified", "AddOn", "Bypass", and "Store".
    :vartype marketplace_type: str or ~azure.mgmt.providerhub.models.MarketplaceType
    :ivar swagger_specifications:
    :vartype swagger_specifications: list[~azure.mgmt.providerhub.models.SwaggerSpecification]
    :ivar allowed_unauthorized_actions:
    :vartype allowed_unauthorized_actions: list[str]
    :ivar authorization_action_mappings:
    :vartype authorization_action_mappings:
     list[~azure.mgmt.providerhub.models.AuthorizationActionMapping]
    :ivar linked_access_checks:
    :vartype linked_access_checks: list[~azure.mgmt.providerhub.models.LinkedAccessCheck]
    :ivar default_api_version:
    :vartype default_api_version: str
    :ivar logging_rules:
    :vartype logging_rules: list[~azure.mgmt.providerhub.models.LoggingRule]
    :ivar throttling_rules:
    :vartype throttling_rules: list[~azure.mgmt.providerhub.models.ThrottlingRule]
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesFeaturesRule
    :ivar enable_async_operation:
    :vartype enable_async_operation: bool
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar enable_third_party_s2_s:
    :vartype enable_third_party_s2_s: bool
    :ivar subscription_lifecycle_notification_specifications:
    :vartype subscription_lifecycle_notification_specifications:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
    :ivar is_pure_proxy:
    :vartype is_pure_proxy: bool
    :ivar identity_management:
    :vartype identity_management:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesIdentityManagement
    :ivar check_name_availability_specifications:
    :vartype check_name_availability_specifications:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications
    :ivar disallowed_action_verbs:
    :vartype disallowed_action_verbs: list[str]
    :ivar service_tree_infos:
    :vartype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesRequestHeaderOptions
    :ivar subscription_state_rules:
    :vartype subscription_state_rules: list[~azure.mgmt.providerhub.models.SubscriptionStateRule]
    :ivar template_deployment_options:
    :vartype template_deployment_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptions
    :ivar extended_locations:
    :vartype extended_locations: list[~azure.mgmt.providerhub.models.ExtendedLocationOptions]
    :ivar resource_move_policy:
    :vartype resource_move_policy:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesResourceMovePolicy
    :ivar resource_deletion_policy: Known values are: "NotSpecified", "CascadeDeleteAll", and
     "CascadeDeleteProxyOnlyChildren".
    :vartype resource_deletion_policy: str or ~azure.mgmt.providerhub.models.ResourceDeletionPolicy
    """

    _attribute_map = {
        "routing_type": {"key": "routingType", "type": "str"},
        "regionality": {"key": "regionality", "type": "str"},
        "endpoints": {"key": "endpoints", "type": "[ResourceTypeEndpoint]"},
        "extension_options": {"key": "extensionOptions", "type": "ResourceTypeRegistrationPropertiesExtensionOptions"},
        "marketplace_type": {"key": "marketplaceType", "type": "str"},
        "swagger_specifications": {"key": "swaggerSpecifications", "type": "[SwaggerSpecification]"},
        "allowed_unauthorized_actions": {"key": "allowedUnauthorizedActions", "type": "[str]"},
        "authorization_action_mappings": {"key": "authorizationActionMappings", "type": "[AuthorizationActionMapping]"},
        "linked_access_checks": {"key": "linkedAccessChecks", "type": "[LinkedAccessCheck]"},
        "default_api_version": {"key": "defaultApiVersion", "type": "str"},
        "logging_rules": {"key": "loggingRules", "type": "[LoggingRule]"},
        "throttling_rules": {"key": "throttlingRules", "type": "[ThrottlingRule]"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "features_rule": {"key": "featuresRule", "type": "ResourceTypeRegistrationPropertiesFeaturesRule"},
        "enable_async_operation": {"key": "enableAsyncOperation", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "enable_third_party_s2_s": {"key": "enableThirdPartyS2S", "type": "bool"},
        "subscription_lifecycle_notification_specifications": {
            "key": "subscriptionLifecycleNotificationSpecifications",
            "type": "ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications",
        },
        "is_pure_proxy": {"key": "isPureProxy", "type": "bool"},
        "identity_management": {
            "key": "identityManagement",
            "type": "ResourceTypeRegistrationPropertiesIdentityManagement",
        },
        "check_name_availability_specifications": {
            "key": "checkNameAvailabilitySpecifications",
            "type": "ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications",
        },
        "disallowed_action_verbs": {"key": "disallowedActionVerbs", "type": "[str]"},
        "service_tree_infos": {"key": "serviceTreeInfos", "type": "[ServiceTreeInfo]"},
        "request_header_options": {
            "key": "requestHeaderOptions",
            "type": "ResourceTypeRegistrationPropertiesRequestHeaderOptions",
        },
        "subscription_state_rules": {"key": "subscriptionStateRules", "type": "[SubscriptionStateRule]"},
        "template_deployment_options": {
            "key": "templateDeploymentOptions",
            "type": "ResourceTypeRegistrationPropertiesTemplateDeploymentOptions",
        },
        "extended_locations": {"key": "extendedLocations", "type": "[ExtendedLocationOptions]"},
        "resource_move_policy": {
            "key": "resourceMovePolicy",
            "type": "ResourceTypeRegistrationPropertiesResourceMovePolicy",
        },
        "resource_deletion_policy": {"key": "resourceDeletionPolicy", "type": "str"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        routing_type: Optional[Union[str, "_models.RoutingType"]] = None,
        regionality: Optional[Union[str, "_models.Regionality"]] = None,
        endpoints: Optional[List["_models.ResourceTypeEndpoint"]] = None,
        extension_options: Optional["_models.ResourceTypeRegistrationPropertiesExtensionOptions"] = None,
        marketplace_type: Optional[Union[str, "_models.MarketplaceType"]] = None,
        swagger_specifications: Optional[List["_models.SwaggerSpecification"]] = None,
        allowed_unauthorized_actions: Optional[List[str]] = None,
        authorization_action_mappings: Optional[List["_models.AuthorizationActionMapping"]] = None,
        linked_access_checks: Optional[List["_models.LinkedAccessCheck"]] = None,
        default_api_version: Optional[str] = None,
        logging_rules: Optional[List["_models.LoggingRule"]] = None,
        throttling_rules: Optional[List["_models.ThrottlingRule"]] = None,
        required_features: Optional[List[str]] = None,
        features_rule: Optional["_models.ResourceTypeRegistrationPropertiesFeaturesRule"] = None,
        enable_async_operation: Optional[bool] = None,
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        enable_third_party_s2_s: Optional[bool] = None,
        subscription_lifecycle_notification_specifications: Optional[
            "_models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications"
        ] = None,
        is_pure_proxy: Optional[bool] = None,
        identity_management: Optional["_models.ResourceTypeRegistrationPropertiesIdentityManagement"] = None,
        check_name_availability_specifications: Optional[
            "_models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications"
        ] = None,
        disallowed_action_verbs: Optional[List[str]] = None,
        service_tree_infos: Optional[List["_models.ServiceTreeInfo"]] = None,
        request_header_options: Optional["_models.ResourceTypeRegistrationPropertiesRequestHeaderOptions"] = None,
        subscription_state_rules: Optional[List["_models.SubscriptionStateRule"]] = None,
        template_deployment_options: Optional[
            "_models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptions"
        ] = None,
        extended_locations: Optional[List["_models.ExtendedLocationOptions"]] = None,
        resource_move_policy: Optional["_models.ResourceTypeRegistrationPropertiesResourceMovePolicy"] = None,
        resource_deletion_policy: Optional[Union[str, "_models.ResourceDeletionPolicy"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword routing_type: Known values are: "Default", "ProxyOnly", "HostBased", "Extension",
         "Tenant", "Fanout", "LocationBased", "Failover", and "CascadeExtension".
        :paramtype routing_type: str or ~azure.mgmt.providerhub.models.RoutingType
        :keyword regionality: Known values are: "NotSpecified", "Global", and "Regional".
        :paramtype regionality: str or ~azure.mgmt.providerhub.models.Regionality
        :keyword endpoints:
        :paramtype endpoints: list[~azure.mgmt.providerhub.models.ResourceTypeEndpoint]
        :keyword extension_options:
        :paramtype extension_options:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesExtensionOptions
        :keyword marketplace_type: Known values are: "NotSpecified", "AddOn", "Bypass", and "Store".
        :paramtype marketplace_type: str or ~azure.mgmt.providerhub.models.MarketplaceType
        :keyword swagger_specifications:
        :paramtype swagger_specifications: list[~azure.mgmt.providerhub.models.SwaggerSpecification]
        :keyword allowed_unauthorized_actions:
        :paramtype allowed_unauthorized_actions: list[str]
        :keyword authorization_action_mappings:
        :paramtype authorization_action_mappings:
         list[~azure.mgmt.providerhub.models.AuthorizationActionMapping]
        :keyword linked_access_checks:
        :paramtype linked_access_checks: list[~azure.mgmt.providerhub.models.LinkedAccessCheck]
        :keyword default_api_version:
        :paramtype default_api_version: str
        :keyword logging_rules:
        :paramtype logging_rules: list[~azure.mgmt.providerhub.models.LoggingRule]
        :keyword throttling_rules:
        :paramtype throttling_rules: list[~azure.mgmt.providerhub.models.ThrottlingRule]
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword features_rule:
        :paramtype features_rule:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesFeaturesRule
        :keyword enable_async_operation:
        :paramtype enable_async_operation: bool
        :keyword provisioning_state: Known values are: "NotSpecified", "Accepted", "Running",
         "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded",
         "MovingResources", "TransientFailure", and "RolloutInProgress".
        :paramtype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
        :keyword enable_third_party_s2_s:
        :paramtype enable_third_party_s2_s: bool
        :keyword subscription_lifecycle_notification_specifications:
        :paramtype subscription_lifecycle_notification_specifications:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications  # pylint: disable=line-too-long
        :keyword is_pure_proxy:
        :paramtype is_pure_proxy: bool
        :keyword identity_management:
        :paramtype identity_management:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesIdentityManagement
        :keyword check_name_availability_specifications:
        :paramtype check_name_availability_specifications:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications
        :keyword disallowed_action_verbs:
        :paramtype disallowed_action_verbs: list[str]
        :keyword service_tree_infos:
        :paramtype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
        :keyword request_header_options:
        :paramtype request_header_options:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesRequestHeaderOptions
        :keyword subscription_state_rules:
        :paramtype subscription_state_rules: list[~azure.mgmt.providerhub.models.SubscriptionStateRule]
        :keyword template_deployment_options:
        :paramtype template_deployment_options:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptions
        :keyword extended_locations:
        :paramtype extended_locations: list[~azure.mgmt.providerhub.models.ExtendedLocationOptions]
        :keyword resource_move_policy:
        :paramtype resource_move_policy:
         ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesResourceMovePolicy
        :keyword resource_deletion_policy: Known values are: "NotSpecified", "CascadeDeleteAll", and
         "CascadeDeleteProxyOnlyChildren".
        :paramtype resource_deletion_policy: str or
         ~azure.mgmt.providerhub.models.ResourceDeletionPolicy
        """
        super().__init__(**kwargs)
        self.routing_type = routing_type
        self.regionality = regionality
        self.endpoints = endpoints
        self.extension_options = extension_options
        self.marketplace_type = marketplace_type
        self.swagger_specifications = swagger_specifications
        self.allowed_unauthorized_actions = allowed_unauthorized_actions
        self.authorization_action_mappings = authorization_action_mappings
        self.linked_access_checks = linked_access_checks
        self.default_api_version = default_api_version
        self.logging_rules = logging_rules
        self.throttling_rules = throttling_rules
        self.required_features = required_features
        self.features_rule = features_rule
        self.enable_async_operation = enable_async_operation
        self.provisioning_state = provisioning_state
        self.enable_third_party_s2_s = enable_third_party_s2_s
        self.subscription_lifecycle_notification_specifications = subscription_lifecycle_notification_specifications
        self.is_pure_proxy = is_pure_proxy
        self.identity_management = identity_management
        self.check_name_availability_specifications = check_name_availability_specifications
        self.disallowed_action_verbs = disallowed_action_verbs
        self.service_tree_infos = service_tree_infos
        self.request_header_options = request_header_options
        self.subscription_state_rules = subscription_state_rules
        self.template_deployment_options = template_deployment_options
        self.extended_locations = extended_locations
        self.resource_move_policy = resource_move_policy
        self.resource_deletion_policy = resource_deletion_policy


class ResourceTypeRegistrationProperties(
    ResourceTypeRegistrationPropertiesAutoGenerated
):  # pylint: disable=too-many-instance-attributes
    """ResourceTypeRegistrationProperties.

    :ivar routing_type: Known values are: "Default", "ProxyOnly", "HostBased", "Extension",
     "Tenant", "Fanout", "LocationBased", "Failover", and "CascadeExtension".
    :vartype routing_type: str or ~azure.mgmt.providerhub.models.RoutingType
    :ivar regionality: Known values are: "NotSpecified", "Global", and "Regional".
    :vartype regionality: str or ~azure.mgmt.providerhub.models.Regionality
    :ivar endpoints:
    :vartype endpoints: list[~azure.mgmt.providerhub.models.ResourceTypeEndpoint]
    :ivar extension_options:
    :vartype extension_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesExtensionOptions
    :ivar marketplace_type: Known values are: "NotSpecified", "AddOn", "Bypass", and "Store".
    :vartype marketplace_type: str or ~azure.mgmt.providerhub.models.MarketplaceType
    :ivar swagger_specifications:
    :vartype swagger_specifications: list[~azure.mgmt.providerhub.models.SwaggerSpecification]
    :ivar allowed_unauthorized_actions:
    :vartype allowed_unauthorized_actions: list[str]
    :ivar authorization_action_mappings:
    :vartype authorization_action_mappings:
     list[~azure.mgmt.providerhub.models.AuthorizationActionMapping]
    :ivar linked_access_checks:
    :vartype linked_access_checks: list[~azure.mgmt.providerhub.models.LinkedAccessCheck]
    :ivar default_api_version:
    :vartype default_api_version: str
    :ivar logging_rules:
    :vartype logging_rules: list[~azure.mgmt.providerhub.models.LoggingRule]
    :ivar throttling_rules:
    :vartype throttling_rules: list[~azure.mgmt.providerhub.models.ThrottlingRule]
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar features_rule:
    :vartype features_rule:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesFeaturesRule
    :ivar enable_async_operation:
    :vartype enable_async_operation: bool
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    :ivar enable_third_party_s2_s:
    :vartype enable_third_party_s2_s: bool
    :ivar subscription_lifecycle_notification_specifications:
    :vartype subscription_lifecycle_notification_specifications:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications
    :ivar is_pure_proxy:
    :vartype is_pure_proxy: bool
    :ivar identity_management:
    :vartype identity_management:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesIdentityManagement
    :ivar check_name_availability_specifications:
    :vartype check_name_availability_specifications:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications
    :ivar disallowed_action_verbs:
    :vartype disallowed_action_verbs: list[str]
    :ivar service_tree_infos:
    :vartype service_tree_infos: list[~azure.mgmt.providerhub.models.ServiceTreeInfo]
    :ivar request_header_options:
    :vartype request_header_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesRequestHeaderOptions
    :ivar subscription_state_rules:
    :vartype subscription_state_rules: list[~azure.mgmt.providerhub.models.SubscriptionStateRule]
    :ivar template_deployment_options:
    :vartype template_deployment_options:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptions
    :ivar extended_locations:
    :vartype extended_locations: list[~azure.mgmt.providerhub.models.ExtendedLocationOptions]
    :ivar resource_move_policy:
    :vartype resource_move_policy:
     ~azure.mgmt.providerhub.models.ResourceTypeRegistrationPropertiesResourceMovePolicy
    :ivar resource_deletion_policy: Known values are: "NotSpecified", "CascadeDeleteAll", and
     "CascadeDeleteProxyOnlyChildren".
    :vartype resource_deletion_policy: str or ~azure.mgmt.providerhub.models.ResourceDeletionPolicy
    """


class ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications(
    CheckNameAvailabilitySpecifications
):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications.

    :ivar enable_default_validation:
    :vartype enable_default_validation: bool
    :ivar resource_types_with_custom_validation:
    :vartype resource_types_with_custom_validation: list[str]
    """


class ResourceTypeRegistrationPropertiesExtensionOptions(ResourceTypeExtensionOptions):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesExtensionOptions.

    :ivar resource_creation_begin:
    :vartype resource_creation_begin:
     ~azure.mgmt.providerhub.models.ResourceTypeExtensionOptionsResourceCreationBegin
    """


class ResourceTypeRegistrationPropertiesFeaturesRule(FeaturesRule):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesFeaturesRule.

    All required parameters must be populated in order to send to server.

    :ivar required_features_policy: Required. Known values are: "Any" and "All".
    :vartype required_features_policy: str or ~azure.mgmt.providerhub.models.FeaturesPolicy
    """


class ResourceTypeRegistrationPropertiesIdentityManagement(
    IdentityManagementProperties
):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesIdentityManagement.

    :ivar type: Known values are: "NotSpecified", "SystemAssigned", "UserAssigned", "Actor", and
     "DelegatedResourceIdentity".
    :vartype type: str or ~azure.mgmt.providerhub.models.IdentityManagementTypes
    :ivar application_id:
    :vartype application_id: str
    """


class ResourceTypeRegistrationPropertiesRequestHeaderOptions(RequestHeaderOptions):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesRequestHeaderOptions.

    :ivar opt_in_headers: Known values are: "NotSpecified", "SignedUserToken",
     "ClientGroupMembership", "SignedAuxiliaryTokens", and "UnboundedClientGroupMembership".
    :vartype opt_in_headers: str or ~azure.mgmt.providerhub.models.OptInHeaderType
    """


class ResourceTypeRegistrationPropertiesResourceMovePolicy(ResourceMovePolicy):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesResourceMovePolicy.

    :ivar validation_required:
    :vartype validation_required: bool
    :ivar cross_resource_group_move_enabled:
    :vartype cross_resource_group_move_enabled: bool
    :ivar cross_subscription_move_enabled:
    :vartype cross_subscription_move_enabled: bool
    """


class ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications(
    SubscriptionLifecycleNotificationSpecifications
):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications.

    :ivar subscription_state_override_actions:
    :vartype subscription_state_override_actions:
     list[~azure.mgmt.providerhub.models.SubscriptionStateOverrideAction]
    :ivar soft_delete_ttl:
    :vartype soft_delete_ttl: ~datetime.timedelta
    """


class ResourceTypeRegistrationPropertiesTemplateDeploymentOptions(
    TemplateDeploymentOptions
):  # pylint: disable=name-too-long
    """ResourceTypeRegistrationPropertiesTemplateDeploymentOptions.

    :ivar preflight_supported:
    :vartype preflight_supported: bool
    :ivar preflight_options:
    :vartype preflight_options: list[str or ~azure.mgmt.providerhub.models.PreflightOption]
    """


class ResourceTypeRequestHeaderOptions(RequestHeaderOptions):
    """ResourceTypeRequestHeaderOptions.

    :ivar opt_in_headers: Known values are: "NotSpecified", "SignedUserToken",
     "ClientGroupMembership", "SignedAuxiliaryTokens", and "UnboundedClientGroupMembership".
    :vartype opt_in_headers: str or ~azure.mgmt.providerhub.models.OptInHeaderType
    """


class ResourceTypeSku(_serialization.Model):
    """ResourceTypeSku.

    All required parameters must be populated in order to send to server.

    :ivar sku_settings: Required.
    :vartype sku_settings: list[~azure.mgmt.providerhub.models.SkuSetting]
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    """

    _validation = {
        "sku_settings": {"required": True},
    }

    _attribute_map = {
        "sku_settings": {"key": "skuSettings", "type": "[SkuSetting]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        sku_settings: List["_models.SkuSetting"],
        provisioning_state: Optional[Union[str, "_models.ProvisioningState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword sku_settings: Required.
        :paramtype sku_settings: list[~azure.mgmt.providerhub.models.SkuSetting]
        :keyword provisioning_state: Known values are: "NotSpecified", "Accepted", "Running",
         "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded",
         "MovingResources", "TransientFailure", and "RolloutInProgress".
        :paramtype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
        """
        super().__init__(**kwargs)
        self.sku_settings = sku_settings
        self.provisioning_state = provisioning_state


class TemplateDeploymentPolicy(_serialization.Model):
    """TemplateDeploymentPolicy.

    All required parameters must be populated in order to send to server.

    :ivar capabilities: Required. Known values are: "Default" and "Preflight".
    :vartype capabilities: str or ~azure.mgmt.providerhub.models.TemplateDeploymentCapabilities
    :ivar preflight_options: Required. Known values are: "None", "ValidationRequests",
     "DeploymentRequests", "TestOnly", and "RegisteredOnly".
    :vartype preflight_options: str or
     ~azure.mgmt.providerhub.models.TemplateDeploymentPreflightOptions
    """

    _validation = {
        "capabilities": {"required": True},
        "preflight_options": {"required": True},
    }

    _attribute_map = {
        "capabilities": {"key": "capabilities", "type": "str"},
        "preflight_options": {"key": "preflightOptions", "type": "str"},
    }

    def __init__(
        self,
        *,
        capabilities: Union[str, "_models.TemplateDeploymentCapabilities"],
        preflight_options: Union[str, "_models.TemplateDeploymentPreflightOptions"],
        **kwargs: Any
    ) -> None:
        """
        :keyword capabilities: Required. Known values are: "Default" and "Preflight".
        :paramtype capabilities: str or ~azure.mgmt.providerhub.models.TemplateDeploymentCapabilities
        :keyword preflight_options: Required. Known values are: "None", "ValidationRequests",
         "DeploymentRequests", "TestOnly", and "RegisteredOnly".
        :paramtype preflight_options: str or
         ~azure.mgmt.providerhub.models.TemplateDeploymentPreflightOptions
        """
        super().__init__(**kwargs)
        self.capabilities = capabilities
        self.preflight_options = preflight_options


class ResourceTypeTemplateDeploymentPolicy(TemplateDeploymentPolicy):
    """ResourceTypeTemplateDeploymentPolicy.

    All required parameters must be populated in order to send to server.

    :ivar capabilities: Required. Known values are: "Default" and "Preflight".
    :vartype capabilities: str or ~azure.mgmt.providerhub.models.TemplateDeploymentCapabilities
    :ivar preflight_options: Required. Known values are: "None", "ValidationRequests",
     "DeploymentRequests", "TestOnly", and "RegisteredOnly".
    :vartype preflight_options: str or
     ~azure.mgmt.providerhub.models.TemplateDeploymentPreflightOptions
    """


class ServiceTreeInfo(_serialization.Model):
    """ServiceTreeInfo.

    :ivar service_id:
    :vartype service_id: str
    :ivar component_id:
    :vartype component_id: str
    """

    _attribute_map = {
        "service_id": {"key": "serviceId", "type": "str"},
        "component_id": {"key": "componentId", "type": "str"},
    }

    def __init__(self, *, service_id: Optional[str] = None, component_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword service_id:
        :paramtype service_id: str
        :keyword component_id:
        :paramtype component_id: str
        """
        super().__init__(**kwargs)
        self.service_id = service_id
        self.component_id = component_id


class SkuCapability(_serialization.Model):
    """SkuCapability.

    All required parameters must be populated in order to send to server.

    :ivar name: Required.
    :vartype name: str
    :ivar value: Required.
    :vartype value: str
    """

    _validation = {
        "name": {"required": True},
        "value": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(self, *, name: str, value: str, **kwargs: Any) -> None:
        """
        :keyword name: Required.
        :paramtype name: str
        :keyword value: Required.
        :paramtype value: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.value = value


class SkuCapacity(_serialization.Model):
    """SkuCapacity.

    All required parameters must be populated in order to send to server.

    :ivar minimum: Required.
    :vartype minimum: int
    :ivar maximum:
    :vartype maximum: int
    :ivar default:
    :vartype default: int
    :ivar scale_type: Known values are: "None", "Manual", and "Automatic".
    :vartype scale_type: str or ~azure.mgmt.providerhub.models.SkuScaleType
    """

    _validation = {
        "minimum": {"required": True},
    }

    _attribute_map = {
        "minimum": {"key": "minimum", "type": "int"},
        "maximum": {"key": "maximum", "type": "int"},
        "default": {"key": "default", "type": "int"},
        "scale_type": {"key": "scaleType", "type": "str"},
    }

    def __init__(
        self,
        *,
        minimum: int,
        maximum: Optional[int] = None,
        default: Optional[int] = None,
        scale_type: Optional[Union[str, "_models.SkuScaleType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword minimum: Required.
        :paramtype minimum: int
        :keyword maximum:
        :paramtype maximum: int
        :keyword default:
        :paramtype default: int
        :keyword scale_type: Known values are: "None", "Manual", and "Automatic".
        :paramtype scale_type: str or ~azure.mgmt.providerhub.models.SkuScaleType
        """
        super().__init__(**kwargs)
        self.minimum = minimum
        self.maximum = maximum
        self.default = default
        self.scale_type = scale_type


class SkuCost(_serialization.Model):
    """SkuCost.

    All required parameters must be populated in order to send to server.

    :ivar meter_id: Required.
    :vartype meter_id: str
    :ivar quantity:
    :vartype quantity: int
    :ivar extended_unit:
    :vartype extended_unit: str
    """

    _validation = {
        "meter_id": {"required": True},
    }

    _attribute_map = {
        "meter_id": {"key": "meterId", "type": "str"},
        "quantity": {"key": "quantity", "type": "int"},
        "extended_unit": {"key": "extendedUnit", "type": "str"},
    }

    def __init__(
        self, *, meter_id: str, quantity: Optional[int] = None, extended_unit: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword meter_id: Required.
        :paramtype meter_id: str
        :keyword quantity:
        :paramtype quantity: int
        :keyword extended_unit:
        :paramtype extended_unit: str
        """
        super().__init__(**kwargs)
        self.meter_id = meter_id
        self.quantity = quantity
        self.extended_unit = extended_unit


class SkuLocationInfo(_serialization.Model):
    """SkuLocationInfo.

    All required parameters must be populated in order to send to server.

    :ivar location: Required.
    :vartype location: str
    :ivar zones:
    :vartype zones: list[str]
    :ivar zone_details:
    :vartype zone_details: list[~azure.mgmt.providerhub.models.SkuZoneDetail]
    :ivar extended_locations:
    :vartype extended_locations: list[str]
    :ivar type: Known values are: "NotSpecified", "EdgeZone", and "ArcZone".
    :vartype type: str or ~azure.mgmt.providerhub.models.ExtendedLocationType
    """

    _validation = {
        "location": {"required": True},
    }

    _attribute_map = {
        "location": {"key": "location", "type": "str"},
        "zones": {"key": "zones", "type": "[str]"},
        "zone_details": {"key": "zoneDetails", "type": "[SkuZoneDetail]"},
        "extended_locations": {"key": "extendedLocations", "type": "[str]"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        zones: Optional[List[str]] = None,
        zone_details: Optional[List["_models.SkuZoneDetail"]] = None,
        extended_locations: Optional[List[str]] = None,
        type: Optional[Union[str, "_models.ExtendedLocationType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Required.
        :paramtype location: str
        :keyword zones:
        :paramtype zones: list[str]
        :keyword zone_details:
        :paramtype zone_details: list[~azure.mgmt.providerhub.models.SkuZoneDetail]
        :keyword extended_locations:
        :paramtype extended_locations: list[str]
        :keyword type: Known values are: "NotSpecified", "EdgeZone", and "ArcZone".
        :paramtype type: str or ~azure.mgmt.providerhub.models.ExtendedLocationType
        """
        super().__init__(**kwargs)
        self.location = location
        self.zones = zones
        self.zone_details = zone_details
        self.extended_locations = extended_locations
        self.type = type


class SkuResource(ProxyResource):
    """SkuResource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties:
    :vartype properties: ~azure.mgmt.providerhub.models.SkuResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "SkuResourceProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SkuResourceProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.providerhub.models.SkuResourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SkuResourceArrayResponseWithContinuation(_serialization.Model):
    """SkuResourceArrayResponseWithContinuation.

    :ivar value:
    :vartype value: list[~azure.mgmt.providerhub.models.SkuResource]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[SkuResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.SkuResource"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value:
        :paramtype value: list[~azure.mgmt.providerhub.models.SkuResource]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SkuResourceProperties(ResourceTypeSku):
    """SkuResourceProperties.

    All required parameters must be populated in order to send to server.

    :ivar sku_settings: Required.
    :vartype sku_settings: list[~azure.mgmt.providerhub.models.SkuSetting]
    :ivar provisioning_state: Known values are: "NotSpecified", "Accepted", "Running", "Creating",
     "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources",
     "TransientFailure", and "RolloutInProgress".
    :vartype provisioning_state: str or ~azure.mgmt.providerhub.models.ProvisioningState
    """


class SkuSetting(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """SkuSetting.

    All required parameters must be populated in order to send to server.

    :ivar name: Required.
    :vartype name: str
    :ivar tier:
    :vartype tier: str
    :ivar size:
    :vartype size: str
    :ivar family:
    :vartype family: str
    :ivar kind:
    :vartype kind: str
    :ivar locations:
    :vartype locations: list[str]
    :ivar location_info:
    :vartype location_info: list[~azure.mgmt.providerhub.models.SkuLocationInfo]
    :ivar required_quota_ids:
    :vartype required_quota_ids: list[str]
    :ivar required_features:
    :vartype required_features: list[str]
    :ivar capacity:
    :vartype capacity: ~azure.mgmt.providerhub.models.SkuSettingCapacity
    :ivar costs:
    :vartype costs: list[~azure.mgmt.providerhub.models.SkuCost]
    :ivar capabilities:
    :vartype capabilities: list[~azure.mgmt.providerhub.models.SkuCapability]
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
        "size": {"key": "size", "type": "str"},
        "family": {"key": "family", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "locations": {"key": "locations", "type": "[str]"},
        "location_info": {"key": "locationInfo", "type": "[SkuLocationInfo]"},
        "required_quota_ids": {"key": "requiredQuotaIds", "type": "[str]"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
        "capacity": {"key": "capacity", "type": "SkuSettingCapacity"},
        "costs": {"key": "costs", "type": "[SkuCost]"},
        "capabilities": {"key": "capabilities", "type": "[SkuCapability]"},
    }

    def __init__(
        self,
        *,
        name: str,
        tier: Optional[str] = None,
        size: Optional[str] = None,
        family: Optional[str] = None,
        kind: Optional[str] = None,
        locations: Optional[List[str]] = None,
        location_info: Optional[List["_models.SkuLocationInfo"]] = None,
        required_quota_ids: Optional[List[str]] = None,
        required_features: Optional[List[str]] = None,
        capacity: Optional["_models.SkuSettingCapacity"] = None,
        costs: Optional[List["_models.SkuCost"]] = None,
        capabilities: Optional[List["_models.SkuCapability"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Required.
        :paramtype name: str
        :keyword tier:
        :paramtype tier: str
        :keyword size:
        :paramtype size: str
        :keyword family:
        :paramtype family: str
        :keyword kind:
        :paramtype kind: str
        :keyword locations:
        :paramtype locations: list[str]
        :keyword location_info:
        :paramtype location_info: list[~azure.mgmt.providerhub.models.SkuLocationInfo]
        :keyword required_quota_ids:
        :paramtype required_quota_ids: list[str]
        :keyword required_features:
        :paramtype required_features: list[str]
        :keyword capacity:
        :paramtype capacity: ~azure.mgmt.providerhub.models.SkuSettingCapacity
        :keyword costs:
        :paramtype costs: list[~azure.mgmt.providerhub.models.SkuCost]
        :keyword capabilities:
        :paramtype capabilities: list[~azure.mgmt.providerhub.models.SkuCapability]
        """
        super().__init__(**kwargs)
        self.name = name
        self.tier = tier
        self.size = size
        self.family = family
        self.kind = kind
        self.locations = locations
        self.location_info = location_info
        self.required_quota_ids = required_quota_ids
        self.required_features = required_features
        self.capacity = capacity
        self.costs = costs
        self.capabilities = capabilities


class SkuSettingCapacity(SkuCapacity):
    """SkuSettingCapacity.

    All required parameters must be populated in order to send to server.

    :ivar minimum: Required.
    :vartype minimum: int
    :ivar maximum:
    :vartype maximum: int
    :ivar default:
    :vartype default: int
    :ivar scale_type: Known values are: "None", "Manual", and "Automatic".
    :vartype scale_type: str or ~azure.mgmt.providerhub.models.SkuScaleType
    """


class SkuZoneDetail(_serialization.Model):
    """SkuZoneDetail.

    :ivar name:
    :vartype name: list[str]
    :ivar capabilities:
    :vartype capabilities: list[~azure.mgmt.providerhub.models.SkuCapability]
    """

    _attribute_map = {
        "name": {"key": "name", "type": "[str]"},
        "capabilities": {"key": "capabilities", "type": "[SkuCapability]"},
    }

    def __init__(
        self,
        *,
        name: Optional[List[str]] = None,
        capabilities: Optional[List["_models.SkuCapability"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name:
        :paramtype name: list[str]
        :keyword capabilities:
        :paramtype capabilities: list[~azure.mgmt.providerhub.models.SkuCapability]
        """
        super().__init__(**kwargs)
        self.name = name
        self.capabilities = capabilities


class SubscriptionStateOverrideAction(_serialization.Model):
    """SubscriptionStateOverrideAction.

    All required parameters must be populated in order to send to server.

    :ivar state: Required. Known values are: "Registered", "Unregistered", "Warned", "Suspended",
     "Deleted", "WarnedToRegistered", "WarnedToSuspended", "WarnedToDeleted",
     "WarnedToUnregistered", "SuspendedToRegistered", "SuspendedToWarned", "SuspendedToDeleted", and
     "SuspendedToUnregistered".
    :vartype state: str or ~azure.mgmt.providerhub.models.SubscriptionTransitioningState
    :ivar action: Required. Known values are: "NotDefined", "DeleteAllResources",
     "SoftDeleteAllResources", "NoOp", "BillingCancellation", and "UndoSoftDelete".
    :vartype action: str or ~azure.mgmt.providerhub.models.SubscriptionNotificationOperation
    """

    _validation = {
        "state": {"required": True},
        "action": {"required": True},
    }

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
        "action": {"key": "action", "type": "str"},
    }

    def __init__(
        self,
        *,
        state: Union[str, "_models.SubscriptionTransitioningState"],
        action: Union[str, "_models.SubscriptionNotificationOperation"],
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Required. Known values are: "Registered", "Unregistered", "Warned",
         "Suspended", "Deleted", "WarnedToRegistered", "WarnedToSuspended", "WarnedToDeleted",
         "WarnedToUnregistered", "SuspendedToRegistered", "SuspendedToWarned", "SuspendedToDeleted", and
         "SuspendedToUnregistered".
        :paramtype state: str or ~azure.mgmt.providerhub.models.SubscriptionTransitioningState
        :keyword action: Required. Known values are: "NotDefined", "DeleteAllResources",
         "SoftDeleteAllResources", "NoOp", "BillingCancellation", and "UndoSoftDelete".
        :paramtype action: str or ~azure.mgmt.providerhub.models.SubscriptionNotificationOperation
        """
        super().__init__(**kwargs)
        self.state = state
        self.action = action


class SubscriptionStateRule(_serialization.Model):
    """SubscriptionStateRule.

    :ivar state: Known values are: "NotDefined", "Enabled", "Warned", "PastDue", "Disabled", and
     "Deleted".
    :vartype state: str or ~azure.mgmt.providerhub.models.SubscriptionState
    :ivar allowed_actions:
    :vartype allowed_actions: list[str]
    """

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
        "allowed_actions": {"key": "allowedActions", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        state: Optional[Union[str, "_models.SubscriptionState"]] = None,
        allowed_actions: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Known values are: "NotDefined", "Enabled", "Warned", "PastDue", "Disabled", and
         "Deleted".
        :paramtype state: str or ~azure.mgmt.providerhub.models.SubscriptionState
        :keyword allowed_actions:
        :paramtype allowed_actions: list[str]
        """
        super().__init__(**kwargs)
        self.state = state
        self.allowed_actions = allowed_actions


class SwaggerSpecification(_serialization.Model):
    """SwaggerSpecification.

    :ivar api_versions:
    :vartype api_versions: list[str]
    :ivar swagger_spec_folder_uri:
    :vartype swagger_spec_folder_uri: str
    """

    _attribute_map = {
        "api_versions": {"key": "apiVersions", "type": "[str]"},
        "swagger_spec_folder_uri": {"key": "swaggerSpecFolderUri", "type": "str"},
    }

    def __init__(
        self, *, api_versions: Optional[List[str]] = None, swagger_spec_folder_uri: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword api_versions:
        :paramtype api_versions: list[str]
        :keyword swagger_spec_folder_uri:
        :paramtype swagger_spec_folder_uri: str
        """
        super().__init__(**kwargs)
        self.api_versions = api_versions
        self.swagger_spec_folder_uri = swagger_spec_folder_uri


class ThrottlingMetric(_serialization.Model):
    """ThrottlingMetric.

    All required parameters must be populated in order to send to server.

    :ivar type: Required. Known values are: "NotSpecified", "NumberOfRequests", and
     "NumberOfResources".
    :vartype type: str or ~azure.mgmt.providerhub.models.ThrottlingMetricType
    :ivar limit: Required.
    :vartype limit: int
    :ivar interval:
    :vartype interval: ~datetime.timedelta
    """

    _validation = {
        "type": {"required": True},
        "limit": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "limit": {"key": "limit", "type": "int"},
        "interval": {"key": "interval", "type": "duration"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ThrottlingMetricType"],
        limit: int,
        interval: Optional[datetime.timedelta] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Required. Known values are: "NotSpecified", "NumberOfRequests", and
         "NumberOfResources".
        :paramtype type: str or ~azure.mgmt.providerhub.models.ThrottlingMetricType
        :keyword limit: Required.
        :paramtype limit: int
        :keyword interval:
        :paramtype interval: ~datetime.timedelta
        """
        super().__init__(**kwargs)
        self.type = type
        self.limit = limit
        self.interval = interval


class ThrottlingRule(_serialization.Model):
    """ThrottlingRule.

    All required parameters must be populated in order to send to server.

    :ivar action: Required.
    :vartype action: str
    :ivar metrics: Required.
    :vartype metrics: list[~azure.mgmt.providerhub.models.ThrottlingMetric]
    :ivar required_features:
    :vartype required_features: list[str]
    """

    _validation = {
        "action": {"required": True},
        "metrics": {"required": True},
    }

    _attribute_map = {
        "action": {"key": "action", "type": "str"},
        "metrics": {"key": "metrics", "type": "[ThrottlingMetric]"},
        "required_features": {"key": "requiredFeatures", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        action: str,
        metrics: List["_models.ThrottlingMetric"],
        required_features: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword action: Required.
        :paramtype action: str
        :keyword metrics: Required.
        :paramtype metrics: list[~azure.mgmt.providerhub.models.ThrottlingMetric]
        :keyword required_features:
        :paramtype required_features: list[str]
        """
        super().__init__(**kwargs)
        self.action = action
        self.metrics = metrics
        self.required_features = required_features


class TypedErrorInfo(_serialization.Model):
    """TypedErrorInfo.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar type: Required.
    :vartype type: str
    :ivar info: Any object.
    :vartype info: JSON
    """

    _validation = {
        "type": {"required": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, *, type: str, **kwargs: Any) -> None:
        """
        :keyword type: Required.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.type = type
        self.info = None
