# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential
from azure.mgmt.providerhub import ProviderHub

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-providerhub
# USAGE
    python notification_registrations_create_or_update.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = ProviderHub(
        credential=DefaultAzureCredential(),
        subscription_id="ab7a8701-f7ef-471a-a2f4-d0ebbf494f77",
    )

    response = client.notification_registrations.create_or_update(
        provider_namespace="Microsoft.Contoso",
        notification_registration_name="fooNotificationRegistration",
        properties={
            "properties": {
                "includedEvents": ["*/write", "Microsoft.Contoso/employees/delete"],
                "messageScope": "RegisteredSubscriptions",
                "notificationEndpoints": [
                    {
                        "locations": ["", "East US"],
                        "notificationDestination": "/subscriptions/ac6bcfb5-3dc1-491f-95a6-646b89bf3e88/resourceGroups/mgmtexp-eastus/providers/Microsoft.EventHub/namespaces/unitedstates-mgmtexpint/eventhubs/armlinkednotifications",
                    },
                    {
                        "locations": ["North Europe"],
                        "notificationDestination": "/subscriptions/ac6bcfb5-3dc1-491f-95a6-646b89bf3e88/resourceGroups/mgmtexp-northeurope/providers/Microsoft.EventHub/namespaces/europe-mgmtexpint/eventhubs/armlinkednotifications",
                    },
                ],
                "notificationMode": "EventHub",
            }
        },
    )
    print(response)


# x-ms-original-file: specification/providerhub/resource-manager/Microsoft.ProviderHub/stable/2020-11-20/examples/NotificationRegistrations_CreateOrUpdate.json
if __name__ == "__main__":
    main()
