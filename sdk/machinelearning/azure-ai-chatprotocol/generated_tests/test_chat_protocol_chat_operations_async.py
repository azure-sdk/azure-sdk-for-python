# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils.aio import recorded_by_proxy_async
from testpreparer import ChatProtocolPreparer
from testpreparer_async import ChatProtocolClientTestBaseAsync


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestChatProtocolChatOperationsAsync(ChatProtocolClientTestBaseAsync):
    @ChatProtocolPreparer()
    @recorded_by_proxy_async
    async def test_chat_create_streaming(self, chatprotocol_endpoint):
        client = self.create_async_client(endpoint=chatprotocol_endpoint)
        response = await client.chat.create_streaming(
            operation_route="str",
            body={"messages": ["chat_message"], "stream": True, "context": {"str": {}}, "sessionState": {}},
            messages=["chat_message"],
            stream_parameter=True,
        )

        # please add some check logic here by yourself
        # ...

    @ChatProtocolPreparer()
    @recorded_by_proxy_async
    async def test_chat_create(self, chatprotocol_endpoint):
        client = self.create_async_client(endpoint=chatprotocol_endpoint)
        response = await client.chat.create(
            operation_route="str",
            body={"messages": ["chat_message"], "stream": False, "context": {"str": {}}, "sessionState": {}},
            messages=["chat_message"],
            stream_parameter=False,
        )

        # please add some check logic here by yourself
        # ...
