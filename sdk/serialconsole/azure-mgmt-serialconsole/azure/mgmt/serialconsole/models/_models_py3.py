# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CloudErrorBody(_serialization.Model):
    """An error response from the Batch service.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: str
    :ivar target: The target of the particular error. For example, the name of the property in
     error.
    :vartype target: str
    :ivar details: A list of additional details about the error.
    :vartype details: list[~azure.mgmt.serialconsole.models.CloudErrorBody]
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[CloudErrorBody]"},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        target: Optional[str] = None,
        details: Optional[List["_models.CloudErrorBody"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword code: An identifier for the error. Codes are invariant and are intended to be consumed
         programmatically.
        :paramtype code: str
        :keyword message: A message describing the error, intended to be suitable for display in a user
         interface.
        :paramtype message: str
        :keyword target: The target of the particular error. For example, the name of the property in
         error.
        :paramtype target: str
        :keyword details: A list of additional details about the error.
        :paramtype details: list[~azure.mgmt.serialconsole.models.CloudErrorBody]
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details


class DisableSerialConsoleResult(_serialization.Model):
    """Returns whether or not Serial Console is disabled.

    :ivar disabled: Whether or not Serial Console is disabled.
    :vartype disabled: bool
    """

    _attribute_map = {
        "disabled": {"key": "disabled", "type": "bool"},
    }

    def __init__(self, *, disabled: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword disabled: Whether or not Serial Console is disabled.
        :paramtype disabled: bool
        """
        super().__init__(**kwargs)
        self.disabled = disabled


class EnableSerialConsoleResult(_serialization.Model):
    """Returns whether or not Serial Console is disabled (enabled).

    :ivar disabled: Whether or not Serial Console is disabled.
    :vartype disabled: bool
    """

    _attribute_map = {
        "disabled": {"key": "disabled", "type": "bool"},
    }

    def __init__(self, *, disabled: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword disabled: Whether or not Serial Console is disabled.
        :paramtype disabled: bool
        """
        super().__init__(**kwargs)
        self.disabled = disabled


class GetSerialConsoleSubscriptionNotFound(_serialization.Model):
    """Error saying that the provided subscription could not be found.

    :ivar code: Error code.
    :vartype code: str
    :ivar message: Subscription not found message.
    :vartype message: str
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, code: Optional[str] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword code: Error code.
        :paramtype code: str
        :keyword message: Subscription not found message.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.serialconsole.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.serialconsole.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class SerialConsoleOperations(_serialization.Model):
    """Serial Console operations.

    :ivar value: A list of Serial Console operations.
    :vartype value: list[~azure.mgmt.serialconsole.models.SerialConsoleOperationsValueItem]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[SerialConsoleOperationsValueItem]"},
    }

    def __init__(
        self, *, value: Optional[List["_models.SerialConsoleOperationsValueItem"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: A list of Serial Console operations.
        :paramtype value: list[~azure.mgmt.serialconsole.models.SerialConsoleOperationsValueItem]
        """
        super().__init__(**kwargs)
        self.value = value


class SerialConsoleOperationsValueItem(_serialization.Model):
    """SerialConsoleOperationsValueItem.

    :ivar name:
    :vartype name: str
    :ivar is_data_action:
    :vartype is_data_action: str
    :ivar display:
    :vartype display: ~azure.mgmt.serialconsole.models.SerialConsoleOperationsValueItemDisplay
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "str"},
        "display": {"key": "display", "type": "SerialConsoleOperationsValueItemDisplay"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        is_data_action: Optional[str] = None,
        display: Optional["_models.SerialConsoleOperationsValueItemDisplay"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name:
        :paramtype name: str
        :keyword is_data_action:
        :paramtype is_data_action: str
        :keyword display:
        :paramtype display: ~azure.mgmt.serialconsole.models.SerialConsoleOperationsValueItemDisplay
        """
        super().__init__(**kwargs)
        self.name = name
        self.is_data_action = is_data_action
        self.display = display


class SerialConsoleOperationsValueItemDisplay(_serialization.Model):
    """SerialConsoleOperationsValueItemDisplay.

    :ivar provider:
    :vartype provider: str
    :ivar resource:
    :vartype resource: str
    :ivar operation:
    :vartype operation: str
    :ivar description:
    :vartype description: str
    """

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(
        self,
        *,
        provider: Optional[str] = None,
        resource: Optional[str] = None,
        operation: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider:
        :paramtype provider: str
        :keyword resource:
        :paramtype resource: str
        :keyword operation:
        :paramtype operation: str
        :keyword description:
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class SerialConsoleStatus(_serialization.Model):
    """Returns whether or not Serial Console is disabled.

    :ivar disabled: Whether or not Serial Console is disabled.
    :vartype disabled: bool
    """

    _attribute_map = {
        "disabled": {"key": "disabled", "type": "bool"},
    }

    def __init__(self, *, disabled: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword disabled: Whether or not Serial Console is disabled.
        :paramtype disabled: bool
        """
        super().__init__(**kwargs)
        self.disabled = disabled


class SerialPort(ProxyResource):
    """Represents the serial port of the parent resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.serialconsole.models.SystemData
    :ivar state: Specifies whether the port is enabled for a serial console connection. Known
     values are: "enabled" and "disabled".
    :vartype state: str or ~azure.mgmt.serialconsole.models.SerialPortState
    :ivar connection_state: Specifies whether the port is currently active. Known values are:
     "active" and "inactive".
    :vartype connection_state: str or ~azure.mgmt.serialconsole.models.SerialPortConnectionState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "state": {"key": "properties.state", "type": "str"},
        "connection_state": {"key": "properties.connectionState", "type": "str"},
    }

    def __init__(
        self,
        *,
        state: Optional[Union[str, "_models.SerialPortState"]] = None,
        connection_state: Optional[Union[str, "_models.SerialPortConnectionState"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Specifies whether the port is enabled for a serial console connection. Known
         values are: "enabled" and "disabled".
        :paramtype state: str or ~azure.mgmt.serialconsole.models.SerialPortState
        :keyword connection_state: Specifies whether the port is currently active. Known values are:
         "active" and "inactive".
        :paramtype connection_state: str or ~azure.mgmt.serialconsole.models.SerialPortConnectionState
        """
        super().__init__(**kwargs)
        self.state = state
        self.connection_state = connection_state


class SerialPortConnectResult(_serialization.Model):
    """Returns a connection string to the serial port of the resource.

    :ivar connection_string: Connection string to the serial port of the resource.
    :vartype connection_string: str
    """

    _attribute_map = {
        "connection_string": {"key": "connectionString", "type": "str"},
    }

    def __init__(self, *, connection_string: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword connection_string: Connection string to the serial port of the resource.
        :paramtype connection_string: str
        """
        super().__init__(**kwargs)
        self.connection_string = connection_string


class SerialPortListResult(_serialization.Model):
    """The list serial ports operation response.

    :ivar value: The list of serial ports.
    :vartype value: list[~azure.mgmt.serialconsole.models.SerialPort]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[SerialPort]"},
    }

    def __init__(self, *, value: Optional[List["_models.SerialPort"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: The list of serial ports.
        :paramtype value: list[~azure.mgmt.serialconsole.models.SerialPort]
        """
        super().__init__(**kwargs)
        self.value = value


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.serialconsole.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.serialconsole.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.serialconsole.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.serialconsole.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
