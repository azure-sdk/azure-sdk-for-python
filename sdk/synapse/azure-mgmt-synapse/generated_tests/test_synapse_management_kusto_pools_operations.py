# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.synapse import SynapseManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSynapseManagementKustoPoolsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SynapseManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_list_skus(self, resource_group):
        response = self.client.kusto_pools.list_skus(
            api_version="2021-06-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_check_name_availability(self, resource_group):
        response = self.client.kusto_pools.check_name_availability(
            location="str",
            kusto_pool_name={"name": "str", "type": "Microsoft.Synapse/workspaces/kustoPools"},
            api_version="2021-06-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_list_by_workspace(self, resource_group):
        response = self.client.kusto_pools.list_by_workspace(
            resource_group_name=resource_group.name,
            workspace_name="str",
            api_version="2021-06-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_get(self, resource_group):
        response = self.client.kusto_pools.get(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-06-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_create_or_update(self, resource_group):
        response = self.client.kusto_pools.begin_create_or_update(
            workspace_name="str",
            resource_group_name=resource_group.name,
            kusto_pool_name="str",
            parameters={
                "location": "str",
                "sku": {"name": "str", "size": "str", "capacity": 0},
                "dataIngestionUri": "str",
                "enablePurge": False,
                "enableStreamingIngest": False,
                "etag": "str",
                "id": "str",
                "languageExtensions": {"value": [{"languageExtensionName": "str"}]},
                "name": "str",
                "optimizedAutoscale": {"isEnabled": bool, "maximum": 0, "minimum": 0, "version": 0},
                "provisioningState": "str",
                "state": "str",
                "stateReason": "str",
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "tags": {"str": "str"},
                "type": "str",
                "uri": "str",
                "workspaceUID": "str",
            },
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_update(self, resource_group):
        response = self.client.kusto_pools.begin_update(
            workspace_name="str",
            resource_group_name=resource_group.name,
            kusto_pool_name="str",
            parameters={
                "dataIngestionUri": "str",
                "enablePurge": False,
                "enableStreamingIngest": False,
                "id": "str",
                "languageExtensions": {"value": [{"languageExtensionName": "str"}]},
                "name": "str",
                "optimizedAutoscale": {"isEnabled": bool, "maximum": 0, "minimum": 0, "version": 0},
                "provisioningState": "str",
                "sku": {"name": "str", "size": "str", "capacity": 0},
                "state": "str",
                "stateReason": "str",
                "tags": {"str": "str"},
                "type": "str",
                "uri": "str",
                "workspaceUID": "str",
            },
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_delete(self, resource_group):
        response = self.client.kusto_pools.begin_delete(
            workspace_name="str",
            resource_group_name=resource_group.name,
            kusto_pool_name="str",
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_stop(self, resource_group):
        response = self.client.kusto_pools.begin_stop(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_start(self, resource_group):
        response = self.client.kusto_pools.begin_start(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_list_skus_by_resource(self, resource_group):
        response = self.client.kusto_pools.list_skus_by_resource(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-06-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_list_language_extensions(self, resource_group):
        response = self.client.kusto_pools.list_language_extensions(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-06-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_add_language_extensions(self, resource_group):
        response = self.client.kusto_pools.begin_add_language_extensions(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            language_extensions_to_add={"value": [{"languageExtensionName": "str"}]},
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_remove_language_extensions(self, resource_group):
        response = self.client.kusto_pools.begin_remove_language_extensions(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            language_extensions_to_remove={"value": [{"languageExtensionName": "str"}]},
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_list_follower_databases(self, resource_group):
        response = self.client.kusto_pools.list_follower_databases(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-06-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_kusto_pools_begin_detach_follower_databases(self, resource_group):
        response = self.client.kusto_pools.begin_detach_follower_databases(
            workspace_name="str",
            kusto_pool_name="str",
            resource_group_name=resource_group.name,
            follower_database_to_remove={
                "attachedDatabaseConfigurationName": "str",
                "clusterResourceId": "str",
                "databaseName": "str",
            },
            api_version="2021-06-01-preview",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
