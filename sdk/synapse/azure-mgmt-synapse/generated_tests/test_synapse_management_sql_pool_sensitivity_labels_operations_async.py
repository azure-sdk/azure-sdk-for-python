# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.synapse.aio import SynapseManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSynapseManagementSqlPoolSensitivityLabelsOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SynapseManagementClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_list_current(self, resource_group):
        response = self.client.sql_pool_sensitivity_labels.list_current(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            api_version="2021-06-01",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_update(self, resource_group):
        response = await self.client.sql_pool_sensitivity_labels.update(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            parameters={
                "operations": [
                    {
                        "column": "str",
                        "id": "str",
                        "name": "str",
                        "op": "str",
                        "schema": "str",
                        "sensitivityLabel": {
                            "columnName": "str",
                            "id": "str",
                            "informationType": "str",
                            "informationTypeId": "str",
                            "isDisabled": bool,
                            "labelId": "str",
                            "labelName": "str",
                            "managedBy": "str",
                            "name": "str",
                            "rank": "str",
                            "schemaName": "str",
                            "tableName": "str",
                            "type": "str",
                        },
                        "table": "str",
                        "type": "str",
                    }
                ]
            },
            api_version="2021-06-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_list_recommended(self, resource_group):
        response = self.client.sql_pool_sensitivity_labels.list_recommended(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            api_version="2021-06-01",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_create_or_update(self, resource_group):
        response = await self.client.sql_pool_sensitivity_labels.create_or_update(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            schema_name="str",
            table_name="str",
            column_name="str",
            parameters={
                "columnName": "str",
                "id": "str",
                "informationType": "str",
                "informationTypeId": "str",
                "isDisabled": bool,
                "labelId": "str",
                "labelName": "str",
                "managedBy": "str",
                "name": "str",
                "rank": "str",
                "schemaName": "str",
                "tableName": "str",
                "type": "str",
            },
            api_version="2021-06-01",
            sensitivity_label_source="current",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_delete(self, resource_group):
        response = await self.client.sql_pool_sensitivity_labels.delete(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            schema_name="str",
            table_name="str",
            column_name="str",
            api_version="2021-06-01",
            sensitivity_label_source="current",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_get(self, resource_group):
        response = await self.client.sql_pool_sensitivity_labels.get(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            schema_name="str",
            table_name="str",
            column_name="str",
            sensitivity_label_source="str",
            api_version="2021-06-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_enable_recommendation(self, resource_group):
        response = await self.client.sql_pool_sensitivity_labels.enable_recommendation(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            schema_name="str",
            table_name="str",
            column_name="str",
            api_version="2021-06-01",
            sensitivity_label_source="recommended",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sql_pool_sensitivity_labels_disable_recommendation(self, resource_group):
        response = await self.client.sql_pool_sensitivity_labels.disable_recommendation(
            resource_group_name=resource_group.name,
            workspace_name="str",
            sql_pool_name="str",
            schema_name="str",
            table_name="str",
            column_name="str",
            api_version="2021-06-01",
            sensitivity_label_source="recommended",
        )

        # please add some check logic here by yourself
        # ...
