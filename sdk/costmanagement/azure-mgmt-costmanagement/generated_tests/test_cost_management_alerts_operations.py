# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.costmanagement import CostManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestCostManagementAlertsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(CostManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alerts_list(self, resource_group):
        response = self.client.alerts.list(
            scope="str",
            api_version="2025-03-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alerts_get(self, resource_group):
        response = self.client.alerts.get(
            scope="str",
            alert_id="str",
            api_version="2025-03-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alerts_dismiss(self, resource_group):
        response = self.client.alerts.dismiss(
            scope="str",
            alert_id="str",
            parameters={
                "closeTime": "str",
                "costEntityId": "str",
                "creationTime": "str",
                "definition": {"category": "str", "criteria": "str", "type": "str"},
                "description": "str",
                "details": {
                    "amount": 0.0,
                    "companyName": "str",
                    "contactEmails": ["str"],
                    "contactGroups": ["str"],
                    "contactRoles": ["str"],
                    "currentSpend": 0.0,
                    "departmentName": "str",
                    "enrollmentEndDate": "str",
                    "enrollmentNumber": "str",
                    "enrollmentStartDate": "str",
                    "invoicingThreshold": 0.0,
                    "meterFilter": [{}],
                    "operator": "str",
                    "overridingAlert": "str",
                    "periodStartDate": "str",
                    "resourceFilter": [{}],
                    "resourceGroupFilter": [{}],
                    "tagFilter": {},
                    "threshold": 0.0,
                    "timeGrainType": "str",
                    "triggeredBy": "str",
                    "unit": "str",
                },
                "modificationTime": "str",
                "source": "str",
                "status": "str",
                "statusModificationTime": "str",
                "statusModificationUserName": "str",
            },
            api_version="2025-03-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alerts_list_external(self, resource_group):
        response = self.client.alerts.list_external(
            external_cloud_provider_type="str",
            external_cloud_provider_id="str",
            api_version="2025-03-01",
        )

        # please add some check logic here by yourself
        # ...
