# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.costmanagement import CostManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestCostManagementBudgetsOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(CostManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_budgets_list(self, resource_group):
        response = self.client.budgets.list(
            scope="str",
            api_version="2024-10-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_budgets_get(self, resource_group):
        response = self.client.budgets.get(
            scope="str",
            budget_name="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_budgets_create_or_update(self, resource_group):
        response = self.client.budgets.create_or_update(
            scope="str",
            budget_name="str",
            parameters={
                "amount": 0.0,
                "category": "str",
                "currentSpend": {"amount": 0.0, "unit": "str"},
                "eTag": "str",
                "filter": {
                    "and": [
                        {
                            "dimensions": {"name": "str", "operator": "str", "values": ["str"]},
                            "tags": {"name": "str", "operator": "str", "values": ["str"]},
                        }
                    ],
                    "dimensions": {"name": "str", "operator": "str", "values": ["str"]},
                    "tags": {"name": "str", "operator": "str", "values": ["str"]},
                },
                "forecastSpend": {"amount": 0.0, "unit": "str"},
                "id": "str",
                "name": "str",
                "notifications": {
                    "str": {
                        "contactEmails": ["str"],
                        "enabled": bool,
                        "operator": "str",
                        "threshold": 0.0,
                        "contactGroups": ["str"],
                        "contactRoles": ["str"],
                        "frequency": "str",
                        "locale": "str",
                        "thresholdType": "Actual",
                    }
                },
                "timeGrain": "str",
                "timePeriod": {"startDate": "2020-02-20 00:00:00", "endDate": "2020-02-20 00:00:00"},
                "type": "str",
            },
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_budgets_delete(self, resource_group):
        response = self.client.budgets.delete(
            scope="str",
            budget_name="str",
            api_version="2024-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...
