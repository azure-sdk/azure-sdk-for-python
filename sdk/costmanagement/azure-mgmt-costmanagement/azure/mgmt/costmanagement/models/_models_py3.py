# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import List, Optional, TYPE_CHECKING, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    import __init__ as _models


class CheckNameAvailabilityRequest(msrest.serialization.Model):
    """The check availability request body.

    :ivar name: The name of the resource for which availability needs to be checked.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword name: The name of the resource for which availability needs to be checked.
        :paramtype name: str
        :keyword type: The resource type.
        :paramtype type: str
        """
        super(CheckNameAvailabilityRequest, self).__init__(**kwargs)
        self.name = name
        self.type = type


class CheckNameAvailabilityResponse(msrest.serialization.Model):
    """The check availability result.

    :ivar name_available: Indicates if the resource name is available.
    :vartype name_available: bool
    :ivar reason: The reason why the given name is not available. Known values are: "Invalid",
     "AlreadyExists".
    :vartype reason: str or ~azure.mgmt.costmanagement.models.CheckNameAvailabilityReason
    :ivar message: Detailed reason why the given name is available.
    :vartype message: str
    """

    _attribute_map = {
        'name_available': {'key': 'nameAvailable', 'type': 'bool'},
        'reason': {'key': 'reason', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        name_available: Optional[bool] = None,
        reason: Optional[Union[str, "_models.CheckNameAvailabilityReason"]] = None,
        message: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword name_available: Indicates if the resource name is available.
        :paramtype name_available: bool
        :keyword reason: The reason why the given name is not available. Known values are: "Invalid",
         "AlreadyExists".
        :paramtype reason: str or ~azure.mgmt.costmanagement.models.CheckNameAvailabilityReason
        :keyword message: Detailed reason why the given name is available.
        :paramtype message: str
        """
        super(CheckNameAvailabilityResponse, self).__init__(**kwargs)
        self.name_available = name_available
        self.reason = reason
        self.message = message


class ErrorDetails(msrest.serialization.Model):
    """The details of the error.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Error code.
    :vartype code: str
    :ivar message: Error message indicating why the operation failed.
    :vartype message: str
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorDetails, self).__init__(**kwargs)
        self.code = None
        self.message = None


class ErrorResponse(msrest.serialization.Model):
    """Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. 

Some Error responses: 


* 
  429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the "x-ms-ratelimit-microsoft.consumption-retry-after" header. 

* 
  503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the "Retry-After" header.

    :ivar error: The details of the error.
    :vartype error: ~azure.mgmt.costmanagement.models.ErrorDetails
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetails'},
    }

    def __init__(
        self,
        *,
        error: Optional["_models.ErrorDetails"] = None,
        **kwargs
    ):
        """
        :keyword error: The details of the error.
        :paramtype error: ~azure.mgmt.costmanagement.models.ErrorDetails
        """
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = error


class FileDestination(msrest.serialization.Model):
    """Destination of the view data. This is optional. Currently only csv format is supported.

    :ivar file_formats: Destination of the view data. Currently only csv format is supported.
    :vartype file_formats: list[str or ~azure.mgmt.costmanagement.models.FileFormat]
    """

    _attribute_map = {
        'file_formats': {'key': 'fileFormats', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        file_formats: Optional[List[Union[str, "_models.FileFormat"]]] = None,
        **kwargs
    ):
        """
        :keyword file_formats: Destination of the view data. Currently only csv format is supported.
        :paramtype file_formats: list[str or ~azure.mgmt.costmanagement.models.FileFormat]
        """
        super(FileDestination, self).__init__(**kwargs)
        self.file_formats = file_formats


class NotificationProperties(msrest.serialization.Model):
    """The properties of the scheduled action notification.

    All required parameters must be populated in order to send to Azure.

    :ivar to: Required. Array of email addresses.
    :vartype to: list[str]
    :ivar message: Optional message to be added in the email. Length is limited to 250 characters.
    :vartype message: str
    :ivar subject: Required. Subject of the email. Length is limited to 70 characters.
    :vartype subject: str
    """

    _validation = {
        'to': {'required': True, 'max_items': 20, 'min_items': 1},
        'subject': {'required': True},
    }

    _attribute_map = {
        'to': {'key': 'to', 'type': '[str]'},
        'message': {'key': 'message', 'type': 'str'},
        'subject': {'key': 'subject', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        to: List[str],
        subject: str,
        message: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword to: Required. Array of email addresses.
        :paramtype to: list[str]
        :keyword message: Optional message to be added in the email. Length is limited to 250
         characters.
        :paramtype message: str
        :keyword subject: Required. Subject of the email. Length is limited to 70 characters.
        :paramtype subject: str
        """
        super(NotificationProperties, self).__init__(**kwargs)
        self.to = to
        self.message = message
        self.subject = subject


class ScheduledActionProxyResource(msrest.serialization.Model):
    """The Resource model definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar e_tag: Resource Etag.
    :vartype e_tag: str
    :ivar kind: Kind of the scheduled action. Known values are: "Email", "InsightAlert".
    :vartype kind: str or ~azure.mgmt.costmanagement.models.ScheduledActionKind
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.costmanagement.models.SystemData
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'e_tag': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
    }

    def __init__(
        self,
        *,
        kind: Optional[Union[str, "_models.ScheduledActionKind"]] = None,
        **kwargs
    ):
        """
        :keyword kind: Kind of the scheduled action. Known values are: "Email", "InsightAlert".
        :paramtype kind: str or ~azure.mgmt.costmanagement.models.ScheduledActionKind
        """
        super(ScheduledActionProxyResource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.e_tag = None
        self.kind = kind
        self.system_data = None


class ScheduledAction(ScheduledActionProxyResource):
    """Scheduled action definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar e_tag: Resource Etag.
    :vartype e_tag: str
    :ivar kind: Kind of the scheduled action. Known values are: "Email", "InsightAlert".
    :vartype kind: str or ~azure.mgmt.costmanagement.models.ScheduledActionKind
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.costmanagement.models.SystemData
    :ivar display_name: Scheduled action name.
    :vartype display_name: str
    :ivar file_destination: Destination format of the view data. This is optional.
    :vartype file_destination: ~azure.mgmt.costmanagement.models.FileDestination
    :ivar notification: Notification properties based on scheduled action kind.
    :vartype notification: ~azure.mgmt.costmanagement.models.NotificationProperties
    :ivar schedule: Schedule of the scheduled action.
    :vartype schedule: ~azure.mgmt.costmanagement.models.ScheduleProperties
    :ivar scope: Cost Management scope like 'subscriptions/{subscriptionId}' for subscription
     scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup
     scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account
     scope,
     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
     Department scope,
     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
     for EnrollmentAccount scope,
     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
     for BillingProfile scope,
     'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
     for InvoiceSection scope,
     '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for
     ExternalBillingAccount scope, and
     '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for
     ExternalSubscription scope.
    :vartype scope: str
    :ivar status: Status of the scheduled action. Known values are: "Disabled", "Enabled".
    :vartype status: str or ~azure.mgmt.costmanagement.models.ScheduledActionStatus
    :ivar view_id: Cost analysis viewId used for scheduled action. For example,
     '/providers/Microsoft.CostManagement/views/swaggerExample'.
    :vartype view_id: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'e_tag': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'display_name': {'key': 'properties.displayName', 'type': 'str'},
        'file_destination': {'key': 'properties.fileDestination', 'type': 'FileDestination'},
        'notification': {'key': 'properties.notification', 'type': 'NotificationProperties'},
        'schedule': {'key': 'properties.schedule', 'type': 'ScheduleProperties'},
        'scope': {'key': 'properties.scope', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'str'},
        'view_id': {'key': 'properties.viewId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        kind: Optional[Union[str, "_models.ScheduledActionKind"]] = None,
        display_name: Optional[str] = None,
        file_destination: Optional["_models.FileDestination"] = None,
        notification: Optional["_models.NotificationProperties"] = None,
        schedule: Optional["_models.ScheduleProperties"] = None,
        scope: Optional[str] = None,
        status: Optional[Union[str, "_models.ScheduledActionStatus"]] = None,
        view_id: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword kind: Kind of the scheduled action. Known values are: "Email", "InsightAlert".
        :paramtype kind: str or ~azure.mgmt.costmanagement.models.ScheduledActionKind
        :keyword display_name: Scheduled action name.
        :paramtype display_name: str
        :keyword file_destination: Destination format of the view data. This is optional.
        :paramtype file_destination: ~azure.mgmt.costmanagement.models.FileDestination
        :keyword notification: Notification properties based on scheduled action kind.
        :paramtype notification: ~azure.mgmt.costmanagement.models.NotificationProperties
        :keyword schedule: Schedule of the scheduled action.
        :paramtype schedule: ~azure.mgmt.costmanagement.models.ScheduleProperties
        :keyword scope: Cost Management scope like 'subscriptions/{subscriptionId}' for subscription
         scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup
         scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account
         scope,
         'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for
         Department scope,
         'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
         for EnrollmentAccount scope,
         'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
         for BillingProfile scope,
         'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
         for InvoiceSection scope,
         '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for
         ExternalBillingAccount scope, and
         '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for
         ExternalSubscription scope.
        :paramtype scope: str
        :keyword status: Status of the scheduled action. Known values are: "Disabled", "Enabled".
        :paramtype status: str or ~azure.mgmt.costmanagement.models.ScheduledActionStatus
        :keyword view_id: Cost analysis viewId used for scheduled action. For example,
         '/providers/Microsoft.CostManagement/views/swaggerExample'.
        :paramtype view_id: str
        """
        super(ScheduledAction, self).__init__(kind=kind, **kwargs)
        self.display_name = display_name
        self.file_destination = file_destination
        self.notification = notification
        self.schedule = schedule
        self.scope = scope
        self.status = status
        self.view_id = view_id


class ScheduledActionListResult(msrest.serialization.Model):
    """Scheduled actions list result. It contains a list of scheduled actions.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of scheduled actions.
    :vartype value: list[~azure.mgmt.costmanagement.models.ScheduledAction]
    :ivar next_link: The link (url) to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[ScheduledAction]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ScheduledActionListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class ScheduleProperties(msrest.serialization.Model):
    """The properties of the schedule.

    All required parameters must be populated in order to send to Azure.

    :ivar frequency: Required. Frequency of the schedule. Known values are: "Daily", "Weekly",
     "Monthly".
    :vartype frequency: str or ~azure.mgmt.costmanagement.models.ScheduleFrequency
    :ivar hour_of_day: UTC time at which cost analysis data will be emailed.
    :vartype hour_of_day: int
    :ivar days_of_week: Day names in english on which cost analysis data will be emailed. This
     property is applicable when frequency is Weekly or Monthly.
    :vartype days_of_week: list[str or ~azure.mgmt.costmanagement.models.DaysOfWeek]
    :ivar weeks_of_month: Weeks in which cost analysis data will be emailed. This property is
     applicable when frequency is Monthly and used in combination with daysOfWeek.
    :vartype weeks_of_month: list[str or ~azure.mgmt.costmanagement.models.WeeksOfMonth]
    :ivar day_of_month: UTC day on which cost analysis data will be emailed. Must be between 1 and
     31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or
     daysOfWeek.
    :vartype day_of_month: int
    :ivar start_date: Required. The start date and time of the scheduled action (UTC).
    :vartype start_date: ~datetime.datetime
    :ivar end_date: Required. The end date and time of the scheduled action (UTC).
    :vartype end_date: ~datetime.datetime
    """

    _validation = {
        'frequency': {'required': True},
        'start_date': {'required': True},
        'end_date': {'required': True},
    }

    _attribute_map = {
        'frequency': {'key': 'frequency', 'type': 'str'},
        'hour_of_day': {'key': 'hourOfDay', 'type': 'int'},
        'days_of_week': {'key': 'daysOfWeek', 'type': '[str]'},
        'weeks_of_month': {'key': 'weeksOfMonth', 'type': '[str]'},
        'day_of_month': {'key': 'dayOfMonth', 'type': 'int'},
        'start_date': {'key': 'startDate', 'type': 'iso-8601'},
        'end_date': {'key': 'endDate', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        frequency: Union[str, "_models.ScheduleFrequency"],
        start_date: datetime.datetime,
        end_date: datetime.datetime,
        hour_of_day: Optional[int] = None,
        days_of_week: Optional[List[Union[str, "_models.DaysOfWeek"]]] = None,
        weeks_of_month: Optional[List[Union[str, "_models.WeeksOfMonth"]]] = None,
        day_of_month: Optional[int] = None,
        **kwargs
    ):
        """
        :keyword frequency: Required. Frequency of the schedule. Known values are: "Daily", "Weekly",
         "Monthly".
        :paramtype frequency: str or ~azure.mgmt.costmanagement.models.ScheduleFrequency
        :keyword hour_of_day: UTC time at which cost analysis data will be emailed.
        :paramtype hour_of_day: int
        :keyword days_of_week: Day names in english on which cost analysis data will be emailed. This
         property is applicable when frequency is Weekly or Monthly.
        :paramtype days_of_week: list[str or ~azure.mgmt.costmanagement.models.DaysOfWeek]
        :keyword weeks_of_month: Weeks in which cost analysis data will be emailed. This property is
         applicable when frequency is Monthly and used in combination with daysOfWeek.
        :paramtype weeks_of_month: list[str or ~azure.mgmt.costmanagement.models.WeeksOfMonth]
        :keyword day_of_month: UTC day on which cost analysis data will be emailed. Must be between 1
         and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or
         daysOfWeek.
        :paramtype day_of_month: int
        :keyword start_date: Required. The start date and time of the scheduled action (UTC).
        :paramtype start_date: ~datetime.datetime
        :keyword end_date: Required. The end date and time of the scheduled action (UTC).
        :paramtype end_date: ~datetime.datetime
        """
        super(ScheduleProperties, self).__init__(**kwargs)
        self.frequency = frequency
        self.hour_of_day = hour_of_day
        self.days_of_week = days_of_week
        self.weeks_of_month = weeks_of_month
        self.day_of_month = day_of_month
        self.start_date = start_date
        self.end_date = end_date


class SystemData(msrest.serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", "Key".
    :vartype created_by_type: str or ~azure.mgmt.costmanagement.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.costmanagement.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_by_type': {'key': 'createdByType', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'str'},
        'last_modified_by_type': {'key': 'lastModifiedByType', 'type': 'str'},
        'last_modified_at': {'key': 'lastModifiedAt', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", "Key".
        :paramtype created_by_type: str or ~azure.mgmt.costmanagement.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.costmanagement.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super(SystemData, self).__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
