# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class BenefitKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Kind/type of the benefit."""

    #: Benefit is IncludedQuantity.
    INCLUDED_QUANTITY = "IncludedQuantity"
    #: Benefit is Reservation.
    RESERVATION = "Reservation"
    #: Benefit is SavingsPlan.
    SAVINGS_PLAN = "SavingsPlan"


class CheckNameAvailabilityReason(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The reason why the given name is not available."""

    INVALID = "Invalid"
    ALREADY_EXISTS = "AlreadyExists"


class CostDetailsDataFormat(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The data format of the report."""

    #: Csv data format.
    CSV_COST_DETAILS_DATA_FORMAT = "Csv"


class CostDetailsMetricType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the detailed report. By default ActualCost is provided."""

    #: Actual cost data.
    ACTUAL_COST_COST_DETAILS_METRIC_TYPE = "ActualCost"
    #: Amortized cost data.
    AMORTIZED_COST_COST_DETAILS_METRIC_TYPE = "AmortizedCost"


class CostDetailsStatusType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the cost details operation."""

    #: Operation is Completed.
    COMPLETED_COST_DETAILS_STATUS_TYPE = "Completed"
    #: Operation is Completed and no cost data found.
    NO_DATA_FOUND_COST_DETAILS_STATUS_TYPE = "NoDataFound"
    #: Operation Failed.
    FAILED_COST_DETAILS_STATUS_TYPE = "Failed"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class DaysOfWeek(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Days of Week."""

    MONDAY = "Monday"
    TUESDAY = "Tuesday"
    WEDNESDAY = "Wednesday"
    THURSDAY = "Thursday"
    FRIDAY = "Friday"
    SATURDAY = "Saturday"
    SUNDAY = "Sunday"


class FileFormat(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Destination of the view data. Currently only CSV format is supported."""

    CSV = "Csv"


class Grain(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Grain which corresponds to value."""

    #: Hourly grain corresponds to value per hour.
    HOURLY = "Hourly"
    #: Hourly grain corresponds to value per day.
    DAILY = "Daily"
    #: Hourly grain corresponds to value per month.
    MONTHLY = "Monthly"


class GrainParameter(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """GrainParameter."""

    #: Hourly grain corresponds to value per hour.
    HOURLY = "Hourly"
    #: Hourly grain corresponds to value per day.
    DAILY = "Daily"
    #: Hourly grain corresponds to value per month.
    MONTHLY = "Monthly"


class LookBackPeriod(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The number of days used to look back."""

    #: 7 days used to look back.
    LAST7_DAYS = "Last7Days"
    #: 30 days used to look back.
    LAST30_DAYS = "Last30Days"
    #: 60 days used to look back.
    LAST60_DAYS = "Last60Days"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class ScheduledActionKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Kind of the scheduled action."""

    #: Cost analysis data will be emailed.
    EMAIL = "Email"
    #: Cost anomaly information will be emailed. Available only on subscription scope at daily
    #: frequency. If no anomaly is detected on the resource, an email won't be sent.
    INSIGHT_ALERT = "InsightAlert"


class ScheduledActionStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of the scheduled action."""

    #: Scheduled action is saved but will not be executed.
    DISABLED = "Disabled"
    #: Scheduled action is saved and will be executed.
    ENABLED = "Enabled"
    #: Scheduled action is expired.
    EXPIRED = "Expired"


class ScheduleFrequency(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Frequency of the schedule."""

    #: Cost analysis data will be emailed every day.
    DAILY = "Daily"
    #: Cost analysis data will be emailed every week.
    WEEKLY = "Weekly"
    #: Cost analysis data will be emailed every month.
    MONTHLY = "Monthly"


class Scope(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Kind of the recommendation scope."""

    #: Single scope recommendation.
    SINGLE = "Single"
    #: Shared scope recommendation.
    SHARED = "Shared"


class Term(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Grain which corresponds to value."""

    #: Benefit term is 1 year.
    P1_Y = "P1Y"
    #: Benefit term is 3 years.
    P3_Y = "P3Y"


class WeeksOfMonth(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Weeks of month."""

    FIRST = "First"
    SECOND = "Second"
    THIRD = "Third"
    FOURTH = "Fourth"
    LAST = "Last"
