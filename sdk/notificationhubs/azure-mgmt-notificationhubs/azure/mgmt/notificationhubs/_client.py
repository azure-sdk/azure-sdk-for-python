# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, Optional, TYPE_CHECKING, cast
from typing_extensions import Self

from azure.core.pipeline import policies
from azure.core.rest import HttpRequest, HttpResponse
from azure.core.settings import settings
from azure.mgmt.core import ARMPipelineClient
from azure.mgmt.core.policies import ARMAutoResourceProviderRegistrationPolicy
from azure.mgmt.core.tools import get_arm_endpoints

from ._configuration import NotificationHubsClientConfiguration
from ._utils.serialization import Deserializer, Serializer
from .operations import (
    NamespaceOpsOperations,
    NamespaceResourcesOperations,
    NamespacesOperationGroupOperations,
    NamespacesOperations,
    NotificationHubResourcesOperations,
    Operations,
    PrivateEndpointConnectionResourcesOperations,
    PrivateLinkResourcesOperations,
    SharedAccessAuthorizationRuleResourceOpsOperations,
    SharedAccessAuthorizationRuleResourcesOperations,
)

if TYPE_CHECKING:
    from azure.core.credentials import TokenCredential


class NotificationHubsClient:  # pylint: disable=too-many-instance-attributes
    """Microsoft Notification Hubs Resource Provider REST API.

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.notificationhubs.operations.Operations
    :ivar notification_hub_resources: NotificationHubResourcesOperations operations
    :vartype notification_hub_resources:
     azure.mgmt.notificationhubs.operations.NotificationHubResourcesOperations
    :ivar namespace_resources: NamespaceResourcesOperations operations
    :vartype namespace_resources:
     azure.mgmt.notificationhubs.operations.NamespaceResourcesOperations
    :ivar shared_access_authorization_rule_resource_ops:
     SharedAccessAuthorizationRuleResourceOpsOperations operations
    :vartype shared_access_authorization_rule_resource_ops:
     azure.mgmt.notificationhubs.operations.SharedAccessAuthorizationRuleResourceOpsOperations
    :ivar shared_access_authorization_rule_resources:
     SharedAccessAuthorizationRuleResourcesOperations operations
    :vartype shared_access_authorization_rule_resources:
     azure.mgmt.notificationhubs.operations.SharedAccessAuthorizationRuleResourcesOperations
    :ivar namespace_ops: NamespaceOpsOperations operations
    :vartype namespace_ops: azure.mgmt.notificationhubs.operations.NamespaceOpsOperations
    :ivar namespaces: NamespacesOperations operations
    :vartype namespaces: azure.mgmt.notificationhubs.operations.NamespacesOperations
    :ivar private_endpoint_connection_resources: PrivateEndpointConnectionResourcesOperations
     operations
    :vartype private_endpoint_connection_resources:
     azure.mgmt.notificationhubs.operations.PrivateEndpointConnectionResourcesOperations
    :ivar private_link_resources: PrivateLinkResourcesOperations operations
    :vartype private_link_resources:
     azure.mgmt.notificationhubs.operations.PrivateLinkResourcesOperations
    :ivar namespaces_operation_group: NamespacesOperationGroupOperations operations
    :vartype namespaces_operation_group:
     azure.mgmt.notificationhubs.operations.NamespacesOperationGroupOperations
    :param credential: Credential used to authenticate requests to the service. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The ID of the target subscription. The value must be an UUID. Required.
    :type subscription_id: str
    :param base_url: Service host. Default value is None.
    :type base_url: str
    :keyword api_version: The API version to use for this operation. Default value is
     "2023-10-01-preview". Note that overriding this default value may result in unsupported
     behavior.
    :paramtype api_version: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(
        self, credential: "TokenCredential", subscription_id: str, base_url: Optional[str] = None, **kwargs: Any
    ) -> None:
        _endpoint = "{endpoint}"
        _cloud = kwargs.pop("cloud_setting", None) or settings.current.azure_cloud  # type: ignore
        _endpoints = get_arm_endpoints(_cloud)
        if not base_url:
            base_url = _endpoints["resource_manager"]
        credential_scopes = kwargs.pop("credential_scopes", _endpoints["credential_scopes"])
        self._config = NotificationHubsClientConfiguration(
            credential=credential,
            subscription_id=subscription_id,
            base_url=cast(str, base_url),
            credential_scopes=credential_scopes,
            **kwargs
        )

        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                ARMAutoResourceProviderRegistrationPolicy(),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.DistributedTracingPolicy(**kwargs),
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: ARMPipelineClient = ARMPipelineClient(base_url=cast(str, _endpoint), policies=_policies, **kwargs)

        self._serialize = Serializer()
        self._deserialize = Deserializer()
        self._serialize.client_side_validation = False
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.notification_hub_resources = NotificationHubResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.namespace_resources = NamespaceResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.shared_access_authorization_rule_resource_ops = SharedAccessAuthorizationRuleResourceOpsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.shared_access_authorization_rule_resources = SharedAccessAuthorizationRuleResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.namespace_ops = NamespaceOpsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.namespaces = NamespacesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.private_endpoint_connection_resources = PrivateEndpointConnectionResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.private_link_resources = PrivateLinkResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.namespaces_operation_group = NamespacesOperationGroupOperations(
            self._client, self._config, self._serialize, self._deserialize
        )

    def send_request(self, request: HttpRequest, *, stream: bool = False, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client.send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.base_url", self._config.base_url, "str", skip_quote=True),
        }

        request_copy.url = self._client.format_url(request_copy.url, **path_format_arguments)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> Self:
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
