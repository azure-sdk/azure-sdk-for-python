# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._operations import NotificationHubResourcesOperations  # type: ignore
from ._operations import NamespaceResourcesOperations  # type: ignore
from ._operations import SharedAccessAuthorizationRuleResourceOpsOperations  # type: ignore
from ._operations import SharedAccessAuthorizationRuleResourcesOperations  # type: ignore
from ._operations import NamespaceOpsOperations  # type: ignore
from ._operations import NamespacesOperations  # type: ignore
from ._operations import PrivateEndpointConnectionResourcesOperations  # type: ignore
from ._operations import PrivateLinkResourcesOperations  # type: ignore
from ._operations import NamespacesOperationGroupOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "NotificationHubResourcesOperations",
    "NamespaceResourcesOperations",
    "SharedAccessAuthorizationRuleResourceOpsOperations",
    "SharedAccessAuthorizationRuleResourcesOperations",
    "NamespaceOpsOperations",
    "NamespacesOperations",
    "PrivateEndpointConnectionResourcesOperations",
    "PrivateLinkResourcesOperations",
    "NamespacesOperationGroupOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
