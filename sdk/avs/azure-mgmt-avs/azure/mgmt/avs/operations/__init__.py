# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._operations import AddonsOperations  # type: ignore
from ._operations import AuthorizationsOperations  # type: ignore
from ._operations import CloudLinksOperations  # type: ignore
from ._operations import ClustersOperations  # type: ignore
from ._operations import DatastoresOperations  # type: ignore
from ._operations import GlobalReachConnectionsOperations  # type: ignore
from ._operations import HcxEnterpriseSitesOperations  # type: ignore
from ._operations import HostsOperations  # type: ignore
from ._operations import IscsiPathsOperations  # type: ignore
from ._operations import LocationsOperations  # type: ignore
from ._operations import MaintenancesOperations  # type: ignore
from ._operations import PlacementPoliciesOperations  # type: ignore
from ._operations import PrivateCloudsOperations  # type: ignore
from ._operations import ProvisionedNetworksOperations  # type: ignore
from ._operations import PureStoragePoliciesOperations  # type: ignore
from ._operations import ScriptCmdletsOperations  # type: ignore
from ._operations import ScriptExecutionsOperations  # type: ignore
from ._operations import ScriptPackagesOperations  # type: ignore
from ._operations import SkusOperations  # type: ignore
from ._operations import VirtualMachinesOperations  # type: ignore
from ._operations import WorkloadNetworkDhcpConfigurationsOperations  # type: ignore
from ._operations import WorkloadNetworkDnsServicesOperations  # type: ignore
from ._operations import WorkloadNetworkDnsZonesOperations  # type: ignore
from ._operations import WorkloadNetworkGatewaysOperations  # type: ignore
from ._operations import WorkloadNetworkPortMirroringProfilesOperations  # type: ignore
from ._operations import WorkloadNetworkPublicIpsOperations  # type: ignore
from ._operations import WorkloadNetworkSegmentsOperations  # type: ignore
from ._operations import WorkloadNetworkVirtualMachinesOperations  # type: ignore
from ._operations import WorkloadNetworkVmGroupsOperations  # type: ignore
from ._operations import WorkloadNetworksOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "AddonsOperations",
    "AuthorizationsOperations",
    "CloudLinksOperations",
    "ClustersOperations",
    "DatastoresOperations",
    "GlobalReachConnectionsOperations",
    "HcxEnterpriseSitesOperations",
    "HostsOperations",
    "IscsiPathsOperations",
    "LocationsOperations",
    "MaintenancesOperations",
    "PlacementPoliciesOperations",
    "PrivateCloudsOperations",
    "ProvisionedNetworksOperations",
    "PureStoragePoliciesOperations",
    "ScriptCmdletsOperations",
    "ScriptExecutionsOperations",
    "ScriptPackagesOperations",
    "SkusOperations",
    "VirtualMachinesOperations",
    "WorkloadNetworkDhcpConfigurationsOperations",
    "WorkloadNetworkDnsServicesOperations",
    "WorkloadNetworkDnsZonesOperations",
    "WorkloadNetworkGatewaysOperations",
    "WorkloadNetworkPortMirroringProfilesOperations",
    "WorkloadNetworkPublicIpsOperations",
    "WorkloadNetworkSegmentsOperations",
    "WorkloadNetworkVirtualMachinesOperations",
    "WorkloadNetworkVmGroupsOperations",
    "WorkloadNetworksOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
