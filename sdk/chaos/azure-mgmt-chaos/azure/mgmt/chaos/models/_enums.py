# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal
    only APIs.
    """

    INTERNAL = "Internal"
    """Actions are for internal-only APIs."""


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The kind of entity that created the resource."""

    USER = "User"
    """The entity was created by a user."""
    APPLICATION = "Application"
    """The entity was created by an application."""
    MANAGED_IDENTITY = "ManagedIdentity"
    """The entity was created by a managed identity."""
    KEY = "Key"
    """The entity was created by a key."""


class ExperimentActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum union of Chaos experiment action types."""

    DELAY = "delay"
    DISCRETE = "discrete"
    CONTINUOUS = "continuous"


class FilterType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum that discriminates between filter types. Currently only ``Simple`` type is supported."""

    SIMPLE = "Simple"
    """Simple filter type."""


class ManagedServiceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    """No managed identity."""
    SYSTEM_ASSIGNED = "SystemAssigned"
    """System assigned managed identity."""
    USER_ASSIGNED = "UserAssigned"
    """User assigned managed identity."""
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"
    """System and user assigned managed identity."""


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    """Indicates the operation is initiated by a user."""
    SYSTEM = "system"
    """Indicates the operation is initiated by a system."""
    USER_SYSTEM = "user,system"
    """Indicates the operation is initiated by a user or system."""


class PrivateEndpointServiceConnectionStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The private endpoint connection status."""

    PENDING = "Pending"
    """Pending status."""
    APPROVED = "Approved"
    """Approved status."""
    REJECTED = "Rejected"
    """Rejected status."""


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Current provisioning state for a given Azure Chaos resource."""

    SUCCEEDED = "Succeeded"
    """Resource has been created."""
    FAILED = "Failed"
    """Resource creation failed."""
    CANCELED = "Canceled"
    """Resource creation was canceled."""
    CREATING = "Creating"
    """Initial creation in progress."""
    UPDATING = "Updating"
    """Update in progress."""
    DELETING = "Deleting"
    """Deletion in progress."""


class PublicNetworkAccessOption(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Public Network Access Control for PrivateAccess resource."""

    ENABLED = "Enabled"
    """Enabled access."""
    DISABLED = "Disabled"
    """Disabled access."""


class SelectorType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum of the selector type."""

    LIST = "List"
    """List selector type."""
    QUERY = "Query"
    """Query selector type."""


class TargetReferenceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum of the Target reference type."""

    CHAOS_TARGET = "ChaosTarget"
    """Chaos target reference type."""
