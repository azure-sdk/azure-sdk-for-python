# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Literal, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CheckNameAvailabilityRequest(_serialization.Model):
    """Management group name availability check parameters.

    :ivar name: the name to check for availability.
    :vartype name: str
    :ivar type: fully qualified resource type which includes provider namespace. Default value is
     "Microsoft.Management/managementGroups".
    :vartype type: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        type: Optional[Literal["Microsoft.Management/managementGroups"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: the name to check for availability.
        :paramtype name: str
        :keyword type: fully qualified resource type which includes provider namespace. Default value
         is "Microsoft.Management/managementGroups".
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.type = type


class CheckNameAvailabilityResult(_serialization.Model):
    """Describes the result of the request to check management group name availability.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name_available: Required. True indicates name is valid and available. False indicates the
     name is invalid, unavailable, or both.
    :vartype name_available: bool
    :ivar reason: Required if nameAvailable == false. Invalid indicates the name provided does not
     match the resource provider's naming requirements (incorrect length, unsupported characters,
     etc.) AlreadyExists indicates that the name is already in use and is therefore unavailable.
     Known values are: "Invalid" and "AlreadyExists".
    :vartype reason: str or ~azure.mgmt.managementgroups.models.Reason
    :ivar message: Required if nameAvailable == false. Localized. If reason == invalid, provide the
     user with the reason why the given name is invalid, and provide the resource naming
     requirements so that the user can select a valid name. If reason == AlreadyExists, explain that
     is already in use, and direct them to select a different name.
    :vartype message: str
    """

    _validation = {
        "name_available": {"readonly": True},
        "reason": {"readonly": True},
        "message": {"readonly": True},
    }

    _attribute_map = {
        "name_available": {"key": "nameAvailable", "type": "bool"},
        "reason": {"key": "reason", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name_available = None
        self.reason = None
        self.message = None


class CreateOrUpdateSettingsProperties(_serialization.Model):
    """The properties of the request to create or update Management Group settings.

    :ivar require_authorization_for_group_creation: Indicates whether RBAC access is required upon
     group creation under the root Management Group. If set to true, user will require
     Microsoft.Management/managementGroups/write action on the root Management Group scope in order
     to create new Groups directly under the root. This will prevent new users from creating new
     Management Groups, unless they are given access.
    :vartype require_authorization_for_group_creation: bool
    :ivar default_management_group: Settings that sets the default Management Group under which new
     subscriptions get added in this tenant. For example,
     /providers/Microsoft.Management/managementGroups/defaultGroup.
    :vartype default_management_group: str
    """

    _attribute_map = {
        "require_authorization_for_group_creation": {"key": "requireAuthorizationForGroupCreation", "type": "bool"},
        "default_management_group": {"key": "defaultManagementGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        require_authorization_for_group_creation: Optional[bool] = None,
        default_management_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword require_authorization_for_group_creation: Indicates whether RBAC access is required
         upon group creation under the root Management Group. If set to true, user will require
         Microsoft.Management/managementGroups/write action on the root Management Group scope in order
         to create new Groups directly under the root. This will prevent new users from creating new
         Management Groups, unless they are given access.
        :paramtype require_authorization_for_group_creation: bool
        :keyword default_management_group: Settings that sets the default Management Group under which
         new subscriptions get added in this tenant. For example,
         /providers/Microsoft.Management/managementGroups/defaultGroup.
        :paramtype default_management_group: str
        """
        super().__init__(**kwargs)
        self.require_authorization_for_group_creation = require_authorization_for_group_creation
        self.default_management_group = default_management_group


class CreateOrUpdateSettingsRequest(_serialization.Model):
    """Parameters for creating or updating Management Group settings.

    :ivar properties: The properties of the request to create or update Management Group settings.
    :vartype properties: ~azure.mgmt.managementgroups.models.CreateOrUpdateSettingsProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "CreateOrUpdateSettingsProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.CreateOrUpdateSettingsProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The properties of the request to create or update Management Group
         settings.
        :paramtype properties: ~azure.mgmt.managementgroups.models.CreateOrUpdateSettingsProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class DescendantInfo(_serialization.Model):
    """The descendant.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The fully qualified ID for the descendant.  For example,
     /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000 or
     /subscriptions/0000000-0000-0000-0000-000000000000.
    :vartype id: str
    :ivar type: The type of the resource. For example, Microsoft.Management/managementGroups or
     /subscriptions.
    :vartype type: str
    :ivar name: The name of the descendant. For example, 00000000-0000-0000-0000-000000000000.
    :vartype name: str
    :ivar properties: The generic properties of an descendant.
    :vartype properties: ~azure.mgmt.managementgroups.models.DescendantInfoProperties
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "properties": {"key": "properties", "type": "DescendantInfoProperties"},
    }

    def __init__(self, *, properties: Optional["_models.DescendantInfoProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The generic properties of an descendant.
        :paramtype properties: ~azure.mgmt.managementgroups.models.DescendantInfoProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.type = None
        self.name = None
        self.properties = properties


class DescendantInfoProperties(_serialization.Model):
    """The generic properties of an descendant.

    :ivar display_name: The friendly name of the management group.
    :vartype display_name: str
    :ivar parent: The ID of the parent management group.
    :vartype parent: ~azure.mgmt.managementgroups.models.DescendantParentGroupInfo
    """

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "parent": {"key": "parent", "type": "DescendantParentGroupInfo"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        parent: Optional["_models.DescendantParentGroupInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The friendly name of the management group.
        :paramtype display_name: str
        :keyword parent: The ID of the parent management group.
        :paramtype parent: ~azure.mgmt.managementgroups.models.DescendantParentGroupInfo
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.parent = parent


class DescendantListResult(_serialization.Model):
    """Describes the result of the request to view descendants.

    All required parameters must be populated in order to send to server.

    :ivar value: The DescendantInfo items on this page. Required.
    :vartype value: list[~azure.mgmt.managementgroups.models.DescendantInfo]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[DescendantInfo]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.DescendantInfo"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The DescendantInfo items on this page. Required.
        :paramtype value: list[~azure.mgmt.managementgroups.models.DescendantInfo]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DescendantParentGroupInfo(_serialization.Model):
    """The ID of the parent management group.

    :ivar id: The fully qualified ID for the parent management group.  For example,
     /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The fully qualified ID for the parent management group.  For example,
         /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class EntityInfo(_serialization.Model):
    """The entity.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The fully qualified ID for the entity.  For example,
     /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
    :vartype id: str
    :ivar type: The type of the resource. For example, Microsoft.Management/managementGroups.
    :vartype type: str
    :ivar name: The name of the entity. For example, 00000000-0000-0000-0000-000000000000.
    :vartype name: str
    :ivar properties: The generic properties of an entity.
    :vartype properties: ~azure.mgmt.managementgroups.models.EntityInfoProperties
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "properties": {"key": "properties", "type": "EntityInfoProperties"},
    }

    def __init__(self, *, properties: Optional["_models.EntityInfoProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The generic properties of an entity.
        :paramtype properties: ~azure.mgmt.managementgroups.models.EntityInfoProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.type = None
        self.name = None
        self.properties = properties


class EntityInfoProperties(_serialization.Model):
    """The generic properties of an entity.

    :ivar tenant_id: The AAD Tenant ID associated with the entity. For example,
     00000000-0000-0000-0000-000000000000.
    :vartype tenant_id: str
    :ivar display_name: The friendly name of the management group.
    :vartype display_name: str
    :ivar parent: (Optional) The ID of the parent management group.
    :vartype parent: ~azure.mgmt.managementgroups.models.EntityParentGroupInfo
    :ivar permissions: The users specific permissions to this item. Known values are: "noaccess",
     "view", "edit", and "delete".
    :vartype permissions: str or ~azure.mgmt.managementgroups.models.Permissions
    :ivar inherited_permissions: The users specific permissions to this item. Known values are:
     "noaccess", "view", "edit", and "delete".
    :vartype inherited_permissions: str or ~azure.mgmt.managementgroups.models.Permissions
    :ivar number_of_descendants: Number of Descendants.
    :vartype number_of_descendants: int
    :ivar number_of_children: Number of children is the number of Groups and Subscriptions that are
     exactly one level underneath the current Group.
    :vartype number_of_children: int
    :ivar number_of_child_groups: Number of children is the number of Groups that are exactly one
     level underneath the current Group.
    :vartype number_of_child_groups: int
    :ivar parent_display_name_chain: The parent display name chain from the root group to the
     immediate parent.
    :vartype parent_display_name_chain: list[str]
    :ivar parent_name_chain: The parent name chain from the root group to the immediate parent.
    :vartype parent_name_chain: list[str]
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "parent": {"key": "parent", "type": "EntityParentGroupInfo"},
        "permissions": {"key": "permissions", "type": "str"},
        "inherited_permissions": {"key": "inheritedPermissions", "type": "str"},
        "number_of_descendants": {"key": "numberOfDescendants", "type": "int"},
        "number_of_children": {"key": "numberOfChildren", "type": "int"},
        "number_of_child_groups": {"key": "numberOfChildGroups", "type": "int"},
        "parent_display_name_chain": {"key": "parentDisplayNameChain", "type": "[str]"},
        "parent_name_chain": {"key": "parentNameChain", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        display_name: Optional[str] = None,
        parent: Optional["_models.EntityParentGroupInfo"] = None,
        permissions: Optional[Union[str, "_models.Permissions"]] = None,
        inherited_permissions: Optional[Union[str, "_models.Permissions"]] = None,
        number_of_descendants: Optional[int] = None,
        number_of_children: Optional[int] = None,
        number_of_child_groups: Optional[int] = None,
        parent_display_name_chain: Optional[List[str]] = None,
        parent_name_chain: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: The AAD Tenant ID associated with the entity. For example,
         00000000-0000-0000-0000-000000000000.
        :paramtype tenant_id: str
        :keyword display_name: The friendly name of the management group.
        :paramtype display_name: str
        :keyword parent: (Optional) The ID of the parent management group.
        :paramtype parent: ~azure.mgmt.managementgroups.models.EntityParentGroupInfo
        :keyword permissions: The users specific permissions to this item. Known values are:
         "noaccess", "view", "edit", and "delete".
        :paramtype permissions: str or ~azure.mgmt.managementgroups.models.Permissions
        :keyword inherited_permissions: The users specific permissions to this item. Known values are:
         "noaccess", "view", "edit", and "delete".
        :paramtype inherited_permissions: str or ~azure.mgmt.managementgroups.models.Permissions
        :keyword number_of_descendants: Number of Descendants.
        :paramtype number_of_descendants: int
        :keyword number_of_children: Number of children is the number of Groups and Subscriptions that
         are exactly one level underneath the current Group.
        :paramtype number_of_children: int
        :keyword number_of_child_groups: Number of children is the number of Groups that are exactly
         one level underneath the current Group.
        :paramtype number_of_child_groups: int
        :keyword parent_display_name_chain: The parent display name chain from the root group to the
         immediate parent.
        :paramtype parent_display_name_chain: list[str]
        :keyword parent_name_chain: The parent name chain from the root group to the immediate parent.
        :paramtype parent_name_chain: list[str]
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.display_name = display_name
        self.parent = parent
        self.permissions = permissions
        self.inherited_permissions = inherited_permissions
        self.number_of_descendants = number_of_descendants
        self.number_of_children = number_of_children
        self.number_of_child_groups = number_of_child_groups
        self.parent_display_name_chain = parent_display_name_chain
        self.parent_name_chain = parent_name_chain


class EntityListResult(_serialization.Model):
    """Describes the result of the request to view entities.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar value: The EntityInfo items on this page. Required.
    :vartype value: list[~azure.mgmt.managementgroups.models.EntityInfo]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    :ivar count: Total count of records that match the filter.
    :vartype count: int
    """

    _validation = {
        "value": {"required": True},
        "count": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[EntityInfo]"},
        "next_link": {"key": "nextLink", "type": "str"},
        "count": {"key": "count", "type": "int"},
    }

    def __init__(self, *, value: List["_models.EntityInfo"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The EntityInfo items on this page. Required.
        :paramtype value: list[~azure.mgmt.managementgroups.models.EntityInfo]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link
        self.count = None


class EntityParentGroupInfo(_serialization.Model):
    """(Optional) The ID of the parent management group.

    :ivar id: The fully qualified ID for the parent management group.  For example,
     /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The fully qualified ID for the parent management group.  For example,
         /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.managementgroups.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.managementgroups.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.managementgroups.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.managementgroups.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.managementgroups.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.managementgroups.models.SystemData
    """


class HierarchySettings(ProxyResource):
    """Settings defined at the Management Group scope.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.managementgroups.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.managementgroups.models.HierarchySettingsProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "HierarchySettingsProperties"},
    }

    def __init__(self, *, properties: Optional["_models.HierarchySettingsProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.managementgroups.models.HierarchySettingsProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HierarchySettingsListResult(_serialization.Model):
    """The response of a HierarchySettings list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HierarchySettings items on this page. Required.
    :vartype value: list[~azure.mgmt.managementgroups.models.HierarchySettings]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HierarchySettings]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.HierarchySettings"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The HierarchySettings items on this page. Required.
        :paramtype value: list[~azure.mgmt.managementgroups.models.HierarchySettings]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HierarchySettingsProperties(_serialization.Model):
    """The generic properties of hierarchy settings.

    :ivar tenant_id: The AAD Tenant ID associated with the hierarchy settings. For example,
     00000000-0000-0000-0000-000000000000.
    :vartype tenant_id: str
    :ivar require_authorization_for_group_creation: Indicates whether RBAC access is required upon
     group creation under the root Management Group. If set to true, user will require
     Microsoft.Management/managementGroups/write action on the root Management Group scope in order
     to create new Groups directly under the root. This will prevent new users from creating new
     Management Groups, unless they are given access.
    :vartype require_authorization_for_group_creation: bool
    :ivar default_management_group: Settings that sets the default Management Group under which new
     subscriptions get added in this tenant. For example,
     /providers/Microsoft.Management/managementGroups/defaultGroup.
    :vartype default_management_group: str
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "require_authorization_for_group_creation": {"key": "requireAuthorizationForGroupCreation", "type": "bool"},
        "default_management_group": {"key": "defaultManagementGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        require_authorization_for_group_creation: Optional[bool] = None,
        default_management_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: The AAD Tenant ID associated with the hierarchy settings. For example,
         00000000-0000-0000-0000-000000000000.
        :paramtype tenant_id: str
        :keyword require_authorization_for_group_creation: Indicates whether RBAC access is required
         upon group creation under the root Management Group. If set to true, user will require
         Microsoft.Management/managementGroups/write action on the root Management Group scope in order
         to create new Groups directly under the root. This will prevent new users from creating new
         Management Groups, unless they are given access.
        :paramtype require_authorization_for_group_creation: bool
        :keyword default_management_group: Settings that sets the default Management Group under which
         new subscriptions get added in this tenant. For example,
         /providers/Microsoft.Management/managementGroups/defaultGroup.
        :paramtype default_management_group: str
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.require_authorization_for_group_creation = require_authorization_for_group_creation
        self.default_management_group = default_management_group


class ManagementGroup(ProxyResource):
    """The management group details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.managementgroups.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.managementgroups.models.ManagementGroupProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ManagementGroupProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ManagementGroupProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.managementgroups.models.ManagementGroupProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ManagementGroupChildInfo(_serialization.Model):
    """The child information of a management group.

    :ivar type: The fully qualified resource type which includes provider namespace (e.g.
     Microsoft.Management/managementGroups). Known values are:
     "Microsoft.Management/managementGroups" and "/subscriptions".
    :vartype type: str or ~azure.mgmt.managementgroups.models.ManagementGroupChildType
    :ivar id: The fully qualified ID for the child resource (management group or subscription).
     For example,
     /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
    :vartype id: str
    :ivar name: The name of the child entity.
    :vartype name: str
    :ivar display_name: The friendly name of the child resource.
    :vartype display_name: str
    :ivar children: The list of children.
    :vartype children: list[~azure.mgmt.managementgroups.models.ManagementGroupChildInfo]
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "children": {"key": "children", "type": "[ManagementGroupChildInfo]"},
    }

    def __init__(
        self,
        *,
        type: Optional[Union[str, "_models.ManagementGroupChildType"]] = None,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        display_name: Optional[str] = None,
        children: Optional[List["_models.ManagementGroupChildInfo"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: The fully qualified resource type which includes provider namespace (e.g.
         Microsoft.Management/managementGroups). Known values are:
         "Microsoft.Management/managementGroups" and "/subscriptions".
        :paramtype type: str or ~azure.mgmt.managementgroups.models.ManagementGroupChildType
        :keyword id: The fully qualified ID for the child resource (management group or subscription).
         For example,
         /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
        :paramtype id: str
        :keyword name: The name of the child entity.
        :paramtype name: str
        :keyword display_name: The friendly name of the child resource.
        :paramtype display_name: str
        :keyword children: The list of children.
        :paramtype children: list[~azure.mgmt.managementgroups.models.ManagementGroupChildInfo]
        """
        super().__init__(**kwargs)
        self.type = type
        self.id = id
        self.name = name
        self.display_name = display_name
        self.children = children


class ManagementGroupDetails(_serialization.Model):
    """The details of a management group.

    :ivar version: The version number of the object.
    :vartype version: int
    :ivar updated_time: The date and time when this object was last updated.
    :vartype updated_time: ~datetime.datetime
    :ivar updated_by: The identity of the principal or process that updated the object.
    :vartype updated_by: str
    :ivar parent: (Optional) The ID of the parent management group.
    :vartype parent: ~azure.mgmt.managementgroups.models.ParentGroupInfo
    :ivar path: The path from the root to the current group.
    :vartype path: list[~azure.mgmt.managementgroups.models.ManagementGroupPathElement]
    :ivar management_group_ancestors: The ancestors of the management group.
    :vartype management_group_ancestors: list[str]
    :ivar management_group_ancestors_chain: The ancestors of the management group displayed in
     reversed order, from immediate parent to the root.
    :vartype management_group_ancestors_chain:
     list[~azure.mgmt.managementgroups.models.ManagementGroupPathElement]
    """

    _attribute_map = {
        "version": {"key": "version", "type": "int"},
        "updated_time": {"key": "updatedTime", "type": "iso-8601"},
        "updated_by": {"key": "updatedBy", "type": "str"},
        "parent": {"key": "parent", "type": "ParentGroupInfo"},
        "path": {"key": "path", "type": "[ManagementGroupPathElement]"},
        "management_group_ancestors": {"key": "managementGroupAncestors", "type": "[str]"},
        "management_group_ancestors_chain": {
            "key": "managementGroupAncestorsChain",
            "type": "[ManagementGroupPathElement]",
        },
    }

    def __init__(
        self,
        *,
        version: Optional[int] = None,
        updated_time: Optional[datetime.datetime] = None,
        updated_by: Optional[str] = None,
        parent: Optional["_models.ParentGroupInfo"] = None,
        path: Optional[List["_models.ManagementGroupPathElement"]] = None,
        management_group_ancestors: Optional[List[str]] = None,
        management_group_ancestors_chain: Optional[List["_models.ManagementGroupPathElement"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword version: The version number of the object.
        :paramtype version: int
        :keyword updated_time: The date and time when this object was last updated.
        :paramtype updated_time: ~datetime.datetime
        :keyword updated_by: The identity of the principal or process that updated the object.
        :paramtype updated_by: str
        :keyword parent: (Optional) The ID of the parent management group.
        :paramtype parent: ~azure.mgmt.managementgroups.models.ParentGroupInfo
        :keyword path: The path from the root to the current group.
        :paramtype path: list[~azure.mgmt.managementgroups.models.ManagementGroupPathElement]
        :keyword management_group_ancestors: The ancestors of the management group.
        :paramtype management_group_ancestors: list[str]
        :keyword management_group_ancestors_chain: The ancestors of the management group displayed in
         reversed order, from immediate parent to the root.
        :paramtype management_group_ancestors_chain:
         list[~azure.mgmt.managementgroups.models.ManagementGroupPathElement]
        """
        super().__init__(**kwargs)
        self.version = version
        self.updated_time = updated_time
        self.updated_by = updated_by
        self.parent = parent
        self.path = path
        self.management_group_ancestors = management_group_ancestors
        self.management_group_ancestors_chain = management_group_ancestors_chain


class ManagementGroupListResult(_serialization.Model):
    """The response of a ManagementGroup list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The ManagementGroup items on this page. Required.
    :vartype value: list[~azure.mgmt.managementgroups.models.ManagementGroup]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ManagementGroup]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ManagementGroup"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ManagementGroup items on this page. Required.
        :paramtype value: list[~azure.mgmt.managementgroups.models.ManagementGroup]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ManagementGroupOperationAcceptance(_serialization.Model):
    """The management group operation acceptance details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The id of the resource.  For example,
     /providers/Microsoft.Management/managementGroups/Group1.
    :vartype id: str
    :ivar type: The type of the resource.  For example, Microsoft.Management/managementGroups.
    :vartype type: str
    :ivar name: The name of the resource.  For example, Group1.
    :vartype name: str
    :ivar status: The operation status. For example, NotStarted.
    :vartype status: str
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.type = None
        self.name = None
        self.status = None


class ManagementGroupPathElement(_serialization.Model):
    """A path element of a management group ancestors.

    :ivar name: The name of the group.
    :vartype name: str
    :ivar display_name: The friendly name of the group.
    :vartype display_name: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, display_name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: The name of the group.
        :paramtype name: str
        :keyword display_name: The friendly name of the group.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.display_name = display_name


class ManagementGroupProperties(_serialization.Model):
    """The generic properties of a management group.

    :ivar tenant_id: The AAD Tenant ID associated with the management group. For example,
     00000000-0000-0000-0000-000000000000.
    :vartype tenant_id: str
    :ivar display_name: The friendly name of the management group.
    :vartype display_name: str
    :ivar details: The details of a management group.
    :vartype details: ~azure.mgmt.managementgroups.models.ManagementGroupDetails
    :ivar children: The list of children.
    :vartype children: list[~azure.mgmt.managementgroups.models.ManagementGroupChildInfo]
    """

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "details": {"key": "details", "type": "ManagementGroupDetails"},
        "children": {"key": "children", "type": "[ManagementGroupChildInfo]"},
    }

    def __init__(
        self,
        *,
        tenant_id: Optional[str] = None,
        display_name: Optional[str] = None,
        details: Optional["_models.ManagementGroupDetails"] = None,
        children: Optional[List["_models.ManagementGroupChildInfo"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant_id: The AAD Tenant ID associated with the management group. For example,
         00000000-0000-0000-0000-000000000000.
        :paramtype tenant_id: str
        :keyword display_name: The friendly name of the management group.
        :paramtype display_name: str
        :keyword details: The details of a management group.
        :paramtype details: ~azure.mgmt.managementgroups.models.ManagementGroupDetails
        :keyword children: The list of children.
        :paramtype children: list[~azure.mgmt.managementgroups.models.ManagementGroupChildInfo]
        """
        super().__init__(**kwargs)
        self.tenant_id = tenant_id
        self.display_name = display_name
        self.details = details
        self.children = children


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.managementgroups.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.managementgroups.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.managementgroups.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.managementgroups.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.managementgroups.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class ParentGroupInfo(_serialization.Model):
    """(Optional) The ID of the parent management group.

    :ivar id: The fully qualified ID for the parent management group.  For example,
     /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
    :vartype id: str
    :ivar name: The name of the parent management group.
    :vartype name: str
    :ivar display_name: The friendly name of the parent management group.
    :vartype display_name: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        name: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: The fully qualified ID for the parent management group.  For example,
         /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
        :paramtype id: str
        :keyword name: The name of the parent management group.
        :paramtype name: str
        :keyword display_name: The friendly name of the parent management group.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = name
        self.display_name = display_name


class PatchManagementGroupRequest(_serialization.Model):
    """Management group patch parameters.

    :ivar display_name: The friendly name of the management group.
    :vartype display_name: str
    :ivar parent_group_id: (Optional) The fully qualified ID for the parent management group.  For
     example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
    :vartype parent_group_id: str
    """

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "parent_group_id": {"key": "parentGroupId", "type": "str"},
    }

    def __init__(
        self, *, display_name: Optional[str] = None, parent_group_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The friendly name of the management group.
        :paramtype display_name: str
        :keyword parent_group_id: (Optional) The fully qualified ID for the parent management group.
         For example,
         /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
        :paramtype parent_group_id: str
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.parent_group_id = parent_group_id


class PathsItdwrvProvidersMicrosoftManagementChecknameavailabilityPostRequestbodyContentApplicationJsonSchema(
    _serialization.Model
):  # pylint: disable=name-too-long
    """PathsItdwrvProvidersMicrosoftManagementChecknameavailabilityPostRequestbodyContentApplicationJsonSchema.

    All required parameters must be populated in order to send to server.

    :ivar check_name_availability_request: Management group name availability check parameters.
     Required.
    :vartype check_name_availability_request:
     ~azure.mgmt.managementgroups.models.CheckNameAvailabilityRequest
    """

    _validation = {
        "check_name_availability_request": {"required": True},
    }

    _attribute_map = {
        "check_name_availability_request": {
            "key": "CheckNameAvailabilityRequest",
            "type": "CheckNameAvailabilityRequest",
        },
    }

    def __init__(
        self, *, check_name_availability_request: "_models.CheckNameAvailabilityRequest", **kwargs: Any
    ) -> None:
        """
        :keyword check_name_availability_request: Management group name availability check parameters.
         Required.
        :paramtype check_name_availability_request:
         ~azure.mgmt.managementgroups.models.CheckNameAvailabilityRequest
        """
        super().__init__(**kwargs)
        self.check_name_availability_request = check_name_availability_request


class SubscriptionUnderManagementGroup(ProxyResource):
    """The details of subscription under management group.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.managementgroups.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties:
     ~azure.mgmt.managementgroups.models.SubscriptionUnderManagementGroupProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SubscriptionUnderManagementGroupProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.SubscriptionUnderManagementGroupProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties:
         ~azure.mgmt.managementgroups.models.SubscriptionUnderManagementGroupProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SubscriptionUnderManagementGroupListResult(_serialization.Model):  # pylint: disable=name-too-long
    """The response of a SubscriptionUnderManagementGroup list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SubscriptionUnderManagementGroup items on this page. Required.
    :vartype value: list[~azure.mgmt.managementgroups.models.SubscriptionUnderManagementGroup]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SubscriptionUnderManagementGroup]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.SubscriptionUnderManagementGroup"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SubscriptionUnderManagementGroup items on this page. Required.
        :paramtype value: list[~azure.mgmt.managementgroups.models.SubscriptionUnderManagementGroup]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SubscriptionUnderManagementGroupProperties(_serialization.Model):  # pylint: disable=name-too-long
    """The generic properties of subscription under a management group.

    :ivar tenant: The AAD Tenant ID associated with the subscription. For example,
     00000000-0000-0000-0000-000000000000.
    :vartype tenant: str
    :ivar display_name: The friendly name of the subscription.
    :vartype display_name: str
    :ivar parent: The ID of the parent management group.
    :vartype parent: ~azure.mgmt.managementgroups.models.DescendantParentGroupInfo
    :ivar state: The state of the subscription.
    :vartype state: str
    """

    _attribute_map = {
        "tenant": {"key": "tenant", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "parent": {"key": "parent", "type": "DescendantParentGroupInfo"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(
        self,
        *,
        tenant: Optional[str] = None,
        display_name: Optional[str] = None,
        parent: Optional["_models.DescendantParentGroupInfo"] = None,
        state: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tenant: The AAD Tenant ID associated with the subscription. For example,
         00000000-0000-0000-0000-000000000000.
        :paramtype tenant: str
        :keyword display_name: The friendly name of the subscription.
        :paramtype display_name: str
        :keyword parent: The ID of the parent management group.
        :paramtype parent: ~azure.mgmt.managementgroups.models.DescendantParentGroupInfo
        :keyword state: The state of the subscription.
        :paramtype state: str
        """
        super().__init__(**kwargs)
        self.tenant = tenant
        self.display_name = display_name
        self.parent = parent
        self.state = state


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.managementgroups.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.managementgroups.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.managementgroups.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.managementgroups.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TenantBackfillStatusResult(_serialization.Model):
    """The tenant backfill status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tenant_id: The AAD Tenant ID associated with the management group. For example,
     00000000-0000-0000-0000-000000000000.
    :vartype tenant_id: str
    :ivar status: The status of the Tenant Backfill. Known values are: "NotStarted",
     "NotStartedButGroupsExist", "Started", "Failed", "Cancelled", and "Completed".
    :vartype status: str or ~azure.mgmt.managementgroups.models.Status
    """

    _validation = {
        "tenant_id": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "tenant_id": {"key": "tenantId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.tenant_id = None
        self.status = None
