# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.confluent import ConfluentManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestConfluentManagementOrganizationOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(ConfluentManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_by_subscription(self, resource_group):
        response = self.client.organization.list_by_subscription(
            api_version="2024-02-13",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_by_resource_group(self, resource_group):
        response = self.client.organization.list_by_resource_group(
            resource_group_name=resource_group.name,
            api_version="2024-02-13",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get(self, resource_group):
        response = self.client.organization.get(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_begin_create(self, resource_group):
        response = self.client.organization.begin_create(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_version="2024-02-13",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_update(self, resource_group):
        response = self.client.organization.update(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_begin_delete(self, resource_group):
        response = self.client.organization.begin_delete(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_version="2024-02-13",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_environments(self, resource_group):
        response = self.client.organization.list_environments(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_version="2024-02-13",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_environment_by_id(self, resource_group):
        response = self.client.organization.get_environment_by_id(
            resource_group_name=resource_group.name,
            organization_name="str",
            environment_id="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_clusters(self, resource_group):
        response = self.client.organization.list_clusters(
            resource_group_name=resource_group.name,
            organization_name="str",
            environment_id="str",
            api_version="2024-02-13",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_schema_registry_clusters(self, resource_group):
        response = self.client.organization.list_schema_registry_clusters(
            resource_group_name=resource_group.name,
            organization_name="str",
            environment_id="str",
            api_version="2024-02-13",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_regions(self, resource_group):
        response = self.client.organization.list_regions(
            resource_group_name=resource_group.name,
            organization_name="str",
            body={"searchFilters": {"str": "str"}},
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_create_api_key(self, resource_group):
        response = self.client.organization.create_api_key(
            resource_group_name=resource_group.name,
            organization_name="str",
            environment_id="str",
            cluster_id="str",
            body={"description": "str", "name": "str"},
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_delete_cluster_api_key(self, resource_group):
        response = self.client.organization.delete_cluster_api_key(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_key_id="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_cluster_api_key(self, resource_group):
        response = self.client.organization.get_cluster_api_key(
            resource_group_name=resource_group.name,
            organization_name="str",
            api_key_id="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_schema_registry_cluster_by_id(self, resource_group):
        response = self.client.organization.get_schema_registry_cluster_by_id(
            resource_group_name=resource_group.name,
            organization_name="str",
            environment_id="str",
            cluster_id="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_cluster_by_id(self, resource_group):
        response = self.client.organization.get_cluster_by_id(
            resource_group_name=resource_group.name,
            organization_name="str",
            environment_id="str",
            cluster_id="str",
            api_version="2024-02-13",
        )

        # please add some check logic here by yourself
        # ...
