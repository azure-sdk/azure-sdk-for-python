# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    APIKeyOwnerEntity,
    APIKeyRecord,
    APIKeyResourceEntity,
    APIKeySpecEntity,
    AccessCreateRoleBindingRequestModel,
    AccessInviteUserAccountModel,
    AccessInvitedUserDetails,
    AccessListClusterSuccessResponse,
    AccessListEnvironmentsSuccessResponse,
    AccessListInvitationsSuccessResponse,
    AccessListRoleBindingsSuccessResponse,
    AccessListServiceAccountsSuccessResponse,
    AccessListUsersSuccessResponse,
    AccessRoleBindingNameListSuccessResponse,
    AzureBlobStorageSinkConnectorServiceInfo,
    AzureBlobStorageSourceConnectorServiceInfo,
    AzureCosmosDBSinkConnectorServiceInfo,
    AzureCosmosDBSourceConnectorServiceInfo,
    AzureSynapseAnalyticsSinkConnectorServiceInfo,
    ClusterByokEntity,
    ClusterConfigEntity,
    ClusterEnvironmentEntity,
    ClusterNetworkEntity,
    ClusterRecord,
    ClusterSpecEntity,
    ClusterStatusEntity,
    ConfluentAgreementResource,
    ConfluentAgreementResourceListResponse,
    ConfluentListMetadata,
    ConnectorInfoBase,
    ConnectorResource,
    ConnectorServiceTypeInfoBase,
    CreateAPIKeyModel,
    EnvironmentRecord,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    ErrorResponseBody,
    GetEnvironmentsResponse,
    InvitationRecord,
    KafkaAzureBlobStorageSinkConnectorInfo,
    KafkaAzureBlobStorageSourceConnectorInfo,
    KafkaAzureCosmosDBSinkConnectorInfo,
    KafkaAzureCosmosDBSourceConnectorInfo,
    KafkaAzureSynapseAnalyticsSinkConnectorInfo,
    LinkOrganization,
    ListAccessRequestModel,
    ListClustersSuccessResponse,
    ListConnectorsSuccessResponse,
    ListRegionsSuccessResponse,
    ListSchemaRegistryClustersResponse,
    ListTopicsSuccessResponse,
    MetadataEntity,
    OfferDetail,
    OperationDisplay,
    OperationListResult,
    OperationResult,
    OrganizationResource,
    OrganizationResourceListResult,
    OrganizationResourceUpdate,
    PartnerInfoBase,
    ProxyResource,
    RegionRecord,
    RegionSpecEntity,
    Resource,
    ResourceProviderDefaultErrorResponse,
    RoleBindingRecord,
    SCClusterByokEntity,
    SCClusterNetworkEnvironmentEntity,
    SCClusterRecord,
    SCClusterSpecEntity,
    SCConfluentListMetadata,
    SCEnvironmentRecord,
    SCMetadataEntity,
    SchemaRegistryClusterEnvironmentRegionEntity,
    SchemaRegistryClusterRecord,
    SchemaRegistryClusterSpecEntity,
    SchemaRegistryClusterStatusEntity,
    ServiceAccountRecord,
    StreamGovernanceConfig,
    SystemData,
    TopicMetadataEntity,
    TopicRecord,
    TopicsInputConfig,
    TopicsRelatedLink,
    UserDetail,
    UserRecord,
    ValidationResponse,
)

from ._confluent_management_client_enums import (  # type: ignore
    AuthType,
    ConnectorClass,
    ConnectorServiceType,
    ConnectorStatus,
    ConnectorType,
    CreatedByType,
    DataFormatType,
    Package,
    PartnerConnectorType,
    ProvisionState,
    SaaSOfferStatus,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "APIKeyOwnerEntity",
    "APIKeyRecord",
    "APIKeyResourceEntity",
    "APIKeySpecEntity",
    "AccessCreateRoleBindingRequestModel",
    "AccessInviteUserAccountModel",
    "AccessInvitedUserDetails",
    "AccessListClusterSuccessResponse",
    "AccessListEnvironmentsSuccessResponse",
    "AccessListInvitationsSuccessResponse",
    "AccessListRoleBindingsSuccessResponse",
    "AccessListServiceAccountsSuccessResponse",
    "AccessListUsersSuccessResponse",
    "AccessRoleBindingNameListSuccessResponse",
    "AzureBlobStorageSinkConnectorServiceInfo",
    "AzureBlobStorageSourceConnectorServiceInfo",
    "AzureCosmosDBSinkConnectorServiceInfo",
    "AzureCosmosDBSourceConnectorServiceInfo",
    "AzureSynapseAnalyticsSinkConnectorServiceInfo",
    "ClusterByokEntity",
    "ClusterConfigEntity",
    "ClusterEnvironmentEntity",
    "ClusterNetworkEntity",
    "ClusterRecord",
    "ClusterSpecEntity",
    "ClusterStatusEntity",
    "ConfluentAgreementResource",
    "ConfluentAgreementResourceListResponse",
    "ConfluentListMetadata",
    "ConnectorInfoBase",
    "ConnectorResource",
    "ConnectorServiceTypeInfoBase",
    "CreateAPIKeyModel",
    "EnvironmentRecord",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ErrorResponseBody",
    "GetEnvironmentsResponse",
    "InvitationRecord",
    "KafkaAzureBlobStorageSinkConnectorInfo",
    "KafkaAzureBlobStorageSourceConnectorInfo",
    "KafkaAzureCosmosDBSinkConnectorInfo",
    "KafkaAzureCosmosDBSourceConnectorInfo",
    "KafkaAzureSynapseAnalyticsSinkConnectorInfo",
    "LinkOrganization",
    "ListAccessRequestModel",
    "ListClustersSuccessResponse",
    "ListConnectorsSuccessResponse",
    "ListRegionsSuccessResponse",
    "ListSchemaRegistryClustersResponse",
    "ListTopicsSuccessResponse",
    "MetadataEntity",
    "OfferDetail",
    "OperationDisplay",
    "OperationListResult",
    "OperationResult",
    "OrganizationResource",
    "OrganizationResourceListResult",
    "OrganizationResourceUpdate",
    "PartnerInfoBase",
    "ProxyResource",
    "RegionRecord",
    "RegionSpecEntity",
    "Resource",
    "ResourceProviderDefaultErrorResponse",
    "RoleBindingRecord",
    "SCClusterByokEntity",
    "SCClusterNetworkEnvironmentEntity",
    "SCClusterRecord",
    "SCClusterSpecEntity",
    "SCConfluentListMetadata",
    "SCEnvironmentRecord",
    "SCMetadataEntity",
    "SchemaRegistryClusterEnvironmentRegionEntity",
    "SchemaRegistryClusterRecord",
    "SchemaRegistryClusterSpecEntity",
    "SchemaRegistryClusterStatusEntity",
    "ServiceAccountRecord",
    "StreamGovernanceConfig",
    "SystemData",
    "TopicMetadataEntity",
    "TopicRecord",
    "TopicsInputConfig",
    "TopicsRelatedLink",
    "UserDetail",
    "UserRecord",
    "ValidationResponse",
    "AuthType",
    "ConnectorClass",
    "ConnectorServiceType",
    "ConnectorStatus",
    "ConnectorType",
    "CreatedByType",
    "DataFormatType",
    "Package",
    "PartnerConnectorType",
    "ProvisionState",
    "SaaSOfferStatus",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
