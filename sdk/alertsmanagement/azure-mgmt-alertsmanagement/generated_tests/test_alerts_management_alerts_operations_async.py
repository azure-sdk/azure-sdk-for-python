# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.alertsmanagement.aio import AlertsManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAlertsManagementAlertsOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AlertsManagementClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_meta_data(self, resource_group):
        response = await self.client.alerts.meta_data(
            identifier="str",
            api_version="2024-01-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_get_all(self, resource_group):
        response = self.client.alerts.get_all(
            scope="str",
            api_version="2024-01-01-preview",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_get_by_id(self, resource_group):
        response = await self.client.alerts.get_by_id(
            scope="str",
            alert_id="str",
            api_version="2024-01-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_change_state(self, resource_group):
        response = await self.client.alerts.change_state(
            scope="str",
            alert_id="str",
            new_state="str",
            api_version="2024-01-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_get_history(self, resource_group):
        response = await self.client.alerts.get_history(
            scope="str",
            alert_id="str",
            api_version="2024-01-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_get_summary(self, resource_group):
        response = await self.client.alerts.get_summary(
            scope="str",
            groupby="str",
            api_version="2024-01-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_list_enrichments(self, resource_group):
        response = self.client.alerts.list_enrichments(
            scope="str",
            alert_id="str",
            api_version="2024-01-01-preview",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alerts_get_enrichments(self, resource_group):
        response = await self.client.alerts.get_enrichments(
            scope="str",
            alert_id="str",
            api_version="2024-01-01-preview",
        )

        # please add some check logic here by yourself
        # ...
