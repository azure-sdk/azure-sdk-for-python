# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.alertsmanagement import AlertsManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAlertsManagementAlertProcessingRulesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AlertsManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alert_processing_rules_list_by_subscription(self, resource_group):
        response = self.client.alert_processing_rules.list_by_subscription(
            api_version="2024-03-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alert_processing_rules_list_by_resource_group(self, resource_group):
        response = self.client.alert_processing_rules.list_by_resource_group(
            resource_group_name=resource_group.name,
            api_version="2024-03-01-preview",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alert_processing_rules_get_by_name(self, resource_group):
        response = self.client.alert_processing_rules.get_by_name(
            resource_group_name=resource_group.name,
            alert_processing_rule_name="str",
            api_version="2024-03-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alert_processing_rules_create_or_update(self, resource_group):
        response = self.client.alert_processing_rules.create_or_update(
            resource_group_name=resource_group.name,
            alert_processing_rule_name="str",
            alert_processing_rule={
                "location": "str",
                "id": "str",
                "name": "str",
                "properties": {
                    "actions": ["action"],
                    "scopes": ["str"],
                    "conditions": [{"field": "str", "operator": "str", "values": ["str"]}],
                    "description": "str",
                    "enabled": True,
                    "schedule": {
                        "effectiveFrom": "str",
                        "effectiveUntil": "str",
                        "recurrences": ["recurrence"],
                        "timeZone": "str",
                    },
                },
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "tags": {"str": "str"},
                "type": "str",
            },
            api_version="2024-03-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alert_processing_rules_delete(self, resource_group):
        response = self.client.alert_processing_rules.delete(
            resource_group_name=resource_group.name,
            alert_processing_rule_name="str",
            api_version="2024-03-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_alert_processing_rules_update(self, resource_group):
        response = self.client.alert_processing_rules.update(
            resource_group_name=resource_group.name,
            alert_processing_rule_name="str",
            alert_processing_rule_patch={"enabled": bool, "tags": {"str": "str"}},
            api_version="2024-03-01-preview",
        )

        # please add some check logic here by yourself
        # ...
