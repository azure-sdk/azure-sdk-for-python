# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.alertsmanagement.aio import AlertsManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAlertsManagementAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AlertsManagementClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_preview_alert_rule(self, resource_group):
        response = await self.client.preview_alert_rule(
            parameters={
                "location": "str",
                "properties": {
                    "alertRuleProperties": {
                        "location": "str",
                        "autoMitigate": bool,
                        "checkWorkspaceAlertsStorageConfigured": bool,
                        "createdWithApiVersion": "str",
                        "criteria": {
                            "allOf": [
                                {
                                    "alertSensitivity": "str",
                                    "criterionType": "str",
                                    "dimensions": [{"name": "str", "operator": "str", "values": ["str"]}],
                                    "failingPeriods": {"minFailingPeriodsToAlert": 1, "numberOfEvaluationPeriods": 1},
                                    "ignoreDataBefore": "2020-02-20 00:00:00",
                                    "metricMeasureColumn": "str",
                                    "metricName": "str",
                                    "operator": "str",
                                    "query": "str",
                                    "resourceIdColumn": "str",
                                    "threshold": 0.0,
                                    "timeAggregation": "str",
                                }
                            ]
                        },
                        "description": "str",
                        "displayName": "str",
                        "enabled": bool,
                        "etag": "str",
                        "evaluationFrequency": "1 day, 0:00:00",
                        "id": "str",
                        "isLegacyLogAnalyticsRule": bool,
                        "isWorkspaceAlertsStorageConfigured": bool,
                        "kind": "str",
                        "muteActionsDuration": "1 day, 0:00:00",
                        "name": "str",
                        "overrideQueryTimeRange": "1 day, 0:00:00",
                        "resolveConfiguration": {"autoResolved": bool, "timeToResolve": "1 day, 0:00:00"},
                        "scopes": ["str"],
                        "severity": 0,
                        "skipQueryValidation": bool,
                        "systemData": {
                            "createdAt": "2020-02-20 00:00:00",
                            "createdBy": "str",
                            "createdByType": "str",
                            "lastModifiedAt": "2020-02-20 00:00:00",
                            "lastModifiedBy": "str",
                            "lastModifiedByType": "str",
                        },
                        "tags": {"str": "str"},
                        "targetResourceTypes": ["str"],
                        "type": "str",
                        "windowSize": "1 day, 0:00:00",
                    },
                    "alertRuleType": "str",
                    "lookbackPeriod": "str",
                },
            },
            api_version="2025-05-01-preview",
        )

        # please add some check logic here by yourself
        # ...
