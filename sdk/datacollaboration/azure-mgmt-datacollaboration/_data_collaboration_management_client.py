# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING

from msrest import Deserializer, Serializer

from azure.core.rest import HttpRequest, HttpResponse
from azure.mgmt.core import ARMPipelineClient

from . import models
from ._configuration import DataCollaborationManagementClientConfiguration
from .operations import ConstrainedResourcesOperations, ConstraintsOperations, ConsumerInvitationsOperations, DataAssetReferencesOperations, DataAssetsOperations, DataSetsOperations, EntitlementsOperations, InvitationsOperations, ManagedPrivateEndpointsOperations, Operations, ParticipantsOperations, PipelineRunsOperations, PipelineStepRunsOperations, PipelineStepsOperations, PipelinesOperations, PoliciesOperations, ProposalsOperations, ResourceReferencesOperations, ScriptReferencesOperations, ScriptRevisionsOperations, ScriptsOperations, VirtualOutputReferencesOperations, WorkspacesOperations

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential

class DataCollaborationManagementClient:    # pylint: disable=too-many-instance-attributes
    """Creates a Microsoft.DataCollaboration management client.

    :ivar consumer_invitations: ConsumerInvitationsOperations operations
    :vartype consumer_invitations:
     azure.mgmt.datacollaboration.operations.ConsumerInvitationsOperations
    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.datacollaboration.operations.Operations
    :ivar workspaces: WorkspacesOperations operations
    :vartype workspaces: azure.mgmt.datacollaboration.operations.WorkspacesOperations
    :ivar constrained_resources: ConstrainedResourcesOperations operations
    :vartype constrained_resources:
     azure.mgmt.datacollaboration.operations.ConstrainedResourcesOperations
    :ivar data_assets: DataAssetsOperations operations
    :vartype data_assets: azure.mgmt.datacollaboration.operations.DataAssetsOperations
    :ivar data_sets: DataSetsOperations operations
    :vartype data_sets: azure.mgmt.datacollaboration.operations.DataSetsOperations
    :ivar managed_private_endpoints: ManagedPrivateEndpointsOperations operations
    :vartype managed_private_endpoints:
     azure.mgmt.datacollaboration.operations.ManagedPrivateEndpointsOperations
    :ivar pipeline_runs: PipelineRunsOperations operations
    :vartype pipeline_runs: azure.mgmt.datacollaboration.operations.PipelineRunsOperations
    :ivar pipeline_step_runs: PipelineStepRunsOperations operations
    :vartype pipeline_step_runs: azure.mgmt.datacollaboration.operations.PipelineStepRunsOperations
    :ivar pipelines: PipelinesOperations operations
    :vartype pipelines: azure.mgmt.datacollaboration.operations.PipelinesOperations
    :ivar pipeline_steps: PipelineStepsOperations operations
    :vartype pipeline_steps: azure.mgmt.datacollaboration.operations.PipelineStepsOperations
    :ivar proposals: ProposalsOperations operations
    :vartype proposals: azure.mgmt.datacollaboration.operations.ProposalsOperations
    :ivar data_asset_references: DataAssetReferencesOperations operations
    :vartype data_asset_references:
     azure.mgmt.datacollaboration.operations.DataAssetReferencesOperations
    :ivar entitlements: EntitlementsOperations operations
    :vartype entitlements: azure.mgmt.datacollaboration.operations.EntitlementsOperations
    :ivar constraints: ConstraintsOperations operations
    :vartype constraints: azure.mgmt.datacollaboration.operations.ConstraintsOperations
    :ivar policies: PoliciesOperations operations
    :vartype policies: azure.mgmt.datacollaboration.operations.PoliciesOperations
    :ivar invitations: InvitationsOperations operations
    :vartype invitations: azure.mgmt.datacollaboration.operations.InvitationsOperations
    :ivar participants: ParticipantsOperations operations
    :vartype participants: azure.mgmt.datacollaboration.operations.ParticipantsOperations
    :ivar script_references: ScriptReferencesOperations operations
    :vartype script_references: azure.mgmt.datacollaboration.operations.ScriptReferencesOperations
    :ivar virtual_output_references: VirtualOutputReferencesOperations operations
    :vartype virtual_output_references:
     azure.mgmt.datacollaboration.operations.VirtualOutputReferencesOperations
    :ivar resource_references: ResourceReferencesOperations operations
    :vartype resource_references:
     azure.mgmt.datacollaboration.operations.ResourceReferencesOperations
    :ivar scripts: ScriptsOperations operations
    :vartype scripts: azure.mgmt.datacollaboration.operations.ScriptsOperations
    :ivar script_revisions: ScriptRevisionsOperations operations
    :vartype script_revisions: azure.mgmt.datacollaboration.operations.ScriptRevisionsOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The subscription identifier.
    :type subscription_id: str
    :param base_url: Service URL. Default value is "https://management.azure.com".
    :type base_url: str
    :keyword api_version: Api Version. Default value is "2020-05-04-preview". Note that overriding
     this default value may result in unsupported behavior.
    :paramtype api_version: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(
        self,
        credential: "TokenCredential",
        subscription_id: str,
        base_url: str = "https://management.azure.com",
        **kwargs: Any
    ) -> None:
        self._config = DataCollaborationManagementClientConfiguration(credential=credential, subscription_id=subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False
        self.consumer_invitations = ConsumerInvitationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.workspaces = WorkspacesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.constrained_resources = ConstrainedResourcesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.data_assets = DataAssetsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.data_sets = DataSetsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.managed_private_endpoints = ManagedPrivateEndpointsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_runs = PipelineRunsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_step_runs = PipelineStepRunsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pipelines = PipelinesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pipeline_steps = PipelineStepsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.proposals = ProposalsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.data_asset_references = DataAssetReferencesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.entitlements = EntitlementsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.constraints = ConstraintsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.policies = PoliciesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.invitations = InvitationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.participants = ParticipantsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.script_references = ScriptReferencesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.virtual_output_references = VirtualOutputReferencesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.resource_references = ResourceReferencesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.scripts = ScriptsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.script_revisions = ScriptRevisionsOperations(self._client, self._config, self._serialize, self._deserialize)


    def _send_request(
        self,
        request: HttpRequest,
        **kwargs: Any
    ) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client._send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/python/protocol/quickstart

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, **kwargs)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> DataCollaborationManagementClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
