# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.migrationdiscoverysap.aio import MigrationDiscoverySapMgmtClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestMigrationDiscoverySapMgmtServerInstancesOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(MigrationDiscoverySapMgmtClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_server_instances_list_by_sap_instance(self, resource_group):
        response = self.client.server_instances.list_by_sap_instance(
            resource_group_name=resource_group.name,
            sap_discovery_site_name="str",
            sap_instance_name="str",
            api_version="2023-10-01-preview",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_server_instances_get(self, resource_group):
        response = await self.client.server_instances.get(
            resource_group_name=resource_group.name,
            sap_discovery_site_name="str",
            sap_instance_name="str",
            server_instance_name="str",
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_server_instances_begin_create(self, resource_group):
        response = await (
            await self.client.server_instances.begin_create(
                resource_group_name=resource_group.name,
                sap_discovery_site_name="str",
                sap_instance_name="str",
                server_instance_name="str",
                resource={
                    "id": "str",
                    "name": "str",
                    "properties": {
                        "configurationData": {
                            "cpu": 0,
                            "cpuInMhz": 0,
                            "cpuType": "str",
                            "databaseType": "str",
                            "hardwareManufacturer": "str",
                            "model": "str",
                            "ram": 0,
                            "saps": 0,
                            "targetHanaRamSizeGB": 0,
                            "totalDiskIops": 0,
                            "totalDiskSizeGB": 0,
                        },
                        "errors": {
                            "properties": {"code": "str", "details": [...], "message": "str", "recommendation": "str"}
                        },
                        "instanceSid": "str",
                        "operatingSystem": "str",
                        "performanceData": "performance_data",
                        "provisioningState": "str",
                        "sapInstanceType": "str",
                        "sapProduct": "str",
                        "sapProductVersion": "str",
                        "serverName": "str",
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",
                        "createdBy": "str",
                        "createdByType": "str",
                        "lastModifiedAt": "2020-02-20 00:00:00",
                        "lastModifiedBy": "str",
                        "lastModifiedByType": "str",
                    },
                    "type": "str",
                },
                api_version="2023-10-01-preview",
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_server_instances_update(self, resource_group):
        response = await self.client.server_instances.update(
            resource_group_name=resource_group.name,
            sap_discovery_site_name="str",
            sap_instance_name="str",
            server_instance_name="str",
            properties={
                "properties": {
                    "configurationData": {
                        "cpu": 0,
                        "cpuInMhz": 0,
                        "cpuType": "str",
                        "databaseType": "str",
                        "hardwareManufacturer": "str",
                        "model": "str",
                        "ram": 0,
                        "saps": 0,
                        "targetHanaRamSizeGB": 0,
                        "totalDiskIops": 0,
                        "totalDiskSizeGB": 0,
                    },
                    "errors": {
                        "properties": {"code": "str", "details": [...], "message": "str", "recommendation": "str"}
                    },
                    "instanceSid": "str",
                    "operatingSystem": "str",
                    "performanceData": "performance_data",
                    "provisioningState": "str",
                    "sapInstanceType": "str",
                    "sapProduct": "str",
                    "sapProductVersion": "str",
                    "serverName": "str",
                }
            },
            api_version="2023-10-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_server_instances_begin_delete(self, resource_group):
        response = await (
            await self.client.server_instances.begin_delete(
                resource_group_name=resource_group.name,
                sap_discovery_site_name="str",
                sap_instance_name="str",
                server_instance_name="str",
                api_version="2023-10-01-preview",
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
