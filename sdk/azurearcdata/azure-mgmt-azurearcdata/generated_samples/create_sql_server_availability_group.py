# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.azurearcdata import AzureArcDataManagementClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-azurearcdata
# USAGE
    python create_sql_server_availability_group.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = AzureArcDataManagementClient(
        credential=DefaultAzureCredential(),
        subscription_id="00000000-1111-2222-3333-444444444444",
    )

    response = client.sql_server_availability_groups.begin_create_availability_group(
        resource_group_name="testrg",
        sql_server_instance_name="testSqlServer_INST1",
        create_ag_configuration={
            "automatedBackupPreference": "SECONDARY",
            "availabilityGroupName": "myNewAg",
            "clusterType": "WSFC",
            "databases": ["database1", "database2"],
            "dbFailover": "ON",
            "dtcSupport": "NONE",
            "failureConditionLevel": 3,
            "healthCheckTimeout": 30000,
            "listener": {
                "dnsName": "myNewAgListener",
                "ipV4AddressesAndMasks": [
                    {"ipAddress": "192.1.168.5", "mask": "255.255.255.0"},
                    {"ipAddress": "10.1.168.5", "mask": "255.255.255.0"},
                ],
                "port": 1433,
            },
            "replicas": [
                {
                    "availabilityMode": "SYNCHRONOUS_COMMIT",
                    "backupPriority": 50,
                    "endpointConnectLogin": "NT Server\\MSSSQLSERVER",
                    "endpointName": "inst1DBMEndpoint",
                    "endpointUrl": "TCP://testSqlServer_INST1.testSqlserverDomain:5022",
                    "failoverMode": "AUTOMATIC",
                    "primaryRoleAllowConnections": "ALL",
                    "primaryRoleReadOnlyRoutingList": None,
                    "secondaryRoleAllowConnections": "ALL",
                    "secondaryRoleReadOnlyRoutingUrl": None,
                    "seedingMode": "AUTOMATIC",
                    "serverInstance": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/sqlServerInstances/testSqlServer_INST1/",
                    "sessionTimeout": 10,
                },
                {
                    "availabilityMode": "SYNCHRONOUS_COMMIT",
                    "backupPriority": 50,
                    "endpointConnectLogin": "NT Server\\MSSSQLSERVER",
                    "endpointName": "inst2DBMEndpoint",
                    "endpointUrl": "TCP://testSqlServer_INST2.testSqlserverDomain:5022",
                    "failoverMode": "AUTOMATIC",
                    "primaryRoleAllowConnections": "ALL",
                    "primaryRoleReadOnlyRoutingList": None,
                    "secondaryRoleAllowConnections": "ALL",
                    "secondaryRoleReadOnlyRoutingUrl": None,
                    "seedingMode": "AUTOMATIC",
                    "serverInstance": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/sqlServerInstances/testSqlServer_INST2/",
                    "sessionTimeout": 10,
                },
            ],
            "requiredSynchronizedSecondariesToCommit": 0,
        },
    ).result()
    print(response)


# x-ms-original-file: specification/azurearcdata/resource-manager/Microsoft.AzureArcData/preview/2025-03-01-preview/examples/CreateSqlServerAvailabilityGroup.json
if __name__ == "__main__":
    main()
