# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential
from azure.mgmt.azurearcdata import AzureArcDataManagementClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-azurearcdata
# USAGE
    python create_or_update_arc_sql_server_availability_group.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = AzureArcDataManagementClient(
        credential=DefaultAzureCredential(),
        subscription_id="00000000-1111-2222-3333-444444444444",
    )

    response = client.sql_server_availability_groups.create(
        resource_group_name="testrg",
        sql_server_instance_name="testSqlServer_INST1",
        availability_group_name="testAG",
        sql_server_availability_group_resource={
            "location": "southeastasia",
            "properties": {
                "availabilityGroupId": "00000000-1111-2222-3333-444444444444",
                "collectionTimestamp": "2022-05-05T16:26:33.883Z",
                "databases": {
                    "value": [
                        {
                            "databaseName": "db1",
                            "databaseStateDescription": "ONLINE",
                            "isCommitParticipant": True,
                            "isLocal": True,
                            "isPrimaryReplica": True,
                            "isSuspended": False,
                            "replicaName": "testSqlServer\\INST1",
                            "synchronizationHealthDescription": "HEALTHY",
                            "synchronizationStateDescription": "SYNCHRONIZED",
                        },
                        {
                            "databaseName": "db2",
                            "databaseStateDescription": "ONLINE",
                            "isCommitParticipant": True,
                            "isLocal": True,
                            "isPrimaryReplica": True,
                            "isSuspended": False,
                            "replicaName": "testSqlServer\\INST1",
                            "synchronizationHealthDescription": "HEALTHY",
                            "synchronizationStateDescription": "SYNCHRONIZED",
                        },
                    ]
                },
                "info": {
                    "automatedBackupPreferenceDescription": "SECONDARY",
                    "basicFeatures": False,
                    "clusterTypeDescription": "WSFC",
                    "dbFailover": True,
                    "dtcSupport": False,
                    "failureConditionLevel": 3,
                    "healthCheckTimeout": 30000,
                    "isContained": False,
                    "isDistributed": False,
                    "primaryRecoveryHealthDescription": "ONLINE",
                    "primaryReplica": "testSqlServer\\INST1",
                    "requiredSynchronizedSecondariesToCommit": 0,
                    "secondaryRecoveryHealthDescription": None,
                    "synchronizationHealthDescription": "HEALTHY",
                    "version": 0,
                },
                "instanceName": "INST1",
                "replicas": {
                    "value": [
                        {
                            "configure": {
                                "availabilityModeDescription": "SYNCHRONOUS_COMMIT",
                                "backupPriority": 50,
                                "endpointUrl": "TCP://mytest60-0.mytest60-svc:5022",
                                "failoverModeDescription": "EXTERNAL",
                                "primaryRoleAllowConnectionsDescription": "ALL",
                                "readOnlyRoutingUrl": None,
                                "readWriteRoutingUrl": None,
                                "replicaCreateDate": None,
                                "replicaModifyDate": None,
                                "secondaryRoleAllowConnectionsDescription": "ALL",
                                "seedingModeDescription": "AUTOMATIC",
                                "sessionTimeout": 10,
                            },
                            "replicaId": "00000000-1111-2222-3333-444444444444",
                            "replicaName": "testSqlServer\\INST1",
                            "state": {
                                "availabilityGroupReplicaRole": "SECONDARY",
                                "connectedStateDescription": "CONNECTED",
                                "lastConnectErrorDescription": "",
                                "lastConnectErrorTimestamp": "2022-05-05T16:26:33.883Z",
                                "operationalStateDescription": "ONLINE",
                                "recoveryHealthDescription": "ONLINE_IN_PROGRESS",
                                "synchronizationHealthDescription": "HEALTHY",
                            },
                        }
                    ]
                },
                "serverName": "testSqlServer",
            },
            "tags": {"mytag": "myval"},
        },
    )
    print(response)


# x-ms-original-file: specification/azurearcdata/resource-manager/Microsoft.AzureArcData/preview/2023-11-01-preview/examples/CreateOrUpdateArcSqlServerAvailabilityGroup.json
if __name__ == "__main__":
    main()
