# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    from .. import models as _models


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class Account(TrackedResource):
    """Definition of the account.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The properties that define configuration for the account.
    :vartype properties: ~azure.mgmt.powerplatform.models.AccountProperties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.powerplatform.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "AccountProperties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.AccountProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The properties that define configuration for the account.
        :paramtype properties: ~azure.mgmt.powerplatform.models.AccountProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.system_data = None


class AccountList(_serialization.Model):
    """The response of the list accounts operation.

    :ivar value: Result of the list accounts operation.
    :vartype value: list[~azure.mgmt.powerplatform.models.Account]
    :ivar next_link: Next page link if any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[Account]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.Account"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Result of the list accounts operation.
        :paramtype value: list[~azure.mgmt.powerplatform.models.Account]
        :keyword next_link: Next page link if any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class AccountProperties(_serialization.Model):
    """The properties that define configuration for the account.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar system_id: The internally assigned unique identifier of the resource.
    :vartype system_id: str
    :ivar description: The description of the account.
    :vartype description: str
    """

    _validation = {
        "system_id": {"readonly": True},
    }

    _attribute_map = {
        "system_id": {"key": "systemId", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword description: The description of the account.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.system_id = None
        self.description = description


class EnterprisePolicy(TrackedResource):
    """Definition of the EnterprisePolicy.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar identity: The identity of the EnterprisePolicy.
    :vartype identity: ~azure.mgmt.powerplatform.models.EnterprisePolicyIdentity
    :ivar kind: The kind (type) of Enterprise Policy. Required. Known values are: "Lockbox",
     "PrivateEndpoint", "Encryption", "NetworkInjection", and "Identity".
    :vartype kind: str or ~azure.mgmt.powerplatform.models.EnterprisePolicyKind
    :ivar properties: The properties that define configuration for the enterprise policy.
    :vartype properties: ~azure.mgmt.powerplatform.models.Properties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.powerplatform.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
        "kind": {"required": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "identity": {"key": "identity", "type": "EnterprisePolicyIdentity"},
        "kind": {"key": "kind", "type": "str"},
        "properties": {"key": "properties", "type": "Properties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        location: str,
        kind: Union[str, "_models.EnterprisePolicyKind"],
        tags: Optional[Dict[str, str]] = None,
        identity: Optional["_models.EnterprisePolicyIdentity"] = None,
        properties: Optional["_models.Properties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword identity: The identity of the EnterprisePolicy.
        :paramtype identity: ~azure.mgmt.powerplatform.models.EnterprisePolicyIdentity
        :keyword kind: The kind (type) of Enterprise Policy. Required. Known values are: "Lockbox",
         "PrivateEndpoint", "Encryption", "NetworkInjection", and "Identity".
        :paramtype kind: str or ~azure.mgmt.powerplatform.models.EnterprisePolicyKind
        :keyword properties: The properties that define configuration for the enterprise policy.
        :paramtype properties: ~azure.mgmt.powerplatform.models.Properties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.identity = identity
        self.kind = kind
        self.properties = properties
        self.system_data = None


class EnterprisePolicyIdentity(_serialization.Model):
    """The identity of the EnterprisePolicy.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar system_assigned_identity_principal_id: The principal id of EnterprisePolicy identity.
    :vartype system_assigned_identity_principal_id: str
    :ivar tenant_id: The tenant id associated with the EnterprisePolicy.
    :vartype tenant_id: str
    :ivar type: The type of identity used for the EnterprisePolicy. Currently, the only supported
     type is 'SystemAssigned', which implicitly creates an identity. Known values are:
     "SystemAssigned" and "None".
    :vartype type: str or ~azure.mgmt.powerplatform.models.ResourceIdentityType
    """

    _validation = {
        "system_assigned_identity_principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "system_assigned_identity_principal_id": {"key": "systemAssignedIdentityPrincipalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, type: Optional[Union[str, "_models.ResourceIdentityType"]] = None, **kwargs: Any) -> None:
        """
        :keyword type: The type of identity used for the EnterprisePolicy. Currently, the only
         supported type is 'SystemAssigned', which implicitly creates an identity. Known values are:
         "SystemAssigned" and "None".
        :paramtype type: str or ~azure.mgmt.powerplatform.models.ResourceIdentityType
        """
        super().__init__(**kwargs)
        self.system_assigned_identity_principal_id = None
        self.tenant_id = None
        self.type = type


class EnterprisePolicyList(_serialization.Model):
    """The response of the list EnterprisePolicy operation.

    :ivar value: Result of the list EnterprisePolicy operation.
    :vartype value: list[~azure.mgmt.powerplatform.models.EnterprisePolicy]
    :ivar next_link: Next page link if any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[EnterprisePolicy]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.EnterprisePolicy"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Result of the list EnterprisePolicy operation.
        :paramtype value: list[~azure.mgmt.powerplatform.models.EnterprisePolicy]
        :keyword next_link: Next page link if any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.powerplatform.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.powerplatform.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.powerplatform.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.powerplatform.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class KeyProperties(_serialization.Model):
    """Url and version of the KeyVault Secret.

    :ivar name: The identifier of the key vault key used to encrypt data.
    :vartype name: str
    :ivar version: The version of the identity which will be used to access key vault.
    :vartype version: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, version: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: The identifier of the key vault key used to encrypt data.
        :paramtype name: str
        :keyword version: The version of the identity which will be used to access key vault.
        :paramtype version: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.version = version


class KeyVaultProperties(_serialization.Model):
    """Settings concerning key vault encryption for a configuration store.

    :ivar id: Uri of KeyVault.
    :vartype id: str
    :ivar key: Identity of the secret that includes name and version.
    :vartype key: ~azure.mgmt.powerplatform.models.KeyProperties
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "key": {"key": "key", "type": "KeyProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        key: Optional["_models.KeyProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Uri of KeyVault.
        :paramtype id: str
        :keyword key: Identity of the secret that includes name and version.
        :paramtype key: ~azure.mgmt.powerplatform.models.KeyProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.key = key


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.powerplatform.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.powerplatform.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.powerplatform.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.powerplatform.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.powerplatform.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PatchTrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, location: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class PatchAccount(PatchTrackedResource):
    """Definition of the account.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives.
    :vartype location: str
    :ivar properties: The properties that define configuration for the account.
    :vartype properties: ~azure.mgmt.powerplatform.models.AccountProperties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.powerplatform.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "AccountProperties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        location: Optional[str] = None,
        properties: Optional["_models.AccountProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives.
        :paramtype location: str
        :keyword properties: The properties that define configuration for the account.
        :paramtype properties: ~azure.mgmt.powerplatform.models.AccountProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.system_data = None


class PatchEnterprisePolicy(PatchTrackedResource):
    """Definition of the EnterprisePolicy.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives.
    :vartype location: str
    :ivar identity: The identity of the EnterprisePolicy.
    :vartype identity: ~azure.mgmt.powerplatform.models.EnterprisePolicyIdentity
    :ivar kind: The kind (type) of Enterprise Policy. Known values are: "Lockbox",
     "PrivateEndpoint", "Encryption", "NetworkInjection", and "Identity".
    :vartype kind: str or ~azure.mgmt.powerplatform.models.EnterprisePolicyKind
    :ivar properties: The properties that define configuration for the enterprise policy.
    :vartype properties: ~azure.mgmt.powerplatform.models.Properties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.powerplatform.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "identity": {"key": "identity", "type": "EnterprisePolicyIdentity"},
        "kind": {"key": "kind", "type": "str"},
        "properties": {"key": "properties", "type": "Properties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        location: Optional[str] = None,
        identity: Optional["_models.EnterprisePolicyIdentity"] = None,
        kind: Optional[Union[str, "_models.EnterprisePolicyKind"]] = None,
        properties: Optional["_models.Properties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives.
        :paramtype location: str
        :keyword identity: The identity of the EnterprisePolicy.
        :paramtype identity: ~azure.mgmt.powerplatform.models.EnterprisePolicyIdentity
        :keyword kind: The kind (type) of Enterprise Policy. Known values are: "Lockbox",
         "PrivateEndpoint", "Encryption", "NetworkInjection", and "Identity".
        :paramtype kind: str or ~azure.mgmt.powerplatform.models.EnterprisePolicyKind
        :keyword properties: The properties that define configuration for the enterprise policy.
        :paramtype properties: ~azure.mgmt.powerplatform.models.Properties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.identity = identity
        self.kind = kind
        self.properties = properties
        self.system_data = None


class PrivateEndpoint(_serialization.Model):
    """The Private Endpoint resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The ARM identifier for Private Endpoint.
    :vartype id: str
    """

    _validation = {
        "id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """


class PrivateEndpointConnection(ProxyResource):
    """A private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties: Resource properties.
    :vartype properties: ~azure.mgmt.powerplatform.models.PrivateEndpointConnectionProperties
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.powerplatform.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "PrivateEndpointConnectionProperties"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(
        self, *, properties: Optional["_models.PrivateEndpointConnectionProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: Resource properties.
        :paramtype properties: ~azure.mgmt.powerplatform.models.PrivateEndpointConnectionProperties
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.system_data = None


class PrivateEndpointConnectionListResult(_serialization.Model):
    """A list of private endpoint connections.

    :ivar value: Array of private endpoint connections.
    :vartype value: list[~azure.mgmt.powerplatform.models.PrivateEndpointConnection]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateEndpointConnection]"},
    }

    def __init__(self, *, value: Optional[List["_models.PrivateEndpointConnection"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Array of private endpoint connections.
        :paramtype value: list[~azure.mgmt.powerplatform.models.PrivateEndpointConnection]
        """
        super().__init__(**kwargs)
        self.value = value


class PrivateEndpointConnectionProperties(_serialization.Model):
    """Properties of the PrivateEndpointConnectProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar private_endpoint: The resource of private end point.
    :vartype private_endpoint: ~azure.mgmt.powerplatform.models.PrivateEndpoint
    :ivar private_link_service_connection_state: A collection of information about the state of the
     connection between service consumer and provider. Required.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.powerplatform.models.PrivateLinkServiceConnectionState
    :ivar provisioning_state: The provisioning state of the private endpoint connection resource.
     Known values are: "Succeeded", "Creating", "Deleting", and "Failed".
    :vartype provisioning_state: str or
     ~azure.mgmt.powerplatform.models.PrivateEndpointConnectionProvisioningState
    """

    _validation = {
        "private_link_service_connection_state": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "private_endpoint": {"key": "privateEndpoint", "type": "PrivateEndpoint"},
        "private_link_service_connection_state": {
            "key": "privateLinkServiceConnectionState",
            "type": "PrivateLinkServiceConnectionState",
        },
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        private_link_service_connection_state: "_models.PrivateLinkServiceConnectionState",
        private_endpoint: Optional["_models.PrivateEndpoint"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword private_endpoint: The resource of private end point.
        :paramtype private_endpoint: ~azure.mgmt.powerplatform.models.PrivateEndpoint
        :keyword private_link_service_connection_state: A collection of information about the state of
         the connection between service consumer and provider. Required.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.powerplatform.models.PrivateLinkServiceConnectionState
        """
        super().__init__(**kwargs)
        self.private_endpoint = private_endpoint
        self.private_link_service_connection_state = private_link_service_connection_state
        self.provisioning_state = None


class PrivateLinkResource(Resource):
    """A private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar properties: Resource properties.
    :vartype properties: ~azure.mgmt.powerplatform.models.PrivateLinkResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "PrivateLinkResourceProperties"},
    }

    def __init__(self, *, properties: Optional["_models.PrivateLinkResourceProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Resource properties.
        :paramtype properties: ~azure.mgmt.powerplatform.models.PrivateLinkResourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class PrivateLinkResourceListResult(_serialization.Model):
    """A list of private link resources.

    :ivar value: Array of private link resources.
    :vartype value: list[~azure.mgmt.powerplatform.models.PrivateLinkResource]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[PrivateLinkResource]"},
    }

    def __init__(self, *, value: Optional[List["_models.PrivateLinkResource"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Array of private link resources.
        :paramtype value: list[~azure.mgmt.powerplatform.models.PrivateLinkResource]
        """
        super().__init__(**kwargs)
        self.value = value


class PrivateLinkResourceProperties(_serialization.Model):
    """Properties of a private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar group_id: The private link resource group id.
    :vartype group_id: str
    :ivar required_members: The private link resource required member names.
    :vartype required_members: list[str]
    :ivar required_zone_names: The private link resource Private link DNS zone name.
    :vartype required_zone_names: list[str]
    """

    _validation = {
        "group_id": {"readonly": True},
        "required_members": {"readonly": True},
    }

    _attribute_map = {
        "group_id": {"key": "groupId", "type": "str"},
        "required_members": {"key": "requiredMembers", "type": "[str]"},
        "required_zone_names": {"key": "requiredZoneNames", "type": "[str]"},
    }

    def __init__(self, *, required_zone_names: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword required_zone_names: The private link resource Private link DNS zone name.
        :paramtype required_zone_names: list[str]
        """
        super().__init__(**kwargs)
        self.group_id = None
        self.required_members = None
        self.required_zone_names = required_zone_names


class PrivateLinkServiceConnectionState(_serialization.Model):
    """A collection of information about the state of the connection between service consumer and
    provider.

    :ivar status: Indicates whether the connection has been Approved/Rejected/Removed by the owner
     of the service. Known values are: "Pending", "Approved", and "Rejected".
    :vartype status: str or ~azure.mgmt.powerplatform.models.PrivateEndpointServiceConnectionStatus
    :ivar description: The reason for approval/rejection of the connection.
    :vartype description: str
    :ivar actions_required: A message indicating if changes on the service provider require any
     updates on the consumer.
    :vartype actions_required: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "actions_required": {"key": "actionsRequired", "type": "str"},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "_models.PrivateEndpointServiceConnectionStatus"]] = None,
        description: Optional[str] = None,
        actions_required: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword status: Indicates whether the connection has been Approved/Rejected/Removed by the
         owner of the service. Known values are: "Pending", "Approved", and "Rejected".
        :paramtype status: str or
         ~azure.mgmt.powerplatform.models.PrivateEndpointServiceConnectionStatus
        :keyword description: The reason for approval/rejection of the connection.
        :paramtype description: str
        :keyword actions_required: A message indicating if changes on the service provider require any
         updates on the consumer.
        :paramtype actions_required: str
        """
        super().__init__(**kwargs)
        self.status = status
        self.description = description
        self.actions_required = actions_required


class Properties(_serialization.Model):
    """The properties that define configuration for the enterprise policy.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar system_id: The internally assigned unique identifier of the resource.
    :vartype system_id: str
    :ivar lockbox: Settings concerning lockbox.
    :vartype lockbox: ~azure.mgmt.powerplatform.models.PropertiesLockbox
    :ivar encryption: The encryption settings for a configuration store.
    :vartype encryption: ~azure.mgmt.powerplatform.models.PropertiesEncryption
    :ivar network_injection: Settings concerning network injection.
    :vartype network_injection: ~azure.mgmt.powerplatform.models.PropertiesNetworkInjection
    :ivar health_status: The health status of the resource. Known values are: "Undetermined",
     "Healthy", "Warning", and "Unhealthy".
    :vartype health_status: str or ~azure.mgmt.powerplatform.models.HealthStatus
    """

    _validation = {
        "system_id": {"readonly": True},
    }

    _attribute_map = {
        "system_id": {"key": "systemId", "type": "str"},
        "lockbox": {"key": "lockbox", "type": "PropertiesLockbox"},
        "encryption": {"key": "encryption", "type": "PropertiesEncryption"},
        "network_injection": {"key": "networkInjection", "type": "PropertiesNetworkInjection"},
        "health_status": {"key": "healthStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        lockbox: Optional["_models.PropertiesLockbox"] = None,
        encryption: Optional["_models.PropertiesEncryption"] = None,
        network_injection: Optional["_models.PropertiesNetworkInjection"] = None,
        health_status: Optional[Union[str, "_models.HealthStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword lockbox: Settings concerning lockbox.
        :paramtype lockbox: ~azure.mgmt.powerplatform.models.PropertiesLockbox
        :keyword encryption: The encryption settings for a configuration store.
        :paramtype encryption: ~azure.mgmt.powerplatform.models.PropertiesEncryption
        :keyword network_injection: Settings concerning network injection.
        :paramtype network_injection: ~azure.mgmt.powerplatform.models.PropertiesNetworkInjection
        :keyword health_status: The health status of the resource. Known values are: "Undetermined",
         "Healthy", "Warning", and "Unhealthy".
        :paramtype health_status: str or ~azure.mgmt.powerplatform.models.HealthStatus
        """
        super().__init__(**kwargs)
        self.system_id = None
        self.lockbox = lockbox
        self.encryption = encryption
        self.network_injection = network_injection
        self.health_status = health_status


class PropertiesEncryption(_serialization.Model):
    """The encryption settings for a configuration store.

    :ivar key_vault: Key vault properties.
    :vartype key_vault: ~azure.mgmt.powerplatform.models.KeyVaultProperties
    :ivar state: The state of onboarding, which only appears in the response. Known values are:
     "Enabled", "Disabled", and "NotConfigured".
    :vartype state: str or ~azure.mgmt.powerplatform.models.State
    """

    _attribute_map = {
        "key_vault": {"key": "keyVault", "type": "KeyVaultProperties"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(
        self,
        *,
        key_vault: Optional["_models.KeyVaultProperties"] = None,
        state: Optional[Union[str, "_models.State"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword key_vault: Key vault properties.
        :paramtype key_vault: ~azure.mgmt.powerplatform.models.KeyVaultProperties
        :keyword state: The state of onboarding, which only appears in the response. Known values are:
         "Enabled", "Disabled", and "NotConfigured".
        :paramtype state: str or ~azure.mgmt.powerplatform.models.State
        """
        super().__init__(**kwargs)
        self.key_vault = key_vault
        self.state = state


class PropertiesLockbox(_serialization.Model):
    """Settings concerning lockbox.

    :ivar state: lockbox configuration. Known values are: "Enabled", "Disabled", and
     "NotConfigured".
    :vartype state: str or ~azure.mgmt.powerplatform.models.State
    """

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, *, state: Optional[Union[str, "_models.State"]] = None, **kwargs: Any) -> None:
        """
        :keyword state: lockbox configuration. Known values are: "Enabled", "Disabled", and
         "NotConfigured".
        :paramtype state: str or ~azure.mgmt.powerplatform.models.State
        """
        super().__init__(**kwargs)
        self.state = state


class PropertiesNetworkInjection(_serialization.Model):
    """Settings concerning network injection.

    :ivar virtual_networks: Network injection configuration.
    :vartype virtual_networks: ~azure.mgmt.powerplatform.models.VirtualNetworkPropertiesList
    """

    _attribute_map = {
        "virtual_networks": {"key": "virtualNetworks", "type": "VirtualNetworkPropertiesList"},
    }

    def __init__(
        self, *, virtual_networks: Optional["_models.VirtualNetworkPropertiesList"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword virtual_networks: Network injection configuration.
        :paramtype virtual_networks: ~azure.mgmt.powerplatform.models.VirtualNetworkPropertiesList
        """
        super().__init__(**kwargs)
        self.virtual_networks = virtual_networks


class SubnetProperties(_serialization.Model):
    """Properties of a subnet.

    :ivar name: Subnet name.
    :vartype name: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: Subnet name.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.name = name


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.powerplatform.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.powerplatform.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.powerplatform.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.powerplatform.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class VirtualNetworkProperties(_serialization.Model):
    """Settings concerning the virtual network.

    :ivar id: Uri of the virtual network.
    :vartype id: str
    :ivar subnet: Properties of a subnet.
    :vartype subnet: ~azure.mgmt.powerplatform.models.SubnetProperties
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "subnet": {"key": "subnet", "type": "SubnetProperties"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        subnet: Optional["_models.SubnetProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Uri of the virtual network.
        :paramtype id: str
        :keyword subnet: Properties of a subnet.
        :paramtype subnet: ~azure.mgmt.powerplatform.models.SubnetProperties
        """
        super().__init__(**kwargs)
        self.id = id
        self.subnet = subnet


class VirtualNetworkPropertiesList(_serialization.Model):
    """A list of private link resources.

    :ivar value: Array of virtual networks.
    :vartype value: list[~azure.mgmt.powerplatform.models.VirtualNetworkProperties]
    :ivar next_link: Next page link if any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[VirtualNetworkProperties]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.VirtualNetworkProperties"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Array of virtual networks.
        :paramtype value: list[~azure.mgmt.powerplatform.models.VirtualNetworkProperties]
        :keyword next_link: Next page link if any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link
