# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, List, Optional, TYPE_CHECKING

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ErrorDefinition(_serialization.Model):
    """Error definition.

    :ivar code: Error code.
    :vartype code: str
    :ivar message: Description of the error.
    :vartype message: str
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, code: Optional[str] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword code: Error code.
        :paramtype code: str
        :keyword message: Description of the error.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message


class ErrorResponse(_serialization.Model):
    """Error response indicates that the service is not able to process the incoming request. The
    reason is provided in the error message.

    :ivar error: The error details on why the resource could not be fetched.
    :vartype error: ~azure.mgmt.mcpp.models.ErrorDefinition
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDefinition"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDefinition"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error details on why the resource could not be fetched.
        :paramtype error: ~azure.mgmt.mcpp.models.ErrorDefinition
        """
        super().__init__(**kwargs)
        self.error = error


class MembershipDetailsListResponse(_serialization.Model):
    """Get purchase details of a resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of MembershipDetailsResponse.
    :vartype value: list[~azure.mgmt.mcpp.models.MembershipDetailsResponse]
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[MembershipDetailsResponse]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None


class MembershipDetailsResponse(_serialization.Model):
    """MCPP Purchase details response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: id for the purchase resource.
    :vartype id: str
    :ivar name: purchase resource name.
    :vartype name: str
    :ivar type: Resource type, CloudPartnerProgramMembership.
    :vartype type: str
    :ivar properties: MCPP Purchase details response properties.
    :vartype properties: ~azure.mgmt.mcpp.models.MembershipDetailsResponseProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "MembershipDetailsResponseProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.MembershipDetailsResponseProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: MCPP Purchase details response properties.
        :paramtype properties: ~azure.mgmt.mcpp.models.MembershipDetailsResponseProperties
        """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.properties = properties


class MembershipDetailsResponseProperties(_serialization.Model):
    """MCPP Purchase details response properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar order_id: order number for the purchase.
    :vartype order_id: str
    :ivar order_date_time: date time at which the order was placed.
    :vartype order_date_time: str
    :ivar status: purchase status or the order.
    :vartype status: str
    :ivar provisioning_state: operation details related to the purchase.
    :vartype provisioning_state: JSON
    """

    _validation = {
        "order_id": {"readonly": True},
        "order_date_time": {"readonly": True},
        "status": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "order_id": {"key": "orderId", "type": "str"},
        "order_date_time": {"key": "orderDateTime", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.order_id = None
        self.order_date_time = None
        self.status = None
        self.provisioning_state = None


class Operation(_serialization.Model):
    """REST API operation.

    :ivar name: Operation name: {provider}/{resource}/{operation}.
    :vartype name: str
    :ivar is_data_action: Indicates whether the operation is a data action.
    :vartype is_data_action: bool
    :ivar display: The object that represents the operation.
    :vartype display: ~azure.mgmt.mcpp.models.OperationDisplay
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        is_data_action: Optional[bool] = None,
        display: Optional["_models.OperationDisplay"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Operation name: {provider}/{resource}/{operation}.
        :paramtype name: str
        :keyword is_data_action: Indicates whether the operation is a data action.
        :paramtype is_data_action: bool
        :keyword display: The object that represents the operation.
        :paramtype display: ~azure.mgmt.mcpp.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = name
        self.is_data_action = is_data_action
        self.display = display


class OperationDisplay(_serialization.Model):
    """The object that represents the operation.

    :ivar provider: Service provider: Microsoft.Subscription.
    :vartype provider: str
    :ivar resource: Resource on which the operation is performed: Profile, endpoint, etc.
    :vartype resource: str
    :ivar operation: Operation type: Read, write, delete, etc.
    :vartype operation: str
    :ivar description: Friendly description for the operation.
    :vartype description: str
    """

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(
        self,
        *,
        provider: Optional[str] = None,
        resource: Optional[str] = None,
        operation: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider: Service provider: Microsoft.Subscription.
        :paramtype provider: str
        :keyword resource: Resource on which the operation is performed: Profile, endpoint, etc.
        :paramtype resource: str
        :keyword operation: Operation type: Read, write, delete, etc.
        :paramtype operation: str
        :keyword description: Friendly description for the operation.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class OperationListResult(_serialization.Model):
    """Result of the request to list operations. It contains a list of operations and a URL link to
    get the next set of results.

    :ivar value: List of operations.
    :vartype value: list[~azure.mgmt.mcpp.models.Operation]
    :ivar next_link: URL to get the next set of operation list results if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.Operation"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: List of operations.
        :paramtype value: list[~azure.mgmt.mcpp.models.Operation]
        :keyword next_link: URL to get the next set of operation list results if there are any.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProductCode(_serialization.Model):
    """Unique identifier of the product.

    :ivar product_code: Unique identifier of the product.
    :vartype product_code: str
    """

    _attribute_map = {
        "product_code": {"key": "productCode", "type": "str"},
    }

    def __init__(self, *, product_code: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword product_code: Unique identifier of the product.
        :paramtype product_code: str
        """
        super().__init__(**kwargs)
        self.product_code = product_code
