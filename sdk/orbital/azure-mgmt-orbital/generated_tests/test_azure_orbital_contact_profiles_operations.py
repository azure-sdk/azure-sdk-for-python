# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.orbital import AzureOrbital

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestAzureOrbitalContactProfilesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(AzureOrbital)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_contact_profiles_list_by_subscription(self, resource_group):
        response = self.client.contact_profiles.list_by_subscription(
            api_version="2022-11-01",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_contact_profiles_list(self, resource_group):
        response = self.client.contact_profiles.list(
            resource_group_name=resource_group.name,
            api_version="2022-11-01",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_contact_profiles_get(self, resource_group):
        response = self.client.contact_profiles.get(
            resource_group_name=resource_group.name,
            contact_profile_name="str",
            api_version="2022-11-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_contact_profiles_begin_create_or_update(self, resource_group):
        response = self.client.contact_profiles.begin_create_or_update(
            resource_group_name=resource_group.name,
            contact_profile_name="str",
            parameters={
                "links": [
                    {
                        "channels": [
                            {
                                "bandwidthMHz": 0.0,
                                "centerFrequencyMHz": 0.0,
                                "endPoint": {
                                    "endPointName": "str",
                                    "ipAddress": "str",
                                    "port": "str",
                                    "protocol": "str",
                                },
                                "name": "str",
                                "decodingConfiguration": "str",
                                "demodulationConfiguration": "str",
                                "encodingConfiguration": "str",
                                "modulationConfiguration": "str",
                            }
                        ],
                        "direction": "str",
                        "name": "str",
                        "polarization": "str",
                        "eirpdBW": 0.0,
                        "gainOverTemperature": 0.0,
                    }
                ],
                "location": "str",
                "networkConfiguration": {"subnetId": "str"},
                "autoTrackingConfiguration": "str",
                "eventHubUri": "str",
                "id": "str",
                "minimumElevationDegrees": 0.0,
                "minimumViableContactDuration": "str",
                "name": "str",
                "provisioningState": "str",
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "tags": {"str": "str"},
                "thirdPartyConfigurations": [{"missionConfiguration": "str", "providerName": "str"}],
                "type": "str",
            },
            api_version="2022-11-01",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_contact_profiles_begin_update_tags(self, resource_group):
        response = self.client.contact_profiles.begin_update_tags(
            resource_group_name=resource_group.name,
            contact_profile_name="str",
            parameters={"tags": {"str": "str"}},
            api_version="2022-11-01",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_contact_profiles_begin_delete(self, resource_group):
        response = self.client.contact_profiles.begin_delete(
            resource_group_name=resource_group.name,
            contact_profile_name="str",
            api_version="2022-11-01",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
