# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.orbital import AzureOrbital

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-orbital
# USAGE
    python contact_profile_create.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = AzureOrbital(
        credential=DefaultAzureCredential(),
        subscription_id="c1be1141-a7c9-4aac-9608-3c2e2f1152c3",
    )

    response = client.contact_profiles.begin_create_or_update(
        resource_group_name="contoso-Rgp",
        contact_profile_name="CONTOSO-CP",
        parameters={
            "location": "eastus2",
            "properties": {
                "autoTrackingConfiguration": "disabled",
                "eventHubUri": "/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/resourceGroups/contoso-Rgp/providers/Microsoft.EventHub/namespaces/contosoHub/eventhubs/contosoHub",
                "links": [
                    {
                        "channels": [
                            {
                                "bandwidthMHz": 2,
                                "centerFrequencyMHz": 2250,
                                "endPoint": {
                                    "endPointName": "ContosoTest_Uplink",
                                    "ipAddress": "10.1.0.4",
                                    "port": "50000",
                                    "protocol": "TCP",
                                },
                                "name": "contoso-uplink-channel",
                            }
                        ],
                        "direction": "Uplink",
                        "eirpdBW": 45,
                        "gainOverTemperature": 0,
                        "name": "contoso-uplink",
                        "polarization": "LHCP",
                    },
                    {
                        "channels": [
                            {
                                "bandwidthMHz": 15,
                                "centerFrequencyMHz": 8160,
                                "endPoint": {
                                    "endPointName": "ContosoTest_Downlink",
                                    "ipAddress": "10.1.0.5",
                                    "port": "50001",
                                    "protocol": "UDP",
                                },
                                "name": "contoso-downlink-channel",
                            }
                        ],
                        "direction": "Downlink",
                        "eirpdBW": 0,
                        "gainOverTemperature": 25,
                        "name": "contoso-downlink",
                        "polarization": "RHCP",
                    },
                ],
                "minimumElevationDegrees": 5,
                "minimumViableContactDuration": "PT1M",
                "networkConfiguration": {
                    "subnetId": "/subscriptions/c1be1141-a7c9-4aac-9608-3c2e2f1152c3/resourceGroups/contoso-Rgp/providers/Microsoft.Network/virtualNetworks/contoso-vnet/subnets/orbital-delegated-subnet"
                },
                "thirdPartyConfigurations": [
                    {"missionConfiguration": "Ksat_MissionConfiguration", "providerName": "KSAT"},
                    {"missionConfiguration": "Viasat_Configuration", "providerName": "VIASAT"},
                ],
            },
        },
    ).result()
    print(response)


# x-ms-original-file: specification/orbital/resource-manager/Microsoft.Orbital/stable/2022-11-01/examples/ContactProfileCreate.json
if __name__ == "__main__":
    main()
