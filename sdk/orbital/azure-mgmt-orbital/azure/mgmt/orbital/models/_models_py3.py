# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CloudErrorBody(_serialization.Model):
    """An error response from the service.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: str
    :ivar target: The target of the particular error. For example, the name of the property in
     error.
    :vartype target: str
    :ivar details: A list of additional details about the error.
    :vartype details: list[~azure.mgmt.orbital.models.CloudErrorBody]
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[CloudErrorBody]"},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        target: Optional[str] = None,
        details: Optional[List["_models.CloudErrorBody"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword code: An identifier for the error. Codes are invariant and are intended to be consumed
         programmatically.
        :paramtype code: str
        :keyword message: A message describing the error, intended to be suitable for display in a user
         interface.
        :paramtype message: str
        :keyword target: The target of the particular error. For example, the name of the property in
         error.
        :paramtype target: str
        :keyword details: A list of additional details about the error.
        :paramtype details: list[~azure.mgmt.orbital.models.CloudErrorBody]
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class EdgeSite(TrackedResource):
    """A customer's reference to a global communications site site.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar id_properties_global_communications_site_id: The Azure Orbital Digital Ground site's
     resource ID. Required.
    :vartype id_properties_global_communications_site_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "id_properties_global_communications_site_id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "id_properties_global_communications_site_id": {"key": "properties.globalCommunicationsSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        id_properties_global_communications_site_id: str,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword id_properties_global_communications_site_id: The Azure Orbital Digital Ground site's
         resource ID. Required.
        :paramtype id_properties_global_communications_site_id: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.id_properties_global_communications_site_id = id_properties_global_communications_site_id


class EdgeSiteListResult(_serialization.Model):
    """Response for an API service call that lists Edge Sites.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: A list of edge site resources.
    :vartype value: list[~azure.mgmt.orbital.models.EdgeSite]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[EdgeSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.EdgeSite"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: A list of edge site resources.
        :paramtype value: list[~azure.mgmt.orbital.models.EdgeSite]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class EdgeSitesProperties(_serialization.Model):
    """Properties object for an edge site.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The Azure Orbital Digital Ground site's resource ID. Required.
    :vartype id: str
    """

    _validation = {
        "id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "globalCommunicationsSite.id", "type": "str"},
    }

    def __init__(self, *, id: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The Azure Orbital Digital Ground site's resource ID. Required.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class EdgeSiteProperties(EdgeSitesProperties):
    """The properties bag for this resource.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The Azure Orbital Digital Ground site's resource ID. Required.
    :vartype id: str
    """

    _validation = {
        "id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "globalCommunicationsSite.id", "type": "str"},
    }

    def __init__(self, *, id: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The Azure Orbital Digital Ground site's resource ID. Required.
        :paramtype id: str
        """
        super().__init__(id=id, **kwargs)


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.orbital.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.orbital.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.orbital.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.orbital.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class GlobalCommunicationsSite(ProxyResource):
    """A site where the Orbital network is connected to a partner network.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    :ivar location_data: Describes the location of the Azure Orbital Digital Ground site.
    :vartype location_data:
     ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesLocationData
    :ivar global_communications_site_type: The type of the Azure Orbital Digital Ground site.
     EdgeSite or GroundStation. Known values are: "Edge" and "GroundStation".
    :vartype global_communications_site_type: str or
     ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType
    :ivar partner_routers: Partner routers connected to this site.
    :vartype partner_routers: list[~azure.mgmt.orbital.models.PartnerRouter]
    :ivar partner_site_bandwidth: The bandwidth per partner router cross-connection at this Azure
     Orbital Digital Ground site, measured in bits per second.
    :vartype partner_site_bandwidth: int
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "partner_routers": {"readonly": True},
        "partner_site_bandwidth": {"readonly": True, "minimum": 0},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "location_data": {"key": "properties.locationData", "type": "GlobalCommunicationsSitesPropertiesLocationData"},
        "global_communications_site_type": {"key": "properties.globalCommunicationsSiteType", "type": "str"},
        "partner_routers": {"key": "properties.partnerRouters", "type": "[PartnerRouter]"},
        "partner_site_bandwidth": {"key": "properties.partnerSiteBandwidth", "type": "int"},
    }

    def __init__(
        self,
        *,
        location_data: Optional["_models.GlobalCommunicationsSitesPropertiesLocationData"] = None,
        global_communications_site_type: Optional[
            Union[str, "_models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location_data: Describes the location of the Azure Orbital Digital Ground site.
        :paramtype location_data:
         ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesLocationData
        :keyword global_communications_site_type: The type of the Azure Orbital Digital Ground site.
         EdgeSite or GroundStation. Known values are: "Edge" and "GroundStation".
        :paramtype global_communications_site_type: str or
         ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType
        """
        super().__init__(**kwargs)
        self.location_data = location_data
        self.global_communications_site_type = global_communications_site_type
        self.partner_routers = None
        self.partner_site_bandwidth = None


class GlobalCommunicationsSiteListResult(_serialization.Model):
    """Response for an API service call that lists Global Communications Sites.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: A list of global communications sites.
    :vartype value: list[~azure.mgmt.orbital.models.GlobalCommunicationsSite]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[GlobalCommunicationsSite]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.GlobalCommunicationsSite"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: A list of global communications sites.
        :paramtype value: list[~azure.mgmt.orbital.models.GlobalCommunicationsSite]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class GlobalCommunicationsSitesProperties(_serialization.Model):
    """Properties object for a Azure Orbital Digital Ground site.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar location_data: Describes the location of the Azure Orbital Digital Ground site.
    :vartype location_data:
     ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesLocationData
    :ivar global_communications_site_type: The type of the Azure Orbital Digital Ground site.
     EdgeSite or GroundStation. Known values are: "Edge" and "GroundStation".
    :vartype global_communications_site_type: str or
     ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType
    :ivar partner_routers: Partner routers connected to this site.
    :vartype partner_routers: list[~azure.mgmt.orbital.models.PartnerRouter]
    :ivar partner_site_bandwidth: The bandwidth per partner router cross-connection at this Azure
     Orbital Digital Ground site, measured in bits per second.
    :vartype partner_site_bandwidth: int
    """

    _validation = {
        "partner_routers": {"readonly": True},
        "partner_site_bandwidth": {"readonly": True, "minimum": 0},
    }

    _attribute_map = {
        "location_data": {"key": "locationData", "type": "GlobalCommunicationsSitesPropertiesLocationData"},
        "global_communications_site_type": {"key": "globalCommunicationsSiteType", "type": "str"},
        "partner_routers": {"key": "partnerRouters", "type": "[PartnerRouter]"},
        "partner_site_bandwidth": {"key": "partnerSiteBandwidth", "type": "int"},
    }

    def __init__(
        self,
        *,
        location_data: Optional["_models.GlobalCommunicationsSitesPropertiesLocationData"] = None,
        global_communications_site_type: Optional[
            Union[str, "_models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location_data: Describes the location of the Azure Orbital Digital Ground site.
        :paramtype location_data:
         ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesLocationData
        :keyword global_communications_site_type: The type of the Azure Orbital Digital Ground site.
         EdgeSite or GroundStation. Known values are: "Edge" and "GroundStation".
        :paramtype global_communications_site_type: str or
         ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType
        """
        super().__init__(**kwargs)
        self.location_data = location_data
        self.global_communications_site_type = global_communications_site_type
        self.partner_routers = None
        self.partner_site_bandwidth = None


class GlobalCommunicationsSiteProperties(GlobalCommunicationsSitesProperties):
    """The properties bag for this resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar location_data: Describes the location of the Azure Orbital Digital Ground site.
    :vartype location_data:
     ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesLocationData
    :ivar global_communications_site_type: The type of the Azure Orbital Digital Ground site.
     EdgeSite or GroundStation. Known values are: "Edge" and "GroundStation".
    :vartype global_communications_site_type: str or
     ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType
    :ivar partner_routers: Partner routers connected to this site.
    :vartype partner_routers: list[~azure.mgmt.orbital.models.PartnerRouter]
    :ivar partner_site_bandwidth: The bandwidth per partner router cross-connection at this Azure
     Orbital Digital Ground site, measured in bits per second.
    :vartype partner_site_bandwidth: int
    """

    _validation = {
        "partner_routers": {"readonly": True},
        "partner_site_bandwidth": {"readonly": True, "minimum": 0},
    }

    _attribute_map = {
        "location_data": {"key": "locationData", "type": "GlobalCommunicationsSitesPropertiesLocationData"},
        "global_communications_site_type": {"key": "globalCommunicationsSiteType", "type": "str"},
        "partner_routers": {"key": "partnerRouters", "type": "[PartnerRouter]"},
        "partner_site_bandwidth": {"key": "partnerSiteBandwidth", "type": "int"},
    }

    def __init__(
        self,
        *,
        location_data: Optional["_models.GlobalCommunicationsSitesPropertiesLocationData"] = None,
        global_communications_site_type: Optional[
            Union[str, "_models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location_data: Describes the location of the Azure Orbital Digital Ground site.
        :paramtype location_data:
         ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesLocationData
        :keyword global_communications_site_type: The type of the Azure Orbital Digital Ground site.
         EdgeSite or GroundStation. Known values are: "Edge" and "GroundStation".
        :paramtype global_communications_site_type: str or
         ~azure.mgmt.orbital.models.GlobalCommunicationsSitesPropertiesGlobalCommunicationsSiteType
        """
        super().__init__(
            location_data=location_data, global_communications_site_type=global_communications_site_type, **kwargs
        )


class LocationData(_serialization.Model):
    """Describes a location outside of Azure.

    All required parameters must be populated in order to send to Azure.

    :ivar city: The city of the location (e.g., Miami). Required.
    :vartype city: str
    :ivar district: For example, the state (e.g., Florida), province (e.g., Ontario), or region
     (e.g., Tuscany) of the location. Required.
    :vartype district: str
    :ivar country: The nation (e.g., United States of America) of the location. Required.
    :vartype country: str
    :ivar closest_azure_region: The name of the closest Azure region, (e.g., westus2).
    :vartype closest_azure_region: str
    :ivar extra: Any extra information needed to uniquely identify the location (e.g., zip code).
    :vartype extra: str
    """

    _validation = {
        "city": {"required": True},
        "district": {"required": True},
        "country": {"required": True},
    }

    _attribute_map = {
        "city": {"key": "city", "type": "str"},
        "district": {"key": "district", "type": "str"},
        "country": {"key": "country", "type": "str"},
        "closest_azure_region": {"key": "closestAzureRegion", "type": "str"},
        "extra": {"key": "extra", "type": "str"},
    }

    def __init__(
        self,
        *,
        city: str,
        district: str,
        country: str,
        closest_azure_region: Optional[str] = None,
        extra: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword city: The city of the location (e.g., Miami). Required.
        :paramtype city: str
        :keyword district: For example, the state (e.g., Florida), province (e.g., Ontario), or region
         (e.g., Tuscany) of the location. Required.
        :paramtype district: str
        :keyword country: The nation (e.g., United States of America) of the location. Required.
        :paramtype country: str
        :keyword closest_azure_region: The name of the closest Azure region, (e.g., westus2).
        :paramtype closest_azure_region: str
        :keyword extra: Any extra information needed to uniquely identify the location (e.g., zip
         code).
        :paramtype extra: str
        """
        super().__init__(**kwargs)
        self.city = city
        self.district = district
        self.country = country
        self.closest_azure_region = closest_azure_region
        self.extra = extra


class GlobalCommunicationsSitesPropertiesLocationData(LocationData):
    """Describes the location of the Azure Orbital Digital Ground site.

    All required parameters must be populated in order to send to Azure.

    :ivar city: The city of the location (e.g., Miami). Required.
    :vartype city: str
    :ivar district: For example, the state (e.g., Florida), province (e.g., Ontario), or region
     (e.g., Tuscany) of the location. Required.
    :vartype district: str
    :ivar country: The nation (e.g., United States of America) of the location. Required.
    :vartype country: str
    :ivar closest_azure_region: The name of the closest Azure region, (e.g., westus2).
    :vartype closest_azure_region: str
    :ivar extra: Any extra information needed to uniquely identify the location (e.g., zip code).
    :vartype extra: str
    """

    _validation = {
        "city": {"required": True},
        "district": {"required": True},
        "country": {"required": True},
    }

    _attribute_map = {
        "city": {"key": "city", "type": "str"},
        "district": {"key": "district", "type": "str"},
        "country": {"key": "country", "type": "str"},
        "closest_azure_region": {"key": "closestAzureRegion", "type": "str"},
        "extra": {"key": "extra", "type": "str"},
    }

    def __init__(
        self,
        *,
        city: str,
        district: str,
        country: str,
        closest_azure_region: Optional[str] = None,
        extra: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword city: The city of the location (e.g., Miami). Required.
        :paramtype city: str
        :keyword district: For example, the state (e.g., Florida), province (e.g., Ontario), or region
         (e.g., Tuscany) of the location. Required.
        :paramtype district: str
        :keyword country: The nation (e.g., United States of America) of the location. Required.
        :paramtype country: str
        :keyword closest_azure_region: The name of the closest Azure region, (e.g., westus2).
        :paramtype closest_azure_region: str
        :keyword extra: Any extra information needed to uniquely identify the location (e.g., zip
         code).
        :paramtype extra: str
        """
        super().__init__(
            city=city,
            district=district,
            country=country,
            closest_azure_region=closest_azure_region,
            extra=extra,
            **kwargs
        )


class GroundStation(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Ground Station contains one or more antennas.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar city: City of ground station.
    :vartype city: str
    :ivar capabilities: Ground station capabilities.
    :vartype capabilities: list[str or ~azure.mgmt.orbital.models.Capability]
    :ivar provider_name: Ground station provider name.
    :vartype provider_name: str
    :ivar longitude_degrees: Longitude of the ground station in decimal degrees.
    :vartype longitude_degrees: float
    :ivar latitude_degrees: Latitude of the ground station in decimal degrees.
    :vartype latitude_degrees: float
    :ivar altitude_meters: Altitude of the ground station.
    :vartype altitude_meters: float
    :ivar release_mode: Release Status of a ground station. Known values are: "Preview" and "GA".
    :vartype release_mode: str or ~azure.mgmt.orbital.models.ReleaseMode
    :ivar id_properties_global_communications_site_id: The Azure Orbital Digital Ground site's
     resource ID.
    :vartype id_properties_global_communications_site_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "release_mode": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "city": {"key": "properties.city", "type": "str"},
        "capabilities": {"key": "properties.capabilities", "type": "[str]"},
        "provider_name": {"key": "properties.providerName", "type": "str"},
        "longitude_degrees": {"key": "properties.longitudeDegrees", "type": "float"},
        "latitude_degrees": {"key": "properties.latitudeDegrees", "type": "float"},
        "altitude_meters": {"key": "properties.altitudeMeters", "type": "float"},
        "release_mode": {"key": "properties.releaseMode", "type": "str"},
        "id_properties_global_communications_site_id": {"key": "properties.globalCommunicationsSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        city: Optional[str] = None,
        capabilities: Optional[List[Union[str, "_models.Capability"]]] = None,
        provider_name: Optional[str] = None,
        longitude_degrees: Optional[float] = None,
        latitude_degrees: Optional[float] = None,
        altitude_meters: Optional[float] = None,
        id_properties_global_communications_site_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword city: City of ground station.
        :paramtype city: str
        :keyword capabilities: Ground station capabilities.
        :paramtype capabilities: list[str or ~azure.mgmt.orbital.models.Capability]
        :keyword provider_name: Ground station provider name.
        :paramtype provider_name: str
        :keyword longitude_degrees: Longitude of the ground station in decimal degrees.
        :paramtype longitude_degrees: float
        :keyword latitude_degrees: Latitude of the ground station in decimal degrees.
        :paramtype latitude_degrees: float
        :keyword altitude_meters: Altitude of the ground station.
        :paramtype altitude_meters: float
        :keyword id_properties_global_communications_site_id: The Azure Orbital Digital Ground site's
         resource ID.
        :paramtype id_properties_global_communications_site_id: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.city = city
        self.capabilities = capabilities
        self.provider_name = provider_name
        self.longitude_degrees = longitude_degrees
        self.latitude_degrees = latitude_degrees
        self.altitude_meters = altitude_meters
        self.release_mode = None
        self.id_properties_global_communications_site_id = id_properties_global_communications_site_id


class GroundStationListResult(_serialization.Model):
    """Response for the ListGroundStations API service call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: A list of ground station resources.
    :vartype value: list[~azure.mgmt.orbital.models.GroundStation]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[GroundStation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.GroundStation"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: A list of ground station resources.
        :paramtype value: list[~azure.mgmt.orbital.models.GroundStation]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class GroundStationsProperties(_serialization.Model):
    """List of ground station resource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar city: City of ground station.
    :vartype city: str
    :ivar capabilities: Ground station capabilities. Required.
    :vartype capabilities: list[str or ~azure.mgmt.orbital.models.Capability]
    :ivar provider_name: Ground station provider name.
    :vartype provider_name: str
    :ivar longitude_degrees: Longitude of the ground station in decimal degrees.
    :vartype longitude_degrees: float
    :ivar latitude_degrees: Latitude of the ground station in decimal degrees.
    :vartype latitude_degrees: float
    :ivar altitude_meters: Altitude of the ground station.
    :vartype altitude_meters: float
    :ivar release_mode: Release Status of a ground station. Known values are: "Preview" and "GA".
    :vartype release_mode: str or ~azure.mgmt.orbital.models.ReleaseMode
    :ivar id: The Azure Orbital Digital Ground site's resource ID. Required.
    :vartype id: str
    """

    _validation = {
        "capabilities": {"required": True},
        "release_mode": {"readonly": True},
        "id": {"required": True},
    }

    _attribute_map = {
        "city": {"key": "city", "type": "str"},
        "capabilities": {"key": "capabilities", "type": "[str]"},
        "provider_name": {"key": "providerName", "type": "str"},
        "longitude_degrees": {"key": "longitudeDegrees", "type": "float"},
        "latitude_degrees": {"key": "latitudeDegrees", "type": "float"},
        "altitude_meters": {"key": "altitudeMeters", "type": "float"},
        "release_mode": {"key": "releaseMode", "type": "str"},
        "id": {"key": "globalCommunicationsSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        capabilities: List[Union[str, "_models.Capability"]],
        id: str,  # pylint: disable=redefined-builtin
        city: Optional[str] = None,
        provider_name: Optional[str] = None,
        longitude_degrees: Optional[float] = None,
        latitude_degrees: Optional[float] = None,
        altitude_meters: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword city: City of ground station.
        :paramtype city: str
        :keyword capabilities: Ground station capabilities. Required.
        :paramtype capabilities: list[str or ~azure.mgmt.orbital.models.Capability]
        :keyword provider_name: Ground station provider name.
        :paramtype provider_name: str
        :keyword longitude_degrees: Longitude of the ground station in decimal degrees.
        :paramtype longitude_degrees: float
        :keyword latitude_degrees: Latitude of the ground station in decimal degrees.
        :paramtype latitude_degrees: float
        :keyword altitude_meters: Altitude of the ground station.
        :paramtype altitude_meters: float
        :keyword id: The Azure Orbital Digital Ground site's resource ID. Required.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.city = city
        self.capabilities = capabilities
        self.provider_name = provider_name
        self.longitude_degrees = longitude_degrees
        self.latitude_degrees = latitude_degrees
        self.altitude_meters = altitude_meters
        self.release_mode = None
        self.id = id


class GroundStationProperties(GroundStationsProperties):
    """Properties of the Ground Station.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar city: City of ground station.
    :vartype city: str
    :ivar capabilities: Ground station capabilities. Required.
    :vartype capabilities: list[str or ~azure.mgmt.orbital.models.Capability]
    :ivar provider_name: Ground station provider name.
    :vartype provider_name: str
    :ivar longitude_degrees: Longitude of the ground station in decimal degrees.
    :vartype longitude_degrees: float
    :ivar latitude_degrees: Latitude of the ground station in decimal degrees.
    :vartype latitude_degrees: float
    :ivar altitude_meters: Altitude of the ground station.
    :vartype altitude_meters: float
    :ivar release_mode: Release Status of a ground station. Known values are: "Preview" and "GA".
    :vartype release_mode: str or ~azure.mgmt.orbital.models.ReleaseMode
    :ivar id: The Azure Orbital Digital Ground site's resource ID. Required.
    :vartype id: str
    """

    _validation = {
        "capabilities": {"required": True},
        "release_mode": {"readonly": True},
        "id": {"required": True},
    }

    _attribute_map = {
        "city": {"key": "city", "type": "str"},
        "capabilities": {"key": "capabilities", "type": "[str]"},
        "provider_name": {"key": "providerName", "type": "str"},
        "longitude_degrees": {"key": "longitudeDegrees", "type": "float"},
        "latitude_degrees": {"key": "latitudeDegrees", "type": "float"},
        "altitude_meters": {"key": "altitudeMeters", "type": "float"},
        "release_mode": {"key": "releaseMode", "type": "str"},
        "id": {"key": "globalCommunicationsSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        capabilities: List[Union[str, "_models.Capability"]],
        id: str,  # pylint: disable=redefined-builtin
        city: Optional[str] = None,
        provider_name: Optional[str] = None,
        longitude_degrees: Optional[float] = None,
        latitude_degrees: Optional[float] = None,
        altitude_meters: Optional[float] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword city: City of ground station.
        :paramtype city: str
        :keyword capabilities: Ground station capabilities. Required.
        :paramtype capabilities: list[str or ~azure.mgmt.orbital.models.Capability]
        :keyword provider_name: Ground station provider name.
        :paramtype provider_name: str
        :keyword longitude_degrees: Longitude of the ground station in decimal degrees.
        :paramtype longitude_degrees: float
        :keyword latitude_degrees: Latitude of the ground station in decimal degrees.
        :paramtype latitude_degrees: float
        :keyword altitude_meters: Altitude of the ground station.
        :paramtype altitude_meters: float
        :keyword id: The Azure Orbital Digital Ground site's resource ID. Required.
        :paramtype id: str
        """
        super().__init__(
            city=city,
            capabilities=capabilities,
            provider_name=provider_name,
            longitude_degrees=longitude_degrees,
            latitude_degrees=latitude_degrees,
            altitude_meters=altitude_meters,
            id=id,
            **kwargs
        )


class L2Connection(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Connects an edge site to an orbital gateway and describes what layer 2 traffic to forward
    between them.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.orbital.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar provisioning_state: The current state of the resource's creation, deletion, or
     modification. Known values are: "Creating", "Succeeded", "Failed", "Canceled", "Updating", and
     "Deleting".
    :vartype provisioning_state: str or
     ~azure.mgmt.orbital.models.L2ConnectionsPropertiesProvisioningState
    :ivar circuit_id: Globally-unique identifier for this connection that is to be used as a
     circuit ID.
    :vartype circuit_id: str
    :ivar vlan_id: The VLAN ID for the L2 connection. Required.
    :vartype vlan_id: int
    :ivar name_properties_ground_station_partner_router_name: The unique name of the partner router
     that cross-connects with the Orbital Edge Router at the ground station site. Required.
    :vartype name_properties_ground_station_partner_router_name: str
    :ivar id_properties_ground_station_id: The ground station's resource ID. Required.
    :vartype id_properties_ground_station_id: str
    :ivar name_properties_edge_site_partner_router_name: The unique name of the partner router that
     cross-connects with the Orbital Edge Router at the edge site. Required.
    :vartype name_properties_edge_site_partner_router_name: str
    :ivar id_properties_edge_site_id: The edge site's resource ID. Required.
    :vartype id_properties_edge_site_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
        "circuit_id": {"readonly": True},
        "vlan_id": {"required": True, "maximum": 4094, "minimum": 1},
        "name_properties_ground_station_partner_router_name": {"required": True},
        "id_properties_ground_station_id": {"required": True},
        "name_properties_edge_site_partner_router_name": {"required": True},
        "id_properties_edge_site_id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "circuit_id": {"key": "properties.circuitId", "type": "str"},
        "vlan_id": {"key": "properties.vlanId", "type": "int"},
        "name_properties_ground_station_partner_router_name": {
            "key": "properties.groundStationPartnerRouter.name",
            "type": "str",
        },
        "id_properties_ground_station_id": {"key": "properties.groundStation.id", "type": "str"},
        "name_properties_edge_site_partner_router_name": {
            "key": "properties.edgeSitePartnerRouter.name",
            "type": "str",
        },
        "id_properties_edge_site_id": {"key": "properties.edgeSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        vlan_id: int,
        name_properties_ground_station_partner_router_name: str,
        id_properties_ground_station_id: str,
        name_properties_edge_site_partner_router_name: str,
        id_properties_edge_site_id: str,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword vlan_id: The VLAN ID for the L2 connection. Required.
        :paramtype vlan_id: int
        :keyword name_properties_ground_station_partner_router_name: The unique name of the partner
         router that cross-connects with the Orbital Edge Router at the ground station site. Required.
        :paramtype name_properties_ground_station_partner_router_name: str
        :keyword id_properties_ground_station_id: The ground station's resource ID. Required.
        :paramtype id_properties_ground_station_id: str
        :keyword name_properties_edge_site_partner_router_name: The unique name of the partner router
         that cross-connects with the Orbital Edge Router at the edge site. Required.
        :paramtype name_properties_edge_site_partner_router_name: str
        :keyword id_properties_edge_site_id: The edge site's resource ID. Required.
        :paramtype id_properties_edge_site_id: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.provisioning_state = None
        self.circuit_id = None
        self.vlan_id = vlan_id
        self.name_properties_ground_station_partner_router_name = name_properties_ground_station_partner_router_name
        self.id_properties_ground_station_id = id_properties_ground_station_id
        self.name_properties_edge_site_partner_router_name = name_properties_edge_site_partner_router_name
        self.id_properties_edge_site_id = id_properties_edge_site_id


class L2ConnectionListResult(_serialization.Model):
    """Response for an API service call that lists L2 Connections.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: A list of L2 Connection resources.
    :vartype value: list[~azure.mgmt.orbital.models.L2Connection]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[L2Connection]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.L2Connection"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: A list of L2 Connection resources.
        :paramtype value: list[~azure.mgmt.orbital.models.L2Connection]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class L2ConnectionsProperties(_serialization.Model):
    """Properties object for an L2 Connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar provisioning_state: The current state of the resource's creation, deletion, or
     modification. Known values are: "Creating", "Succeeded", "Failed", "Canceled", "Updating", and
     "Deleting".
    :vartype provisioning_state: str or
     ~azure.mgmt.orbital.models.L2ConnectionsPropertiesProvisioningState
    :ivar circuit_id: Globally-unique identifier for this connection that is to be used as a
     circuit ID.
    :vartype circuit_id: str
    :ivar vlan_id: The VLAN ID for the L2 connection. Required.
    :vartype vlan_id: int
    :ivar name_ground_station_partner_router_name: The unique name of the partner router that
     cross-connects with the Orbital Edge Router at the ground station site. Required.
    :vartype name_ground_station_partner_router_name: str
    :ivar id_ground_station_id: The ground station's resource ID. Required.
    :vartype id_ground_station_id: str
    :ivar name_edge_site_partner_router_name: The unique name of the partner router that
     cross-connects with the Orbital Edge Router at the edge site. Required.
    :vartype name_edge_site_partner_router_name: str
    :ivar id_edge_site_id: The edge site's resource ID. Required.
    :vartype id_edge_site_id: str
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "circuit_id": {"readonly": True},
        "vlan_id": {"required": True, "maximum": 4094, "minimum": 1},
        "name_ground_station_partner_router_name": {"required": True},
        "id_ground_station_id": {"required": True},
        "name_edge_site_partner_router_name": {"required": True},
        "id_edge_site_id": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "circuit_id": {"key": "circuitId", "type": "str"},
        "vlan_id": {"key": "vlanId", "type": "int"},
        "name_ground_station_partner_router_name": {"key": "groundStationPartnerRouter.name", "type": "str"},
        "id_ground_station_id": {"key": "groundStation.id", "type": "str"},
        "name_edge_site_partner_router_name": {"key": "edgeSitePartnerRouter.name", "type": "str"},
        "id_edge_site_id": {"key": "edgeSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        vlan_id: int,
        name_ground_station_partner_router_name: str,
        id_ground_station_id: str,
        name_edge_site_partner_router_name: str,
        id_edge_site_id: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword vlan_id: The VLAN ID for the L2 connection. Required.
        :paramtype vlan_id: int
        :keyword name_ground_station_partner_router_name: The unique name of the partner router that
         cross-connects with the Orbital Edge Router at the ground station site. Required.
        :paramtype name_ground_station_partner_router_name: str
        :keyword id_ground_station_id: The ground station's resource ID. Required.
        :paramtype id_ground_station_id: str
        :keyword name_edge_site_partner_router_name: The unique name of the partner router that
         cross-connects with the Orbital Edge Router at the edge site. Required.
        :paramtype name_edge_site_partner_router_name: str
        :keyword id_edge_site_id: The edge site's resource ID. Required.
        :paramtype id_edge_site_id: str
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.circuit_id = None
        self.vlan_id = vlan_id
        self.name_ground_station_partner_router_name = name_ground_station_partner_router_name
        self.id_ground_station_id = id_ground_station_id
        self.name_edge_site_partner_router_name = name_edge_site_partner_router_name
        self.id_edge_site_id = id_edge_site_id


class L2ConnectionProperties(L2ConnectionsProperties):
    """The properties bag for this resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar provisioning_state: The current state of the resource's creation, deletion, or
     modification. Known values are: "Creating", "Succeeded", "Failed", "Canceled", "Updating", and
     "Deleting".
    :vartype provisioning_state: str or
     ~azure.mgmt.orbital.models.L2ConnectionsPropertiesProvisioningState
    :ivar circuit_id: Globally-unique identifier for this connection that is to be used as a
     circuit ID.
    :vartype circuit_id: str
    :ivar vlan_id: The VLAN ID for the L2 connection. Required.
    :vartype vlan_id: int
    :ivar name_ground_station_partner_router_name: The unique name of the partner router that
     cross-connects with the Orbital Edge Router at the ground station site. Required.
    :vartype name_ground_station_partner_router_name: str
    :ivar id_ground_station_id: The ground station's resource ID. Required.
    :vartype id_ground_station_id: str
    :ivar name_edge_site_partner_router_name: The unique name of the partner router that
     cross-connects with the Orbital Edge Router at the edge site. Required.
    :vartype name_edge_site_partner_router_name: str
    :ivar id_edge_site_id: The edge site's resource ID. Required.
    :vartype id_edge_site_id: str
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "circuit_id": {"readonly": True},
        "vlan_id": {"required": True, "maximum": 4094, "minimum": 1},
        "name_ground_station_partner_router_name": {"required": True},
        "id_ground_station_id": {"required": True},
        "name_edge_site_partner_router_name": {"required": True},
        "id_edge_site_id": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "circuit_id": {"key": "circuitId", "type": "str"},
        "vlan_id": {"key": "vlanId", "type": "int"},
        "name_ground_station_partner_router_name": {"key": "groundStationPartnerRouter.name", "type": "str"},
        "id_ground_station_id": {"key": "groundStation.id", "type": "str"},
        "name_edge_site_partner_router_name": {"key": "edgeSitePartnerRouter.name", "type": "str"},
        "id_edge_site_id": {"key": "edgeSite.id", "type": "str"},
    }

    def __init__(
        self,
        *,
        vlan_id: int,
        name_ground_station_partner_router_name: str,
        id_ground_station_id: str,
        name_edge_site_partner_router_name: str,
        id_edge_site_id: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword vlan_id: The VLAN ID for the L2 connection. Required.
        :paramtype vlan_id: int
        :keyword name_ground_station_partner_router_name: The unique name of the partner router that
         cross-connects with the Orbital Edge Router at the ground station site. Required.
        :paramtype name_ground_station_partner_router_name: str
        :keyword id_ground_station_id: The ground station's resource ID. Required.
        :paramtype id_ground_station_id: str
        :keyword name_edge_site_partner_router_name: The unique name of the partner router that
         cross-connects with the Orbital Edge Router at the edge site. Required.
        :paramtype name_edge_site_partner_router_name: str
        :keyword id_edge_site_id: The edge site's resource ID. Required.
        :paramtype id_edge_site_id: str
        """
        super().__init__(
            vlan_id=vlan_id,
            name_ground_station_partner_router_name=name_ground_station_partner_router_name,
            id_ground_station_id=id_ground_station_id,
            name_edge_site_partner_router_name=name_edge_site_partner_router_name,
            id_edge_site_id=id_edge_site_id,
            **kwargs
        )


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.orbital.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.orbital.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.orbital.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.orbital.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.orbital.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PartnerRouter(_serialization.Model):
    """One of the partner routers within a global communications site.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The unique name of the partnerRouter.
    :vartype name: str
    """

    _validation = {
        "name": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None


class ProvisionedBandwidth(_serialization.Model):
    """The approximate bandwidth provisioned for a partner on a global communications site.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar mbps: The approximate number of megabits per second that are provisioned for the partner
     on this global communications site.
    :vartype mbps: int
    """

    _validation = {
        "mbps": {"readonly": True, "minimum": 0},
    }

    _attribute_map = {
        "mbps": {"key": "mbps", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.mbps = None


class ResourceIdListResult(_serialization.Model):
    """Response for an API service call that lists the resource IDs of resources associated with
    another resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: A list of Azure Resource IDs.
    :vartype value: list[~azure.mgmt.orbital.models.ResourceIdListResultValueItem]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ResourceIdListResultValueItem]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.ResourceIdListResultValueItem"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: A list of Azure Resource IDs.
        :paramtype value: list[~azure.mgmt.orbital.models.ResourceIdListResultValueItem]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ResourceIdListResultValueItem(_serialization.Model):
    """ResourceIdListResultValueItem.

    :ivar id: The Azure Resource ID.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The Azure Resource ID.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.orbital.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.orbital.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.orbital.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.orbital.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TagsObject(_serialization.Model):
    """Tags object for patch operations.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags
