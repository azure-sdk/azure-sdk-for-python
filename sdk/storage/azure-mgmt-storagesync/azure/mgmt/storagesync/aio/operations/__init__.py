# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._storage_sync_services_operations import StorageSyncServicesOperations  # type: ignore
from ._private_link_resources_operations import PrivateLinkResourcesOperations  # type: ignore
from ._private_endpoint_connections_operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._sync_groups_operations import SyncGroupsOperations  # type: ignore
from ._cloud_endpoints_operations import CloudEndpointsOperations  # type: ignore
from ._server_endpoints_operations import ServerEndpointsOperations  # type: ignore
from ._registered_servers_operations import RegisteredServersOperations  # type: ignore
from ._workflows_operations import WorkflowsOperations  # type: ignore
from ._operation_status_operations import OperationStatusOperations  # type: ignore
from ._microsoft_storage_sync_operations import MicrosoftStorageSyncOperationsMixin  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "StorageSyncServicesOperations",
    "PrivateLinkResourcesOperations",
    "PrivateEndpointConnectionsOperations",
    "SyncGroupsOperations",
    "CloudEndpointsOperations",
    "ServerEndpointsOperations",
    "RegisteredServersOperations",
    "WorkflowsOperations",
    "OperationStatusOperations",
    "MicrosoftStorageSyncOperationsMixin",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
