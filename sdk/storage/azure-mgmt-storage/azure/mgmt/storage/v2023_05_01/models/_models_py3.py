# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Literal, Optional, TYPE_CHECKING, Union

from ... import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.storage.v2023_05_01.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.storage.v2023_05_01.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.storage.v2023_05_01.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.storage.v2023_05_01.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class ExecutionConstraints(_serialization.Model):
    """Constraints for storage task assignment execution.

    :ivar abort_on_failures: abortOnFailures constraint for storage task assignment execution.
    :vartype abort_on_failures: int
    """

    _validation = {
        "abort_on_failures": {"minimum": 0},
    }

    _attribute_map = {
        "abort_on_failures": {"key": "abortOnFailures", "type": "int"},
    }

    def __init__(self, *, abort_on_failures: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword abort_on_failures: abortOnFailures constraint for storage task assignment execution.
        :paramtype abort_on_failures: int
        """
        super().__init__(**kwargs)
        self.abort_on_failures = abort_on_failures


class ExecutionTarget(_serialization.Model):
    """Target for storage task assignment execution.

    :ivar prefix: List of target prefixes.
    :vartype prefix: list[str]
    :ivar exclude_prefix: List of target prefixes to exclude.
    :vartype exclude_prefix: list[str]
    :ivar reserved_path_prefix: List of reserved path prefixes.
    :vartype reserved_path_prefix: list[str]
    """

    _attribute_map = {
        "prefix": {"key": "prefix", "type": "[str]"},
        "exclude_prefix": {"key": "excludePrefix", "type": "[str]"},
        "reserved_path_prefix": {"key": "reservedPathPrefix", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        prefix: Optional[List[str]] = None,
        exclude_prefix: Optional[List[str]] = None,
        reserved_path_prefix: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword prefix: List of target prefixes.
        :paramtype prefix: list[str]
        :keyword exclude_prefix: List of target prefixes to exclude.
        :paramtype exclude_prefix: list[str]
        :keyword reserved_path_prefix: List of reserved path prefixes.
        :paramtype reserved_path_prefix: list[str]
        """
        super().__init__(**kwargs)
        self.prefix = prefix
        self.exclude_prefix = exclude_prefix
        self.reserved_path_prefix = reserved_path_prefix


class ExecutionTrigger(_serialization.Model):
    """Trigger for storage task assignment execution.

    :ivar type: The trigger type of the storage task assignment execution. Known values are:
     "RunOnce" and "OnSchedule".
    :vartype type: str or ~azure.mgmt.storage.v2023_05_01.models.Type
    :ivar parameters: The trigger parameters of the storage task assignment execution.
    :vartype parameters: ~azure.mgmt.storage.v2023_05_01.models.TriggerParameters
    """

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "parameters": {"key": "parameters", "type": "TriggerParameters"},
    }

    def __init__(
        self,
        *,
        type: Optional[Union[str, "_models.Type"]] = None,
        parameters: Optional["_models.TriggerParameters"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: The trigger type of the storage task assignment execution. Known values are:
         "RunOnce" and "OnSchedule".
        :paramtype type: str or ~azure.mgmt.storage.v2023_05_01.models.Type
        :keyword parameters: The trigger parameters of the storage task assignment execution.
        :paramtype parameters: ~azure.mgmt.storage.v2023_05_01.models.TriggerParameters
        """
        super().__init__(**kwargs)
        self.type = type
        self.parameters = parameters


class ResourceAutoGenerated(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.storage.v2023_05_01.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(ResourceAutoGenerated):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.storage.v2023_05_01.models.SystemData
    """


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class StorageTaskAssignment(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """The storage task assignment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar task_id: Id of the corresponding storage task.
    :vartype task_id: str
    :ivar enabled: Whether the storage task assignment is enabled or not.
    :vartype enabled: bool
    :ivar description: Text that describes the purpose of the storage task assignment.
    :vartype description: str
    :ivar execution_context: The storage task assignment execution context.
    :vartype execution_context:
     ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentExecutionContext
    :ivar report: The storage task assignment report.
    :vartype report: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentReport
    :ivar provisioning_state: Represents the provisioning state of the storage task assignment.
     Known values are: "ValidateSubscriptionQuotaBegin", "ValidateSubscriptionQuotaEnd", "Creating",
     "Succeeded", "Deleting", "Canceled", and "Failed".
    :vartype provisioning_state: str or ~azure.mgmt.storage.v2023_05_01.models.ProvisioningState
    :ivar run_status: Run status of storage task assignment.
    :vartype run_status: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "task_id": {"key": "properties.taskId", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "description": {"key": "properties.description", "type": "str"},
        "execution_context": {"key": "properties.executionContext", "type": "StorageTaskAssignmentExecutionContext"},
        "report": {"key": "properties.report", "type": "StorageTaskAssignmentReport"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "run_status": {"key": "properties.runStatus", "type": "StorageTaskReportProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        task_id: Optional[str] = None,
        enabled: Optional[bool] = None,
        description: Optional[str] = None,
        execution_context: Optional["_models.StorageTaskAssignmentExecutionContext"] = None,
        report: Optional["_models.StorageTaskAssignmentReport"] = None,
        run_status: Optional["_models.StorageTaskReportProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword task_id: Id of the corresponding storage task.
        :paramtype task_id: str
        :keyword enabled: Whether the storage task assignment is enabled or not.
        :paramtype enabled: bool
        :keyword description: Text that describes the purpose of the storage task assignment.
        :paramtype description: str
        :keyword execution_context: The storage task assignment execution context.
        :paramtype execution_context:
         ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentExecutionContext
        :keyword report: The storage task assignment report.
        :paramtype report: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentReport
        :keyword run_status: Run status of storage task assignment.
        :paramtype run_status: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.task_id = task_id
        self.enabled = enabled
        self.description = description
        self.execution_context = execution_context
        self.report = report
        self.provisioning_state = None
        self.run_status = run_status


class StorageTaskAssignmentCreateParameters(_serialization.Model):
    """Parameters of the storage task assignment creation request.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar location: Required. Gets or sets the location of the resource. This will be one of the
     supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The
     geo region of a resource cannot be changed once it is created, but if an identical geo region
     is specified on update, the request will succeed.
    :vartype location: str
    :ivar tags: Gets or sets a list of key value pairs that describe the resource. These tags can
     be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags
     can be provided for a resource. Each tag must have a key no greater in length than 128
     characters and a value no greater in length than 256 characters.
    :vartype tags: dict[str, str]
    :ivar task_id: Id of the corresponding storage task.
    :vartype task_id: str
    :ivar enabled: Whether the storage task assignment is enabled or not.
    :vartype enabled: bool
    :ivar description: Text that describes the purpose of the storage task assignment.
    :vartype description: str
    :ivar execution_context: The storage task assignment execution context.
    :vartype execution_context:
     ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentExecutionContext
    :ivar report: The storage task assignment report.
    :vartype report: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentReport
    :ivar provisioning_state: Represents the provisioning state of the storage task assignment.
     Known values are: "ValidateSubscriptionQuotaBegin", "ValidateSubscriptionQuotaEnd", "Creating",
     "Succeeded", "Deleting", "Canceled", and "Failed".
    :vartype provisioning_state: str or ~azure.mgmt.storage.v2023_05_01.models.ProvisioningState
    :ivar run_status: Run status of storage task assignment.
    :vartype run_status: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "task_id": {"key": "properties.taskId", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "description": {"key": "properties.description", "type": "str"},
        "execution_context": {"key": "properties.executionContext", "type": "StorageTaskAssignmentExecutionContext"},
        "report": {"key": "properties.report", "type": "StorageTaskAssignmentReport"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "run_status": {"key": "properties.runStatus", "type": "StorageTaskReportProperties"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        task_id: Optional[str] = None,
        enabled: Optional[bool] = None,
        description: Optional[str] = None,
        execution_context: Optional["_models.StorageTaskAssignmentExecutionContext"] = None,
        report: Optional["_models.StorageTaskAssignmentReport"] = None,
        run_status: Optional["_models.StorageTaskReportProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: Required. Gets or sets the location of the resource. This will be one of the
         supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The
         geo region of a resource cannot be changed once it is created, but if an identical geo region
         is specified on update, the request will succeed.
        :paramtype location: str
        :keyword tags: Gets or sets a list of key value pairs that describe the resource. These tags
         can be used in viewing and grouping this resource (across resource groups). A maximum of 15
         tags can be provided for a resource. Each tag must have a key no greater in length than 128
         characters and a value no greater in length than 256 characters.
        :paramtype tags: dict[str, str]
        :keyword task_id: Id of the corresponding storage task.
        :paramtype task_id: str
        :keyword enabled: Whether the storage task assignment is enabled or not.
        :paramtype enabled: bool
        :keyword description: Text that describes the purpose of the storage task assignment.
        :paramtype description: str
        :keyword execution_context: The storage task assignment execution context.
        :paramtype execution_context:
         ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentExecutionContext
        :keyword report: The storage task assignment report.
        :paramtype report: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentReport
        :keyword run_status: Run status of storage task assignment.
        :paramtype run_status: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
        """
        super().__init__(**kwargs)
        self.location = location
        self.tags = tags
        self.task_id = task_id
        self.enabled = enabled
        self.description = description
        self.execution_context = execution_context
        self.report = report
        self.provisioning_state = None
        self.run_status = run_status


class StorageTaskAssignmentExecutionContext(_serialization.Model):
    """Execution context of the storage task assignment.

    :ivar target: Execution target of the storage task assignment.
    :vartype target: ~azure.mgmt.storage.v2023_05_01.models.ExecutionTarget
    :ivar trigger: Execution trigger of the storage task assignment.
    :vartype trigger: ~azure.mgmt.storage.v2023_05_01.models.ExecutionTrigger
    :ivar constraints: Execution constraints of the storage task assignment.
    :vartype constraints: ~azure.mgmt.storage.v2023_05_01.models.ExecutionConstraints
    """

    _attribute_map = {
        "target": {"key": "target", "type": "ExecutionTarget"},
        "trigger": {"key": "trigger", "type": "ExecutionTrigger"},
        "constraints": {"key": "constraints", "type": "ExecutionConstraints"},
    }

    def __init__(
        self,
        *,
        target: Optional["_models.ExecutionTarget"] = None,
        trigger: Optional["_models.ExecutionTrigger"] = None,
        constraints: Optional["_models.ExecutionConstraints"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword target: Execution target of the storage task assignment.
        :paramtype target: ~azure.mgmt.storage.v2023_05_01.models.ExecutionTarget
        :keyword trigger: Execution trigger of the storage task assignment.
        :paramtype trigger: ~azure.mgmt.storage.v2023_05_01.models.ExecutionTrigger
        :keyword constraints: Execution constraints of the storage task assignment.
        :paramtype constraints: ~azure.mgmt.storage.v2023_05_01.models.ExecutionConstraints
        """
        super().__init__(**kwargs)
        self.target = target
        self.trigger = trigger
        self.constraints = constraints


class StorageTaskAssignmentReport(_serialization.Model):
    """The storage task assignment report.

    :ivar prefix: The prefix of the storage task assignment report.
    :vartype prefix: str
    """

    _attribute_map = {
        "prefix": {"key": "prefix", "type": "str"},
    }

    def __init__(self, *, prefix: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword prefix: The prefix of the storage task assignment report.
        :paramtype prefix: str
        """
        super().__init__(**kwargs)
        self.prefix = prefix


class StorageTaskAssignmentsList(_serialization.Model):
    """List of storage task assignments for the storage account.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Gets the list of storage task assignments and their properties.
    :vartype value: list[~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignment]
    :ivar next_link: Request URL that can be used to query next page of storage task assignments.
     Returned when total number of requested storage task assignments exceed maximum page size.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[StorageTaskAssignment]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class StorageTaskAssignmentUpdateParameters(_serialization.Model):
    """Parameters of the storage task assignment update request.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tags: Gets or sets a list of key value pairs that describe the resource. These tags can
     be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags
     can be provided for a resource. Each tag must have a key no greater in length than 128
     characters and a value no greater in length than 256 characters.
    :vartype tags: dict[str, str]
    :ivar task_id: Id of the corresponding storage task.
    :vartype task_id: str
    :ivar enabled: Whether the storage task assignment is enabled or not.
    :vartype enabled: bool
    :ivar description: Text that describes the purpose of the storage task assignment.
    :vartype description: str
    :ivar execution_context: The storage task assignment execution context.
    :vartype execution_context:
     ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentExecutionContext
    :ivar report: The storage task assignment report.
    :vartype report: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentReport
    :ivar provisioning_state: Represents the provisioning state of the storage task assignment.
     Known values are: "ValidateSubscriptionQuotaBegin", "ValidateSubscriptionQuotaEnd", "Creating",
     "Succeeded", "Deleting", "Canceled", and "Failed".
    :vartype provisioning_state: str or ~azure.mgmt.storage.v2023_05_01.models.ProvisioningState
    :ivar run_status: Run status of storage task assignment.
    :vartype run_status: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "task_id": {"key": "properties.taskId", "type": "str"},
        "enabled": {"key": "properties.enabled", "type": "bool"},
        "description": {"key": "properties.description", "type": "str"},
        "execution_context": {"key": "properties.executionContext", "type": "StorageTaskAssignmentExecutionContext"},
        "report": {"key": "properties.report", "type": "StorageTaskAssignmentReport"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "run_status": {"key": "properties.runStatus", "type": "StorageTaskReportProperties"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        task_id: Optional[str] = None,
        enabled: Optional[bool] = None,
        description: Optional[str] = None,
        execution_context: Optional["_models.StorageTaskAssignmentExecutionContext"] = None,
        report: Optional["_models.StorageTaskAssignmentReport"] = None,
        run_status: Optional["_models.StorageTaskReportProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Gets or sets a list of key value pairs that describe the resource. These tags
         can be used in viewing and grouping this resource (across resource groups). A maximum of 15
         tags can be provided for a resource. Each tag must have a key no greater in length than 128
         characters and a value no greater in length than 256 characters.
        :paramtype tags: dict[str, str]
        :keyword task_id: Id of the corresponding storage task.
        :paramtype task_id: str
        :keyword enabled: Whether the storage task assignment is enabled or not.
        :paramtype enabled: bool
        :keyword description: Text that describes the purpose of the storage task assignment.
        :paramtype description: str
        :keyword execution_context: The storage task assignment execution context.
        :paramtype execution_context:
         ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentExecutionContext
        :keyword report: The storage task assignment report.
        :paramtype report: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskAssignmentReport
        :keyword run_status: Run status of storage task assignment.
        :paramtype run_status: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.task_id = task_id
        self.enabled = enabled
        self.description = description
        self.execution_context = execution_context
        self.report = report
        self.provisioning_state = None
        self.run_status = run_status


class StorageTaskReportInstance(ProxyResource):
    """Storage Tasks run report instance.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.storage.v2023_05_01.models.SystemData
    :ivar properties: Storage task execution report for a run instance.
    :vartype properties: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "StorageTaskReportProperties"},
    }

    def __init__(self, *, properties: Optional["_models.StorageTaskReportProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Storage task execution report for a run instance.
        :paramtype properties: ~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class StorageTaskReportProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Storage task execution report for a run instance.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar task_assignment_id: Represents the Storage Task Assignment Id associated with the storage
     task that provided an execution context.
    :vartype task_assignment_id: str
    :ivar storage_account_id: Represents the Storage Account Id where the storage task definition
     was applied and executed.
    :vartype storage_account_id: str
    :ivar start_time: Start time of the run instance. Filter options such as startTime gt
     '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for
     DateTime properties in
     https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators.  # pylint: disable=line-too-long
    :vartype start_time: str
    :ivar finish_time: End time of the run instance. Filter options such as startTime gt
     '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for
     DateTime properties in
     https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators.  # pylint: disable=line-too-long
    :vartype finish_time: str
    :ivar objects_targeted_count: Total number of objects that meet the condition as defined in the
     storage task assignment execution context. Filter options such as objectsTargetedCount gt 50
     and other comparison operators can be used as described for Numerical properties in
     https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators.  # pylint: disable=line-too-long
    :vartype objects_targeted_count: str
    :ivar objects_operated_on_count: Total number of objects that meet the storage tasks condition
     and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other
     comparison operators can be used as described for Numerical properties in
     https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators.  # pylint: disable=line-too-long
    :vartype objects_operated_on_count: str
    :ivar object_failed_count: Total number of objects where task operation failed when was
     attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be
     used as described for Numerical properties in
     https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators.  # pylint: disable=line-too-long
    :vartype object_failed_count: str
    :ivar objects_succeeded_count: Total number of objects where task operation succeeded when was
     attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators
     can be used as described for Numerical properties in
     https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators.  # pylint: disable=line-too-long
    :vartype objects_succeeded_count: str
    :ivar run_status_error: Well known Azure Storage error code that represents the error
     encountered during execution of the run instance.
    :vartype run_status_error: str
    :ivar run_status_enum: Represents the status of the execution. Known values are: "InProgress"
     and "Finished".
    :vartype run_status_enum: str or ~azure.mgmt.storage.v2023_05_01.models.RunStatusEnum
    :ivar summary_report_path: Full path to the verbose report stored in the reporting container as
     specified in the assignment execution context for the storage account.
    :vartype summary_report_path: str
    :ivar task_id: Storage Task Arm Id.
    :vartype task_id: str
    :ivar task_version: Storage Task Version.
    :vartype task_version: str
    :ivar run_result: Represents the overall result of the execution for the run instance. Known
     values are: "Succeeded" and "Failed".
    :vartype run_result: str or ~azure.mgmt.storage.v2023_05_01.models.RunResult
    """

    _validation = {
        "task_assignment_id": {"readonly": True},
        "storage_account_id": {"readonly": True},
        "start_time": {"readonly": True},
        "finish_time": {"readonly": True},
        "objects_targeted_count": {"readonly": True},
        "objects_operated_on_count": {"readonly": True},
        "object_failed_count": {"readonly": True},
        "objects_succeeded_count": {"readonly": True},
        "run_status_error": {"readonly": True},
        "run_status_enum": {"readonly": True},
        "summary_report_path": {"readonly": True},
        "task_id": {"readonly": True},
        "task_version": {"readonly": True},
        "run_result": {"readonly": True},
    }

    _attribute_map = {
        "task_assignment_id": {"key": "taskAssignmentId", "type": "str"},
        "storage_account_id": {"key": "storageAccountId", "type": "str"},
        "start_time": {"key": "startTime", "type": "str"},
        "finish_time": {"key": "finishTime", "type": "str"},
        "objects_targeted_count": {"key": "objectsTargetedCount", "type": "str"},
        "objects_operated_on_count": {"key": "objectsOperatedOnCount", "type": "str"},
        "object_failed_count": {"key": "objectFailedCount", "type": "str"},
        "objects_succeeded_count": {"key": "objectsSucceededCount", "type": "str"},
        "run_status_error": {"key": "runStatusError", "type": "str"},
        "run_status_enum": {"key": "runStatusEnum", "type": "str"},
        "summary_report_path": {"key": "summaryReportPath", "type": "str"},
        "task_id": {"key": "taskId", "type": "str"},
        "task_version": {"key": "taskVersion", "type": "str"},
        "run_result": {"key": "runResult", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.task_assignment_id = None
        self.storage_account_id = None
        self.start_time = None
        self.finish_time = None
        self.objects_targeted_count = None
        self.objects_operated_on_count = None
        self.object_failed_count = None
        self.objects_succeeded_count = None
        self.run_status_error = None
        self.run_status_enum = None
        self.summary_report_path = None
        self.task_id = None
        self.task_version = None
        self.run_result = None


class StorageTaskReportSummary(_serialization.Model):
    """Fetch Storage Tasks Run Summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Gets storage tasks run result summary.
    :vartype value: list[~azure.mgmt.storage.v2023_05_01.models.StorageTaskReportInstance]
    :ivar next_link: Request URL that can be used to query next page of storage task run results
     summary. Returned when the number of run instances and summary reports exceed maximum page
     size.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[StorageTaskReportInstance]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.storage.v2023_05_01.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.storage.v2023_05_01.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.storage.v2023_05_01.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.storage.v2023_05_01.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TriggerParameters(_serialization.Model):
    """The trigger parameters of the storage task assignment execution.

    :ivar start_from: When to start task execution.
    :vartype start_from: str
    :ivar interval: Run interval of task execution.
    :vartype interval: int
    :ivar interval_unit: Run interval unit of task execution. Default value is "days".
    :vartype interval_unit: str
    :ivar end_by: When to end task execution.
    :vartype end_by: str
    :ivar start_on: startOn for task execution.
    :vartype start_on: str
    """

    _validation = {
        "interval": {"minimum": 1},
    }

    _attribute_map = {
        "start_from": {"key": "startFrom", "type": "str"},
        "interval": {"key": "interval", "type": "int"},
        "interval_unit": {"key": "intervalUnit", "type": "str"},
        "end_by": {"key": "endBy", "type": "str"},
        "start_on": {"key": "startOn", "type": "str"},
    }

    def __init__(
        self,
        *,
        start_from: Optional[str] = None,
        interval: Optional[int] = None,
        interval_unit: Optional[Literal["days"]] = None,
        end_by: Optional[str] = None,
        start_on: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword start_from: When to start task execution.
        :paramtype start_from: str
        :keyword interval: Run interval of task execution.
        :paramtype interval: int
        :keyword interval_unit: Run interval unit of task execution. Default value is "days".
        :paramtype interval_unit: str
        :keyword end_by: When to end task execution.
        :paramtype end_by: str
        :keyword start_on: startOn for task execution.
        :paramtype start_on: str
        """
        super().__init__(**kwargs)
        self.start_from = start_from
        self.interval = interval
        self.interval_unit = interval_unit
        self.end_by = end_by
        self.start_on = start_on
