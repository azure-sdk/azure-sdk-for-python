# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    from .. import models as _models


class AzureResourceManagerCommonTypesSkuUpdate(_serialization.Model):
    """The resource model definition representing SKU.

    :ivar name: The name of the SKU. Ex - P3. It is typically a letter+number code.
    :vartype name: str
    :ivar tier: This field is required to be implemented by the Resource Provider if the service
     has more than one tier, but is not required on a PUT. Known values are: "Free", "Basic",
     "Standard", and "Premium".
    :vartype tier: str or ~azure.mgmt.iotfirmwaredefense.models.SkuTier
    :ivar size: The SKU size. When the name field is the combination of tier and some other value,
     this would be the standalone code.
    :vartype size: str
    :ivar family: If the service has different generations of hardware, for the same SKU, then that
     can be captured here.
    :vartype family: str
    :ivar capacity: If the SKU supports scale out/in then the capacity integer should be included.
     If scale out/in is not possible for the resource this may be omitted.
    :vartype capacity: int
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
        "size": {"key": "size", "type": "str"},
        "family": {"key": "family", "type": "str"},
        "capacity": {"key": "capacity", "type": "int"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        tier: Optional[Union[str, "_models.SkuTier"]] = None,
        size: Optional[str] = None,
        family: Optional[str] = None,
        capacity: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the SKU. Ex - P3. It is typically a letter+number code.
        :paramtype name: str
        :keyword tier: This field is required to be implemented by the Resource Provider if the service
         has more than one tier, but is not required on a PUT. Known values are: "Free", "Basic",
         "Standard", and "Premium".
        :paramtype tier: str or ~azure.mgmt.iotfirmwaredefense.models.SkuTier
        :keyword size: The SKU size. When the name field is the combination of tier and some other
         value, this would be the standalone code.
        :paramtype size: str
        :keyword family: If the service has different generations of hardware, for the same SKU, then
         that can be captured here.
        :paramtype family: str
        :keyword capacity: If the SKU supports scale out/in then the capacity integer should be
         included. If scale out/in is not possible for the resource this may be omitted.
        :paramtype capacity: int
        """
        super().__init__(**kwargs)
        self.name = name
        self.tier = tier
        self.size = size
        self.family = family
        self.capacity = capacity


class BinaryHardeningFeatures(_serialization.Model):
    """Binary hardening features.

    :ivar no_execute: Flag indicating the binary's stack is set to NX (no-execute).
    :vartype no_execute: bool
    :ivar position_independent_executable: Flag indicating the binary was compiled to be a position
     independent executable.
    :vartype position_independent_executable: bool
    :ivar relocation_read_only: Flag indicating the binary has enabled relocation read-only
     protections.
    :vartype relocation_read_only: bool
    :ivar canary: Flag indicating if the binary was compiled with stack canaries enabled.
    :vartype canary: bool
    :ivar stripped: Flag indicating if debug symbols have been stripped from the binary.
    :vartype stripped: bool
    """

    _attribute_map = {
        "no_execute": {"key": "noExecute", "type": "bool"},
        "position_independent_executable": {"key": "positionIndependentExecutable", "type": "bool"},
        "relocation_read_only": {"key": "relocationReadOnly", "type": "bool"},
        "canary": {"key": "canary", "type": "bool"},
        "stripped": {"key": "stripped", "type": "bool"},
    }

    def __init__(
        self,
        *,
        no_execute: Optional[bool] = None,
        position_independent_executable: Optional[bool] = None,
        relocation_read_only: Optional[bool] = None,
        canary: Optional[bool] = None,
        stripped: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword no_execute: Flag indicating the binary's stack is set to NX (no-execute).
        :paramtype no_execute: bool
        :keyword position_independent_executable: Flag indicating the binary was compiled to be a
         position independent executable.
        :paramtype position_independent_executable: bool
        :keyword relocation_read_only: Flag indicating the binary has enabled relocation read-only
         protections.
        :paramtype relocation_read_only: bool
        :keyword canary: Flag indicating if the binary was compiled with stack canaries enabled.
        :paramtype canary: bool
        :keyword stripped: Flag indicating if debug symbols have been stripped from the binary.
        :paramtype stripped: bool
        """
        super().__init__(**kwargs)
        self.no_execute = no_execute
        self.position_independent_executable = position_independent_executable
        self.relocation_read_only = relocation_read_only
        self.canary = canary
        self.stripped = stripped


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    """


class BinaryHardeningResource(ProxyResource):
    """The object representing a firmware analysis binary hardening result resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.BinaryHardeningResult
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "BinaryHardeningResult"},
    }

    def __init__(self, *, properties: Optional["_models.BinaryHardeningResult"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.BinaryHardeningResult
        """
        super().__init__(**kwargs)
        self.properties = properties


class BinaryHardeningResourceListResult(_serialization.Model):
    """The response of a BinaryHardeningResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The BinaryHardeningResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.BinaryHardeningResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[BinaryHardeningResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.BinaryHardeningResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The BinaryHardeningResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.BinaryHardeningResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class BinaryHardeningResult(_serialization.Model):
    """Binary hardening of a firmware.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar binary_hardening_id: ID for the binary hardening result.
    :vartype binary_hardening_id: str
    :ivar security_hardening_features: The security hardening features of the binary.
    :vartype security_hardening_features:
     ~azure.mgmt.iotfirmwaredefense.models.BinaryHardeningFeatures
    :ivar executable_architecture: The architecture of the binary being reported on.
    :vartype executable_architecture: str
    :ivar file_path: The path to the binary in the firmware.
    :vartype file_path: str
    :ivar executable_class: The executable class to indicate 32 or 64 bit. Known values are: "x86"
     and "x64".
    :vartype executable_class: str or ~azure.mgmt.iotfirmwaredefense.models.ExecutableClass
    :ivar runpath: The runpath property of the uploaded binary, which is a method of specifying
     additional paths to load objects at runtime.
    :vartype runpath: str
    :ivar rpath: The rpath property of the uploaded binary, which is a deprecated method of
     specifying additional paths to load objects at runtime.
    :vartype rpath: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "binary_hardening_id": {"key": "binaryHardeningId", "type": "str"},
        "security_hardening_features": {"key": "securityHardeningFeatures", "type": "BinaryHardeningFeatures"},
        "executable_architecture": {"key": "executableArchitecture", "type": "str"},
        "file_path": {"key": "filePath", "type": "str"},
        "executable_class": {"key": "executableClass", "type": "str"},
        "runpath": {"key": "runpath", "type": "str"},
        "rpath": {"key": "rpath", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        binary_hardening_id: Optional[str] = None,
        security_hardening_features: Optional["_models.BinaryHardeningFeatures"] = None,
        executable_architecture: Optional[str] = None,
        file_path: Optional[str] = None,
        executable_class: Optional[Union[str, "_models.ExecutableClass"]] = None,
        runpath: Optional[str] = None,
        rpath: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword binary_hardening_id: ID for the binary hardening result.
        :paramtype binary_hardening_id: str
        :keyword security_hardening_features: The security hardening features of the binary.
        :paramtype security_hardening_features:
         ~azure.mgmt.iotfirmwaredefense.models.BinaryHardeningFeatures
        :keyword executable_architecture: The architecture of the binary being reported on.
        :paramtype executable_architecture: str
        :keyword file_path: The path to the binary in the firmware.
        :paramtype file_path: str
        :keyword executable_class: The executable class to indicate 32 or 64 bit. Known values are:
         "x86" and "x64".
        :paramtype executable_class: str or ~azure.mgmt.iotfirmwaredefense.models.ExecutableClass
        :keyword runpath: The runpath property of the uploaded binary, which is a method of specifying
         additional paths to load objects at runtime.
        :paramtype runpath: str
        :keyword rpath: The rpath property of the uploaded binary, which is a deprecated method of
         specifying additional paths to load objects at runtime.
        :paramtype rpath: str
        """
        super().__init__(**kwargs)
        self.binary_hardening_id = binary_hardening_id
        self.security_hardening_features = security_hardening_features
        self.executable_architecture = executable_architecture
        self.file_path = file_path
        self.executable_class = executable_class
        self.runpath = runpath
        self.rpath = rpath
        self.provisioning_state = None


class SummaryResourceProperties(_serialization.Model):
    """Properties of an analysis summary.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    BinaryHardeningSummaryResource, CveSummary, CryptoCertificateSummaryResource,
    CryptoKeySummaryResource, FirmwareSummary

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar summary_type: The type of summary. Required. Known values are: "Firmware",
     "CommonVulnerabilitiesAndExposures", "BinaryHardening", "CryptoCertificate", and "CryptoKey".
    :vartype summary_type: str or ~azure.mgmt.iotfirmwaredefense.models.SummaryType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "summary_type": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "summary_type": {"key": "summaryType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    _subtype_map = {
        "summary_type": {
            "BinaryHardening": "BinaryHardeningSummaryResource",
            "CommonVulnerabilitiesAndExposures": "CveSummary",
            "CryptoCertificate": "CryptoCertificateSummaryResource",
            "CryptoKey": "CryptoKeySummaryResource",
            "Firmware": "FirmwareSummary",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.summary_type: Optional[str] = None
        self.provisioning_state = None


class BinaryHardeningSummaryResource(SummaryResourceProperties):
    """Properties for a binary hardening analysis summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar summary_type: The type of summary. Required. Known values are: "Firmware",
     "CommonVulnerabilitiesAndExposures", "BinaryHardening", "CryptoCertificate", and "CryptoKey".
    :vartype summary_type: str or ~azure.mgmt.iotfirmwaredefense.models.SummaryType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    :ivar total_files: Total number of binaries that were analyzed.
    :vartype total_files: int
    :ivar not_executable_stack_count: Total number of analyzed files that were found to have a
     nonexecutable stack.
    :vartype not_executable_stack_count: int
    :ivar position_independent_executable_count: Total number of analyzed files that were compiled
     to be a position independent executable.
    :vartype position_independent_executable_count: int
    :ivar relocation_read_only_count: Total number of analyzed files that have enabled relocation
     read-only protections.
    :vartype relocation_read_only_count: int
    :ivar stack_canary_count: Total number of analyzed files that have stack canaries enabled.
    :vartype stack_canary_count: int
    :ivar stripped_binary_count: Total number of analyzed files that have debug symbols stripped.
    :vartype stripped_binary_count: int
    """

    _validation = {
        "summary_type": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "summary_type": {"key": "summaryType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "total_files": {"key": "totalFiles", "type": "int"},
        "not_executable_stack_count": {"key": "notExecutableStackCount", "type": "int"},
        "position_independent_executable_count": {"key": "positionIndependentExecutableCount", "type": "int"},
        "relocation_read_only_count": {"key": "relocationReadOnlyCount", "type": "int"},
        "stack_canary_count": {"key": "stackCanaryCount", "type": "int"},
        "stripped_binary_count": {"key": "strippedBinaryCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        total_files: Optional[int] = None,
        not_executable_stack_count: Optional[int] = None,
        position_independent_executable_count: Optional[int] = None,
        relocation_read_only_count: Optional[int] = None,
        stack_canary_count: Optional[int] = None,
        stripped_binary_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_files: Total number of binaries that were analyzed.
        :paramtype total_files: int
        :keyword not_executable_stack_count: Total number of analyzed files that were found to have a
         nonexecutable stack.
        :paramtype not_executable_stack_count: int
        :keyword position_independent_executable_count: Total number of analyzed files that were
         compiled to be a position independent executable.
        :paramtype position_independent_executable_count: int
        :keyword relocation_read_only_count: Total number of analyzed files that have enabled
         relocation read-only protections.
        :paramtype relocation_read_only_count: int
        :keyword stack_canary_count: Total number of analyzed files that have stack canaries enabled.
        :paramtype stack_canary_count: int
        :keyword stripped_binary_count: Total number of analyzed files that have debug symbols
         stripped.
        :paramtype stripped_binary_count: int
        """
        super().__init__(**kwargs)
        self.summary_type: str = "BinaryHardening"
        self.total_files = total_files
        self.not_executable_stack_count = not_executable_stack_count
        self.position_independent_executable_count = position_independent_executable_count
        self.relocation_read_only_count = relocation_read_only_count
        self.stack_canary_count = stack_canary_count
        self.stripped_binary_count = stripped_binary_count


class CryptoCertificate(_serialization.Model):
    """Crypto certificate properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar crypto_cert_id: ID for the certificate result.
    :vartype crypto_cert_id: str
    :ivar certificate_name: Name of the certificate.
    :vartype certificate_name: str
    :ivar subject: Subject information of the certificate.
    :vartype subject: ~azure.mgmt.iotfirmwaredefense.models.CryptoCertificateEntity
    :ivar issuer: Issuer information of the certificate.
    :vartype issuer: ~azure.mgmt.iotfirmwaredefense.models.CryptoCertificateEntity
    :ivar issued_date: Issue date for the certificate.
    :vartype issued_date: ~datetime.datetime
    :ivar expiration_date: Expiration date for the certificate.
    :vartype expiration_date: ~datetime.datetime
    :ivar certificate_role: Role of the certificate (Root CA, etc).
    :vartype certificate_role: str
    :ivar signature_algorithm: The signature algorithm used in the certificate.
    :vartype signature_algorithm: str
    :ivar certificate_key_size: Size of the certificate's key in bits.
    :vartype certificate_key_size: int
    :ivar certificate_key_algorithm: Key algorithm used in the certificate.
    :vartype certificate_key_algorithm: str
    :ivar encoding: Encoding used for the certificate.
    :vartype encoding: str
    :ivar serial_number: Serial number of the certificate.
    :vartype serial_number: str
    :ivar fingerprint: Fingerprint of the certificate.
    :vartype fingerprint: str
    :ivar certificate_usage: List of functions the certificate can fulfill.
    :vartype certificate_usage: list[str or ~azure.mgmt.iotfirmwaredefense.models.CertificateUsage]
    :ivar file_paths: List of files where this certificate was found.
    :vartype file_paths: list[str]
    :ivar paired_key: A matching paired private key.
    :vartype paired_key: ~azure.mgmt.iotfirmwaredefense.models.PairedKey
    :ivar is_expired: Indicates if the certificate is expired.
    :vartype is_expired: bool
    :ivar is_self_signed: Indicates if the certificate is self-signed.
    :vartype is_self_signed: bool
    :ivar is_weak_signature: Indicates the signature algorithm used is insecure according to NIST
     guidance.
    :vartype is_weak_signature: bool
    :ivar is_short_key_size: Indicates the certificate's key size is considered too small to be
     secure for the key algorithm according to NIST guidance.
    :vartype is_short_key_size: bool
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "file_paths": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "crypto_cert_id": {"key": "cryptoCertId", "type": "str"},
        "certificate_name": {"key": "certificateName", "type": "str"},
        "subject": {"key": "subject", "type": "CryptoCertificateEntity"},
        "issuer": {"key": "issuer", "type": "CryptoCertificateEntity"},
        "issued_date": {"key": "issuedDate", "type": "iso-8601"},
        "expiration_date": {"key": "expirationDate", "type": "iso-8601"},
        "certificate_role": {"key": "certificateRole", "type": "str"},
        "signature_algorithm": {"key": "signatureAlgorithm", "type": "str"},
        "certificate_key_size": {"key": "certificateKeySize", "type": "int"},
        "certificate_key_algorithm": {"key": "certificateKeyAlgorithm", "type": "str"},
        "encoding": {"key": "encoding", "type": "str"},
        "serial_number": {"key": "serialNumber", "type": "str"},
        "fingerprint": {"key": "fingerprint", "type": "str"},
        "certificate_usage": {"key": "certificateUsage", "type": "[str]"},
        "file_paths": {"key": "filePaths", "type": "[str]"},
        "paired_key": {"key": "pairedKey", "type": "PairedKey"},
        "is_expired": {"key": "isExpired", "type": "bool"},
        "is_self_signed": {"key": "isSelfSigned", "type": "bool"},
        "is_weak_signature": {"key": "isWeakSignature", "type": "bool"},
        "is_short_key_size": {"key": "isShortKeySize", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        crypto_cert_id: Optional[str] = None,
        certificate_name: Optional[str] = None,
        subject: Optional["_models.CryptoCertificateEntity"] = None,
        issuer: Optional["_models.CryptoCertificateEntity"] = None,
        issued_date: Optional[datetime.datetime] = None,
        expiration_date: Optional[datetime.datetime] = None,
        certificate_role: Optional[str] = None,
        signature_algorithm: Optional[str] = None,
        certificate_key_size: Optional[int] = None,
        certificate_key_algorithm: Optional[str] = None,
        encoding: Optional[str] = None,
        serial_number: Optional[str] = None,
        fingerprint: Optional[str] = None,
        certificate_usage: Optional[List[Union[str, "_models.CertificateUsage"]]] = None,
        paired_key: Optional["_models.PairedKey"] = None,
        is_expired: Optional[bool] = None,
        is_self_signed: Optional[bool] = None,
        is_weak_signature: Optional[bool] = None,
        is_short_key_size: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword crypto_cert_id: ID for the certificate result.
        :paramtype crypto_cert_id: str
        :keyword certificate_name: Name of the certificate.
        :paramtype certificate_name: str
        :keyword subject: Subject information of the certificate.
        :paramtype subject: ~azure.mgmt.iotfirmwaredefense.models.CryptoCertificateEntity
        :keyword issuer: Issuer information of the certificate.
        :paramtype issuer: ~azure.mgmt.iotfirmwaredefense.models.CryptoCertificateEntity
        :keyword issued_date: Issue date for the certificate.
        :paramtype issued_date: ~datetime.datetime
        :keyword expiration_date: Expiration date for the certificate.
        :paramtype expiration_date: ~datetime.datetime
        :keyword certificate_role: Role of the certificate (Root CA, etc).
        :paramtype certificate_role: str
        :keyword signature_algorithm: The signature algorithm used in the certificate.
        :paramtype signature_algorithm: str
        :keyword certificate_key_size: Size of the certificate's key in bits.
        :paramtype certificate_key_size: int
        :keyword certificate_key_algorithm: Key algorithm used in the certificate.
        :paramtype certificate_key_algorithm: str
        :keyword encoding: Encoding used for the certificate.
        :paramtype encoding: str
        :keyword serial_number: Serial number of the certificate.
        :paramtype serial_number: str
        :keyword fingerprint: Fingerprint of the certificate.
        :paramtype fingerprint: str
        :keyword certificate_usage: List of functions the certificate can fulfill.
        :paramtype certificate_usage: list[str or
         ~azure.mgmt.iotfirmwaredefense.models.CertificateUsage]
        :keyword paired_key: A matching paired private key.
        :paramtype paired_key: ~azure.mgmt.iotfirmwaredefense.models.PairedKey
        :keyword is_expired: Indicates if the certificate is expired.
        :paramtype is_expired: bool
        :keyword is_self_signed: Indicates if the certificate is self-signed.
        :paramtype is_self_signed: bool
        :keyword is_weak_signature: Indicates the signature algorithm used is insecure according to
         NIST guidance.
        :paramtype is_weak_signature: bool
        :keyword is_short_key_size: Indicates the certificate's key size is considered too small to be
         secure for the key algorithm according to NIST guidance.
        :paramtype is_short_key_size: bool
        """
        super().__init__(**kwargs)
        self.crypto_cert_id = crypto_cert_id
        self.certificate_name = certificate_name
        self.subject = subject
        self.issuer = issuer
        self.issued_date = issued_date
        self.expiration_date = expiration_date
        self.certificate_role = certificate_role
        self.signature_algorithm = signature_algorithm
        self.certificate_key_size = certificate_key_size
        self.certificate_key_algorithm = certificate_key_algorithm
        self.encoding = encoding
        self.serial_number = serial_number
        self.fingerprint = fingerprint
        self.certificate_usage = certificate_usage
        self.file_paths = None
        self.paired_key = paired_key
        self.is_expired = is_expired
        self.is_self_signed = is_self_signed
        self.is_weak_signature = is_weak_signature
        self.is_short_key_size = is_short_key_size
        self.provisioning_state = None


class CryptoCertificateEntity(_serialization.Model):
    """Information on an entity (distinguished name) in a cryptographic certificate.

    :ivar common_name: Common name of the certificate entity.
    :vartype common_name: str
    :ivar organization: Organization of the certificate entity.
    :vartype organization: str
    :ivar organizational_unit: The organizational unit of the certificate entity.
    :vartype organizational_unit: str
    :ivar state: Geographical state or province of the certificate entity.
    :vartype state: str
    :ivar country: Country code of the certificate entity.
    :vartype country: str
    """

    _attribute_map = {
        "common_name": {"key": "commonName", "type": "str"},
        "organization": {"key": "organization", "type": "str"},
        "organizational_unit": {"key": "organizationalUnit", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "country": {"key": "country", "type": "str"},
    }

    def __init__(
        self,
        *,
        common_name: Optional[str] = None,
        organization: Optional[str] = None,
        organizational_unit: Optional[str] = None,
        state: Optional[str] = None,
        country: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword common_name: Common name of the certificate entity.
        :paramtype common_name: str
        :keyword organization: Organization of the certificate entity.
        :paramtype organization: str
        :keyword organizational_unit: The organizational unit of the certificate entity.
        :paramtype organizational_unit: str
        :keyword state: Geographical state or province of the certificate entity.
        :paramtype state: str
        :keyword country: Country code of the certificate entity.
        :paramtype country: str
        """
        super().__init__(**kwargs)
        self.common_name = common_name
        self.organization = organization
        self.organizational_unit = organizational_unit
        self.state = state
        self.country = country


class CryptoCertificateResource(ProxyResource):
    """The object representing a firmware analysis crypto certificate resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.CryptoCertificate
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "CryptoCertificate"},
    }

    def __init__(self, *, properties: Optional["_models.CryptoCertificate"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.CryptoCertificate
        """
        super().__init__(**kwargs)
        self.properties = properties


class CryptoCertificateResourceListResult(_serialization.Model):
    """The response of a CryptoCertificateResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The CryptoCertificateResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.CryptoCertificateResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CryptoCertificateResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.CryptoCertificateResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The CryptoCertificateResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.CryptoCertificateResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CryptoCertificateSummaryResource(SummaryResourceProperties):
    """Properties for cryptographic certificate summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar summary_type: The type of summary. Required. Known values are: "Firmware",
     "CommonVulnerabilitiesAndExposures", "BinaryHardening", "CryptoCertificate", and "CryptoKey".
    :vartype summary_type: str or ~azure.mgmt.iotfirmwaredefense.models.SummaryType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    :ivar total_certificate_count: Total number of certificates found.
    :vartype total_certificate_count: int
    :ivar paired_key_count: Total number of paired private keys found for the certificates.
    :vartype paired_key_count: int
    :ivar expired_certificate_count: Total number of expired certificates found.
    :vartype expired_certificate_count: int
    :ivar expiring_soon_certificate_count: Total number of nearly expired certificates found.
    :vartype expiring_soon_certificate_count: int
    :ivar weak_signature_count: Total number of certificates found using a weak signature
     algorithm.
    :vartype weak_signature_count: int
    :ivar self_signed_certificate_count: Total number of certificates found that are self-signed.
    :vartype self_signed_certificate_count: int
    :ivar short_key_size_count: Total number of certificates found that have an insecure key size
     for the key algorithm.
    :vartype short_key_size_count: int
    """

    _validation = {
        "summary_type": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "summary_type": {"key": "summaryType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "total_certificate_count": {"key": "totalCertificateCount", "type": "int"},
        "paired_key_count": {"key": "pairedKeyCount", "type": "int"},
        "expired_certificate_count": {"key": "expiredCertificateCount", "type": "int"},
        "expiring_soon_certificate_count": {"key": "expiringSoonCertificateCount", "type": "int"},
        "weak_signature_count": {"key": "weakSignatureCount", "type": "int"},
        "self_signed_certificate_count": {"key": "selfSignedCertificateCount", "type": "int"},
        "short_key_size_count": {"key": "shortKeySizeCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        total_certificate_count: Optional[int] = None,
        paired_key_count: Optional[int] = None,
        expired_certificate_count: Optional[int] = None,
        expiring_soon_certificate_count: Optional[int] = None,
        weak_signature_count: Optional[int] = None,
        self_signed_certificate_count: Optional[int] = None,
        short_key_size_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_certificate_count: Total number of certificates found.
        :paramtype total_certificate_count: int
        :keyword paired_key_count: Total number of paired private keys found for the certificates.
        :paramtype paired_key_count: int
        :keyword expired_certificate_count: Total number of expired certificates found.
        :paramtype expired_certificate_count: int
        :keyword expiring_soon_certificate_count: Total number of nearly expired certificates found.
        :paramtype expiring_soon_certificate_count: int
        :keyword weak_signature_count: Total number of certificates found using a weak signature
         algorithm.
        :paramtype weak_signature_count: int
        :keyword self_signed_certificate_count: Total number of certificates found that are
         self-signed.
        :paramtype self_signed_certificate_count: int
        :keyword short_key_size_count: Total number of certificates found that have an insecure key
         size for the key algorithm.
        :paramtype short_key_size_count: int
        """
        super().__init__(**kwargs)
        self.summary_type: str = "CryptoCertificate"
        self.total_certificate_count = total_certificate_count
        self.paired_key_count = paired_key_count
        self.expired_certificate_count = expired_certificate_count
        self.expiring_soon_certificate_count = expiring_soon_certificate_count
        self.weak_signature_count = weak_signature_count
        self.self_signed_certificate_count = self_signed_certificate_count
        self.short_key_size_count = short_key_size_count


class CryptoKey(_serialization.Model):
    """Crypto key properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar crypto_key_id: ID for the key result.
    :vartype crypto_key_id: str
    :ivar key_type: Type of the key (public or private). Known values are: "Public" and "Private".
    :vartype key_type: str or ~azure.mgmt.iotfirmwaredefense.models.CryptoKeyType
    :ivar crypto_key_size: Size of the key in bits.
    :vartype crypto_key_size: int
    :ivar key_algorithm: Key algorithm name.
    :vartype key_algorithm: str
    :ivar usage: Functions the key can fulfill.
    :vartype usage: list[str]
    :ivar file_paths: List of files where this key was found.
    :vartype file_paths: list[str]
    :ivar paired_key: A matching paired key or certificate.
    :vartype paired_key: ~azure.mgmt.iotfirmwaredefense.models.PairedKey
    :ivar is_short_key_size: Indicates the key size is considered too small to be secure for the
     algorithm according to NIST guidance.
    :vartype is_short_key_size: bool
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "file_paths": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "crypto_key_id": {"key": "cryptoKeyId", "type": "str"},
        "key_type": {"key": "keyType", "type": "str"},
        "crypto_key_size": {"key": "cryptoKeySize", "type": "int"},
        "key_algorithm": {"key": "keyAlgorithm", "type": "str"},
        "usage": {"key": "usage", "type": "[str]"},
        "file_paths": {"key": "filePaths", "type": "[str]"},
        "paired_key": {"key": "pairedKey", "type": "PairedKey"},
        "is_short_key_size": {"key": "isShortKeySize", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        crypto_key_id: Optional[str] = None,
        key_type: Optional[Union[str, "_models.CryptoKeyType"]] = None,
        crypto_key_size: Optional[int] = None,
        key_algorithm: Optional[str] = None,
        usage: Optional[List[str]] = None,
        paired_key: Optional["_models.PairedKey"] = None,
        is_short_key_size: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword crypto_key_id: ID for the key result.
        :paramtype crypto_key_id: str
        :keyword key_type: Type of the key (public or private). Known values are: "Public" and
         "Private".
        :paramtype key_type: str or ~azure.mgmt.iotfirmwaredefense.models.CryptoKeyType
        :keyword crypto_key_size: Size of the key in bits.
        :paramtype crypto_key_size: int
        :keyword key_algorithm: Key algorithm name.
        :paramtype key_algorithm: str
        :keyword usage: Functions the key can fulfill.
        :paramtype usage: list[str]
        :keyword paired_key: A matching paired key or certificate.
        :paramtype paired_key: ~azure.mgmt.iotfirmwaredefense.models.PairedKey
        :keyword is_short_key_size: Indicates the key size is considered too small to be secure for the
         algorithm according to NIST guidance.
        :paramtype is_short_key_size: bool
        """
        super().__init__(**kwargs)
        self.crypto_key_id = crypto_key_id
        self.key_type = key_type
        self.crypto_key_size = crypto_key_size
        self.key_algorithm = key_algorithm
        self.usage = usage
        self.file_paths = None
        self.paired_key = paired_key
        self.is_short_key_size = is_short_key_size
        self.provisioning_state = None


class CryptoKeyResource(ProxyResource):
    """The object representing a firmware analysis crypto key resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.CryptoKey
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "CryptoKey"},
    }

    def __init__(self, *, properties: Optional["_models.CryptoKey"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.CryptoKey
        """
        super().__init__(**kwargs)
        self.properties = properties


class CryptoKeyResourceListResult(_serialization.Model):
    """The response of a CryptoKeyResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The CryptoKeyResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.CryptoKeyResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CryptoKeyResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.CryptoKeyResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The CryptoKeyResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.CryptoKeyResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CryptoKeySummaryResource(SummaryResourceProperties):
    """Properties for cryptographic key summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar summary_type: The type of summary. Required. Known values are: "Firmware",
     "CommonVulnerabilitiesAndExposures", "BinaryHardening", "CryptoCertificate", and "CryptoKey".
    :vartype summary_type: str or ~azure.mgmt.iotfirmwaredefense.models.SummaryType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    :ivar total_key_count: Total number of cryptographic keys found.
    :vartype total_key_count: int
    :ivar public_key_count: Total number of (non-certificate) public keys found.
    :vartype public_key_count: int
    :ivar private_key_count: Total number of private keys found.
    :vartype private_key_count: int
    :ivar paired_key_count: Total number of keys found that have a matching paired key or
     certificate.
    :vartype paired_key_count: int
    :ivar short_key_size_count: Total number of keys found that have an insecure key size for the
     algorithm.
    :vartype short_key_size_count: int
    """

    _validation = {
        "summary_type": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "summary_type": {"key": "summaryType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "total_key_count": {"key": "totalKeyCount", "type": "int"},
        "public_key_count": {"key": "publicKeyCount", "type": "int"},
        "private_key_count": {"key": "privateKeyCount", "type": "int"},
        "paired_key_count": {"key": "pairedKeyCount", "type": "int"},
        "short_key_size_count": {"key": "shortKeySizeCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        total_key_count: Optional[int] = None,
        public_key_count: Optional[int] = None,
        private_key_count: Optional[int] = None,
        paired_key_count: Optional[int] = None,
        short_key_size_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword total_key_count: Total number of cryptographic keys found.
        :paramtype total_key_count: int
        :keyword public_key_count: Total number of (non-certificate) public keys found.
        :paramtype public_key_count: int
        :keyword private_key_count: Total number of private keys found.
        :paramtype private_key_count: int
        :keyword paired_key_count: Total number of keys found that have a matching paired key or
         certificate.
        :paramtype paired_key_count: int
        :keyword short_key_size_count: Total number of keys found that have an insecure key size for
         the algorithm.
        :paramtype short_key_size_count: int
        """
        super().__init__(**kwargs)
        self.summary_type: str = "CryptoKey"
        self.total_key_count = total_key_count
        self.public_key_count = public_key_count
        self.private_key_count = private_key_count
        self.paired_key_count = paired_key_count
        self.short_key_size_count = short_key_size_count


class CveLink(_serialization.Model):
    """Properties of a reference link for a CVE.

    :ivar href: The destination of the reference link.
    :vartype href: str
    :ivar label: The label of the reference link.
    :vartype label: str
    """

    _attribute_map = {
        "href": {"key": "href", "type": "str"},
        "label": {"key": "label", "type": "str"},
    }

    def __init__(self, *, href: Optional[str] = None, label: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword href: The destination of the reference link.
        :paramtype href: str
        :keyword label: The label of the reference link.
        :paramtype label: str
        """
        super().__init__(**kwargs)
        self.href = href
        self.label = label


class CveResource(ProxyResource):
    """The object representing a firmware analysis CVE result resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.CveResult
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "CveResult"},
    }

    def __init__(self, *, properties: Optional["_models.CveResult"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.CveResult
        """
        super().__init__(**kwargs)
        self.properties = properties


class CveResourceListResult(_serialization.Model):
    """The response of a CveResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The CveResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.CveResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CveResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.CveResource"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The CveResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.CveResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CveResult(_serialization.Model):
    """Details of a CVE detected in firmware.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar cve_id: ID of the CVE result.
    :vartype cve_id: str
    :ivar component_id: ID of the affected SBOM component.
    :vartype component_id: str
    :ivar component_name: Name of the affected SBOM component.
    :vartype component_name: str
    :ivar component_version: Version of the affected SBOM component.
    :vartype component_version: str
    :ivar severity: Severity of the CVE.
    :vartype severity: str
    :ivar cve_name: Name of the CVE.
    :vartype cve_name: str
    :ivar effective_cvss_score: The most recent CVSS score of the CVE.
    :vartype effective_cvss_score: float
    :ivar effective_cvss_version: The version of the effectiveCvssScore property.
    :vartype effective_cvss_version: int
    :ivar cvss_scores: All known CVSS scores for the CVE.
    :vartype cvss_scores: list[~azure.mgmt.iotfirmwaredefense.models.CvssScore]
    :ivar links: The list of reference links for the CVE.
    :vartype links: list[~azure.mgmt.iotfirmwaredefense.models.CveLink]
    :ivar description: The CVE description.
    :vartype description: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "links": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "cve_id": {"key": "cveId", "type": "str"},
        "component_id": {"key": "componentId", "type": "str"},
        "component_name": {"key": "componentName", "type": "str"},
        "component_version": {"key": "componentVersion", "type": "str"},
        "severity": {"key": "severity", "type": "str"},
        "cve_name": {"key": "cveName", "type": "str"},
        "effective_cvss_score": {"key": "effectiveCvssScore", "type": "float"},
        "effective_cvss_version": {"key": "effectiveCvssVersion", "type": "int"},
        "cvss_scores": {"key": "cvssScores", "type": "[CvssScore]"},
        "links": {"key": "links", "type": "[CveLink]"},
        "description": {"key": "description", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        cve_id: Optional[str] = None,
        component_id: Optional[str] = None,
        component_name: Optional[str] = None,
        component_version: Optional[str] = None,
        severity: Optional[str] = None,
        cve_name: Optional[str] = None,
        effective_cvss_score: Optional[float] = None,
        effective_cvss_version: Optional[int] = None,
        cvss_scores: Optional[List["_models.CvssScore"]] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword cve_id: ID of the CVE result.
        :paramtype cve_id: str
        :keyword component_id: ID of the affected SBOM component.
        :paramtype component_id: str
        :keyword component_name: Name of the affected SBOM component.
        :paramtype component_name: str
        :keyword component_version: Version of the affected SBOM component.
        :paramtype component_version: str
        :keyword severity: Severity of the CVE.
        :paramtype severity: str
        :keyword cve_name: Name of the CVE.
        :paramtype cve_name: str
        :keyword effective_cvss_score: The most recent CVSS score of the CVE.
        :paramtype effective_cvss_score: float
        :keyword effective_cvss_version: The version of the effectiveCvssScore property.
        :paramtype effective_cvss_version: int
        :keyword cvss_scores: All known CVSS scores for the CVE.
        :paramtype cvss_scores: list[~azure.mgmt.iotfirmwaredefense.models.CvssScore]
        :keyword description: The CVE description.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.cve_id = cve_id
        self.component_id = component_id
        self.component_name = component_name
        self.component_version = component_version
        self.severity = severity
        self.cve_name = cve_name
        self.effective_cvss_score = effective_cvss_score
        self.effective_cvss_version = effective_cvss_version
        self.cvss_scores = cvss_scores
        self.links = None
        self.description = description
        self.provisioning_state = None


class CveSummary(SummaryResourceProperties):
    """Properties for a CVE analysis summary.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar summary_type: The type of summary. Required. Known values are: "Firmware",
     "CommonVulnerabilitiesAndExposures", "BinaryHardening", "CryptoCertificate", and "CryptoKey".
    :vartype summary_type: str or ~azure.mgmt.iotfirmwaredefense.models.SummaryType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    :ivar critical_cve_count: The total number of critical severity CVEs detected.
    :vartype critical_cve_count: int
    :ivar high_cve_count: The total number of high severity CVEs detected.
    :vartype high_cve_count: int
    :ivar medium_cve_count: The total number of medium severity CVEs detected.
    :vartype medium_cve_count: int
    :ivar low_cve_count: The total number of low severity CVEs detected.
    :vartype low_cve_count: int
    :ivar unknown_cve_count: The total number of unknown severity CVEs detected.
    :vartype unknown_cve_count: int
    """

    _validation = {
        "summary_type": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "summary_type": {"key": "summaryType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "critical_cve_count": {"key": "criticalCveCount", "type": "int"},
        "high_cve_count": {"key": "highCveCount", "type": "int"},
        "medium_cve_count": {"key": "mediumCveCount", "type": "int"},
        "low_cve_count": {"key": "lowCveCount", "type": "int"},
        "unknown_cve_count": {"key": "unknownCveCount", "type": "int"},
    }

    def __init__(
        self,
        *,
        critical_cve_count: Optional[int] = None,
        high_cve_count: Optional[int] = None,
        medium_cve_count: Optional[int] = None,
        low_cve_count: Optional[int] = None,
        unknown_cve_count: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword critical_cve_count: The total number of critical severity CVEs detected.
        :paramtype critical_cve_count: int
        :keyword high_cve_count: The total number of high severity CVEs detected.
        :paramtype high_cve_count: int
        :keyword medium_cve_count: The total number of medium severity CVEs detected.
        :paramtype medium_cve_count: int
        :keyword low_cve_count: The total number of low severity CVEs detected.
        :paramtype low_cve_count: int
        :keyword unknown_cve_count: The total number of unknown severity CVEs detected.
        :paramtype unknown_cve_count: int
        """
        super().__init__(**kwargs)
        self.summary_type: str = "CommonVulnerabilitiesAndExposures"
        self.critical_cve_count = critical_cve_count
        self.high_cve_count = high_cve_count
        self.medium_cve_count = medium_cve_count
        self.low_cve_count = low_cve_count
        self.unknown_cve_count = unknown_cve_count


class CvssScore(_serialization.Model):
    """Common Vulnerability Scoring System values.

    All required parameters must be populated in order to send to server.

    :ivar version: The version of the Common Vulnerability Scoring System (CVSS). Required.
    :vartype version: int
    :ivar score: The score of the CVE according to the CVSS specified.
    :vartype score: float
    """

    _validation = {
        "version": {"required": True},
    }

    _attribute_map = {
        "version": {"key": "version", "type": "int"},
        "score": {"key": "score", "type": "float"},
    }

    def __init__(self, *, version: int, score: Optional[float] = None, **kwargs: Any) -> None:
        """
        :keyword version: The version of the Common Vulnerability Scoring System (CVSS). Required.
        :paramtype version: int
        :keyword score: The score of the CVE according to the CVSS specified.
        :paramtype score: float
        """
        super().__init__(**kwargs)
        self.version = version
        self.score = score


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.iotfirmwaredefense.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.iotfirmwaredefense.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.iotfirmwaredefense.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.iotfirmwaredefense.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Firmware(ProxyResource):
    """Firmware definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.FirmwareProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "FirmwareProperties"},
    }

    def __init__(self, *, properties: Optional["_models.FirmwareProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.FirmwareProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class FirmwareListResult(_serialization.Model):
    """The response of a Firmware list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Firmware items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.Firmware]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Firmware]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Firmware"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Firmware items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.Firmware]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class FirmwareProperties(_serialization.Model):
    """Firmware properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar file_name: File name for a firmware that user uploaded.
    :vartype file_name: str
    :ivar vendor: Firmware vendor.
    :vartype vendor: str
    :ivar model: Firmware model.
    :vartype model: str
    :ivar version: Firmware version.
    :vartype version: str
    :ivar description: User-specified description of the firmware.
    :vartype description: str
    :ivar file_size: File size of the uploaded firmware image.
    :vartype file_size: int
    :ivar status: The status of firmware scan. Known values are: "Pending", "Extracting",
     "Analyzing", "Ready", and "Error".
    :vartype status: str or ~azure.mgmt.iotfirmwaredefense.models.Status
    :ivar status_messages: A list of errors or other messages generated during firmware analysis.
    :vartype status_messages: list[~azure.mgmt.iotfirmwaredefense.models.StatusMessage]
    :ivar provisioning_state: Provisioning state of the resource. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "vendor": {"pattern": r'^[a-zA-Z0-9][a-zA-Z0-9-_. ,\'"~=(){}:]*$'},
        "model": {"pattern": r'^[a-zA-Z0-9][a-zA-Z0-9-_. ,\'"~=(){}:]*$'},
        "version": {"pattern": r'^[a-zA-Z0-9][a-zA-Z0-9-_. ,\'"~=(){}:]*$'},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "file_name": {"key": "fileName", "type": "str"},
        "vendor": {"key": "vendor", "type": "str"},
        "model": {"key": "model", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "file_size": {"key": "fileSize", "type": "int"},
        "status": {"key": "status", "type": "str"},
        "status_messages": {"key": "statusMessages", "type": "[StatusMessage]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        file_name: Optional[str] = None,
        vendor: Optional[str] = None,
        model: Optional[str] = None,
        version: Optional[str] = None,
        description: Optional[str] = None,
        file_size: Optional[int] = None,
        status: Optional[Union[str, "_models.Status"]] = None,
        status_messages: Optional[List["_models.StatusMessage"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword file_name: File name for a firmware that user uploaded.
        :paramtype file_name: str
        :keyword vendor: Firmware vendor.
        :paramtype vendor: str
        :keyword model: Firmware model.
        :paramtype model: str
        :keyword version: Firmware version.
        :paramtype version: str
        :keyword description: User-specified description of the firmware.
        :paramtype description: str
        :keyword file_size: File size of the uploaded firmware image.
        :paramtype file_size: int
        :keyword status: The status of firmware scan. Known values are: "Pending", "Extracting",
         "Analyzing", "Ready", and "Error".
        :paramtype status: str or ~azure.mgmt.iotfirmwaredefense.models.Status
        :keyword status_messages: A list of errors or other messages generated during firmware
         analysis.
        :paramtype status_messages: list[~azure.mgmt.iotfirmwaredefense.models.StatusMessage]
        """
        super().__init__(**kwargs)
        self.file_name = file_name
        self.vendor = vendor
        self.model = model
        self.version = version
        self.description = description
        self.file_size = file_size
        self.status = status
        self.status_messages = status_messages
        self.provisioning_state = None


class FirmwareSummary(SummaryResourceProperties):
    """Properties for high level summary of firmware analysis results.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar summary_type: The type of summary. Required. Known values are: "Firmware",
     "CommonVulnerabilitiesAndExposures", "BinaryHardening", "CryptoCertificate", and "CryptoKey".
    :vartype summary_type: str or ~azure.mgmt.iotfirmwaredefense.models.SummaryType
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    :ivar extracted_size: Total extracted size of the firmware in bytes.
    :vartype extracted_size: int
    :ivar file_size: Firmware file size in bytes.
    :vartype file_size: int
    :ivar extracted_file_count: Extracted file count.
    :vartype extracted_file_count: int
    :ivar component_count: Components count.
    :vartype component_count: int
    :ivar binary_count: Binary count.
    :vartype binary_count: int
    :ivar analysis_time_seconds: Time used for analysis.
    :vartype analysis_time_seconds: int
    :ivar root_file_systems: The number of root file systems found.
    :vartype root_file_systems: int
    """

    _validation = {
        "summary_type": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "summary_type": {"key": "summaryType", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "extracted_size": {"key": "extractedSize", "type": "int"},
        "file_size": {"key": "fileSize", "type": "int"},
        "extracted_file_count": {"key": "extractedFileCount", "type": "int"},
        "component_count": {"key": "componentCount", "type": "int"},
        "binary_count": {"key": "binaryCount", "type": "int"},
        "analysis_time_seconds": {"key": "analysisTimeSeconds", "type": "int"},
        "root_file_systems": {"key": "rootFileSystems", "type": "int"},
    }

    def __init__(
        self,
        *,
        extracted_size: Optional[int] = None,
        file_size: Optional[int] = None,
        extracted_file_count: Optional[int] = None,
        component_count: Optional[int] = None,
        binary_count: Optional[int] = None,
        analysis_time_seconds: Optional[int] = None,
        root_file_systems: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword extracted_size: Total extracted size of the firmware in bytes.
        :paramtype extracted_size: int
        :keyword file_size: Firmware file size in bytes.
        :paramtype file_size: int
        :keyword extracted_file_count: Extracted file count.
        :paramtype extracted_file_count: int
        :keyword component_count: Components count.
        :paramtype component_count: int
        :keyword binary_count: Binary count.
        :paramtype binary_count: int
        :keyword analysis_time_seconds: Time used for analysis.
        :paramtype analysis_time_seconds: int
        :keyword root_file_systems: The number of root file systems found.
        :paramtype root_file_systems: int
        """
        super().__init__(**kwargs)
        self.summary_type: str = "Firmware"
        self.extracted_size = extracted_size
        self.file_size = file_size
        self.extracted_file_count = extracted_file_count
        self.component_count = component_count
        self.binary_count = binary_count
        self.analysis_time_seconds = analysis_time_seconds
        self.root_file_systems = root_file_systems


class FirmwareUpdateDefinition(_serialization.Model):
    """Firmware definition.

    :ivar properties: The editable properties of a firmware.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.FirmwareProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "FirmwareProperties"},
    }

    def __init__(self, *, properties: Optional["_models.FirmwareProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The editable properties of a firmware.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.FirmwareProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class GenerateUploadUrlRequest(_serialization.Model):
    """Properties for generating an upload URL.

    :ivar firmware_id: A unique ID for the firmware to be uploaded.
    :vartype firmware_id: str
    """

    _attribute_map = {
        "firmware_id": {"key": "firmwareId", "type": "str"},
    }

    def __init__(self, *, firmware_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword firmware_id: A unique ID for the firmware to be uploaded.
        :paramtype firmware_id: str
        """
        super().__init__(**kwargs)
        self.firmware_id = firmware_id


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.iotfirmwaredefense.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.iotfirmwaredefense.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.iotfirmwaredefense.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.iotfirmwaredefense.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PairedKey(_serialization.Model):
    """Details of a matching paired key or certificate.

    :ivar paired_key_id: ID of the paired key or certificate.
    :vartype paired_key_id: str
    :ivar type: The type indicating whether the paired object is a key or certificate.
    :vartype type: str
    """

    _attribute_map = {
        "paired_key_id": {"key": "pairedKeyId", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, paired_key_id: Optional[str] = None, type: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword paired_key_id: ID of the paired key or certificate.
        :paramtype paired_key_id: str
        :keyword type: The type indicating whether the paired object is a key or certificate.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.paired_key_id = paired_key_id
        self.type = type


class PasswordHash(_serialization.Model):
    """Password hash properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar password_hash_id: ID for password hash.
    :vartype password_hash_id: str
    :ivar file_path: File path of the password hash.
    :vartype file_path: str
    :ivar salt: Salt of the password hash.
    :vartype salt: str
    :ivar hash: Hash of the password.
    :vartype hash: str
    :ivar context: Context of password hash.
    :vartype context: str
    :ivar username: User name of password hash.
    :vartype username: str
    :ivar algorithm: Algorithm of the password hash.
    :vartype algorithm: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "password_hash_id": {"key": "passwordHashId", "type": "str"},
        "file_path": {"key": "filePath", "type": "str"},
        "salt": {"key": "salt", "type": "str"},
        "hash": {"key": "hash", "type": "str"},
        "context": {"key": "context", "type": "str"},
        "username": {"key": "username", "type": "str"},
        "algorithm": {"key": "algorithm", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        password_hash_id: Optional[str] = None,
        file_path: Optional[str] = None,
        salt: Optional[str] = None,
        hash: Optional[str] = None,
        context: Optional[str] = None,
        username: Optional[str] = None,
        algorithm: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword password_hash_id: ID for password hash.
        :paramtype password_hash_id: str
        :keyword file_path: File path of the password hash.
        :paramtype file_path: str
        :keyword salt: Salt of the password hash.
        :paramtype salt: str
        :keyword hash: Hash of the password.
        :paramtype hash: str
        :keyword context: Context of password hash.
        :paramtype context: str
        :keyword username: User name of password hash.
        :paramtype username: str
        :keyword algorithm: Algorithm of the password hash.
        :paramtype algorithm: str
        """
        super().__init__(**kwargs)
        self.password_hash_id = password_hash_id
        self.file_path = file_path
        self.salt = salt
        self.hash = hash
        self.context = context
        self.username = username
        self.algorithm = algorithm
        self.provisioning_state = None


class PasswordHashResource(ProxyResource):
    """The object representing a firmware analysis password hash result resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.PasswordHash
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "PasswordHash"},
    }

    def __init__(self, *, properties: Optional["_models.PasswordHash"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.PasswordHash
        """
        super().__init__(**kwargs)
        self.properties = properties


class PasswordHashResourceListResult(_serialization.Model):
    """The response of a PasswordHashResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The PasswordHashResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.PasswordHashResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PasswordHashResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.PasswordHashResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The PasswordHashResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.PasswordHashResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SbomComponent(_serialization.Model):
    """SBOM component of a firmware.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar component_id: ID for the component.
    :vartype component_id: str
    :ivar component_name: Name for the component.
    :vartype component_name: str
    :ivar version: Version for the component.
    :vartype version: str
    :ivar license: License for the component.
    :vartype license: str
    :ivar file_paths: File paths related to the component. Note, relatedFiles should be used
     instead of this property.
    :vartype file_paths: list[str]
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "component_id": {"key": "componentId", "type": "str"},
        "component_name": {"key": "componentName", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "license": {"key": "license", "type": "str"},
        "file_paths": {"key": "filePaths", "type": "[str]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        component_id: Optional[str] = None,
        component_name: Optional[str] = None,
        version: Optional[str] = None,
        license: Optional[str] = None,
        file_paths: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword component_id: ID for the component.
        :paramtype component_id: str
        :keyword component_name: Name for the component.
        :paramtype component_name: str
        :keyword version: Version for the component.
        :paramtype version: str
        :keyword license: License for the component.
        :paramtype license: str
        :keyword file_paths: File paths related to the component. Note, relatedFiles should be used
         instead of this property.
        :paramtype file_paths: list[str]
        """
        super().__init__(**kwargs)
        self.component_id = component_id
        self.component_name = component_name
        self.version = version
        self.license = license
        self.file_paths = file_paths
        self.provisioning_state = None


class SbomComponentResource(ProxyResource):
    """The object representing a firmware analysis SBOM component result resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.SbomComponent
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SbomComponent"},
    }

    def __init__(self, *, properties: Optional["_models.SbomComponent"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.SbomComponent
        """
        super().__init__(**kwargs)
        self.properties = properties


class SbomComponentResourceListResult(_serialization.Model):
    """The response of a SbomComponentResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SbomComponentResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.SbomComponentResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SbomComponentResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.SbomComponentResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SbomComponentResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.SbomComponentResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class Sku(_serialization.Model):
    """The resource model definition representing SKU.

    All required parameters must be populated in order to send to server.

    :ivar name: The name of the SKU. E.g. P3. It is typically a letter+number code. Required.
    :vartype name: str
    :ivar tier: This field is required to be implemented by the Resource Provider if the service
     has more than one tier, but is not required on a PUT. Known values are: "Free", "Basic",
     "Standard", and "Premium".
    :vartype tier: str or ~azure.mgmt.iotfirmwaredefense.models.SkuTier
    :ivar size: The SKU size. When the name field is the combination of tier and some other value,
     this would be the standalone code.
    :vartype size: str
    :ivar family: If the service has different generations of hardware, for the same SKU, then that
     can be captured here.
    :vartype family: str
    :ivar capacity: If the SKU supports scale out/in then the capacity integer should be included.
     If scale out/in is not possible for the resource this may be omitted.
    :vartype capacity: int
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
        "size": {"key": "size", "type": "str"},
        "family": {"key": "family", "type": "str"},
        "capacity": {"key": "capacity", "type": "int"},
    }

    def __init__(
        self,
        *,
        name: str,
        tier: Optional[Union[str, "_models.SkuTier"]] = None,
        size: Optional[str] = None,
        family: Optional[str] = None,
        capacity: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the SKU. E.g. P3. It is typically a letter+number code. Required.
        :paramtype name: str
        :keyword tier: This field is required to be implemented by the Resource Provider if the service
         has more than one tier, but is not required on a PUT. Known values are: "Free", "Basic",
         "Standard", and "Premium".
        :paramtype tier: str or ~azure.mgmt.iotfirmwaredefense.models.SkuTier
        :keyword size: The SKU size. When the name field is the combination of tier and some other
         value, this would be the standalone code.
        :paramtype size: str
        :keyword family: If the service has different generations of hardware, for the same SKU, then
         that can be captured here.
        :paramtype family: str
        :keyword capacity: If the SKU supports scale out/in then the capacity integer should be
         included. If scale out/in is not possible for the resource this may be omitted.
        :paramtype capacity: int
        """
        super().__init__(**kwargs)
        self.name = name
        self.tier = tier
        self.size = size
        self.family = family
        self.capacity = capacity


class StatusMessage(_serialization.Model):
    """Error and status message.

    :ivar error_code: The error code.
    :vartype error_code: int
    :ivar message: The error or status message.
    :vartype message: str
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "int"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, error_code: Optional[int] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword error_code: The error code.
        :paramtype error_code: int
        :keyword message: The error or status message.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.message = message


class SummaryResource(ProxyResource):
    """The object representing a firmware analysis summary resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.SummaryResourceProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SummaryResourceProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SummaryResourceProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.SummaryResourceProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SummaryResourceListResult(_serialization.Model):
    """The response of a SummaryResource list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SummaryResource items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.SummaryResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SummaryResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.SummaryResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SummaryResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.SummaryResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.iotfirmwaredefense.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.iotfirmwaredefense.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.iotfirmwaredefense.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.iotfirmwaredefense.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class UrlToken(_serialization.Model):
    """Url data for creating or accessing a blob file.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar url: SAS URL for creating or accessing a blob file.
    :vartype url: str
    """

    _validation = {
        "url": {"readonly": True},
    }

    _attribute_map = {
        "url": {"key": "url", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.url = None


class UsageMetric(ProxyResource):
    """The object representing how many firmwares the user has uploaded to the workspace.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.UsageMetricProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "UsageMetricProperties"},
    }

    def __init__(self, *, properties: Optional["_models.UsageMetricProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.UsageMetricProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class UsageMetricListResult(_serialization.Model):
    """The response of a UsageMetric list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The UsageMetric items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.UsageMetric]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[UsageMetric]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.UsageMetric"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The UsageMetric items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.UsageMetric]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class UsageMetricProperties(_serialization.Model):
    """Properties of a workspaces usage metrics.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar monthly_firmware_upload_count: The number of firmware analysis jobs that have been
     submitted in the current month. Required.
    :vartype monthly_firmware_upload_count: int
    :ivar total_firmware_count: The total number of firmwares that are in the workspace. Required.
    :vartype total_firmware_count: int
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "monthly_firmware_upload_count": {"required": True, "readonly": True},
        "total_firmware_count": {"required": True, "readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "monthly_firmware_upload_count": {"key": "monthlyFirmwareUploadCount", "type": "int"},
        "total_firmware_count": {"key": "totalFirmwareCount", "type": "int"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.monthly_firmware_upload_count = None
        self.total_firmware_count = None
        self.provisioning_state = None


class Workspace(TrackedResource):
    """Firmware analysis workspace.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.iotfirmwaredefense.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.iotfirmwaredefense.models.WorkspaceProperties
    :ivar sku: The SKU (Stock Keeping Unit) assigned to this resource.
    :vartype sku: ~azure.mgmt.iotfirmwaredefense.models.Sku
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "WorkspaceProperties"},
        "sku": {"key": "sku", "type": "Sku"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.WorkspaceProperties"] = None,
        sku: Optional["_models.Sku"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.iotfirmwaredefense.models.WorkspaceProperties
        :keyword sku: The SKU (Stock Keeping Unit) assigned to this resource.
        :paramtype sku: ~azure.mgmt.iotfirmwaredefense.models.Sku
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.sku = sku


class WorkspaceListResult(_serialization.Model):
    """The response of a Workspace list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Workspace items on this page. Required.
    :vartype value: list[~azure.mgmt.iotfirmwaredefense.models.Workspace]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Workspace]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Workspace"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Workspace items on this page. Required.
        :paramtype value: list[~azure.mgmt.iotfirmwaredefense.models.Workspace]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WorkspaceProperties(_serialization.Model):
    """Workspace properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Provisioning state of the resource. Known values are: "Succeeded",
     "Failed", "Canceled", "Pending", "Extracting", and "Analyzing".
    :vartype provisioning_state: str or ~azure.mgmt.iotfirmwaredefense.models.ProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provisioning_state = None


class WorkspaceUpdate(_serialization.Model):
    """The type used for update operations of the Workspace.

    :ivar sku: The SKU (Stock Keeping Unit) assigned to this resource.
    :vartype sku: ~azure.mgmt.iotfirmwaredefense.models.AzureResourceManagerCommonTypesSkuUpdate
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "sku": {"key": "sku", "type": "AzureResourceManagerCommonTypesSkuUpdate"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        sku: Optional["_models.AzureResourceManagerCommonTypesSkuUpdate"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword sku: The SKU (Stock Keeping Unit) assigned to this resource.
        :paramtype sku: ~azure.mgmt.iotfirmwaredefense.models.AzureResourceManagerCommonTypesSkuUpdate
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.sku = sku
        self.tags = tags
