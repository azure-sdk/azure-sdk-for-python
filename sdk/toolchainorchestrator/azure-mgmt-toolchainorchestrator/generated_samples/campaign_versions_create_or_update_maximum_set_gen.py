# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.toolchainorchestrator import ToolchainOrchestratorClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-toolchainorchestrator
# USAGE
    python campaign_versions_create_or_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = ToolchainOrchestratorClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.campaign_versions.begin_create_or_update(
        resource_group_name="rgopenapi",
        campaign_name="j6555",
        version_name="j6555",
        resource={
            "extendedLocation": {"name": "bjjhfqsplgzdlbdlddleetyg", "type": "sosibrbmmrfbbyp"},
            "location": "uzehbktba",
            "properties": {
                "firstStage": "approval",
                "selfDriving": True,
                "stages": {
                    "approval": {
                        "config": {"baseUrl": "https://bing.com", "method": "GET", "statusCodes": "[200]"},
                        "name": "approval",
                        "provider": "providers.stage.http",
                        "stageSelector": "${{$if($equal($output(approval,status), 200),'deploy','end')}}",
                    },
                    "deploy": {
                        "config": {
                            "baseUrl": "http://symphony-service:8080/v1alpha2/",
                            "password": "",
                            "user": "admin",
                        },
                        "inputs": {"names": ["test-gated-instance"]},
                        "name": "deploy",
                        "provider": "providers.stage.materialize",
                        "stageSelector": "",
                    },
                    "end": {"name": "end", "provider": "providers.stage.mock", "stageSelector": ""},
                },
            },
            "tags": {},
        },
    ).result()
    print(response)


# x-ms-original-file: 2024-08-01-preview/CampaignVersions_CreateOrUpdate_MaximumSet_Gen.json
if __name__ == "__main__":
    main()
