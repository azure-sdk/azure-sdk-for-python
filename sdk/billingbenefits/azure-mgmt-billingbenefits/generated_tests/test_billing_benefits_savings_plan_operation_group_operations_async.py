# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.billingbenefits.aio import BillingBenefitsClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestBillingBenefitsSavingsPlanOperationGroupOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(BillingBenefitsClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_savings_plan_operation_group_list_all(self, resource_group):
        response = self.client.savings_plan_operation_group.list_all()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_savings_plan_operation_group_validate_purchase(self, resource_group):
        response = await self.client.savings_plan_operation_group.validate_purchase(
            body={
                "benefits": [
                    {
                        "sku": {"name": "str"},
                        "id": "str",
                        "kind": "str",
                        "name": "str",
                        "properties": {
                            "appliedScopeProperties": {
                                "displayName": "str",
                                "managementGroupId": "str",
                                "resourceGroupId": "str",
                                "subscriptionId": "str",
                                "tenantId": "str",
                            },
                            "appliedScopeType": "str",
                            "billingPlan": "str",
                            "billingScopeId": "str",
                            "commitment": {"amount": 0.0, "currencyCode": "str", "grain": "str"},
                            "displayName": "str",
                            "provisioningState": "str",
                            "renew": bool,
                            "savingsPlanOrderId": "str",
                            "term": "str",
                        },
                        "systemData": {
                            "createdAt": "2020-02-20 00:00:00",
                            "createdBy": "str",
                            "createdByType": "str",
                            "lastModifiedAt": "2020-02-20 00:00:00",
                            "lastModifiedBy": "str",
                            "lastModifiedByType": "str",
                        },
                        "type": "str",
                    }
                ]
            },
        )

        # please add some check logic here by yourself
        # ...
