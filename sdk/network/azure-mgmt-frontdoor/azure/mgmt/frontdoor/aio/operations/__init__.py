# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._policies_operations import PoliciesOperations  # type: ignore
from ._managed_rule_sets_operations import ManagedRuleSetsOperations  # type: ignore
from ._front_door_name_availability_operations import FrontDoorNameAvailabilityOperations  # type: ignore
from ._front_door_name_availability_with_subscription_operations import FrontDoorNameAvailabilityWithSubscriptionOperations  # type: ignore
from ._front_doors_operations import FrontDoorsOperations  # type: ignore
from ._frontend_endpoints_operations import FrontendEndpointsOperations  # type: ignore
from ._endpoints_operations import EndpointsOperations  # type: ignore
from ._rules_engines_operations import RulesEnginesOperations  # type: ignore
from ._network_experiment_profiles_operations import NetworkExperimentProfilesOperations  # type: ignore
from ._preconfigured_endpoints_operations import PreconfiguredEndpointsOperations  # type: ignore
from ._experiments_operations import ExperimentsOperations  # type: ignore
from ._reports_operations import ReportsOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "PoliciesOperations",
    "ManagedRuleSetsOperations",
    "FrontDoorNameAvailabilityOperations",
    "FrontDoorNameAvailabilityWithSubscriptionOperations",
    "FrontDoorsOperations",
    "FrontendEndpointsOperations",
    "EndpointsOperations",
    "RulesEnginesOperations",
    "NetworkExperimentProfilesOperations",
    "PreconfiguredEndpointsOperations",
    "ExperimentsOperations",
    "ReportsOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
