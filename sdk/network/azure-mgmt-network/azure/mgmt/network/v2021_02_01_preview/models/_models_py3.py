# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from ... import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CloudErrorBody(_serialization.Model):
    """An error response from the service.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: str
    :ivar target: The target of the particular error. For example, the name of the property in
     error.
    :vartype target: str
    :ivar details: A list of additional details about the error.
    :vartype details: list[~azure.mgmt.network.v2021_02_01_preview.models.CloudErrorBody]
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[CloudErrorBody]"},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        target: Optional[str] = None,
        details: Optional[List["_models.CloudErrorBody"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword code: An identifier for the error. Codes are invariant and are intended to be consumed
         programmatically.
        :paramtype code: str
        :keyword message: A message describing the error, intended to be suitable for display in a user
         interface.
        :paramtype message: str
        :keyword target: The target of the particular error. For example, the name of the property in
         error.
        :paramtype target: str
        :keyword details: A list of additional details about the error.
        :paramtype details: list[~azure.mgmt.network.v2021_02_01_preview.models.CloudErrorBody]
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details


class Resource(_serialization.Model):
    """Common resource representation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource ID.
        :paramtype id: str
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.id = id
        self.name = None
        self.type = None
        self.location = location
        self.tags = tags


class NetworkSecurityPerimeter(Resource):
    """The Network Security Perimeter resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar provisioning_state: The provisioning state of the scope assignment resource. Known values
     are: "Succeeded", "Creating", "Updating", "Deleting", "Accepted", and "Failed".
    :vartype provisioning_state: str or
     ~azure.mgmt.network.v2021_02_01_preview.models.NspProvisioningState
    :ivar perimeter_guid: perimeter guid of the network security perimeter.
    :vartype perimeter_guid: str
    """

    _validation = {
        "name": {"readonly": True},
        "type": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "perimeter_guid": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "perimeter_guid": {"key": "properties.perimeterGuid", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource ID.
        :paramtype id: str
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(id=id, location=location, tags=tags, **kwargs)
        self.provisioning_state = None
        self.perimeter_guid = None


class NetworkSecurityPerimeterListResult(_serialization.Model):
    """Result of the request to list NetworkSecurityPerimeter. It contains a list of network security
    perimeters and a URL link to get the next set of results.

    :ivar value: Gets a page of NetworkSecurityPerimeter.
    :vartype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NetworkSecurityPerimeter]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NetworkSecurityPerimeter]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.NetworkSecurityPerimeter"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets a page of NetworkSecurityPerimeter.
        :paramtype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NetworkSecurityPerimeter]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NspAccessRule(Resource):  # pylint: disable=too-many-instance-attributes
    """The NSP access rule resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar provisioning_state: The provisioning state of the scope assignment resource. Known values
     are: "Succeeded", "Creating", "Updating", "Deleting", "Accepted", and "Failed".
    :vartype provisioning_state: str or
     ~azure.mgmt.network.v2021_02_01_preview.models.NspProvisioningState
    :ivar direction: Direction that specifies whether the access rules is inbound/outbound. Known
     values are: "Inbound" and "Outbound".
    :vartype direction: str or ~azure.mgmt.network.v2021_02_01_preview.models.AccessRuleDirection
    :ivar address_prefixes: Inbound address prefixes (IPv4/IPv6).
    :vartype address_prefixes: list[str]
    :ivar fully_qualified_domain_names: Outbound rules fully qualified domain name format.
    :vartype fully_qualified_domain_names: list[str]
    :ivar subscriptions: List of subscription ids.
    :vartype subscriptions: list[~azure.mgmt.network.v2021_02_01_preview.models.SubscriptionId]
    :ivar network_security_perimeters: Inbound rule specified by the perimeter id.
    :vartype network_security_perimeters:
     list[~azure.mgmt.network.v2021_02_01_preview.models.PerimeterBasedAccessRule]
    :ivar email_addresses: Outbound rules email address format.
    :vartype email_addresses: list[str]
    :ivar phone_numbers: Outbound rules phone number format.
    :vartype phone_numbers: list[str]
    """

    _validation = {
        "name": {"readonly": True},
        "type": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "direction": {"key": "properties.direction", "type": "str"},
        "address_prefixes": {"key": "properties.addressPrefixes", "type": "[str]"},
        "fully_qualified_domain_names": {"key": "properties.fullyQualifiedDomainNames", "type": "[str]"},
        "subscriptions": {"key": "properties.subscriptions", "type": "[SubscriptionId]"},
        "network_security_perimeters": {
            "key": "properties.networkSecurityPerimeters",
            "type": "[PerimeterBasedAccessRule]",
        },
        "email_addresses": {"key": "properties.emailAddresses", "type": "[str]"},
        "phone_numbers": {"key": "properties.phoneNumbers", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        direction: Optional[Union[str, "_models.AccessRuleDirection"]] = None,
        address_prefixes: Optional[List[str]] = None,
        fully_qualified_domain_names: Optional[List[str]] = None,
        subscriptions: Optional[List["_models.SubscriptionId"]] = None,
        network_security_perimeters: Optional[List["_models.PerimeterBasedAccessRule"]] = None,
        email_addresses: Optional[List[str]] = None,
        phone_numbers: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource ID.
        :paramtype id: str
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword direction: Direction that specifies whether the access rules is inbound/outbound.
         Known values are: "Inbound" and "Outbound".
        :paramtype direction: str or ~azure.mgmt.network.v2021_02_01_preview.models.AccessRuleDirection
        :keyword address_prefixes: Inbound address prefixes (IPv4/IPv6).
        :paramtype address_prefixes: list[str]
        :keyword fully_qualified_domain_names: Outbound rules fully qualified domain name format.
        :paramtype fully_qualified_domain_names: list[str]
        :keyword subscriptions: List of subscription ids.
        :paramtype subscriptions: list[~azure.mgmt.network.v2021_02_01_preview.models.SubscriptionId]
        :keyword network_security_perimeters: Inbound rule specified by the perimeter id.
        :paramtype network_security_perimeters:
         list[~azure.mgmt.network.v2021_02_01_preview.models.PerimeterBasedAccessRule]
        :keyword email_addresses: Outbound rules email address format.
        :paramtype email_addresses: list[str]
        :keyword phone_numbers: Outbound rules phone number format.
        :paramtype phone_numbers: list[str]
        """
        super().__init__(id=id, location=location, tags=tags, **kwargs)
        self.provisioning_state = None
        self.direction = direction
        self.address_prefixes = address_prefixes
        self.fully_qualified_domain_names = fully_qualified_domain_names
        self.subscriptions = subscriptions
        self.network_security_perimeters = network_security_perimeters
        self.email_addresses = email_addresses
        self.phone_numbers = phone_numbers


class NspAccessRuleListResult(_serialization.Model):
    """Result of the request to list NSP access rules. Contains a list of NSP access rules and a URL
    link to get the next set of results.

    :ivar value: Gets a page of NSP access rule.
    :vartype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspAccessRule]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NspAccessRule]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.NspAccessRule"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets a page of NSP access rule.
        :paramtype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspAccessRule]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NspAssociation(Resource):
    """The NSP resource association resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar provisioning_state: The provisioning state of the resource  association resource. Known
     values are: "Succeeded", "Creating", "Updating", "Deleting", "Accepted", and "Failed".
    :vartype provisioning_state: str or
     ~azure.mgmt.network.v2021_02_01_preview.models.NspProvisioningState
    :ivar private_link_resource: The PaaS resource to be associated.
    :vartype private_link_resource: ~azure.mgmt.network.v2021_02_01_preview.models.SubResource
    :ivar profile: Profile id to which the PaaS resource is associated.
    :vartype profile: ~azure.mgmt.network.v2021_02_01_preview.models.SubResource
    :ivar access_mode: Access mode on the association. Known values are: "Learning", "Enforced",
     and "Audit".
    :vartype access_mode: str or
     ~azure.mgmt.network.v2021_02_01_preview.models.AssociationAccessMode
    :ivar has_provisioning_issues: Specifies if there are provisioning issues.
    :vartype has_provisioning_issues: str
    """

    _validation = {
        "name": {"readonly": True},
        "type": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "has_provisioning_issues": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "private_link_resource": {"key": "properties.privateLinkResource", "type": "SubResource"},
        "profile": {"key": "properties.profile", "type": "SubResource"},
        "access_mode": {"key": "properties.accessMode", "type": "str"},
        "has_provisioning_issues": {"key": "properties.hasProvisioningIssues", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        private_link_resource: Optional["_models.SubResource"] = None,
        profile: Optional["_models.SubResource"] = None,
        access_mode: Optional[Union[str, "_models.AssociationAccessMode"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource ID.
        :paramtype id: str
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword private_link_resource: The PaaS resource to be associated.
        :paramtype private_link_resource: ~azure.mgmt.network.v2021_02_01_preview.models.SubResource
        :keyword profile: Profile id to which the PaaS resource is associated.
        :paramtype profile: ~azure.mgmt.network.v2021_02_01_preview.models.SubResource
        :keyword access_mode: Access mode on the association. Known values are: "Learning", "Enforced",
         and "Audit".
        :paramtype access_mode: str or
         ~azure.mgmt.network.v2021_02_01_preview.models.AssociationAccessMode
        """
        super().__init__(id=id, location=location, tags=tags, **kwargs)
        self.provisioning_state = None
        self.private_link_resource = private_link_resource
        self.profile = profile
        self.access_mode = access_mode
        self.has_provisioning_issues = None


class NspAssociationsListResult(_serialization.Model):
    """Result of the request to list NSP resource associations. Contains a list of NSP resource
    associations and a URL link to get the next set of results.

    :ivar value: Gets a page of NSP resource associations.
    :vartype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspAssociation]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NspAssociation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.NspAssociation"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets a page of NSP resource associations.
        :paramtype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspAssociation]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProxyResource(_serialization.Model):
    """Proxy resource representation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar etag: A unique read-only string that changes whenever the resource is updated.
    :vartype etag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "etag": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.etag = None


class NspLink(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """The network security perimeter link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar etag: A unique read-only string that changes whenever the resource is updated.
    :vartype etag: str
    :ivar provisioning_state: The provisioning state of the NSP Link resource. Known values are:
     "Succeeded", "Creating", "Updating", "Deleting", "Accepted", "Failed", and
     "WaitForRemoteCompletion".
    :vartype provisioning_state: str or
     ~azure.mgmt.network.v2021_02_01_preview.models.NspLinkProvisioningState
    :ivar auto_approved_remote_perimeter_resource_id: Perimeter ARM Id for the remote NSP with
     which the link gets created in Auto-approval mode. It should be used when the NSP admin have
     Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP
     resource.
    :vartype auto_approved_remote_perimeter_resource_id: str
    :ivar remote_perimeter_guid: Remote NSP Guid with which the link gets created.
    :vartype remote_perimeter_guid: str
    :ivar remote_perimeter_location: Remote NSP location with which the link gets created.
    :vartype remote_perimeter_location: str
    :ivar local_inbound_profiles: Local Inbound profile names to which Inbound is allowed. Use ['\
     *'] to allow inbound to all profiles. It's default value is ['*\ '].
    :vartype local_inbound_profiles: list[str]
    :ivar local_outbound_profiles: Local Outbound profile names from which Outbound is allowed. In
     current version, it is readonly property and it's value is set to ['*'] to allow outbound from
     all profiles. In later version, user will be able to modify it.
    :vartype local_outbound_profiles: list[str]
    :ivar remote_inbound_profiles: Remote Inbound profile names to which Inbound is allowed. Use
     ['\ *'] to allow inbound to all profiles. This property can only be updated in auto-approval
     mode. It's default value is ['*\ '].
    :vartype remote_inbound_profiles: list[str]
    :ivar remote_outbound_profiles: Remote Outbound profile names from which Outbound is allowed.
     In current version, it is readonly property and it's value is set to ['*'] to allow outbound
     from all profiles. In later version, user will be able to modify it.
    :vartype remote_outbound_profiles: list[str]
    :ivar description: A message passed to the owner of the remote NSP link resource with this
     connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted
     to 140 chars.
    :vartype description: str
    :ivar status: The NSP link state. Known values are: "Approved", "Pending", "Rejected", and
     "Disconnected".
    :vartype status: str or ~azure.mgmt.network.v2021_02_01_preview.models.NspLinkStatus
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "etag": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "remote_perimeter_guid": {"readonly": True},
        "remote_perimeter_location": {"readonly": True},
        "local_inbound_profiles": {"unique": True},
        "local_outbound_profiles": {"readonly": True, "unique": True},
        "remote_inbound_profiles": {"unique": True},
        "remote_outbound_profiles": {"readonly": True, "unique": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "auto_approved_remote_perimeter_resource_id": {
            "key": "properties.autoApprovedRemotePerimeterResourceId",
            "type": "str",
        },
        "remote_perimeter_guid": {"key": "properties.remotePerimeterGuid", "type": "str"},
        "remote_perimeter_location": {"key": "properties.remotePerimeterLocation", "type": "str"},
        "local_inbound_profiles": {"key": "properties.localInboundProfiles", "type": "[str]"},
        "local_outbound_profiles": {"key": "properties.localOutboundProfiles", "type": "[str]"},
        "remote_inbound_profiles": {"key": "properties.remoteInboundProfiles", "type": "[str]"},
        "remote_outbound_profiles": {"key": "properties.remoteOutboundProfiles", "type": "[str]"},
        "description": {"key": "properties.description", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
    }

    def __init__(
        self,
        *,
        auto_approved_remote_perimeter_resource_id: Optional[str] = None,
        local_inbound_profiles: Optional[List[str]] = None,
        remote_inbound_profiles: Optional[List[str]] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword auto_approved_remote_perimeter_resource_id: Perimeter ARM Id for the remote NSP with
         which the link gets created in Auto-approval mode. It should be used when the NSP admin have
         Microsoft.Network/networkSecurityPerimeters/linkPerimeter/action permission on the remote NSP
         resource.
        :paramtype auto_approved_remote_perimeter_resource_id: str
        :keyword local_inbound_profiles: Local Inbound profile names to which Inbound is allowed. Use
         ['\ *'] to allow inbound to all profiles. It's default value is ['*\ '].
        :paramtype local_inbound_profiles: list[str]
        :keyword remote_inbound_profiles: Remote Inbound profile names to which Inbound is allowed. Use
         ['\ *'] to allow inbound to all profiles. This property can only be updated in auto-approval
         mode. It's default value is ['*\ '].
        :paramtype remote_inbound_profiles: list[str]
        :keyword description: A message passed to the owner of the remote NSP link resource with this
         connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. Restricted
         to 140 chars.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.auto_approved_remote_perimeter_resource_id = auto_approved_remote_perimeter_resource_id
        self.remote_perimeter_guid = None
        self.remote_perimeter_location = None
        self.local_inbound_profiles = local_inbound_profiles
        self.local_outbound_profiles = None
        self.remote_inbound_profiles = remote_inbound_profiles
        self.remote_outbound_profiles = None
        self.description = description
        self.status = None


class NspLinkListResult(_serialization.Model):
    """Result of the request to list NSP link resources. Contains a list of NSP link resources and a
    URL link to get the next set of results.

    :ivar value: Gets a page of NSP Link resources.
    :vartype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspLink]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NspLink]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.NspLink"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets a page of NSP Link resources.
        :paramtype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspLink]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NspLinkReference(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """The network security perimeter linkReference resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar etag: A unique read-only string that changes whenever the resource is updated.
    :vartype etag: str
    :ivar provisioning_state: The provisioning state of the NSP LinkReference resource. Known
     values are: "Succeeded", "Creating", "Updating", "Deleting", "Accepted", "Failed", and
     "WaitForRemoteCompletion".
    :vartype provisioning_state: str or
     ~azure.mgmt.network.v2021_02_01_preview.models.NspLinkProvisioningState
    :ivar remote_perimeter_resource_id: Perimeter ARM Id for the remote NSP with which the link is
     created.
    :vartype remote_perimeter_resource_id: str
    :ivar remote_perimeter_guid: Remote NSP Guid with which the link is created.
    :vartype remote_perimeter_guid: str
    :ivar remote_perimeter_location: Remote NSP location with which the link gets created.
    :vartype remote_perimeter_location: str
    :ivar local_inbound_profiles: Local Inbound profile names to which Inbound is allowed. Use ['\
     *'] to allow inbound to all profiles. It's default value is ['*\ '].
    :vartype local_inbound_profiles: list[str]
    :ivar local_outbound_profiles: Local Outbound profile names from which Outbound is allowed. Use
     ['\ *'] to allow outbound from all profiles. It's default value is ['*\ '].
    :vartype local_outbound_profiles: list[str]
    :ivar remote_inbound_profiles: Remote Inbound profile names to which Inbound is allowed. ['*']
     value implies inbound is allowed to all profiles at remote perimeter. This property can only be
     updated from remote perimeter.
    :vartype remote_inbound_profiles: list[str]
    :ivar remote_outbound_profiles: Remote Outbound profile names from which Outbound is allowed.
     ['*'] value implies outbound is allowed from all profiles at remote perimeter. This property
     can only be updated from remote perimeter.
    :vartype remote_outbound_profiles: list[str]
    :ivar description: A message sent by the remote NSP link admin for connection request. In case
     of Auto-approved flow, it is default to 'Auto Approved'.
    :vartype description: str
    :ivar status: The NSP linkReference state. It cannot be changed if link is created in
     auto-approval mode. Known values are: "Approved", "Pending", "Rejected", and "Disconnected".
    :vartype status: str or ~azure.mgmt.network.v2021_02_01_preview.models.NspLinkStatus
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "etag": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "remote_perimeter_resource_id": {"readonly": True},
        "remote_perimeter_guid": {"readonly": True},
        "remote_perimeter_location": {"readonly": True},
        "local_inbound_profiles": {"unique": True},
        "local_outbound_profiles": {"readonly": True, "unique": True},
        "remote_inbound_profiles": {"readonly": True},
        "remote_outbound_profiles": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "remote_perimeter_resource_id": {"key": "properties.remotePerimeterResourceId", "type": "str"},
        "remote_perimeter_guid": {"key": "properties.remotePerimeterGuid", "type": "str"},
        "remote_perimeter_location": {"key": "properties.remotePerimeterLocation", "type": "str"},
        "local_inbound_profiles": {"key": "properties.localInboundProfiles", "type": "[str]"},
        "local_outbound_profiles": {"key": "properties.localOutboundProfiles", "type": "[str]"},
        "remote_inbound_profiles": {"key": "properties.remoteInboundProfiles", "type": "[str]"},
        "remote_outbound_profiles": {"key": "properties.remoteOutboundProfiles", "type": "[str]"},
        "description": {"key": "properties.description", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
    }

    def __init__(
        self,
        *,
        local_inbound_profiles: Optional[List[str]] = None,
        status: Optional[Union[str, "_models.NspLinkStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword local_inbound_profiles: Local Inbound profile names to which Inbound is allowed. Use
         ['\ *'] to allow inbound to all profiles. It's default value is ['*\ '].
        :paramtype local_inbound_profiles: list[str]
        :keyword status: The NSP linkReference state. It cannot be changed if link is created in
         auto-approval mode. Known values are: "Approved", "Pending", "Rejected", and "Disconnected".
        :paramtype status: str or ~azure.mgmt.network.v2021_02_01_preview.models.NspLinkStatus
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.remote_perimeter_resource_id = None
        self.remote_perimeter_guid = None
        self.remote_perimeter_location = None
        self.local_inbound_profiles = local_inbound_profiles
        self.local_outbound_profiles = None
        self.remote_inbound_profiles = None
        self.remote_outbound_profiles = None
        self.description = None
        self.status = status


class NspLinkReferenceListResult(_serialization.Model):
    """Result of the request to list NSP linkReference resources. Contains a list of NSP linkReference
    resources and a URL link to get the next set of results.

    :ivar value: Gets a page of NSP LinkReference resources.
    :vartype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NspLinkReference]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.NspLinkReference"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets a page of NSP LinkReference resources.
        :paramtype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspLinkReference]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NspProfile(Resource):
    """The network security perimeter profile resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar access_rules_version: Version number that increases with every update to access rules
     within the profile.
    :vartype access_rules_version: str
    :ivar diagnostic_settings_version: Version number that increases with every update to
     diagnostic settings within the profile.
    :vartype diagnostic_settings_version: str
    """

    _validation = {
        "name": {"readonly": True},
        "type": {"readonly": True},
        "access_rules_version": {"readonly": True},
        "diagnostic_settings_version": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "access_rules_version": {"key": "properties.accessRulesVersion", "type": "str"},
        "diagnostic_settings_version": {"key": "properties.diagnosticSettingsVersion", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource ID.
        :paramtype id: str
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(id=id, location=location, tags=tags, **kwargs)
        self.access_rules_version = None
        self.diagnostic_settings_version = None


class NspProfileListResult(_serialization.Model):
    """Result of the request to list NSP profiles. Contains a list of NSP profiles and a URL link to
    get the next set of results.

    :ivar value: Gets a page of NSP profile.
    :vartype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspProfile]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[NspProfile]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[List["_models.NspProfile"]] = None, next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets a page of NSP profile.
        :paramtype value: list[~azure.mgmt.network.v2021_02_01_preview.models.NspProfile]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PerimeterAssociableResource(Resource):
    """Resource that is onboarded to use network security perimeter. Also referred as perimeter
    associable resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar location: Resource location.
    :vartype location: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar display_name: A friendly name for the properties of perimeter associable resources.
    :vartype display_name: str
    :ivar resource_type: Resource type/provider name.
    :vartype resource_type: str
    :ivar public_dns_zones: Public DNS zone names of the resources.
    :vartype public_dns_zones: list[str]
    """

    _validation = {
        "name": {"readonly": True},
        "type": {"readonly": True},
        "display_name": {"readonly": True},
        "resource_type": {"readonly": True},
        "public_dns_zones": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "resource_type": {"key": "properties.resourceType", "type": "str"},
        "public_dns_zones": {"key": "properties.publicDnsZones", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Resource ID.
        :paramtype id: str
        :keyword location: Resource location.
        :paramtype location: str
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(id=id, location=location, tags=tags, **kwargs)
        self.display_name = None
        self.resource_type = None
        self.public_dns_zones = None


class PerimeterAssociableResourcesListResult(_serialization.Model):
    """Paged list of perimeter associable resources.

    :ivar value: Gets paged list of perimeter associable resources.
    :vartype value:
     list[~azure.mgmt.network.v2021_02_01_preview.models.PerimeterAssociableResource]
    :ivar next_link: Gets the URL to get the next page of results.
    :vartype next_link: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[PerimeterAssociableResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self,
        *,
        value: Optional[List["_models.PerimeterAssociableResource"]] = None,
        next_link: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword value: Gets paged list of perimeter associable resources.
        :paramtype value:
         list[~azure.mgmt.network.v2021_02_01_preview.models.PerimeterAssociableResource]
        :keyword next_link: Gets the URL to get the next page of results.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class PerimeterBasedAccessRule(_serialization.Model):
    """PerimeterBasedAccessRule.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: NSP id in the ARM id format.
    :vartype id: str
    :ivar perimeter_guid: Resource guid of the NSP supplied.
    :vartype perimeter_guid: str
    :ivar location: Location of the NSP supplied.
    :vartype location: str
    """

    _validation = {
        "perimeter_guid": {"readonly": True},
        "location": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "perimeter_guid": {"key": "perimeterGuid", "type": "str"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: NSP id in the ARM id format.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.perimeter_guid = None
        self.location = None


class SubResource(_serialization.Model):
    """Reference to another subresource.

    :ivar id: Resource ID.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: Resource ID.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class SubscriptionId(_serialization.Model):
    """SubscriptionId.

    :ivar id: Subscription id in the ARM id format.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: Subscription id in the ARM id format.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id
