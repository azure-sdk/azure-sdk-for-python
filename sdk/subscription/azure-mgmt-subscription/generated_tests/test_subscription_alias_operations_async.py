# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.subscription.aio import SubscriptionClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSubscriptionAliasOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SubscriptionClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alias_begin_create(self, resource_group):
        response = await (
            await self.client.alias.begin_create(
                alias_name="str",
                body={
                    "properties": {
                        "billingScope": "str",
                        "displayName": "str",
                        "resellerId": "str",
                        "subscriptionId": "str",
                        "workload": "str",
                    }
                },
                api_version="2021-10-01",
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alias_get(self, resource_group):
        response = await self.client.alias.get(
            alias_name="str",
            api_version="2021-10-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alias_delete(self, resource_group):
        response = await self.client.alias.delete(
            alias_name="str",
            api_version="2021-10-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_alias_list(self, resource_group):
        response = await self.client.alias.list(
            api_version="2021-10-01",
        )

        # please add some check logic here by yourself
        # ...
