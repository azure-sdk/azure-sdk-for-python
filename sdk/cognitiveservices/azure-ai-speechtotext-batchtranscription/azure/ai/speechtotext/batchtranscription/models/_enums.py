# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class FileKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """FileKind."""

    ACOUSTIC_DATA_ARCHIVE = "AcousticDataArchive"
    """Type of data is acoustic data archive."""
    ACOUSTIC_DATA_TRANSCRIPTION_V2 = "AcousticDataTranscriptionV2"
    """Type of data is acoustic data transcription v2."""
    AUDIO = "Audio"
    """Type of data is audio."""
    DATASET_REPORT = "DatasetReport"
    """Type of data is dataset report."""
    EVALUATION_DETAILS = "EvaluationDetails"
    """Type of data is evaluation details."""
    LANGUAGE_DATA = "LanguageData"
    """Type of data is language data."""
    MODEL_REPORT = "ModelReport"
    """Type of data is model report."""
    OUTPUT_FORMATTING_DATA = "OutputFormattingData"
    """Type of data is output formatting input file."""
    PRONUNCIATION_DATA = "PronunciationData"
    """Type of data is pronunciation data."""
    TRANSCRIPTION = "Transcription"
    """Type of data is transcription."""
    TRANSCRIPTION_REPORT = "TranscriptionReport"
    """Type of data is transcription report."""


class LanguageIdentificationMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The mode used for language identification."""

    CONTINUOUS = "Continuous"
    """Continuous language identification (Default)."""
    SINGLE = "Single"
    """Single language identification. If no language can be identified, the error code
    NoLanguageIdentified is returned to the user. If there is ambiguity between multiple languages,
    the error code MultipleLanguagesIdentified is returned to the user."""


class ProfanityFilterMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Mode of profanity filtering."""

    NONE = "None"
    """Disable profanity filtering."""
    REMOVED = "Removed"
    """Remove profanity."""
    TAGS = "Tags"
    """Add "profanity" XML tags</Profanity>"""
    MASKED = "Masked"
    """Mask the profanity with * except of the first letter, e.g., f***"""


class PunctuationMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The mode used for punctuation."""

    NONE = "None"
    """No punctuation."""
    DICTATED = "Dictated"
    """Dictated punctuation marks only, i.e., explicit punctuation."""
    AUTOMATIC = "Automatic"
    """Automatic punctuation."""
    DICTATED_AND_AUTOMATIC = "DictatedAndAutomatic"
    """Dictated punctuation marks or automatic punctuation."""


class ServiceApiVersions(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Service API versions."""

    V20241115 = "2024-11-15"


class Status(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describe the current state of the API."""

    NOT_STARTED = "NotStarted"
    """The long running operation has not yet started."""
    RUNNING = "Running"
    """The long running operation is currently processing."""
    SUCCEEDED = "Succeeded"
    """The long running operation has successfully completed."""
    FAILED = "Failed"
    """The long running operation has failed."""
