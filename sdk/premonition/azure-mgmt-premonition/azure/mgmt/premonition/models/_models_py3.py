# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class Analysis(TrackedResource):
    """Analysis of one or more samples.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.premonition.models.AnalysisProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "AnalysisProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.AnalysisProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.premonition.models.AnalysisProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class AnalysisListResult(_serialization.Model):
    """The response of a Analysis list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Analysis items on this page. Required.
    :vartype value: list[~azure.mgmt.premonition.models.Analysis]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Analysis]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Analysis"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Analysis items on this page. Required.
        :paramtype value: list[~azure.mgmt.premonition.models.Analysis]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class AnalysisProperties(_serialization.Model):
    """The properties of Analysis.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar samples: The sample names being analyzed. Required.
    :vartype samples: list[str]
    :ivar settings: The settings for the analysis. Required.
    :vartype settings: ~azure.mgmt.premonition.models.AnalysisSettings
    :ivar started_at: The time this analysis started.
    :vartype started_at: ~datetime.datetime
    :ivar finished_at: The time this analysis finished.
    :vartype finished_at: ~datetime.datetime
    :ivar provisioning_state: Provisioning state of the resource. Known values are: "Succeeded",
     "Failed", "Canceled", "Queued", and "Started".
    :vartype provisioning_state: str or ~azure.mgmt.premonition.models.AnalysisState
    :ivar result: The result if the analysis succeeded.
    :vartype result: ~azure.mgmt.premonition.models.AnalysisResult
    :ivar error: The error if the analysis failed.
    :vartype error: ~azure.mgmt.premonition.models.AnalysisPropertiesError
    """

    _validation = {
        "samples": {"required": True},
        "settings": {"required": True},
        "started_at": {"readonly": True},
        "finished_at": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "result": {"readonly": True},
        "error": {"readonly": True},
    }

    _attribute_map = {
        "samples": {"key": "samples", "type": "[str]"},
        "settings": {"key": "settings", "type": "AnalysisSettings"},
        "started_at": {"key": "startedAt", "type": "iso-8601"},
        "finished_at": {"key": "finishedAt", "type": "iso-8601"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "result": {"key": "result", "type": "AnalysisResult"},
        "error": {"key": "error", "type": "AnalysisPropertiesError"},
    }

    def __init__(self, *, samples: List[str], settings: "_models.AnalysisSettings", **kwargs: Any) -> None:
        """
        :keyword samples: The sample names being analyzed. Required.
        :paramtype samples: list[str]
        :keyword settings: The settings for the analysis. Required.
        :paramtype settings: ~azure.mgmt.premonition.models.AnalysisSettings
        """
        super().__init__(**kwargs)
        self.samples = samples
        self.settings = settings
        self.started_at = None
        self.finished_at = None
        self.provisioning_state = None
        self.result = None
        self.error = None


class AnalysisPropertiesError(_serialization.Model):
    """The error if the analysis failed.

    All required parameters must be populated in order to send to server.

    :ivar code: Required.
    :vartype code: str
    :ivar message: Required.
    :vartype message: str
    """

    _validation = {
        "code": {"required": True},
        "message": {"required": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, code: str, message: str, **kwargs: Any) -> None:
        """
        :keyword code: Required.
        :paramtype code: str
        :keyword message: Required.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message


class AnalysisResult(_serialization.Model):
    """Base result of an analysis.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    MetagenomicsAnalysisResult

    All required parameters must be populated in order to send to server.

    :ivar kind: The type of the analysis. Required. "Metagenomics"
    :vartype kind: str or ~azure.mgmt.premonition.models.AnalysisKind
    :ivar files: The path to the output files.
    :vartype files: list[str]
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "files": {"key": "files", "type": "[str]"},
    }

    _subtype_map = {"kind": {"Metagenomics": "MetagenomicsAnalysisResult"}}

    def __init__(self, *, files: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword files: The path to the output files.
        :paramtype files: list[str]
        """
        super().__init__(**kwargs)
        self.kind: Optional[str] = None
        self.files = files


class AnalysisSettings(_serialization.Model):
    """Base settings for analysis.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    MetagenomicsAnalysisSettings

    All required parameters must be populated in order to send to server.

    :ivar kind: The type of the analysis. Required. "Metagenomics"
    :vartype kind: str or ~azure.mgmt.premonition.models.AnalysisKind
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {"kind": {"Metagenomics": "MetagenomicsAnalysisSettings"}}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: Optional[str] = None


class AzureResourceManagerCommonTypesTrackedResourceUpdate(Resource):  # pylint: disable=name-too-long
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class AnalysisUpdate(AzureResourceManagerCommonTypesTrackedResourceUpdate):
    """Analysis of one or more samples.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "object"},
    }

    def __init__(
        self, *, tags: Optional[Dict[str, str]] = None, properties: Optional[JSON] = None, **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: JSON
        """
        super().__init__(tags=tags, **kwargs)
        self.properties = properties


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.premonition.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.premonition.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.premonition.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.premonition.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class IdentifyRequest(_serialization.Model):
    """Request to identify the sources of genetic material in a sample.

    All required parameters must be populated in order to send to server.

    :ivar name: The name for the new analysis. Required.
    :vartype name: str
    :ivar settings: The settings for Metagenomics analysis. Required.
    :vartype settings: ~azure.mgmt.premonition.models.MetagenomicsAnalysisSettings
    """

    _validation = {
        "name": {"required": True, "pattern": r"^[\w\-]{3,24}$"},
        "settings": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "settings": {"key": "settings", "type": "MetagenomicsAnalysisSettings"},
    }

    def __init__(self, *, name: str, settings: "_models.MetagenomicsAnalysisSettings", **kwargs: Any) -> None:
        """
        :keyword name: The name for the new analysis. Required.
        :paramtype name: str
        :keyword settings: The settings for Metagenomics analysis. Required.
        :paramtype settings: ~azure.mgmt.premonition.models.MetagenomicsAnalysisSettings
        """
        super().__init__(**kwargs)
        self.name = name
        self.settings = settings


class Library(TrackedResource):
    """A collection of genomics samples and analyses.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.premonition.models.LibraryProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "LibraryProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.LibraryProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.premonition.models.LibraryProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class LibraryListResult(_serialization.Model):
    """The response of a Library list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Library items on this page. Required.
    :vartype value: list[~azure.mgmt.premonition.models.Library]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Library]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Library"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Library items on this page. Required.
        :paramtype value: list[~azure.mgmt.premonition.models.Library]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class LibraryProperties(_serialization.Model):
    """The properties of Library.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar container: The blob container URL where data files are stored. Required.
    :vartype container: str
    :ivar provisioning_state: Provisioning state of the resource. Known values are: "Succeeded",
     "Failed", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.premonition.models.ResourceProvisioningState
    """

    _validation = {
        "container": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "container": {"key": "container", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, container: str, **kwargs: Any) -> None:
        """
        :keyword container: The blob container URL where data files are stored. Required.
        :paramtype container: str
        """
        super().__init__(**kwargs)
        self.container = container
        self.provisioning_state = None


class LibraryPropertiesUpdate(_serialization.Model):
    """The properties of Library.

    :ivar container: The blob container URL where data files are stored.
    :vartype container: str
    """

    _attribute_map = {
        "container": {"key": "container", "type": "str"},
    }

    def __init__(self, *, container: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword container: The blob container URL where data files are stored.
        :paramtype container: str
        """
        super().__init__(**kwargs)
        self.container = container


class LibraryUpdate(AzureResourceManagerCommonTypesTrackedResourceUpdate):
    """A collection of genomics samples and analyses.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.premonition.models.LibraryPropertiesUpdate
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "LibraryPropertiesUpdate"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.LibraryPropertiesUpdate"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.premonition.models.LibraryPropertiesUpdate
        """
        super().__init__(tags=tags, **kwargs)
        self.properties = properties


class MetagenomicsAnalysisResult(AnalysisResult):
    """Result for a Metagenomics analysis.

    All required parameters must be populated in order to send to server.

    :ivar kind: The type of the analysis. Required. "Metagenomics"
    :vartype kind: str or ~azure.mgmt.premonition.models.AnalysisKind
    :ivar files: The path to the output files.
    :vartype files: list[str]
    :ivar taxonomy_version: The version of taxonomy database used. Required. Known values are:
     "v2020_07_06" and "Latest".
    :vartype taxonomy_version: str or ~azure.mgmt.premonition.models.TaxonomyVersion
    :ivar total_reads: The number of base pairs read. Required.
    :vartype total_reads: int
    """

    _validation = {
        "kind": {"required": True},
        "taxonomy_version": {"required": True},
        "total_reads": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "files": {"key": "files", "type": "[str]"},
        "taxonomy_version": {"key": "taxonomyVersion", "type": "str"},
        "total_reads": {"key": "totalReads", "type": "int"},
    }

    def __init__(
        self,
        *,
        taxonomy_version: Union[str, "_models.TaxonomyVersion"],
        total_reads: int,
        files: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword files: The path to the output files.
        :paramtype files: list[str]
        :keyword taxonomy_version: The version of taxonomy database used. Required. Known values are:
         "v2020_07_06" and "Latest".
        :paramtype taxonomy_version: str or ~azure.mgmt.premonition.models.TaxonomyVersion
        :keyword total_reads: The number of base pairs read. Required.
        :paramtype total_reads: int
        """
        super().__init__(files=files, **kwargs)
        self.kind: str = "Metagenomics"
        self.taxonomy_version = taxonomy_version
        self.total_reads = total_reads


class MetagenomicsAnalysisSettings(AnalysisSettings):
    """Settings for a Metagenomics analysis.

    All required parameters must be populated in order to send to server.

    :ivar kind: The type of the analysis. Required. "Metagenomics"
    :vartype kind: str or ~azure.mgmt.premonition.models.AnalysisKind
    :ivar taxonomy_version: The version of taxonomy database to use. Default is the latest version.
     Known values are: "v2020_07_06" and "Latest".
    :vartype taxonomy_version: str or ~azure.mgmt.premonition.models.TaxonomyVersion
    """

    _validation = {
        "kind": {"required": True},
    }

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "taxonomy_version": {"key": "taxonomyVersion", "type": "str"},
    }

    def __init__(
        self, *, taxonomy_version: Optional[Union[str, "_models.TaxonomyVersion"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword taxonomy_version: The version of taxonomy database to use. Default is the latest
         version. Known values are: "v2020_07_06" and "Latest".
        :paramtype taxonomy_version: str or ~azure.mgmt.premonition.models.TaxonomyVersion
        """
        super().__init__(**kwargs)
        self.kind: str = "Metagenomics"
        self.taxonomy_version = taxonomy_version


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.premonition.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.premonition.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.premonition.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.premonition.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.premonition.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Sample(TrackedResource):
    """Genetic sequence data from a biological sample.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.premonition.models.SampleProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "SampleProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.SampleProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.premonition.models.SampleProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class SampleListResult(_serialization.Model):
    """The response of a Sample list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Sample items on this page. Required.
    :vartype value: list[~azure.mgmt.premonition.models.Sample]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Sample]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Sample"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Sample items on this page. Required.
        :paramtype value: list[~azure.mgmt.premonition.models.Sample]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SampleProperties(_serialization.Model):
    """The properties of Sample.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar description: Description of this sample, such as source, collection method, etc.
    :vartype description: str
    :ivar paths: Location of the fastq files. Required.
    :vartype paths: list[str]
    :ivar provisioning_state: Provisioning state of the resource. Known values are: "Succeeded",
     "Failed", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.premonition.models.ResourceProvisioningState
    """

    _validation = {
        "paths": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "paths": {"key": "paths", "type": "[str]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, paths: List[str], description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword description: Description of this sample, such as source, collection method, etc.
        :paramtype description: str
        :keyword paths: Location of the fastq files. Required.
        :paramtype paths: list[str]
        """
        super().__init__(**kwargs)
        self.description = description
        self.paths = paths
        self.provisioning_state = None


class SamplePropertiesUpdate(_serialization.Model):
    """The properties of Sample.

    :ivar description: Description of this sample, such as source, collection method, etc.
    :vartype description: str
    :ivar paths: Location of the fastq files.
    :vartype paths: list[str]
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "paths": {"key": "paths", "type": "[str]"},
    }

    def __init__(self, *, description: Optional[str] = None, paths: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword description: Description of this sample, such as source, collection method, etc.
        :paramtype description: str
        :keyword paths: Location of the fastq files.
        :paramtype paths: list[str]
        """
        super().__init__(**kwargs)
        self.description = description
        self.paths = paths


class SampleUpdate(AzureResourceManagerCommonTypesTrackedResourceUpdate):
    """Genetic sequence data from a biological sample.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.premonition.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.premonition.models.SamplePropertiesUpdate
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "SamplePropertiesUpdate"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.SamplePropertiesUpdate"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.premonition.models.SamplePropertiesUpdate
        """
        super().__init__(tags=tags, **kwargs)
        self.properties = properties


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.premonition.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.premonition.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.premonition.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.premonition.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
