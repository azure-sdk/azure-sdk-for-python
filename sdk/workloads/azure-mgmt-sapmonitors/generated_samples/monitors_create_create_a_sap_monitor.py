# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.sapmonitors import SapMonitorsMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-sapmonitors
# USAGE
    python monitors_create_create_a_sap_monitor.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = SapMonitorsMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.monitors.begin_create(
        resource_group_name="myResourceGroup",
        monitor_name="mySapMonitor",
        resource={
            "location": "westus",
            "properties": {
                "appLocation": "westus",
                "appServicePlanConfiguration": {"capacity": 1, "tier": "ElasticPremium"},
                "logAnalyticsWorkspaceArmId": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.operationalinsights/workspaces/myWorkspace",
                "managedResourceGroupConfiguration": {"name": "myManagedRg"},
                "monitorSubnet": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet",
                "routingPreference": "RouteAll",
            },
            "tags": {"key": "value"},
        },
    ).result()
    print(response)


# x-ms-original-file: 2024-02-01-preview/Monitors_Create_Create_A_Sap_Monitor.json
if __name__ == "__main__":
    main()
