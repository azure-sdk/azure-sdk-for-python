# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.sapmonitors import SapMonitorsMgmtClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-sapmonitors
# USAGE
    python alerts_create.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = SapMonitorsMgmtClient(
        credential=DefaultAzureCredential(),
        subscription_id="SUBSCRIPTION_ID",
    )

    response = client.alerts.begin_create(
        resource_group_name="myResourceGroup",
        monitor_name="mySapMonitor",
        alert_name="myAlert",
        resource={
            "properties": {
                "alertRuleProperties": {
                    "actionGroups": [
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.insights/actiongroups/actiongroup1",
                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.insights/actiongroups/actiongroup2",
                    ],
                    "alertQueryParameters": [
                        {"name": "providerInstance", "value": ""},
                        {"name": "workType", "value": ""},
                    ],
                    "autoMitigate": "Disable",
                    "dimension": "cpu",
                    "evaluationFrequency": 5,
                    "failingPeriodsOperator": "GreaterThan",
                    "failingPeriodsToAlert": 3,
                    "muteActionsDuration": 0,
                    "severity": 3,
                    "status": "Enabled",
                    "threshold": 80,
                    "thresholdOperator": "GreaterThan",
                    "windowSize": 15,
                },
                "providerNames": ["hana-provider-1", "hana-provider-2"],
                "providerType": "SapHana",
                "templateName": "saphana-cpu-memory-health",
            }
        },
    ).result()
    print(response)


# x-ms-original-file: 2024-02-01-preview/Alerts_Create.json
if __name__ == "__main__":
    main()
