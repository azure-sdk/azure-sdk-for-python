# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.workloads.aio import WorkloadsMgmtClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestWorkloadsMgmtSapLandscapeMonitorOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(WorkloadsMgmtClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sap_landscape_monitor_get(self, resource_group):
        response = await self.client.sap_landscape_monitor.get(
            resource_group_name=resource_group.name,
            monitor_name="str",
            api_version="2023-04-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sap_landscape_monitor_create(self, resource_group):
        response = await self.client.sap_landscape_monitor.create(
            resource_group_name=resource_group.name,
            monitor_name="str",
            sap_landscape_monitor_parameter={
                "grouping": {
                    "landscape": [{"name": "str", "topSid": ["str"]}],
                    "sapApplication": [{"name": "str", "topSid": ["str"]}],
                },
                "id": "str",
                "name": "str",
                "provisioningState": "str",
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "topMetricsThresholds": [{"green": 0.0, "name": "str", "red": 0.0, "yellow": 0.0}],
                "type": "str",
            },
            api_version="2023-04-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sap_landscape_monitor_delete(self, resource_group):
        response = await self.client.sap_landscape_monitor.delete(
            resource_group_name=resource_group.name,
            monitor_name="str",
            api_version="2023-04-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sap_landscape_monitor_update(self, resource_group):
        response = await self.client.sap_landscape_monitor.update(
            resource_group_name=resource_group.name,
            monitor_name="str",
            sap_landscape_monitor_parameter={
                "grouping": {
                    "landscape": [{"name": "str", "topSid": ["str"]}],
                    "sapApplication": [{"name": "str", "topSid": ["str"]}],
                },
                "id": "str",
                "name": "str",
                "provisioningState": "str",
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "topMetricsThresholds": [{"green": 0.0, "name": "str", "red": 0.0, "yellow": 0.0}],
                "type": "str",
            },
            api_version="2023-04-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_sap_landscape_monitor_list(self, resource_group):
        response = await self.client.sap_landscape_monitor.list(
            resource_group_name=resource_group.name,
            monitor_name="str",
            api_version="2023-04-01",
        )

        # please add some check logic here by yourself
        # ...
