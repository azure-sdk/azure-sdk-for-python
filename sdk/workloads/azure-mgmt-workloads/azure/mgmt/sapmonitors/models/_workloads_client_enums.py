# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class AppServicePlanTier(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The App Service plan tier."""

    ELASTIC_PREMIUM = "ElasticPremium"
    """Elastic Premium plan"""
    PREMIUM_V3 = "PremiumV3"
    """Dedicated Premium V3 plan"""


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class ManagedServiceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class ProviderType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The Provider Types for Monitor."""

    SAP_HANA = "SapHana"
    """SapHana Provider."""
    SAP_NET_WEAVER = "SapNetWeaver"
    """SapNetWeaver Provider."""
    PROMETHEUS_OS = "PrometheusOS"
    """PrometheusOS Provider."""
    MS_SQL_SERVER = "MsSqlServer"
    """MsSqlServer Provider."""
    PROMETHEUS_HA_CLUSTER = "PrometheusHaCluster"
    """PrometheusHaCluster Provider."""
    DB2 = "Db2"
    """Db2 Provider."""


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """State of provisioning of the SAP monitor."""

    ACCEPTED = "Accepted"
    """The resource request has been accepted."""
    CREATING = "Creating"
    """The resource is being created."""
    UPDATING = "Updating"
    """The resource is being updated."""
    FAILED = "Failed"
    """The resource creation failed."""
    SUCCEEDED = "Succeeded"
    """The resource creation has succeeded."""
    DELETING = "Deleting"
    """The resource is being deleted."""
    MIGRATING = "Migrating"
    """The resource is being migrated."""
    CANCELED = "Canceled"
    """The resource operation was canceled."""


class RoutingPreference(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Sets the routing preference of the SAP monitor."""

    DEFAULT = "Default"
    """Default routing preference. Only RFC1918 traffic is routed to the customer VNET."""
    ROUTE_ALL = "RouteAll"
    """Route all traffic to the customer VNET."""


class SapLandscapeMonitorProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """State of provisioning of the SAP monitor."""

    ACCEPTED = "Accepted"
    """The resource request has been accepted."""
    CREATED = "Created"
    """The resource has been created."""
    FAILED = "Failed"
    """The resource operation has failed."""
    SUCCEEDED = "Succeeded"
    """The resource operation has succeeded."""
    CANCELED = "Canceled"
    """The resource operation was canceled."""


class SslPreference(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Gets or sets certificate preference if secure communication is enabled."""

    DISABLED = "Disabled"
    """Secure communication is disabled."""
    ROOT_CERTIFICATE = "RootCertificate"
    """Secure communication is enabled with root certificate."""
    SERVER_CERTIFICATE = "ServerCertificate"
    """Secure communication is enabled with server certificate."""


class WorkloadProviderInstanceHealthState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """State of health of the provider instance."""

    HEALTHY = "Healthy"
    """The resource health status is Healthy"""
    DEGRADED = "Degraded"
    """The resource health status is Degraded"""
    UNAVAILABLE = "Unavailable"
    """The resource health status is Unavailable"""
    UNKNOWN = "Unknown"
    """The resource health status is Unknown"""
