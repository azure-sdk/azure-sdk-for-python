# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from ... import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AdditionalConfiguration(_serialization.Model):
    """Additional Configuration details.

    All required parameters must be populated in order to send to Azure.

    :ivar hierarchy_information: Hierarchy of the product which uniquely identifies the
     configuration. Required.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar quantity: Quantity of the product. Required.
    :vartype quantity: int
    """

    _validation = {
        "hierarchy_information": {"required": True},
        "quantity": {"required": True},
    }

    _attribute_map = {
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "quantity": {"key": "quantity", "type": "int"},
    }

    def __init__(self, *, hierarchy_information: "_models.HierarchyInformation", quantity: int, **kwargs: Any) -> None:
        """
        :keyword hierarchy_information: Hierarchy of the product which uniquely identifies the
         configuration. Required.
        :paramtype hierarchy_information:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
        :keyword quantity: Quantity of the product. Required.
        :paramtype quantity: int
        """
        super().__init__(**kwargs)
        self.hierarchy_information = hierarchy_information
        self.quantity = quantity


class AddressDetails(_serialization.Model):
    """Address details for an order item.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar forward_address: Customer address and contact details. Required.
    :vartype forward_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
    :ivar return_address: Return shipping address.
    :vartype return_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
    """

    _validation = {
        "forward_address": {"required": True},
        "return_address": {"readonly": True},
    }

    _attribute_map = {
        "forward_address": {"key": "forwardAddress", "type": "AddressProperties"},
        "return_address": {"key": "returnAddress", "type": "AddressProperties"},
    }

    def __init__(self, *, forward_address: "_models.AddressProperties", **kwargs: Any) -> None:
        """
        :keyword forward_address: Customer address and contact details. Required.
        :paramtype forward_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
        """
        super().__init__(**kwargs)
        self.forward_address = forward_address
        self.return_address = None


class AddressProperties(_serialization.Model):
    """Address Properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar shipping_address: Shipping details for the address.
    :vartype shipping_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ShippingAddress
    :ivar contact_details: Contact details for the address. Required.
    :vartype contact_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ContactDetails
    :ivar address_validation_status: Status of address validation. Known values are: "Valid",
     "Invalid", and "Ambiguous".
    :vartype address_validation_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressValidationStatus
    """

    _validation = {
        "contact_details": {"required": True},
        "address_validation_status": {"readonly": True},
    }

    _attribute_map = {
        "shipping_address": {"key": "shippingAddress", "type": "ShippingAddress"},
        "contact_details": {"key": "contactDetails", "type": "ContactDetails"},
        "address_validation_status": {"key": "addressValidationStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        contact_details: "_models.ContactDetails",
        shipping_address: Optional["_models.ShippingAddress"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword shipping_address: Shipping details for the address.
        :paramtype shipping_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ShippingAddress
        :keyword contact_details: Contact details for the address. Required.
        :paramtype contact_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ContactDetails
        """
        super().__init__(**kwargs)
        self.shipping_address = shipping_address
        self.contact_details = contact_details
        self.address_validation_status = None


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class AddressResource(TrackedResource):
    """Address Resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar system_data: Represents resource creation and update time.
    :vartype system_data: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SystemData
    :ivar shipping_address: Shipping details for the address.
    :vartype shipping_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ShippingAddress
    :ivar contact_details: Contact details for the address. Required.
    :vartype contact_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ContactDetails
    :ivar address_validation_status: Status of address validation. Known values are: "Valid",
     "Invalid", and "Ambiguous".
    :vartype address_validation_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressValidationStatus
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
        "system_data": {"readonly": True},
        "contact_details": {"required": True},
        "address_validation_status": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "shipping_address": {"key": "properties.shippingAddress", "type": "ShippingAddress"},
        "contact_details": {"key": "properties.contactDetails", "type": "ContactDetails"},
        "address_validation_status": {"key": "properties.addressValidationStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        contact_details: "_models.ContactDetails",
        tags: Optional[Dict[str, str]] = None,
        shipping_address: Optional["_models.ShippingAddress"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword shipping_address: Shipping details for the address.
        :paramtype shipping_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ShippingAddress
        :keyword contact_details: Contact details for the address. Required.
        :paramtype contact_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ContactDetails
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.system_data = None
        self.shipping_address = shipping_address
        self.contact_details = contact_details
        self.address_validation_status = None


class AddressResourceList(_serialization.Model):
    """Address Resource Collection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of address resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressResource]
    :ivar next_link: Link for the next set of job resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[AddressResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of job resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class AddressUpdateParameter(_serialization.Model):
    """The Address update parameters.

    :ivar tags: The list of key value pairs that describe the resource. These tags can be used in
     viewing and grouping this resource (across resource groups).
    :vartype tags: dict[str, str]
    :ivar shipping_address: Shipping details for the address.
    :vartype shipping_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ShippingAddress
    :ivar contact_details: Contact details for the address.
    :vartype contact_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ContactDetails
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "shipping_address": {"key": "properties.shippingAddress", "type": "ShippingAddress"},
        "contact_details": {"key": "properties.contactDetails", "type": "ContactDetails"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        shipping_address: Optional["_models.ShippingAddress"] = None,
        contact_details: Optional["_models.ContactDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: The list of key value pairs that describe the resource. These tags can be used
         in viewing and grouping this resource (across resource groups).
        :paramtype tags: dict[str, str]
        :keyword shipping_address: Shipping details for the address.
        :paramtype shipping_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ShippingAddress
        :keyword contact_details: Contact details for the address.
        :paramtype contact_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ContactDetails
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.shipping_address = shipping_address
        self.contact_details = contact_details


class AlternateSolutionDetails(_serialization.Model):
    """Represents alternate solution details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar alternative_solution_name: Alternate solution name.
    :vartype alternative_solution_name: str
    :ivar alternative_solution_id: Alternate solution id.
    :vartype alternative_solution_id: str
    """

    _validation = {
        "alternative_solution_name": {"readonly": True},
        "alternative_solution_id": {"readonly": True},
    }

    _attribute_map = {
        "alternative_solution_name": {"key": "alternativeSolutionName", "type": "str"},
        "alternative_solution_id": {"key": "alternativeSolutionId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.alternative_solution_name = None
        self.alternative_solution_id = None


class AvailabilityInformation(_serialization.Model):
    """Availability information of a product system.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar availability_stage: Current availability stage of the product. Known values are:
     "Available", "Preview", "Signup", "Discoverable", "ComingSoon", "Unavailable", and
     "Deprecated".
    :vartype availability_stage: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityStage
    :ivar disabled_reason: Reason why the product is disabled. Known values are: "None", "Country",
     "Region", "Feature", "OfferType", "NoSubscriptionInfo", "NotAvailable", and "OutOfStock".
    :vartype disabled_reason: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DisabledReason
    :ivar disabled_reason_message: Message for why the product is disabled.
    :vartype disabled_reason_message: str
    """

    _validation = {
        "availability_stage": {"readonly": True},
        "disabled_reason": {"readonly": True},
        "disabled_reason_message": {"readonly": True},
    }

    _attribute_map = {
        "availability_stage": {"key": "availabilityStage", "type": "str"},
        "disabled_reason": {"key": "disabledReason", "type": "str"},
        "disabled_reason_message": {"key": "disabledReasonMessage", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.availability_stage = None
        self.disabled_reason = None
        self.disabled_reason_message = None


class BasicInformation(_serialization.Model):
    """Basic information for any product system.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "Description"},
        "image_information": {"key": "imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "costInformation", "type": "CostInformation"},
        "availability_information": {"key": "availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "fulfilledBy", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None


class BillingMeterDetails(_serialization.Model):
    """Holds billing meter details for each type of billing.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Represents Billing type name.
    :vartype name: str
    :ivar meter_details: Represents MeterDetails.
    :vartype meter_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.MeterDetails
    :ivar metering_type: Represents Metering type (eg one-time or recurrent). Known values are:
     "OneTime", "Recurring", and "Adhoc".
    :vartype metering_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.MeteringType
    :ivar frequency: Frequency of recurrence.
    :vartype frequency: str
    :ivar term_type_details: Represent Term Type details.
    :vartype term_type_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermTypeDetails
    """

    _validation = {
        "name": {"readonly": True},
        "meter_details": {"readonly": True},
        "metering_type": {"readonly": True},
        "frequency": {"readonly": True},
        "term_type_details": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "meter_details": {"key": "meterDetails", "type": "MeterDetails"},
        "metering_type": {"key": "meteringType", "type": "str"},
        "frequency": {"key": "frequency", "type": "str"},
        "term_type_details": {"key": "termTypeDetails", "type": "TermTypeDetails"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.meter_details = None
        self.metering_type = None
        self.frequency = None
        self.term_type_details = None


class ByteSize(_serialization.Model):
    """Size details in bytes.

    All required parameters must be populated in order to send to Azure.

    :ivar amount: Amount of bytes in byte unit. Required.
    :vartype amount: float
    :ivar byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
    :vartype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
    """

    _validation = {
        "amount": {"required": True},
        "byte_unit": {"required": True},
    }

    _attribute_map = {
        "amount": {"key": "amount", "type": "float"},
        "byte_unit": {"key": "byteUnit", "type": "str"},
    }

    def __init__(self, *, amount: float, byte_unit: Union[str, "_models.ByteSizeByteUnit"], **kwargs: Any) -> None:
        """
        :keyword amount: Amount of bytes in byte unit. Required.
        :paramtype amount: float
        :keyword byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
        :paramtype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
        """
        super().__init__(**kwargs)
        self.amount = amount
        self.byte_unit = byte_unit


class CacheDriveDetails(_serialization.Model):
    """Represents Cache Drive specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar cache_drive_types: List of cache drive types.
    :vartype cache_drive_types: list[str]
    :ivar minimum_number_of_cache_drives: Minimum number of cache drives.
    :vartype minimum_number_of_cache_drives: int
    :ivar maximum_number_of_cache_drives: Maximum number of cache drives.
    :vartype maximum_number_of_cache_drives: int
    :ivar cache_drive_sizes: List of cache drive sizes.
    :vartype cache_drive_sizes: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSize]
    :ivar cache_drive_sizes_bytes: List of cache drive sizes in bytes.
    :vartype cache_drive_sizes_bytes: list[int]
    """

    _validation = {
        "cache_drive_types": {"readonly": True},
        "minimum_number_of_cache_drives": {"readonly": True},
        "maximum_number_of_cache_drives": {"readonly": True},
        "cache_drive_sizes": {"readonly": True},
        "cache_drive_sizes_bytes": {"readonly": True},
    }

    _attribute_map = {
        "cache_drive_types": {"key": "cacheDriveTypes", "type": "[str]"},
        "minimum_number_of_cache_drives": {"key": "minimumNumberOfCacheDrives", "type": "int"},
        "maximum_number_of_cache_drives": {"key": "maximumNumberOfCacheDrives", "type": "int"},
        "cache_drive_sizes": {"key": "cacheDriveSizes", "type": "[ByteSize]"},
        "cache_drive_sizes_bytes": {"key": "cacheDriveSizesBytes", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.cache_drive_types = None
        self.minimum_number_of_cache_drives = None
        self.maximum_number_of_cache_drives = None
        self.cache_drive_sizes = None
        self.cache_drive_sizes_bytes = None


class CancellationReason(_serialization.Model):
    """Reason for cancellation.

    All required parameters must be populated in order to send to Azure.

    :ivar reason: Reason for cancellation. Required.
    :vartype reason: str
    """

    _validation = {
        "reason": {"required": True},
    }

    _attribute_map = {
        "reason": {"key": "reason", "type": "str"},
    }

    def __init__(self, *, reason: str, **kwargs: Any) -> None:
        """
        :keyword reason: Reason for cancellation. Required.
        :paramtype reason: str
        """
        super().__init__(**kwargs)
        self.reason = reason


class CapacityDriveDetails(_serialization.Model):
    """Represents Capacity Drive specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar capacity_storage_drive_types: List of Capacity storage drive types.
    :vartype capacity_storage_drive_types: list[str]
    :ivar minimum_number_of_capacity_drives: Minimum number of Capacity drives.
    :vartype minimum_number_of_capacity_drives: int
    :ivar maximum_number_of_capacity_drives: Maximum number of Capacity drives.
    :vartype maximum_number_of_capacity_drives: int
    :ivar capacity_drive_sizes: List of Capacity drive sizes.
    :vartype capacity_drive_sizes: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSize]
    :ivar capacity_drive_sizes_bytes: List of Capacity drive sizes in bytes.
    :vartype capacity_drive_sizes_bytes: list[int]
    """

    _validation = {
        "capacity_storage_drive_types": {"readonly": True},
        "minimum_number_of_capacity_drives": {"readonly": True},
        "maximum_number_of_capacity_drives": {"readonly": True},
        "capacity_drive_sizes": {"readonly": True},
        "capacity_drive_sizes_bytes": {"readonly": True},
    }

    _attribute_map = {
        "capacity_storage_drive_types": {"key": "capacityStorageDriveTypes", "type": "[str]"},
        "minimum_number_of_capacity_drives": {"key": "minimumNumberOfCapacityDrives", "type": "int"},
        "maximum_number_of_capacity_drives": {"key": "maximumNumberOfCapacityDrives", "type": "int"},
        "capacity_drive_sizes": {"key": "capacityDriveSizes", "type": "[ByteSize]"},
        "capacity_drive_sizes_bytes": {"key": "capacityDriveSizesBytes", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.capacity_storage_drive_types = None
        self.minimum_number_of_capacity_drives = None
        self.maximum_number_of_capacity_drives = None
        self.capacity_drive_sizes = None
        self.capacity_drive_sizes_bytes = None


class CategoryInformation(_serialization.Model):
    """Category related properties of a child configuration.

    :ivar category_name: Category name of the child configuration.
    :vartype category_name: str
    :ivar category_display_name: Category display name of the child configuration.
    :vartype category_display_name: str
    :ivar description: Description text for the category.
    :vartype description: str
    :ivar links: Links for the category.
    :vartype links: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Link]
    """

    _attribute_map = {
        "category_name": {"key": "categoryName", "type": "str"},
        "category_display_name": {"key": "categoryDisplayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "links": {"key": "links", "type": "[Link]"},
    }

    def __init__(
        self,
        *,
        category_name: Optional[str] = None,
        category_display_name: Optional[str] = None,
        description: Optional[str] = None,
        links: Optional[List["_models.Link"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword category_name: Category name of the child configuration.
        :paramtype category_name: str
        :keyword category_display_name: Category display name of the child configuration.
        :paramtype category_display_name: str
        :keyword description: Description text for the category.
        :paramtype description: str
        :keyword links: Links for the category.
        :paramtype links: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Link]
        """
        super().__init__(**kwargs)
        self.category_name = category_name
        self.category_display_name = category_display_name
        self.description = description
        self.links = links


class ChildConfiguration(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Child configuration object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar child_configuration_type: Child configuration type. Known values are:
     "DeviceConfiguration" and "AdditionalConfiguration".
    :vartype child_configuration_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationType
    :ivar is_part_of_base_configuration: Flag to indicate if the child configuration is part of the
     base configuration, which means the customer need not pass this configuration in
     OptInAdditionalConfigurations while placing an order, it will be shipped by default.
    :vartype is_part_of_base_configuration: bool
    :ivar minimum_quantity: Minimum quantity a customer can order while choosing this
     configuration.
    :vartype minimum_quantity: int
    :ivar maximum_quantity: Maximum quantity a customer can order while choosing this
     configuration.
    :vartype maximum_quantity: int
    :ivar specifications: Specifications of the configuration.
    :vartype specifications: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Specification]
    :ivar dimensions: Dimensions of the configuration.
    :vartype dimensions: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Dimensions
    :ivar child_configuration_types: Different types of child configurations which exist for this
     configuration, these can be used to populate the child configuration filter.
    :vartype child_configuration_types: list[str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationType]
    :ivar grouped_child_configurations: Child configurations present for the configuration after
     applying child configuration filter, grouped by the category name of the child configuration.
    :vartype grouped_child_configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.GroupedChildConfigurations]
    :ivar supported_term_commitment_durations: The Term Commitment Durations that are supported for
     a configuration.
    :vartype supported_term_commitment_durations: list[str]
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    """

    _validation = {
        "child_configuration_type": {"readonly": True},
        "is_part_of_base_configuration": {"readonly": True},
        "minimum_quantity": {"readonly": True},
        "maximum_quantity": {"readonly": True},
        "specifications": {"readonly": True},
        "dimensions": {"readonly": True},
        "child_configuration_types": {"readonly": True},
        "grouped_child_configurations": {"readonly": True},
        "supported_term_commitment_durations": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
    }

    _attribute_map = {
        "child_configuration_type": {"key": "properties.childConfigurationType", "type": "str"},
        "is_part_of_base_configuration": {"key": "properties.isPartOfBaseConfiguration", "type": "bool"},
        "minimum_quantity": {"key": "properties.minimumQuantity", "type": "int"},
        "maximum_quantity": {"key": "properties.maximumQuantity", "type": "int"},
        "specifications": {"key": "properties.specifications", "type": "[Specification]"},
        "dimensions": {"key": "properties.dimensions", "type": "Dimensions"},
        "child_configuration_types": {"key": "properties.childConfigurationTypes", "type": "[str]"},
        "grouped_child_configurations": {
            "key": "properties.groupedChildConfigurations",
            "type": "[GroupedChildConfigurations]",
        },
        "supported_term_commitment_durations": {"key": "properties.supportedTermCommitmentDurations", "type": "[str]"},
        "filterable_properties": {"key": "properties.filterableProperties", "type": "[FilterableProperty]"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "Description"},
        "image_information": {"key": "properties.imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "properties.costInformation", "type": "CostInformation"},
        "availability_information": {"key": "properties.availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "properties.hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "properties.fulfilledBy", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.child_configuration_type = None
        self.is_part_of_base_configuration = None
        self.minimum_quantity = None
        self.maximum_quantity = None
        self.specifications = None
        self.dimensions = None
        self.child_configuration_types = None
        self.grouped_child_configurations = None
        self.supported_term_commitment_durations = None
        self.filterable_properties = None
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None


class ChildConfigurationFilter(_serialization.Model):
    """Child configuration filter.

    :ivar hierarchy_informations: The list of child configuration hierarchy customer wants to
     filter for the given configuration.
    :vartype hierarchy_informations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation]
    :ivar child_configuration_types: Filter to fetch all child configurations belonging to the
     given list of configuration types.
    :vartype child_configuration_types: list[str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationType]
    """

    _attribute_map = {
        "hierarchy_informations": {"key": "hierarchyInformations", "type": "[HierarchyInformation]"},
        "child_configuration_types": {"key": "childConfigurationTypes", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        hierarchy_informations: Optional[List["_models.HierarchyInformation"]] = None,
        child_configuration_types: Optional[List[Union[str, "_models.ChildConfigurationType"]]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword hierarchy_informations: The list of child configuration hierarchy customer wants to
         filter for the given configuration.
        :paramtype hierarchy_informations:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation]
        :keyword child_configuration_types: Filter to fetch all child configurations belonging to the
         given list of configuration types.
        :paramtype child_configuration_types: list[str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationType]
        """
        super().__init__(**kwargs)
        self.hierarchy_informations = hierarchy_informations
        self.child_configuration_types = child_configuration_types


class CommonProperties(BasicInformation):
    """Represents common properties across product hierarchy.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "Description"},
        "image_information": {"key": "imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "costInformation", "type": "CostInformation"},
        "availability_information": {"key": "availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "filterableProperties", "type": "[FilterableProperty]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.filterable_properties = None


class Configuration(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Configuration object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar specifications: Specifications of the configuration.
    :vartype specifications: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Specification]
    :ivar dimensions: Dimensions of the configuration.
    :vartype dimensions: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Dimensions
    :ivar child_configuration_types: Different types of child configurations which exist for this
     configuration, these can be used to populate the child configuration filter.
    :vartype child_configuration_types: list[str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationType]
    :ivar grouped_child_configurations: Child configurations present for the configuration after
     applying child configuration filter, grouped by the category name of the child configuration.
    :vartype grouped_child_configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.GroupedChildConfigurations]
    :ivar supported_term_commitment_durations: The Term Commitment Durations that are supported for
     a configuration.
    :vartype supported_term_commitment_durations: list[str]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "specifications": {"readonly": True},
        "dimensions": {"readonly": True},
        "child_configuration_types": {"readonly": True},
        "grouped_child_configurations": {"readonly": True},
        "supported_term_commitment_durations": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "Description"},
        "image_information": {"key": "properties.imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "properties.costInformation", "type": "CostInformation"},
        "availability_information": {"key": "properties.availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "properties.hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "properties.fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "properties.filterableProperties", "type": "[FilterableProperty]"},
        "specifications": {"key": "properties.specifications", "type": "[Specification]"},
        "dimensions": {"key": "properties.dimensions", "type": "Dimensions"},
        "child_configuration_types": {"key": "properties.childConfigurationTypes", "type": "[str]"},
        "grouped_child_configurations": {
            "key": "properties.groupedChildConfigurations",
            "type": "[GroupedChildConfigurations]",
        },
        "supported_term_commitment_durations": {"key": "properties.supportedTermCommitmentDurations", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None
        self.filterable_properties = None
        self.specifications = None
        self.dimensions = None
        self.child_configuration_types = None
        self.grouped_child_configurations = None
        self.supported_term_commitment_durations = None


class ConfigurationDeviceDetails(_serialization.Model):
    """Device details for configuration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_info: Display details of the product.
    :vartype display_info: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DisplayInfo
    :ivar hierarchy_information: Hierarchy of the product which uniquely identifies the
     configuration.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar quantity: Quantity of the product.
    :vartype quantity: int
    :ivar identification_type: Identification type of the configuration. Known values are:
     "NotSupported" and "SerialNumber".
    :vartype identification_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.IdentificationType
    :ivar device_details: List of device details.
    :vartype device_details: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.DeviceDetails]
    :ivar term_commitment_information: Term Commitment Information of the Device.
    :vartype term_commitment_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentInformation
    """

    _validation = {
        "hierarchy_information": {"readonly": True},
        "quantity": {"readonly": True},
        "identification_type": {"readonly": True},
        "device_details": {"readonly": True},
        "term_commitment_information": {"readonly": True},
    }

    _attribute_map = {
        "display_info": {"key": "displayInfo", "type": "DisplayInfo"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "quantity": {"key": "quantity", "type": "int"},
        "identification_type": {"key": "identificationType", "type": "str"},
        "device_details": {"key": "deviceDetails", "type": "[DeviceDetails]"},
        "term_commitment_information": {"key": "termCommitmentInformation", "type": "TermCommitmentInformation"},
    }

    def __init__(self, *, display_info: Optional["_models.DisplayInfo"] = None, **kwargs: Any) -> None:
        """
        :keyword display_info: Display details of the product.
        :paramtype display_info: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DisplayInfo
        """
        super().__init__(**kwargs)
        self.display_info = display_info
        self.hierarchy_information = None
        self.quantity = None
        self.identification_type = None
        self.device_details = None
        self.term_commitment_information = None


class ConfigurationFilter(_serialization.Model):
    """Configuration filters.

    All required parameters must be populated in order to send to Azure.

    :ivar hierarchy_information: Product hierarchy information. Required.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar filterable_property: Filters specific to product.
    :vartype filterable_property:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar child_configuration_filter: Filter to fetch specific child configurations that exist in
     the configuration. This must be passed to either fetch a list of specific child configurations,
     or all child configurations of specific types of child configurations.
    :vartype child_configuration_filter:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationFilter
    """

    _validation = {
        "hierarchy_information": {"required": True},
    }

    _attribute_map = {
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "filterable_property": {"key": "filterableProperty", "type": "[FilterableProperty]"},
        "child_configuration_filter": {"key": "childConfigurationFilter", "type": "ChildConfigurationFilter"},
    }

    def __init__(
        self,
        *,
        hierarchy_information: "_models.HierarchyInformation",
        filterable_property: Optional[List["_models.FilterableProperty"]] = None,
        child_configuration_filter: Optional["_models.ChildConfigurationFilter"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword hierarchy_information: Product hierarchy information. Required.
        :paramtype hierarchy_information:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
        :keyword filterable_property: Filters specific to product.
        :paramtype filterable_property:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
        :keyword child_configuration_filter: Filter to fetch specific child configurations that exist
         in the configuration. This must be passed to either fetch a list of specific child
         configurations, or all child configurations of specific types of child configurations.
        :paramtype child_configuration_filter:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationFilter
        """
        super().__init__(**kwargs)
        self.hierarchy_information = hierarchy_information
        self.filterable_property = filterable_property
        self.child_configuration_filter = child_configuration_filter


class ConfigurationProperties(CommonProperties):  # pylint: disable=too-many-instance-attributes
    """Properties of configuration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar specifications: Specifications of the configuration.
    :vartype specifications: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Specification]
    :ivar dimensions: Dimensions of the configuration.
    :vartype dimensions: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Dimensions
    :ivar child_configuration_types: Different types of child configurations which exist for this
     configuration, these can be used to populate the child configuration filter.
    :vartype child_configuration_types: list[str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfigurationType]
    :ivar grouped_child_configurations: Child configurations present for the configuration after
     applying child configuration filter, grouped by the category name of the child configuration.
    :vartype grouped_child_configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.GroupedChildConfigurations]
    :ivar supported_term_commitment_durations: The Term Commitment Durations that are supported for
     a configuration.
    :vartype supported_term_commitment_durations: list[str]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "specifications": {"readonly": True},
        "dimensions": {"readonly": True},
        "child_configuration_types": {"readonly": True},
        "grouped_child_configurations": {"readonly": True},
        "supported_term_commitment_durations": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "Description"},
        "image_information": {"key": "imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "costInformation", "type": "CostInformation"},
        "availability_information": {"key": "availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "filterableProperties", "type": "[FilterableProperty]"},
        "specifications": {"key": "specifications", "type": "[Specification]"},
        "dimensions": {"key": "dimensions", "type": "Dimensions"},
        "child_configuration_types": {"key": "childConfigurationTypes", "type": "[str]"},
        "grouped_child_configurations": {"key": "groupedChildConfigurations", "type": "[GroupedChildConfigurations]"},
        "supported_term_commitment_durations": {"key": "supportedTermCommitmentDurations", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.specifications = None
        self.dimensions = None
        self.child_configuration_types = None
        self.grouped_child_configurations = None
        self.supported_term_commitment_durations = None


class Configurations(_serialization.Model):
    """The list of configurations.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of configurations.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Configuration]
    :ivar next_link: Link for the next set of configurations.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Configuration]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of configurations.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class ConfigurationsRequest(_serialization.Model):
    """Configuration request object.

    :ivar configuration_filter: Holds details about product hierarchy information and filterable
     property.
    :vartype configuration_filter:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ConfigurationFilter
    :ivar customer_subscription_details: Customer subscription properties. Clients can display
     available products to unregistered customers by explicitly passing subscription details.
    :vartype customer_subscription_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CustomerSubscriptionDetails
    """

    _attribute_map = {
        "configuration_filter": {"key": "configurationFilter", "type": "ConfigurationFilter"},
        "customer_subscription_details": {"key": "customerSubscriptionDetails", "type": "CustomerSubscriptionDetails"},
    }

    def __init__(
        self,
        *,
        configuration_filter: Optional["_models.ConfigurationFilter"] = None,
        customer_subscription_details: Optional["_models.CustomerSubscriptionDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword configuration_filter: Holds details about product hierarchy information and filterable
         property.
        :paramtype configuration_filter:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ConfigurationFilter
        :keyword customer_subscription_details: Customer subscription properties. Clients can display
         available products to unregistered customers by explicitly passing subscription details.
        :paramtype customer_subscription_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CustomerSubscriptionDetails
        """
        super().__init__(**kwargs)
        self.configuration_filter = configuration_filter
        self.customer_subscription_details = customer_subscription_details


class ContactDetails(_serialization.Model):
    """Contact Details.

    All required parameters must be populated in order to send to Azure.

    :ivar contact_name: Contact name of the person. Required.
    :vartype contact_name: str
    :ivar phone: Phone number of the contact person. Required.
    :vartype phone: str
    :ivar phone_extension: Phone extension number of the contact person.
    :vartype phone_extension: str
    :ivar mobile: Mobile number of the contact person.
    :vartype mobile: str
    :ivar email_list: List of Email-ids to be notified about job progress. Required.
    :vartype email_list: list[str]
    """

    _validation = {
        "contact_name": {"required": True},
        "phone": {"required": True},
        "email_list": {"required": True},
    }

    _attribute_map = {
        "contact_name": {"key": "contactName", "type": "str"},
        "phone": {"key": "phone", "type": "str"},
        "phone_extension": {"key": "phoneExtension", "type": "str"},
        "mobile": {"key": "mobile", "type": "str"},
        "email_list": {"key": "emailList", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        contact_name: str,
        phone: str,
        email_list: List[str],
        phone_extension: Optional[str] = None,
        mobile: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword contact_name: Contact name of the person. Required.
        :paramtype contact_name: str
        :keyword phone: Phone number of the contact person. Required.
        :paramtype phone: str
        :keyword phone_extension: Phone extension number of the contact person.
        :paramtype phone_extension: str
        :keyword mobile: Mobile number of the contact person.
        :paramtype mobile: str
        :keyword email_list: List of Email-ids to be notified about job progress. Required.
        :paramtype email_list: list[str]
        """
        super().__init__(**kwargs)
        self.contact_name = contact_name
        self.phone = phone
        self.phone_extension = phone_extension
        self.mobile = mobile
        self.email_list = email_list


class CostInformation(_serialization.Model):
    """Cost information for the product system.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar billing_meter_details: Details on the various billing aspects for the product system.
    :vartype billing_meter_details:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.BillingMeterDetails]
    :ivar billing_info_url: Default url to display billing information.
    :vartype billing_info_url: str
    """

    _validation = {
        "billing_meter_details": {"readonly": True},
        "billing_info_url": {"readonly": True},
    }

    _attribute_map = {
        "billing_meter_details": {"key": "billingMeterDetails", "type": "[BillingMeterDetails]"},
        "billing_info_url": {"key": "billingInfoUrl", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.billing_meter_details = None
        self.billing_info_url = None


class CPUBreakdown(_serialization.Model):
    """Cpu breakdown.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar used: (Number of VMs x vCPU per VM) / ratio of virtual to physical cores.
    :vartype used: int
    :ivar future_growth: Cores reserved for future growth.
    :vartype future_growth: int
    :ivar high_availability: Hosts reserved for emergency scenarios (e.g. maintenance, one node is
     down etc).
    :vartype high_availability: int
    :ivar total: The total CPU needed to run your workloads.
    :vartype total: int
    :ivar leftover: Cores left on the hardware. This is total - (Used + Future Growth+ High
     availability).
    :vartype leftover: int
    :ivar availability: Host reserved for emergency scenarios.
    :vartype availability: str
    :ivar availability_total: Total host reserved for emergency scenarios.
    :vartype availability_total: int
    """

    _validation = {
        "used": {"readonly": True},
        "future_growth": {"readonly": True},
        "high_availability": {"readonly": True},
        "total": {"readonly": True},
        "leftover": {"readonly": True},
        "availability": {"readonly": True},
        "availability_total": {"readonly": True},
    }

    _attribute_map = {
        "used": {"key": "used", "type": "int"},
        "future_growth": {"key": "futureGrowth", "type": "int"},
        "high_availability": {"key": "highAvailability", "type": "int"},
        "total": {"key": "total", "type": "int"},
        "leftover": {"key": "leftover", "type": "int"},
        "availability": {"key": "availability", "type": "str"},
        "availability_total": {"key": "availabilityTotal", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.used = None
        self.future_growth = None
        self.high_availability = None
        self.total = None
        self.leftover = None
        self.availability = None
        self.availability_total = None


class CpuDetails(_serialization.Model):
    """Represents CPU specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar minimum_cores: Minimum number of cores.
    :vartype minimum_cores: int
    :ivar maximum_cores: Maximum number of cores.
    :vartype maximum_cores: int
    :ivar total_sockets_supported: Total sockets supported.
    :vartype total_sockets_supported: int
    :ivar cores_per_socket: List of cores per socket.
    :vartype cores_per_socket: list[int]
    """

    _validation = {
        "minimum_cores": {"readonly": True},
        "maximum_cores": {"readonly": True},
        "total_sockets_supported": {"readonly": True},
        "cores_per_socket": {"readonly": True},
    }

    _attribute_map = {
        "minimum_cores": {"key": "minimumCores", "type": "int"},
        "maximum_cores": {"key": "maximumCores", "type": "int"},
        "total_sockets_supported": {"key": "totalSocketsSupported", "type": "int"},
        "cores_per_socket": {"key": "coresPerSocket", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.minimum_cores = None
        self.maximum_cores = None
        self.total_sockets_supported = None
        self.cores_per_socket = None


class CustomerSubscriptionDetails(_serialization.Model):
    """Holds Customer subscription details. Clients can display available products to unregistered
    customers by explicitly passing subscription details.

    All required parameters must be populated in order to send to Azure.

    :ivar registered_features: List of registered feature flags for subscription.
    :vartype registered_features:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.CustomerSubscriptionRegisteredFeatures]
    :ivar location_placement_id: Location placement Id of a subscription.
    :vartype location_placement_id: str
    :ivar quota_id: Quota ID of a subscription. Required.
    :vartype quota_id: str
    """

    _validation = {
        "quota_id": {"required": True},
    }

    _attribute_map = {
        "registered_features": {"key": "registeredFeatures", "type": "[CustomerSubscriptionRegisteredFeatures]"},
        "location_placement_id": {"key": "locationPlacementId", "type": "str"},
        "quota_id": {"key": "quotaId", "type": "str"},
    }

    def __init__(
        self,
        *,
        quota_id: str,
        registered_features: Optional[List["_models.CustomerSubscriptionRegisteredFeatures"]] = None,
        location_placement_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword registered_features: List of registered feature flags for subscription.
        :paramtype registered_features:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.CustomerSubscriptionRegisteredFeatures]
        :keyword location_placement_id: Location placement Id of a subscription.
        :paramtype location_placement_id: str
        :keyword quota_id: Quota ID of a subscription. Required.
        :paramtype quota_id: str
        """
        super().__init__(**kwargs)
        self.registered_features = registered_features
        self.location_placement_id = location_placement_id
        self.quota_id = quota_id


class CustomerSubscriptionRegisteredFeatures(_serialization.Model):
    """Represents subscription registered features.

    :ivar name: Name of subscription registered feature.
    :vartype name: str
    :ivar state: State of subscription registered feature.
    :vartype state: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, state: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: Name of subscription registered feature.
        :paramtype name: str
        :keyword state: State of subscription registered feature.
        :paramtype state: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.state = state


class Description(_serialization.Model):
    """Description related properties of a product system.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar description_type: Type of description. "Base"
    :vartype description_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DescriptionType
    :ivar short_description: Short description of the product system.
    :vartype short_description: str
    :ivar long_description: Long description of the product system.
    :vartype long_description: str
    :ivar keywords: Keywords for the product system.
    :vartype keywords: list[str]
    :ivar attributes: Attributes for the product system.
    :vartype attributes: list[str]
    :ivar links: Links for the product system.
    :vartype links: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Link]
    """

    _validation = {
        "description_type": {"readonly": True},
        "short_description": {"readonly": True},
        "long_description": {"readonly": True},
        "keywords": {"readonly": True},
        "attributes": {"readonly": True},
        "links": {"readonly": True},
    }

    _attribute_map = {
        "description_type": {"key": "descriptionType", "type": "str"},
        "short_description": {"key": "shortDescription", "type": "str"},
        "long_description": {"key": "longDescription", "type": "str"},
        "keywords": {"key": "keywords", "type": "[str]"},
        "attributes": {"key": "attributes", "type": "[str]"},
        "links": {"key": "links", "type": "[Link]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.description_type = None
        self.short_description = None
        self.long_description = None
        self.keywords = None
        self.attributes = None
        self.links = None


class DeviceDetails(_serialization.Model):
    """Device details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar serial_number: Device serial number.
    :vartype serial_number: str
    :ivar management_resource_id: Management Resource Id.
    :vartype management_resource_id: str
    :ivar management_resource_tenant_id: Management Resource Tenant ID.
    :vartype management_resource_tenant_id: str
    """

    _validation = {
        "serial_number": {"readonly": True},
        "management_resource_id": {"readonly": True},
        "management_resource_tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "serial_number": {"key": "serialNumber", "type": "str"},
        "management_resource_id": {"key": "managementResourceId", "type": "str"},
        "management_resource_tenant_id": {"key": "managementResourceTenantId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.serial_number = None
        self.management_resource_id = None
        self.management_resource_tenant_id = None


class Dimensions(_serialization.Model):
    """Dimensions of a configuration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar length: Length of the device.
    :vartype length: float
    :ivar height: Height of the device.
    :vartype height: float
    :ivar width: Width of the device.
    :vartype width: float
    :ivar length_height_unit: Unit for the dimensions of length, height and width. Known values
     are: "IN", "CM", and "IN".
    :vartype length_height_unit: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.LengthHeightUnit
    :ivar weight: Weight of the device.
    :vartype weight: float
    :ivar depth: Depth of the device.
    :vartype depth: float
    :ivar weight_unit: Unit for the dimensions of weight. Known values are: "LBS" and "KGS".
    :vartype weight_unit: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WeightMeasurementUnit
    """

    _validation = {
        "length": {"readonly": True},
        "height": {"readonly": True},
        "width": {"readonly": True},
        "length_height_unit": {"readonly": True},
        "weight": {"readonly": True},
        "depth": {"readonly": True},
        "weight_unit": {"readonly": True},
    }

    _attribute_map = {
        "length": {"key": "length", "type": "float"},
        "height": {"key": "height", "type": "float"},
        "width": {"key": "width", "type": "float"},
        "length_height_unit": {"key": "lengthHeightUnit", "type": "str"},
        "weight": {"key": "weight", "type": "float"},
        "depth": {"key": "depth", "type": "float"},
        "weight_unit": {"key": "weightUnit", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.length = None
        self.height = None
        self.width = None
        self.length_height_unit = None
        self.weight = None
        self.depth = None
        self.weight_unit = None


class DisplayInfo(_serialization.Model):
    """Describes product display information.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar product_family_display_name: Product family display name.
    :vartype product_family_display_name: str
    :ivar configuration_display_name: Configuration display name.
    :vartype configuration_display_name: str
    """

    _validation = {
        "product_family_display_name": {"readonly": True},
        "configuration_display_name": {"readonly": True},
    }

    _attribute_map = {
        "product_family_display_name": {"key": "productFamilyDisplayName", "type": "str"},
        "configuration_display_name": {"key": "configurationDisplayName", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.product_family_display_name = None
        self.configuration_display_name = None


class EncryptionPreferences(_serialization.Model):
    """Preferences related to the double encryption.

    :ivar double_encryption_status: Double encryption status as entered by the customer. It is
     compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured. Known
     values are: "Disabled" and "Enabled".
    :vartype double_encryption_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DoubleEncryptionStatus
    """

    _attribute_map = {
        "double_encryption_status": {"key": "doubleEncryptionStatus", "type": "str"},
    }

    def __init__(
        self, *, double_encryption_status: Optional[Union[str, "_models.DoubleEncryptionStatus"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword double_encryption_status: Double encryption status as entered by the customer. It is
         compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured. Known
         values are: "Disabled" and "Enabled".
        :paramtype double_encryption_status: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DoubleEncryptionStatus
        """
        super().__init__(**kwargs)
        self.double_encryption_status = double_encryption_status


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Filter(_serialization.Model):
    """Filter details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Name of the filter. Required.
    :vartype name: str
    :ivar metadata: Metadata of the filter.
    :vartype metadata: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterMetadata
    :ivar values: List of filter values. Required.
    :vartype values: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterValue]
    """

    _validation = {
        "name": {"required": True},
        "metadata": {"readonly": True},
        "values": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "metadata": {"key": "metadata", "type": "FilterMetadata"},
        "values": {"key": "values", "type": "[FilterValue]"},
    }

    def __init__(self, *, name: str, values: List["_models.FilterValue"], **kwargs: Any) -> None:
        """
        :keyword name: Name of the filter. Required.
        :paramtype name: str
        :keyword values: List of filter values. Required.
        :paramtype values: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterValue]
        """
        super().__init__(**kwargs)
        self.name = name
        self.metadata = None
        self.values = values


class FilterableProperty(_serialization.Model):
    """Different types of filters supported and its values.

    All required parameters must be populated in order to send to Azure.

    :ivar type: Type of product filter. Required. Known values are: "ShipToCountries" and
     "DoubleEncryptionStatus".
    :vartype type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SupportedFilterTypes
    :ivar supported_values: Values to be filtered. Required.
    :vartype supported_values: list[str]
    """

    _validation = {
        "type": {"required": True},
        "supported_values": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "supported_values": {"key": "supportedValues", "type": "[str]"},
    }

    def __init__(
        self, *, type: Union[str, "_models.SupportedFilterTypes"], supported_values: List[str], **kwargs: Any
    ) -> None:
        """
        :keyword type: Type of product filter. Required. Known values are: "ShipToCountries" and
         "DoubleEncryptionStatus".
        :paramtype type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SupportedFilterTypes
        :keyword supported_values: Values to be filtered. Required.
        :paramtype supported_values: list[str]
        """
        super().__init__(**kwargs)
        self.type = type
        self.supported_values = supported_values


class FilterMetadataAutoGenerated(_serialization.Model):
    """Filter metadata details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_text: Display text of the filter.
    :vartype display_text: str
    :ivar description: Description of the filter.
    :vartype description: str
    """

    _validation = {
        "display_text": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "display_text": {"key": "displayText", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_text = None
        self.description = None


class FilterMetadata(FilterMetadataAutoGenerated):
    """Metadata of the filter.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_text: Display text of the filter.
    :vartype display_text: str
    :ivar description: Description of the filter.
    :vartype description: str
    """

    _validation = {
        "display_text": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "display_text": {"key": "displayText", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class FilterValue(_serialization.Model):
    """Filter value details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The filter value. Required.
    :vartype value: str
    :ivar metadata: Display text of the filter value.
    :vartype metadata: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterValueMetadata
    """

    _validation = {
        "value": {"required": True},
        "metadata": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "str"},
        "metadata": {"key": "metadata", "type": "FilterValueMetadata"},
    }

    def __init__(self, *, value: str, **kwargs: Any) -> None:
        """
        :keyword value: The filter value. Required.
        :paramtype value: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.metadata = None


class FilterValueMetadataAutoGenerated(_serialization.Model):
    """Filter value metadata details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_text: Display text of the filter value.
    :vartype display_text: str
    :ivar description: Description of the filter value.
    :vartype description: str
    :ivar count: The approximate count of results falling within the bucket for this filter value.
    :vartype count: int
    """

    _validation = {
        "display_text": {"readonly": True},
        "description": {"readonly": True},
        "count": {"readonly": True},
    }

    _attribute_map = {
        "display_text": {"key": "displayText", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "count": {"key": "count", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_text = None
        self.description = None
        self.count = None


class FilterValueMetadata(FilterValueMetadataAutoGenerated):
    """Display text of the filter value.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_text: Display text of the filter value.
    :vartype display_text: str
    :ivar description: Description of the filter value.
    :vartype description: str
    :ivar count: The approximate count of results falling within the bucket for this filter value.
    :vartype count: int
    """

    _validation = {
        "display_text": {"readonly": True},
        "description": {"readonly": True},
        "count": {"readonly": True},
    }

    _attribute_map = {
        "display_text": {"key": "displayText", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "count": {"key": "count", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class ForwardShippingDetails(_serialization.Model):
    """Forward shipment details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar carrier_name: Name of the carrier.
    :vartype carrier_name: str
    :ivar carrier_display_name: Carrier Name for display purpose. Not to be used for any
     processing.
    :vartype carrier_display_name: str
    :ivar tracking_id: TrackingId of the package.
    :vartype tracking_id: str
    :ivar tracking_url: TrackingUrl of the package.
    :vartype tracking_url: str
    """

    _validation = {
        "carrier_name": {"readonly": True},
        "carrier_display_name": {"readonly": True},
        "tracking_id": {"readonly": True},
        "tracking_url": {"readonly": True},
    }

    _attribute_map = {
        "carrier_name": {"key": "carrierName", "type": "str"},
        "carrier_display_name": {"key": "carrierDisplayName", "type": "str"},
        "tracking_id": {"key": "trackingId", "type": "str"},
        "tracking_url": {"key": "trackingUrl", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.carrier_name = None
        self.carrier_display_name = None
        self.tracking_id = None
        self.tracking_url = None


class WorkloadDetails(_serialization.Model):
    """Workload details.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    GeneralWorkloadDetails, SQLWorkloadDetails, VDIWorkloadDetails, WorkloadWorkloadDetails

    All required parameters must be populated in order to send to Azure.

    :ivar workload_name: Workload name. Required.
    :vartype workload_name: str
    :ivar workload_type: Workload type, general, AVD, etc. Required. Known values are: "General",
     "SQL", and "VDI".
    :vartype workload_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadDetailsWorkloadType
    :ivar number_of_vms: Number of virtual machines. Required.
    :vartype number_of_vms: int
    :ivar virtual_cpu: Virtual cpus. Required.
    :vartype virtual_cpu: int
    :ivar virtual_core_per_physical_core: V:P ratio. Required.
    :vartype virtual_core_per_physical_core: int
    :ivar memory_bytes: Memory bytes requirement. Required.
    :vartype memory_bytes: int
    :ivar storage_bytes: Storage bytes requirement. Required.
    :vartype storage_bytes: int
    """

    _validation = {
        "workload_name": {"required": True},
        "workload_type": {"required": True},
        "number_of_vms": {"required": True},
        "virtual_cpu": {"required": True},
        "virtual_core_per_physical_core": {"required": True},
        "memory_bytes": {"required": True},
        "storage_bytes": {"required": True},
    }

    _attribute_map = {
        "workload_name": {"key": "workloadName", "type": "str"},
        "workload_type": {"key": "workloadType", "type": "str"},
        "number_of_vms": {"key": "numberOfVms", "type": "int"},
        "virtual_cpu": {"key": "virtualCpu", "type": "int"},
        "virtual_core_per_physical_core": {"key": "virtualCorePerPhysicalCore", "type": "int"},
        "memory_bytes": {"key": "memoryBytes", "type": "int"},
        "storage_bytes": {"key": "storageBytes", "type": "int"},
    }

    _subtype_map = {
        "workload_type": {
            "General": "GeneralWorkloadDetails",
            "SQL": "SQLWorkloadDetails",
            "VDI": "VDIWorkloadDetails",
            "Workload-workloadDetails": "WorkloadWorkloadDetails",
        }
    }

    def __init__(
        self,
        *,
        workload_name: str,
        number_of_vms: int,
        virtual_cpu: int,
        virtual_core_per_physical_core: int,
        memory_bytes: int,
        storage_bytes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword workload_name: Workload name. Required.
        :paramtype workload_name: str
        :keyword number_of_vms: Number of virtual machines. Required.
        :paramtype number_of_vms: int
        :keyword virtual_cpu: Virtual cpus. Required.
        :paramtype virtual_cpu: int
        :keyword virtual_core_per_physical_core: V:P ratio. Required.
        :paramtype virtual_core_per_physical_core: int
        :keyword memory_bytes: Memory bytes requirement. Required.
        :paramtype memory_bytes: int
        :keyword storage_bytes: Storage bytes requirement. Required.
        :paramtype storage_bytes: int
        """
        super().__init__(**kwargs)
        self.workload_name = workload_name
        self.workload_type: Optional[str] = None
        self.number_of_vms = number_of_vms
        self.virtual_cpu = virtual_cpu
        self.virtual_core_per_physical_core = virtual_core_per_physical_core
        self.memory_bytes = memory_bytes
        self.storage_bytes = storage_bytes


class GeneralWorkloadDetails(WorkloadDetails):
    """General workload details.

    All required parameters must be populated in order to send to Azure.

    :ivar workload_name: Workload name. Required.
    :vartype workload_name: str
    :ivar workload_type: Workload type, general, AVD, etc. Required. Known values are: "General",
     "SQL", and "VDI".
    :vartype workload_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadDetailsWorkloadType
    :ivar number_of_vms: Number of virtual machines. Required.
    :vartype number_of_vms: int
    :ivar virtual_cpu: Virtual cpus. Required.
    :vartype virtual_cpu: int
    :ivar virtual_core_per_physical_core: V:P ratio. Required.
    :vartype virtual_core_per_physical_core: int
    :ivar memory_bytes: Memory bytes requirement. Required.
    :vartype memory_bytes: int
    :ivar storage_bytes: Storage bytes requirement. Required.
    :vartype storage_bytes: int
    """

    _validation = {
        "workload_name": {"required": True},
        "workload_type": {"required": True},
        "number_of_vms": {"required": True},
        "virtual_cpu": {"required": True},
        "virtual_core_per_physical_core": {"required": True},
        "memory_bytes": {"required": True},
        "storage_bytes": {"required": True},
    }

    _attribute_map = {
        "workload_name": {"key": "workloadName", "type": "str"},
        "workload_type": {"key": "workloadType", "type": "str"},
        "number_of_vms": {"key": "numberOfVms", "type": "int"},
        "virtual_cpu": {"key": "virtualCpu", "type": "int"},
        "virtual_core_per_physical_core": {"key": "virtualCorePerPhysicalCore", "type": "int"},
        "memory_bytes": {"key": "memoryBytes", "type": "int"},
        "storage_bytes": {"key": "storageBytes", "type": "int"},
    }

    def __init__(
        self,
        *,
        workload_name: str,
        number_of_vms: int,
        virtual_cpu: int,
        virtual_core_per_physical_core: int,
        memory_bytes: int,
        storage_bytes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword workload_name: Workload name. Required.
        :paramtype workload_name: str
        :keyword number_of_vms: Number of virtual machines. Required.
        :paramtype number_of_vms: int
        :keyword virtual_cpu: Virtual cpus. Required.
        :paramtype virtual_cpu: int
        :keyword virtual_core_per_physical_core: V:P ratio. Required.
        :paramtype virtual_core_per_physical_core: int
        :keyword memory_bytes: Memory bytes requirement. Required.
        :paramtype memory_bytes: int
        :keyword storage_bytes: Storage bytes requirement. Required.
        :paramtype storage_bytes: int
        """
        super().__init__(
            workload_name=workload_name,
            number_of_vms=number_of_vms,
            virtual_cpu=virtual_cpu,
            virtual_core_per_physical_core=virtual_core_per_physical_core,
            memory_bytes=memory_bytes,
            storage_bytes=storage_bytes,
            **kwargs
        )
        self.workload_type: str = "General"


class GpuDetails(_serialization.Model):
    """Represents GPU specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_gpu_supported: Flag to indicate whether GPU is supported.
    :vartype is_gpu_supported: bool
    :ivar gpu_mfg_model: GPU Mfg model.
    :vartype gpu_mfg_model: str
    :ivar gpu_dda: List of GPU DDA.
    :vartype gpu_dda: list[str]
    :ivar gpu_p: List of GPU-P.
    :vartype gpu_p: list[str]
    """

    _validation = {
        "is_gpu_supported": {"readonly": True},
        "gpu_mfg_model": {"readonly": True},
        "gpu_dda": {"readonly": True},
        "gpu_p": {"readonly": True},
    }

    _attribute_map = {
        "is_gpu_supported": {"key": "isGpuSupported", "type": "bool"},
        "gpu_mfg_model": {"key": "gpuMfgModel", "type": "str"},
        "gpu_dda": {"key": "gpuDda", "type": "[str]"},
        "gpu_p": {"key": "gpuP", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.is_gpu_supported = None
        self.gpu_mfg_model = None
        self.gpu_dda = None
        self.gpu_p = None


class GroupedChildConfigurations(_serialization.Model):
    """Grouped child configuration object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar category_information: Category information.
    :vartype category_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CategoryInformation
    :ivar child_configurations: List of child configurations.
    :vartype child_configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChildConfiguration]
    """

    _validation = {
        "category_information": {"readonly": True},
        "child_configurations": {"readonly": True},
    }

    _attribute_map = {
        "category_information": {"key": "categoryInformation", "type": "CategoryInformation"},
        "child_configurations": {"key": "childConfigurations", "type": "[ChildConfiguration]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.category_information = None
        self.child_configurations = None


class HciCatalogSearchRequest(_serialization.Model):
    """Request body for HCI catalog search call.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HciCatalogPlatformsSearchRequest

    All required parameters must be populated in order to send to Azure.

    :ivar resource_type: Search resource type. Required. "Platforms"
    :vartype resource_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchRequestResourceType
    :ivar search_text: Search text.
    :vartype search_text: str
    :ivar filters: List of search filters.
    :vartype filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.SearchFilter]
    :ivar sort_options: Sort options.
    :vartype sort_options:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchRequestSortOptions
    :ivar page: Page number for client-side pagination. Required.
    :vartype page: int
    :ivar page_size: Page size for client-size pagination. Required.
    :vartype page_size: int
    """

    _validation = {
        "resource_type": {"required": True},
        "page": {"required": True},
        "page_size": {"required": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "search_text": {"key": "searchText", "type": "str"},
        "filters": {"key": "filters", "type": "[SearchFilter]"},
        "sort_options": {"key": "sortOptions", "type": "HciCatalogSearchRequestSortOptions"},
        "page": {"key": "page", "type": "int"},
        "page_size": {"key": "pageSize", "type": "int"},
    }

    _subtype_map = {"resource_type": {"Platforms": "HciCatalogPlatformsSearchRequest"}}

    def __init__(
        self,
        *,
        page: int,
        page_size: int,
        search_text: Optional[str] = None,
        filters: Optional[List["_models.SearchFilter"]] = None,
        sort_options: Optional["_models.HciCatalogSearchRequestSortOptions"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword search_text: Search text.
        :paramtype search_text: str
        :keyword filters: List of search filters.
        :paramtype filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.SearchFilter]
        :keyword sort_options: Sort options.
        :paramtype sort_options:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchRequestSortOptions
        :keyword page: Page number for client-side pagination. Required.
        :paramtype page: int
        :keyword page_size: Page size for client-size pagination. Required.
        :paramtype page_size: int
        """
        super().__init__(**kwargs)
        self.resource_type: Optional[str] = None
        self.search_text = search_text
        self.filters = filters
        self.sort_options = sort_options
        self.page = page
        self.page_size = page_size


class HciCatalogPlatformsSearchRequest(HciCatalogSearchRequest):
    """Request body for HCI catalog search call.

    All required parameters must be populated in order to send to Azure.

    :ivar resource_type: Search resource type. Required. "Platforms"
    :vartype resource_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchRequestResourceType
    :ivar search_text: Search text.
    :vartype search_text: str
    :ivar filters: List of search filters.
    :vartype filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.SearchFilter]
    :ivar sort_options: Sort options.
    :vartype sort_options:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchRequestSortOptions
    :ivar page: Page number for client-side pagination. Required.
    :vartype page: int
    :ivar page_size: Page size for client-size pagination. Required.
    :vartype page_size: int
    """

    _validation = {
        "resource_type": {"required": True},
        "page": {"required": True},
        "page_size": {"required": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "search_text": {"key": "searchText", "type": "str"},
        "filters": {"key": "filters", "type": "[SearchFilter]"},
        "sort_options": {"key": "sortOptions", "type": "HciCatalogSearchRequestSortOptions"},
        "page": {"key": "page", "type": "int"},
        "page_size": {"key": "pageSize", "type": "int"},
    }

    def __init__(
        self,
        *,
        page: int,
        page_size: int,
        search_text: Optional[str] = None,
        filters: Optional[List["_models.SearchFilter"]] = None,
        sort_options: Optional["_models.HciCatalogSearchRequestSortOptions"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword search_text: Search text.
        :paramtype search_text: str
        :keyword filters: List of search filters.
        :paramtype filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.SearchFilter]
        :keyword sort_options: Sort options.
        :paramtype sort_options:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchRequestSortOptions
        :keyword page: Page number for client-side pagination. Required.
        :paramtype page: int
        :keyword page_size: Page size for client-size pagination. Required.
        :paramtype page_size: int
        """
        super().__init__(
            search_text=search_text,
            filters=filters,
            sort_options=sort_options,
            page=page,
            page_size=page_size,
            **kwargs
        )
        self.resource_type: str = "Platforms"


class HciCatalogSearchResponse(_serialization.Model):
    """HCI catalog search response.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    HciCatalogPlatformsSearchResponse

    All required parameters must be populated in order to send to Azure.

    :ivar resource_type: Search resource type. Required. "Platforms"
    :vartype resource_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchResponseResourceType
    :ivar current_page: Current page number for client-side pagination. Required.
    :vartype current_page: int
    :ivar total_pages: Total number of pages for client-size pagination. Required.
    :vartype total_pages: int
    :ivar total_results: Total count of results for given search request. Required.
    :vartype total_results: int
    """

    _validation = {
        "resource_type": {"required": True},
        "current_page": {"required": True},
        "total_pages": {"required": True},
        "total_results": {"required": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "current_page": {"key": "currentPage", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
        "total_results": {"key": "totalResults", "type": "int"},
    }

    _subtype_map = {"resource_type": {"Platforms": "HciCatalogPlatformsSearchResponse"}}

    def __init__(self, *, current_page: int, total_pages: int, total_results: int, **kwargs: Any) -> None:
        """
        :keyword current_page: Current page number for client-side pagination. Required.
        :paramtype current_page: int
        :keyword total_pages: Total number of pages for client-size pagination. Required.
        :paramtype total_pages: int
        :keyword total_results: Total count of results for given search request. Required.
        :paramtype total_results: int
        """
        super().__init__(**kwargs)
        self.resource_type: Optional[str] = None
        self.current_page = current_page
        self.total_pages = total_pages
        self.total_results = total_results


class HciCatalogPlatformsSearchResponse(HciCatalogSearchResponse):
    """HCI catalog platforms search response.

    All required parameters must be populated in order to send to Azure.

    :ivar resource_type: Search resource type. Required. "Platforms"
    :vartype resource_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogSearchResponseResourceType
    :ivar current_page: Current page number for client-side pagination. Required.
    :vartype current_page: int
    :ivar total_pages: Total number of pages for client-size pagination. Required.
    :vartype total_pages: int
    :ivar total_results: Total count of results for given search request. Required.
    :vartype total_results: int
    :ivar platforms: List of search filters.
    :vartype platforms: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformResource]
    :ivar platform_filters: List of search filters.
    :vartype platform_filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Filter]
    """

    _validation = {
        "resource_type": {"required": True},
        "current_page": {"required": True},
        "total_pages": {"required": True},
        "total_results": {"required": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "current_page": {"key": "currentPage", "type": "int"},
        "total_pages": {"key": "totalPages", "type": "int"},
        "total_results": {"key": "totalResults", "type": "int"},
        "platforms": {"key": "platforms", "type": "[PlatformResource]"},
        "platform_filters": {"key": "platformFilters", "type": "[Filter]"},
    }

    def __init__(
        self,
        *,
        current_page: int,
        total_pages: int,
        total_results: int,
        platforms: Optional[List["_models.PlatformResource"]] = None,
        platform_filters: Optional[List["_models.Filter"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword current_page: Current page number for client-side pagination. Required.
        :paramtype current_page: int
        :keyword total_pages: Total number of pages for client-size pagination. Required.
        :paramtype total_pages: int
        :keyword total_results: Total count of results for given search request. Required.
        :paramtype total_results: int
        :keyword platforms: List of search filters.
        :paramtype platforms: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformResource]
        :keyword platform_filters: List of search filters.
        :paramtype platform_filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Filter]
        """
        super().__init__(current_page=current_page, total_pages=total_pages, total_results=total_results, **kwargs)
        self.resource_type: str = "Platforms"
        self.platforms = platforms
        self.platform_filters = platform_filters


class HciCatalogProperties(_serialization.Model):
    """Represents order details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar platform_filters: List of platform filters.
    :vartype platform_filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Filter]
    """

    _validation = {
        "platform_filters": {"readonly": True},
    }

    _attribute_map = {
        "platform_filters": {"key": "platformFilters", "type": "[Filter]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.platform_filters = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class HciCatalogResource(ProxyResource):
    """Specifies the properties for HciCatalog. HciCatalog is a catalog for third-party Azure Stack
    HCI solutions.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar platform_filters: List of platform filters.
    :vartype platform_filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Filter]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "platform_filters": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "platform_filters": {"key": "properties.platformFilters", "type": "[Filter]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.platform_filters = None


class HciCatalogResourceList(_serialization.Model):
    """List of hci catalog resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of hci catalog resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.HciCatalogResource]
    :ivar next_link: Link for the next set of hci catalog resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HciCatalogResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of hci catalog resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class HciCatalogResourceProperties(HciCatalogProperties):
    """HciCatalog properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar platform_filters: List of platform filters.
    :vartype platform_filters: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Filter]
    """

    _validation = {
        "platform_filters": {"readonly": True},
    }

    _attribute_map = {
        "platform_filters": {"key": "platformFilters", "type": "[Filter]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class SortOptions(_serialization.Model):
    """Sort options.

    All required parameters must be populated in order to send to Azure.

    :ivar sort_by: Sort by field. Required.
    :vartype sort_by: str
    :ivar sort_direction: Sort direction. Required. Known values are: "Ascending" and "Descending".
    :vartype sort_direction: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SortOptionsSortDirection
    """

    _validation = {
        "sort_by": {"required": True, "min_length": 1},
        "sort_direction": {"required": True},
    }

    _attribute_map = {
        "sort_by": {"key": "sortBy", "type": "str"},
        "sort_direction": {"key": "sortDirection", "type": "str"},
    }

    def __init__(
        self, *, sort_by: str, sort_direction: Union[str, "_models.SortOptionsSortDirection"], **kwargs: Any
    ) -> None:
        """
        :keyword sort_by: Sort by field. Required.
        :paramtype sort_by: str
        :keyword sort_direction: Sort direction. Required. Known values are: "Ascending" and
         "Descending".
        :paramtype sort_direction: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SortOptionsSortDirection
        """
        super().__init__(**kwargs)
        self.sort_by = sort_by
        self.sort_direction = sort_direction


class HciCatalogSearchRequestSortOptions(SortOptions):
    """Sort options.

    All required parameters must be populated in order to send to Azure.

    :ivar sort_by: Sort by field. Required.
    :vartype sort_by: str
    :ivar sort_direction: Sort direction. Required. Known values are: "Ascending" and "Descending".
    :vartype sort_direction: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SortOptionsSortDirection
    """

    _validation = {
        "sort_by": {"required": True, "min_length": 1},
        "sort_direction": {"required": True},
    }

    _attribute_map = {
        "sort_by": {"key": "sortBy", "type": "str"},
        "sort_direction": {"key": "sortDirection", "type": "str"},
    }

    def __init__(
        self, *, sort_by: str, sort_direction: Union[str, "_models.SortOptionsSortDirection"], **kwargs: Any
    ) -> None:
        """
        :keyword sort_by: Sort by field. Required.
        :paramtype sort_by: str
        :keyword sort_direction: Sort direction. Required. Known values are: "Ascending" and
         "Descending".
        :paramtype sort_direction: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SortOptionsSortDirection
        """
        super().__init__(sort_by=sort_by, sort_direction=sort_direction, **kwargs)


class HierarchyInformation(_serialization.Model):
    """Holds details about product hierarchy information.

    :ivar product_family_name: Represents product family name that uniquely identifies product
     family.
    :vartype product_family_name: str
    :ivar product_line_name: Represents product line name that uniquely identifies product line.
    :vartype product_line_name: str
    :ivar product_name: Represents product name that uniquely identifies product.
    :vartype product_name: str
    :ivar configuration_name: Represents configuration name that uniquely identifies configuration.
    :vartype configuration_name: str
    """

    _attribute_map = {
        "product_family_name": {"key": "productFamilyName", "type": "str"},
        "product_line_name": {"key": "productLineName", "type": "str"},
        "product_name": {"key": "productName", "type": "str"},
        "configuration_name": {"key": "configurationName", "type": "str"},
    }

    def __init__(
        self,
        *,
        product_family_name: Optional[str] = None,
        product_line_name: Optional[str] = None,
        product_name: Optional[str] = None,
        configuration_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword product_family_name: Represents product family name that uniquely identifies product
         family.
        :paramtype product_family_name: str
        :keyword product_line_name: Represents product line name that uniquely identifies product line.
        :paramtype product_line_name: str
        :keyword product_name: Represents product name that uniquely identifies product.
        :paramtype product_name: str
        :keyword configuration_name: Represents configuration name that uniquely identifies
         configuration.
        :paramtype configuration_name: str
        """
        super().__init__(**kwargs)
        self.product_family_name = product_family_name
        self.product_line_name = product_line_name
        self.product_name = product_name
        self.configuration_name = configuration_name


class HWaaSDetails(_serialization.Model):
    """Represents Hardware as a Service details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_h_waa_s_supported: Flag to indicate if the platform supports Hardware as a Service.
    :vartype is_h_waa_s_supported: bool
    :ivar h_waa_s_name: Hardware as a Service name.
    :vartype h_waa_s_name: str
    :ivar h_waa_s_description: Hardware as a Service Description.
    :vartype h_waa_s_description: str
    :ivar h_waa_s_link: Hardware as a Service link.
    :vartype h_waa_s_link: str
    """

    _validation = {
        "is_h_waa_s_supported": {"readonly": True},
        "h_waa_s_name": {"readonly": True},
        "h_waa_s_description": {"readonly": True},
        "h_waa_s_link": {"readonly": True},
    }

    _attribute_map = {
        "is_h_waa_s_supported": {"key": "isHWaaSSupported", "type": "bool"},
        "h_waa_s_name": {"key": "hWaaSName", "type": "str"},
        "h_waa_s_description": {"key": "hWaaSDescription", "type": "str"},
        "h_waa_s_link": {"key": "hWaaSLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.is_h_waa_s_supported = None
        self.h_waa_s_name = None
        self.h_waa_s_description = None
        self.h_waa_s_link = None


class ImageInformation(_serialization.Model):
    """Image for the product.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar image_type: Type of the image. Known values are: "MainImage", "BulletImage", and
     "GenericImage".
    :vartype image_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageType
    :ivar image_url: Url of the image.
    :vartype image_url: str
    """

    _validation = {
        "image_type": {"readonly": True},
        "image_url": {"readonly": True},
    }

    _attribute_map = {
        "image_type": {"key": "imageType", "type": "str"},
        "image_url": {"key": "imageUrl", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.image_type = None
        self.image_url = None


class Link(_serialization.Model):
    """Returns link related to the product.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar link_type: Type of link. Known values are: "Generic", "TermsAndConditions",
     "Specification", "Documentation", "KnowMore", "SignUp", and "Discoverable".
    :vartype link_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.LinkType
    :ivar link_url: Url of the link.
    :vartype link_url: str
    """

    _validation = {
        "link_type": {"readonly": True},
        "link_url": {"readonly": True},
    }

    _attribute_map = {
        "link_type": {"key": "linkType", "type": "str"},
        "link_url": {"key": "linkUrl", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.link_type = None
        self.link_url = None


class ManagementResourcePreferences(_serialization.Model):
    """Management resource preference to link device.

    :ivar preferred_management_resource_id: Customer preferred Management resource ARM ID.
    :vartype preferred_management_resource_id: str
    """

    _attribute_map = {
        "preferred_management_resource_id": {"key": "preferredManagementResourceId", "type": "str"},
    }

    def __init__(self, *, preferred_management_resource_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword preferred_management_resource_id: Customer preferred Management resource ARM ID.
        :paramtype preferred_management_resource_id: str
        """
        super().__init__(**kwargs)
        self.preferred_management_resource_id = preferred_management_resource_id


class MemoryBreakdown(_serialization.Model):
    """Memory breakdown.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar csv_sbl: This is memory taken by csv(In-memory cache) and SBL cache.
    :vartype csv_sbl: int
    :ivar hyper_v: Hyper V(4% system overhead is taken by Hyper-V.
    :vartype hyper_v: int
    :ivar workloads: Number of VM * memory per VM.
    :vartype workloads: int
    :ivar future_growth: Future growth.
    :vartype future_growth: int
    :ivar leftover: Left over.
    :vartype leftover: int
    :ivar high_availability: Hosts reserved for emergency scenarios (e.g. maintenance, one node is
     down etc).
    :vartype high_availability: int
    :ivar total: The total memory needed to run your workloads.
    :vartype total: int
    :ivar availability: Host reserved for emergency scenarios.
    :vartype availability: str
    :ivar availability_total: Total host reserved for emergency scenarios.
    :vartype availability_total: int
    """

    _validation = {
        "csv_sbl": {"readonly": True},
        "hyper_v": {"readonly": True},
        "workloads": {"readonly": True},
        "future_growth": {"readonly": True},
        "leftover": {"readonly": True},
        "high_availability": {"readonly": True},
        "total": {"readonly": True},
        "availability": {"readonly": True},
        "availability_total": {"readonly": True},
    }

    _attribute_map = {
        "csv_sbl": {"key": "csvSbl", "type": "int"},
        "hyper_v": {"key": "hyperV", "type": "int"},
        "workloads": {"key": "workloads", "type": "int"},
        "future_growth": {"key": "futureGrowth", "type": "int"},
        "leftover": {"key": "leftover", "type": "int"},
        "high_availability": {"key": "highAvailability", "type": "int"},
        "total": {"key": "total", "type": "int"},
        "availability": {"key": "availability", "type": "str"},
        "availability_total": {"key": "availabilityTotal", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.csv_sbl = None
        self.hyper_v = None
        self.workloads = None
        self.future_growth = None
        self.leftover = None
        self.high_availability = None
        self.total = None
        self.availability = None
        self.availability_total = None


class MemoryDetails(_serialization.Model):
    """Represents Memory specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar minimum_memory: Minimum memory.
    :vartype minimum_memory:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.MemoryDetailsMinimumMemory
    :ivar minimum_memory_bytes: Minimum memory in bytes.
    :vartype minimum_memory_bytes: int
    :ivar maximum_memory: Maximum memory.
    :vartype maximum_memory:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.MemoryDetailsMaximumMemory
    :ivar maximum_memory_bytes: Maximum memory in bytes.
    :vartype maximum_memory_bytes: int
    :ivar number_of_dimm_slots: Number of DIMM (dual in-line memory module) slots.
    :vartype number_of_dimm_slots: int
    :ivar is_half_dimm_slots_supported: Flag to indicate if half DIMM (dual in-line memory module)
     slots are supported.
    :vartype is_half_dimm_slots_supported: bool
    :ivar dimm_slot_sizes: List of DIMM (dual in-line memory module) slot sizes.
    :vartype dimm_slot_sizes: list[int]
    :ivar dimm_slot_sizes_bytes: List of DIMM (dual in-line memory module) slot sizes in bytes.
    :vartype dimm_slot_sizes_bytes: list[int]
    """

    _validation = {
        "minimum_memory": {"readonly": True},
        "minimum_memory_bytes": {"readonly": True},
        "maximum_memory": {"readonly": True},
        "maximum_memory_bytes": {"readonly": True},
        "number_of_dimm_slots": {"readonly": True},
        "is_half_dimm_slots_supported": {"readonly": True},
        "dimm_slot_sizes": {"readonly": True},
        "dimm_slot_sizes_bytes": {"readonly": True},
    }

    _attribute_map = {
        "minimum_memory": {"key": "minimumMemory", "type": "MemoryDetailsMinimumMemory"},
        "minimum_memory_bytes": {"key": "minimumMemoryBytes", "type": "int"},
        "maximum_memory": {"key": "maximumMemory", "type": "MemoryDetailsMaximumMemory"},
        "maximum_memory_bytes": {"key": "maximumMemoryBytes", "type": "int"},
        "number_of_dimm_slots": {"key": "numberOfDimmSlots", "type": "int"},
        "is_half_dimm_slots_supported": {"key": "isHalfDimmSlotsSupported", "type": "bool"},
        "dimm_slot_sizes": {"key": "dimmSlotSizes", "type": "[int]"},
        "dimm_slot_sizes_bytes": {"key": "dimmSlotSizesBytes", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.minimum_memory = None
        self.minimum_memory_bytes = None
        self.maximum_memory = None
        self.maximum_memory_bytes = None
        self.number_of_dimm_slots = None
        self.is_half_dimm_slots_supported = None
        self.dimm_slot_sizes = None
        self.dimm_slot_sizes_bytes = None


class MemoryDetailsMaximumMemory(ByteSize):
    """Maximum memory.

    All required parameters must be populated in order to send to Azure.

    :ivar amount: Amount of bytes in byte unit. Required.
    :vartype amount: float
    :ivar byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
    :vartype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
    """

    _validation = {
        "amount": {"required": True},
        "byte_unit": {"required": True},
    }

    _attribute_map = {
        "amount": {"key": "amount", "type": "float"},
        "byte_unit": {"key": "byteUnit", "type": "str"},
    }

    def __init__(self, *, amount: float, byte_unit: Union[str, "_models.ByteSizeByteUnit"], **kwargs: Any) -> None:
        """
        :keyword amount: Amount of bytes in byte unit. Required.
        :paramtype amount: float
        :keyword byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
        :paramtype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
        """
        super().__init__(amount=amount, byte_unit=byte_unit, **kwargs)


class MemoryDetailsMinimumMemory(ByteSize):
    """Minimum memory.

    All required parameters must be populated in order to send to Azure.

    :ivar amount: Amount of bytes in byte unit. Required.
    :vartype amount: float
    :ivar byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
    :vartype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
    """

    _validation = {
        "amount": {"required": True},
        "byte_unit": {"required": True},
    }

    _attribute_map = {
        "amount": {"key": "amount", "type": "float"},
        "byte_unit": {"key": "byteUnit", "type": "str"},
    }

    def __init__(self, *, amount: float, byte_unit: Union[str, "_models.ByteSizeByteUnit"], **kwargs: Any) -> None:
        """
        :keyword amount: Amount of bytes in byte unit. Required.
        :paramtype amount: float
        :keyword byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
        :paramtype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
        """
        super().__init__(amount=amount, byte_unit=byte_unit, **kwargs)


class MeterDetails(_serialization.Model):
    """Holds details about billing type and its meter guids.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    Pav2MeterDetails, PurchaseMeterDetails

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar billing_type: Represents billing type. Required. Known values are: "Pav2" and "Purchase".
    :vartype billing_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.BillingType
    :ivar multiplier: Billing unit applicable for Pav2 billing.
    :vartype multiplier: float
    :ivar charging_type: Charging type. Known values are: "PerOrder" and "PerDevice".
    :vartype charging_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChargingType
    """

    _validation = {
        "billing_type": {"required": True},
        "multiplier": {"readonly": True},
        "charging_type": {"readonly": True},
    }

    _attribute_map = {
        "billing_type": {"key": "billingType", "type": "str"},
        "multiplier": {"key": "multiplier", "type": "float"},
        "charging_type": {"key": "chargingType", "type": "str"},
    }

    _subtype_map = {"billing_type": {"Pav2": "Pav2MeterDetails", "Purchase": "PurchaseMeterDetails"}}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.billing_type: Optional[str] = None
        self.multiplier = None
        self.charging_type = None


class MiscellaneousDetails(_serialization.Model):
    """Represents miscellaneous configuration details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar hba_manufacturer: HBA (Host Bus Adapter) manufacturer name.
    :vartype hba_manufacturer: str
    :ivar hba_model: HBA (Host Bus Adapter) model name.
    :vartype hba_model: str
    """

    _validation = {
        "hba_manufacturer": {"readonly": True},
        "hba_model": {"readonly": True},
    }

    _attribute_map = {
        "hba_manufacturer": {"key": "hbaManufacturer", "type": "str"},
        "hba_model": {"key": "hbaModel", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.hba_manufacturer = None
        self.hba_model = None


class NetworkingDetails(_serialization.Model):
    """Represents Networking specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar networking_speed: Networking speed.
    :vartype networking_speed: int
    :ivar nic_vendor_model: NIC vendor model.
    :vartype nic_vendor_model: str
    :ivar rdma_type: RDMA type.
    :vartype rdma_type: str
    """

    _validation = {
        "networking_speed": {"readonly": True},
        "nic_vendor_model": {"readonly": True},
        "rdma_type": {"readonly": True},
    }

    _attribute_map = {
        "networking_speed": {"key": "networkingSpeed", "type": "int"},
        "nic_vendor_model": {"key": "nicVendorModel", "type": "str"},
        "rdma_type": {"key": "rdmaType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.networking_speed = None
        self.nic_vendor_model = None
        self.rdma_type = None


class NetworkPreference(_serialization.Model):
    """Network preferences.

    All required parameters must be populated in order to send to Azure.

    :ivar uses_software_defined_network: Use software defined networking to centrally configure and
     manage networks and network services. Required.
    :vartype uses_software_defined_network: bool
    :ivar network_controller: Number of network controller to manage, configure, monitor, and
     troubleshoot virtual network infrastructure. Required.
    :vartype network_controller: int
    :ivar software_load_balancer: Number of load balancer needed. Required.
    :vartype software_load_balancer: int
    :ivar ras_gateway: Number of Ras gateway needed. Required.
    :vartype ras_gateway: int
    """

    _validation = {
        "uses_software_defined_network": {"required": True},
        "network_controller": {"required": True},
        "software_load_balancer": {"required": True},
        "ras_gateway": {"required": True},
    }

    _attribute_map = {
        "uses_software_defined_network": {"key": "usesSoftwareDefinedNetwork", "type": "bool"},
        "network_controller": {"key": "networkController", "type": "int"},
        "software_load_balancer": {"key": "softwareLoadBalancer", "type": "int"},
        "ras_gateway": {"key": "rasGateway", "type": "int"},
    }

    def __init__(
        self,
        *,
        uses_software_defined_network: bool,
        network_controller: int,
        software_load_balancer: int,
        ras_gateway: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword uses_software_defined_network: Use software defined networking to centrally configure
         and manage networks and network services. Required.
        :paramtype uses_software_defined_network: bool
        :keyword network_controller: Number of network controller to manage, configure, monitor, and
         troubleshoot virtual network infrastructure. Required.
        :paramtype network_controller: int
        :keyword software_load_balancer: Number of load balancer needed. Required.
        :paramtype software_load_balancer: int
        :keyword ras_gateway: Number of Ras gateway needed. Required.
        :paramtype ras_gateway: int
        """
        super().__init__(**kwargs)
        self.uses_software_defined_network = uses_software_defined_network
        self.network_controller = network_controller
        self.software_load_balancer = software_load_balancer
        self.ras_gateway = ras_gateway


class NotificationPreference(_serialization.Model):
    """Notification preference for a job stage.

    All required parameters must be populated in order to send to Azure.

    :ivar stage_name: Name of the stage. Required. Known values are: "Shipped" and "Delivered".
    :vartype stage_name: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.NotificationStageName
    :ivar send_notification: Notification is required or not. Required.
    :vartype send_notification: bool
    """

    _validation = {
        "stage_name": {"required": True},
        "send_notification": {"required": True},
    }

    _attribute_map = {
        "stage_name": {"key": "stageName", "type": "str"},
        "send_notification": {"key": "sendNotification", "type": "bool"},
    }

    def __init__(
        self, *, stage_name: Union[str, "_models.NotificationStageName"], send_notification: bool, **kwargs: Any
    ) -> None:
        """
        :keyword stage_name: Name of the stage. Required. Known values are: "Shipped" and "Delivered".
        :paramtype stage_name: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.NotificationStageName
        :keyword send_notification: Notification is required or not. Required.
        :paramtype send_notification: bool
        """
        super().__init__(**kwargs)
        self.stage_name = stage_name
        self.send_notification = send_notification


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class OrderItemDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Order item details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar product_details: Unique identifier for configuration. Required.
    :vartype product_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductDetails
    :ivar order_item_type: Order item type. Required. Known values are: "Purchase" and "Rental".
    :vartype order_item_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemType
    :ivar order_item_mode: Defines the mode of the Order item. Known values are: "Default" and
     "DoNotFulfill".
    :vartype order_item_mode: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderMode
    :ivar current_stage: Current Order item Status.
    :vartype current_stage: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StageDetails
    :ivar order_item_stage_history: Order item status history.
    :vartype order_item_stage_history:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.StageDetails]
    :ivar preferences: Customer notification Preferences.
    :vartype preferences: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Preferences
    :ivar forward_shipping_details: Forward Package Shipping details.
    :vartype forward_shipping_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ForwardShippingDetails
    :ivar reverse_shipping_details: Reverse Package Shipping details.
    :vartype reverse_shipping_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ReverseShippingDetails
    :ivar notification_email_list: Additional notification email list.
    :vartype notification_email_list: list[str]
    :ivar cancellation_reason: Cancellation reason.
    :vartype cancellation_reason: str
    :ivar cancellation_status: Describes whether the order item is cancellable or not. Known values
     are: "Cancellable", "CancellableWithFee", and "NotCancellable".
    :vartype cancellation_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemCancellationEnum
    :ivar deletion_status: Describes whether the order item is deletable or not. Known values are:
     "Allowed" and "NotAllowed".
    :vartype deletion_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ActionStatusEnum
    :ivar return_reason: Return reason.
    :vartype return_reason: str
    :ivar return_status: Describes whether the order item is returnable or not. Known values are:
     "Returnable", "ReturnableWithFee", and "NotReturnable".
    :vartype return_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemReturnEnum
    :ivar management_rp_details_list: List of parent RP details supported for configuration.
    :vartype management_rp_details_list:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
    :ivar error: Top level error for the job.
    :vartype error: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ErrorDetail
    """

    _validation = {
        "product_details": {"required": True},
        "order_item_type": {"required": True},
        "current_stage": {"readonly": True},
        "order_item_stage_history": {"readonly": True},
        "forward_shipping_details": {"readonly": True},
        "reverse_shipping_details": {"readonly": True},
        "cancellation_reason": {"readonly": True},
        "cancellation_status": {"readonly": True},
        "deletion_status": {"readonly": True},
        "return_reason": {"readonly": True},
        "return_status": {"readonly": True},
        "management_rp_details_list": {"readonly": True},
        "error": {"readonly": True},
    }

    _attribute_map = {
        "product_details": {"key": "productDetails", "type": "ProductDetails"},
        "order_item_type": {"key": "orderItemType", "type": "str"},
        "order_item_mode": {"key": "orderItemMode", "type": "str"},
        "current_stage": {"key": "currentStage", "type": "StageDetails"},
        "order_item_stage_history": {"key": "orderItemStageHistory", "type": "[StageDetails]"},
        "preferences": {"key": "preferences", "type": "Preferences"},
        "forward_shipping_details": {"key": "forwardShippingDetails", "type": "ForwardShippingDetails"},
        "reverse_shipping_details": {"key": "reverseShippingDetails", "type": "ReverseShippingDetails"},
        "notification_email_list": {"key": "notificationEmailList", "type": "[str]"},
        "cancellation_reason": {"key": "cancellationReason", "type": "str"},
        "cancellation_status": {"key": "cancellationStatus", "type": "str"},
        "deletion_status": {"key": "deletionStatus", "type": "str"},
        "return_reason": {"key": "returnReason", "type": "str"},
        "return_status": {"key": "returnStatus", "type": "str"},
        "management_rp_details_list": {"key": "managementRpDetailsList", "type": "[ResourceProviderDetails]"},
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(
        self,
        *,
        product_details: "_models.ProductDetails",
        order_item_type: Union[str, "_models.OrderItemType"],
        order_item_mode: Optional[Union[str, "_models.OrderMode"]] = None,
        preferences: Optional["_models.Preferences"] = None,
        notification_email_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword product_details: Unique identifier for configuration. Required.
        :paramtype product_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductDetails
        :keyword order_item_type: Order item type. Required. Known values are: "Purchase" and "Rental".
        :paramtype order_item_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemType
        :keyword order_item_mode: Defines the mode of the Order item. Known values are: "Default" and
         "DoNotFulfill".
        :paramtype order_item_mode: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderMode
        :keyword preferences: Customer notification Preferences.
        :paramtype preferences: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Preferences
        :keyword notification_email_list: Additional notification email list.
        :paramtype notification_email_list: list[str]
        """
        super().__init__(**kwargs)
        self.product_details = product_details
        self.order_item_type = order_item_type
        self.order_item_mode = order_item_mode
        self.current_stage = None
        self.order_item_stage_history = None
        self.preferences = preferences
        self.forward_shipping_details = None
        self.reverse_shipping_details = None
        self.notification_email_list = notification_email_list
        self.cancellation_reason = None
        self.cancellation_status = None
        self.deletion_status = None
        self.return_reason = None
        self.return_status = None
        self.management_rp_details_list = None
        self.error = None


class OrderItemResource(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Represents order item resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar system_data: Represents resource creation and update time.
    :vartype system_data: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SystemData
    :ivar identity: Msi identity of the resource.
    :vartype identity: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceIdentity
    :ivar order_item_details: Represents order item details. Required.
    :vartype order_item_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemDetails
    :ivar address_details: Represents shipping and return address for order item. Required.
    :vartype address_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressDetails
    :ivar start_time: Start time of order item.
    :vartype start_time: ~datetime.datetime
    :ivar order_id: Id of the order to which order item belongs to. Required.
    :vartype order_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "location": {"required": True},
        "system_data": {"readonly": True},
        "order_item_details": {"required": True},
        "address_details": {"required": True},
        "start_time": {"readonly": True},
        "order_id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "identity": {"key": "identity", "type": "ResourceIdentity"},
        "order_item_details": {"key": "properties.orderItemDetails", "type": "OrderItemDetails"},
        "address_details": {"key": "properties.addressDetails", "type": "AddressDetails"},
        "start_time": {"key": "properties.startTime", "type": "iso-8601"},
        "order_id": {"key": "properties.orderId", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        order_item_details: "_models.OrderItemDetails",
        address_details: "_models.AddressDetails",
        order_id: str,
        tags: Optional[Dict[str, str]] = None,
        identity: Optional["_models.ResourceIdentity"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword identity: Msi identity of the resource.
        :paramtype identity: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceIdentity
        :keyword order_item_details: Represents order item details. Required.
        :paramtype order_item_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemDetails
        :keyword address_details: Represents shipping and return address for order item. Required.
        :paramtype address_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressDetails
        :keyword order_id: Id of the order to which order item belongs to. Required.
        :paramtype order_id: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.system_data = None
        self.identity = identity
        self.order_item_details = order_item_details
        self.address_details = address_details
        self.start_time = None
        self.order_id = order_id


class OrderItemResourceList(_serialization.Model):
    """List of order items.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of order item resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderItemResource]
    :ivar next_link: Link for the next set of order item resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[OrderItemResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of order item resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class OrderItemUpdateParameter(_serialization.Model):
    """Updates order item parameters.

    :ivar tags: The list of key value pairs that describe the resource. These tags can be used in
     viewing and grouping this resource (across resource groups).
    :vartype tags: dict[str, str]
    :ivar identity: Msi identity of the resource.
    :vartype identity: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceIdentity
    :ivar forward_address: Updates forward shipping address and contact details.
    :vartype forward_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
    :ivar preferences: Customer preference.
    :vartype preferences: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Preferences
    :ivar notification_email_list: Additional notification email list.
    :vartype notification_email_list: list[str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "identity": {"key": "identity", "type": "ResourceIdentity"},
        "forward_address": {"key": "properties.forwardAddress", "type": "AddressProperties"},
        "preferences": {"key": "properties.preferences", "type": "Preferences"},
        "notification_email_list": {"key": "properties.notificationEmailList", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        identity: Optional["_models.ResourceIdentity"] = None,
        forward_address: Optional["_models.AddressProperties"] = None,
        preferences: Optional["_models.Preferences"] = None,
        notification_email_list: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: The list of key value pairs that describe the resource. These tags can be used
         in viewing and grouping this resource (across resource groups).
        :paramtype tags: dict[str, str]
        :keyword identity: Msi identity of the resource.
        :paramtype identity: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceIdentity
        :keyword forward_address: Updates forward shipping address and contact details.
        :paramtype forward_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
        :keyword preferences: Customer preference.
        :paramtype preferences: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Preferences
        :keyword notification_email_list: Additional notification email list.
        :paramtype notification_email_list: list[str]
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.identity = identity
        self.forward_address = forward_address
        self.preferences = preferences
        self.notification_email_list = notification_email_list


class OrderResource(ProxyResource):
    """Specifies the properties or parameters for an order. Order is a grouping of one or more order
    items.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Represents resource creation and update time.
    :vartype system_data: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SystemData
    :ivar order_item_ids: List of order item ARM Ids which are part of an order.
    :vartype order_item_ids: list[str]
    :ivar current_stage: Order current status.
    :vartype current_stage: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StageDetails
    :ivar order_stage_history: Order status history.
    :vartype order_stage_history:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.StageDetails]
    :ivar order_mode: Order mode. Known values are: "Default" and "DoNotFulfill".
    :vartype order_mode: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderMode
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "order_item_ids": {"readonly": True},
        "current_stage": {"readonly": True},
        "order_stage_history": {"readonly": True},
        "order_mode": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "order_item_ids": {"key": "properties.orderItemIds", "type": "[str]"},
        "current_stage": {"key": "properties.currentStage", "type": "StageDetails"},
        "order_stage_history": {"key": "properties.orderStageHistory", "type": "[StageDetails]"},
        "order_mode": {"key": "properties.orderMode", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.system_data = None
        self.order_item_ids = None
        self.current_stage = None
        self.order_stage_history = None
        self.order_mode = None


class OrderResourceList(_serialization.Model):
    """List of orders.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of order resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.OrderResource]
    :ivar next_link: Link for the next set of order resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[OrderResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of order resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class Pav2MeterDetails(MeterDetails):
    """Billing type PAV2 meter details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar billing_type: Represents billing type. Required. Known values are: "Pav2" and "Purchase".
    :vartype billing_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.BillingType
    :ivar multiplier: Billing unit applicable for Pav2 billing.
    :vartype multiplier: float
    :ivar charging_type: Charging type. Known values are: "PerOrder" and "PerDevice".
    :vartype charging_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChargingType
    :ivar meter_guid: Validation status of requested data center and transport.
    :vartype meter_guid: str
    """

    _validation = {
        "billing_type": {"required": True},
        "multiplier": {"readonly": True},
        "charging_type": {"readonly": True},
        "meter_guid": {"readonly": True},
    }

    _attribute_map = {
        "billing_type": {"key": "billingType", "type": "str"},
        "multiplier": {"key": "multiplier", "type": "float"},
        "charging_type": {"key": "chargingType", "type": "str"},
        "meter_guid": {"key": "meterGuid", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.billing_type: str = "Pav2"
        self.meter_guid = None


class PlatformConfigurationProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Represents configuration details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar configuration_id: Unique Id representing the configuration. Required.
    :vartype configuration_id: str
    :ivar configuration_name: Name of the configuration. Required.
    :vartype configuration_name: str
    :ivar vendor_id: Vendor id. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Vendor name. Required.
    :vartype vendor_name: str
    :ivar platform_id: Platform id. Required.
    :vartype platform_id: str
    :ivar platform_name: Platform name. Required.
    :vartype platform_name: str
    :ivar is_archived: Flag to indicate if the configuration is archived. Required.
    :vartype is_archived: bool
    :ivar is_single_node_configuration: Flag to indicate if the configuration is a single node
     configuration. Required.
    :vartype is_single_node_configuration: bool
    :ivar memory_details: Memory specific details.
    :vartype memory_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationPropertiesMemoryDetails
    :ivar storage_details: Storage specific details.
    :vartype storage_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationPropertiesStorageDetails
    :ivar gpu_details: GPU specific details.
    :vartype gpu_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationPropertiesGpuDetails
    :ivar cpu_details: CPU specific details.
    :vartype cpu_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationPropertiesCpuDetails
    :ivar networking_details: Networking specific details.
    :vartype networking_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationPropertiesNetworkingDetails
    :ivar miscellaneous_details: Miscellaneous configuration details.
    :vartype miscellaneous_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationPropertiesMiscellaneousDetails
    """

    _validation = {
        "configuration_id": {"required": True},
        "configuration_name": {"required": True},
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "platform_id": {"required": True},
        "platform_name": {"required": True},
        "is_archived": {"required": True},
        "is_single_node_configuration": {"required": True},
        "memory_details": {"readonly": True},
        "storage_details": {"readonly": True},
        "gpu_details": {"readonly": True},
        "cpu_details": {"readonly": True},
        "networking_details": {"readonly": True},
        "miscellaneous_details": {"readonly": True},
    }

    _attribute_map = {
        "configuration_id": {"key": "configurationId", "type": "str"},
        "configuration_name": {"key": "configurationName", "type": "str"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "platform_id": {"key": "platformId", "type": "str"},
        "platform_name": {"key": "platformName", "type": "str"},
        "is_archived": {"key": "isArchived", "type": "bool"},
        "is_single_node_configuration": {"key": "isSingleNodeConfiguration", "type": "bool"},
        "memory_details": {"key": "memoryDetails", "type": "PlatformConfigurationPropertiesMemoryDetails"},
        "storage_details": {"key": "storageDetails", "type": "PlatformConfigurationPropertiesStorageDetails"},
        "gpu_details": {"key": "gpuDetails", "type": "PlatformConfigurationPropertiesGpuDetails"},
        "cpu_details": {"key": "cpuDetails", "type": "PlatformConfigurationPropertiesCpuDetails"},
        "networking_details": {"key": "networkingDetails", "type": "PlatformConfigurationPropertiesNetworkingDetails"},
        "miscellaneous_details": {
            "key": "miscellaneousDetails",
            "type": "PlatformConfigurationPropertiesMiscellaneousDetails",
        },
    }

    def __init__(
        self,
        *,
        configuration_id: str,
        configuration_name: str,
        vendor_id: str,
        vendor_name: str,
        platform_id: str,
        platform_name: str,
        is_archived: bool,
        is_single_node_configuration: bool,
        **kwargs: Any
    ) -> None:
        """
        :keyword configuration_id: Unique Id representing the configuration. Required.
        :paramtype configuration_id: str
        :keyword configuration_name: Name of the configuration. Required.
        :paramtype configuration_name: str
        :keyword vendor_id: Vendor id. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Vendor name. Required.
        :paramtype vendor_name: str
        :keyword platform_id: Platform id. Required.
        :paramtype platform_id: str
        :keyword platform_name: Platform name. Required.
        :paramtype platform_name: str
        :keyword is_archived: Flag to indicate if the configuration is archived. Required.
        :paramtype is_archived: bool
        :keyword is_single_node_configuration: Flag to indicate if the configuration is a single node
         configuration. Required.
        :paramtype is_single_node_configuration: bool
        """
        super().__init__(**kwargs)
        self.configuration_id = configuration_id
        self.configuration_name = configuration_name
        self.vendor_id = vendor_id
        self.vendor_name = vendor_name
        self.platform_id = platform_id
        self.platform_name = platform_name
        self.is_archived = is_archived
        self.is_single_node_configuration = is_single_node_configuration
        self.memory_details = None
        self.storage_details = None
        self.gpu_details = None
        self.cpu_details = None
        self.networking_details = None
        self.miscellaneous_details = None


class PlatformConfigurationPropertiesCpuDetails(CpuDetails):
    """CPU specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar minimum_cores: Minimum number of cores.
    :vartype minimum_cores: int
    :ivar maximum_cores: Maximum number of cores.
    :vartype maximum_cores: int
    :ivar total_sockets_supported: Total sockets supported.
    :vartype total_sockets_supported: int
    :ivar cores_per_socket: List of cores per socket.
    :vartype cores_per_socket: list[int]
    """

    _validation = {
        "minimum_cores": {"readonly": True},
        "maximum_cores": {"readonly": True},
        "total_sockets_supported": {"readonly": True},
        "cores_per_socket": {"readonly": True},
    }

    _attribute_map = {
        "minimum_cores": {"key": "minimumCores", "type": "int"},
        "maximum_cores": {"key": "maximumCores", "type": "int"},
        "total_sockets_supported": {"key": "totalSocketsSupported", "type": "int"},
        "cores_per_socket": {"key": "coresPerSocket", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformConfigurationPropertiesGpuDetails(GpuDetails):
    """GPU specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_gpu_supported: Flag to indicate whether GPU is supported.
    :vartype is_gpu_supported: bool
    :ivar gpu_mfg_model: GPU Mfg model.
    :vartype gpu_mfg_model: str
    :ivar gpu_dda: List of GPU DDA.
    :vartype gpu_dda: list[str]
    :ivar gpu_p: List of GPU-P.
    :vartype gpu_p: list[str]
    """

    _validation = {
        "is_gpu_supported": {"readonly": True},
        "gpu_mfg_model": {"readonly": True},
        "gpu_dda": {"readonly": True},
        "gpu_p": {"readonly": True},
    }

    _attribute_map = {
        "is_gpu_supported": {"key": "isGpuSupported", "type": "bool"},
        "gpu_mfg_model": {"key": "gpuMfgModel", "type": "str"},
        "gpu_dda": {"key": "gpuDda", "type": "[str]"},
        "gpu_p": {"key": "gpuP", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformConfigurationPropertiesMemoryDetails(MemoryDetails):
    """Memory specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar minimum_memory: Minimum memory.
    :vartype minimum_memory:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.MemoryDetailsMinimumMemory
    :ivar minimum_memory_bytes: Minimum memory in bytes.
    :vartype minimum_memory_bytes: int
    :ivar maximum_memory: Maximum memory.
    :vartype maximum_memory:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.MemoryDetailsMaximumMemory
    :ivar maximum_memory_bytes: Maximum memory in bytes.
    :vartype maximum_memory_bytes: int
    :ivar number_of_dimm_slots: Number of DIMM (dual in-line memory module) slots.
    :vartype number_of_dimm_slots: int
    :ivar is_half_dimm_slots_supported: Flag to indicate if half DIMM (dual in-line memory module)
     slots are supported.
    :vartype is_half_dimm_slots_supported: bool
    :ivar dimm_slot_sizes: List of DIMM (dual in-line memory module) slot sizes.
    :vartype dimm_slot_sizes: list[int]
    :ivar dimm_slot_sizes_bytes: List of DIMM (dual in-line memory module) slot sizes in bytes.
    :vartype dimm_slot_sizes_bytes: list[int]
    """

    _validation = {
        "minimum_memory": {"readonly": True},
        "minimum_memory_bytes": {"readonly": True},
        "maximum_memory": {"readonly": True},
        "maximum_memory_bytes": {"readonly": True},
        "number_of_dimm_slots": {"readonly": True},
        "is_half_dimm_slots_supported": {"readonly": True},
        "dimm_slot_sizes": {"readonly": True},
        "dimm_slot_sizes_bytes": {"readonly": True},
    }

    _attribute_map = {
        "minimum_memory": {"key": "minimumMemory", "type": "MemoryDetailsMinimumMemory"},
        "minimum_memory_bytes": {"key": "minimumMemoryBytes", "type": "int"},
        "maximum_memory": {"key": "maximumMemory", "type": "MemoryDetailsMaximumMemory"},
        "maximum_memory_bytes": {"key": "maximumMemoryBytes", "type": "int"},
        "number_of_dimm_slots": {"key": "numberOfDimmSlots", "type": "int"},
        "is_half_dimm_slots_supported": {"key": "isHalfDimmSlotsSupported", "type": "bool"},
        "dimm_slot_sizes": {"key": "dimmSlotSizes", "type": "[int]"},
        "dimm_slot_sizes_bytes": {"key": "dimmSlotSizesBytes", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformConfigurationPropertiesMiscellaneousDetails(MiscellaneousDetails):
    """Miscellaneous configuration details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar hba_manufacturer: HBA (Host Bus Adapter) manufacturer name.
    :vartype hba_manufacturer: str
    :ivar hba_model: HBA (Host Bus Adapter) model name.
    :vartype hba_model: str
    """

    _validation = {
        "hba_manufacturer": {"readonly": True},
        "hba_model": {"readonly": True},
    }

    _attribute_map = {
        "hba_manufacturer": {"key": "hbaManufacturer", "type": "str"},
        "hba_model": {"key": "hbaModel", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformConfigurationPropertiesNetworkingDetails(NetworkingDetails):
    """Networking specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar networking_speed: Networking speed.
    :vartype networking_speed: int
    :ivar nic_vendor_model: NIC vendor model.
    :vartype nic_vendor_model: str
    :ivar rdma_type: RDMA type.
    :vartype rdma_type: str
    """

    _validation = {
        "networking_speed": {"readonly": True},
        "nic_vendor_model": {"readonly": True},
        "rdma_type": {"readonly": True},
    }

    _attribute_map = {
        "networking_speed": {"key": "networkingSpeed", "type": "int"},
        "nic_vendor_model": {"key": "nicVendorModel", "type": "str"},
        "rdma_type": {"key": "rdmaType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class StorageDetails(_serialization.Model):
    """Represents Storage specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar minimum_storage: Minimum storage.
    :vartype minimum_storage:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsMinimumStorage
    :ivar minimum_storage_bytes: Minimum storage in bytes.
    :vartype minimum_storage_bytes: int
    :ivar maximum_storage: Maximum storage.
    :vartype maximum_storage:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsMaximumStorage
    :ivar storage_max_bytes: Maximum storage in bytes.
    :vartype storage_max_bytes: int
    :ivar storage_drives: Types of storage drives.
    :vartype storage_drives: list[str]
    :ivar cache_drive_details: Cache drive specific details.
    :vartype cache_drive_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsCacheDriveDetails
    :ivar capacity_drive_details: Capacity drive specific details.
    :vartype capacity_drive_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsCapacityDriveDetails
    """

    _validation = {
        "minimum_storage": {"readonly": True},
        "minimum_storage_bytes": {"readonly": True},
        "maximum_storage": {"readonly": True},
        "storage_max_bytes": {"readonly": True},
        "storage_drives": {"readonly": True},
        "cache_drive_details": {"readonly": True},
        "capacity_drive_details": {"readonly": True},
    }

    _attribute_map = {
        "minimum_storage": {"key": "minimumStorage", "type": "StorageDetailsMinimumStorage"},
        "minimum_storage_bytes": {"key": "minimumStorageBytes", "type": "int"},
        "maximum_storage": {"key": "maximumStorage", "type": "StorageDetailsMaximumStorage"},
        "storage_max_bytes": {"key": "storageMaxBytes", "type": "int"},
        "storage_drives": {"key": "storageDrives", "type": "[str]"},
        "cache_drive_details": {"key": "cacheDriveDetails", "type": "StorageDetailsCacheDriveDetails"},
        "capacity_drive_details": {"key": "capacityDriveDetails", "type": "StorageDetailsCapacityDriveDetails"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.minimum_storage = None
        self.minimum_storage_bytes = None
        self.maximum_storage = None
        self.storage_max_bytes = None
        self.storage_drives = None
        self.cache_drive_details = None
        self.capacity_drive_details = None


class PlatformConfigurationPropertiesStorageDetails(StorageDetails):
    """Storage specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar minimum_storage: Minimum storage.
    :vartype minimum_storage:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsMinimumStorage
    :ivar minimum_storage_bytes: Minimum storage in bytes.
    :vartype minimum_storage_bytes: int
    :ivar maximum_storage: Maximum storage.
    :vartype maximum_storage:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsMaximumStorage
    :ivar storage_max_bytes: Maximum storage in bytes.
    :vartype storage_max_bytes: int
    :ivar storage_drives: Types of storage drives.
    :vartype storage_drives: list[str]
    :ivar cache_drive_details: Cache drive specific details.
    :vartype cache_drive_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsCacheDriveDetails
    :ivar capacity_drive_details: Capacity drive specific details.
    :vartype capacity_drive_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StorageDetailsCapacityDriveDetails
    """

    _validation = {
        "minimum_storage": {"readonly": True},
        "minimum_storage_bytes": {"readonly": True},
        "maximum_storage": {"readonly": True},
        "storage_max_bytes": {"readonly": True},
        "storage_drives": {"readonly": True},
        "cache_drive_details": {"readonly": True},
        "capacity_drive_details": {"readonly": True},
    }

    _attribute_map = {
        "minimum_storage": {"key": "minimumStorage", "type": "StorageDetailsMinimumStorage"},
        "minimum_storage_bytes": {"key": "minimumStorageBytes", "type": "int"},
        "maximum_storage": {"key": "maximumStorage", "type": "StorageDetailsMaximumStorage"},
        "storage_max_bytes": {"key": "storageMaxBytes", "type": "int"},
        "storage_drives": {"key": "storageDrives", "type": "[str]"},
        "cache_drive_details": {"key": "cacheDriveDetails", "type": "StorageDetailsCacheDriveDetails"},
        "capacity_drive_details": {"key": "capacityDriveDetails", "type": "StorageDetailsCapacityDriveDetails"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformImageDetails(_serialization.Model):
    """Represents Platform image details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar thumbnail_image: Thumbnail image.
    :vartype thumbnail_image: str
    :ivar images: List of images.
    :vartype images: list[str]
    """

    _validation = {
        "thumbnail_image": {"readonly": True},
        "images": {"readonly": True},
    }

    _attribute_map = {
        "thumbnail_image": {"key": "thumbnailImage", "type": "str"},
        "images": {"key": "images", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.thumbnail_image = None
        self.images = None


class PlatformProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Represents platform details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar platform_id: Unique Id representing the platform. Required.
    :vartype platform_id: str
    :ivar platform_name: Platform name. Required.
    :vartype platform_name: str
    :ivar vendor_id: Vendor Id. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Vendor name. Required.
    :vartype vendor_name: str
    :ivar is_archived: Flag to indicate if the platform is archived. Required.
    :vartype is_archived: bool
    :ivar server_description: Server description.
    :vartype server_description: str
    :ivar system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
     Premium, etc. Required.
    :vartype system_type: str
    :ivar form_factor: Form factor.
    :vartype form_factor: str
    :ivar rack_units: Number of rack units.
    :vartype rack_units: int
    :ivar minimum_scale: Minimum scale.
    :vartype minimum_scale: int
    :ivar maximum_scale: Maximum scale.
    :vartype maximum_scale: int
    :ivar is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
    :vartype is_p_memory_supported: bool
    :ivar regions: List of availability regions.
    :vartype regions: list[str]
    :ivar technical_use_cases: List of technical use-cases.
    :vartype technical_use_cases: list[str]
    :ivar image_details: Image details.
    :vartype image_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesImageDetails
    :ivar last_tested_version: Last tested version.
    :vartype last_tested_version: str
    :ivar website_url: Website Url. Required.
    :vartype website_url: str
    :ivar smbios_details: SMBIOS details.
    :vartype smbios_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSmbiosDetails
    :ivar windows_admin_center_details: Windows Admin Center (WAC) details.
    :vartype windows_admin_center_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesWindowsAdminCenterDetails
    :ivar lifecycle_stage: Lifecycle stage.
    :vartype lifecycle_stage: int
    :ivar unsupported_date: Unsupported date.
    :vartype unsupported_date: str
    :ivar alternate_solution_details: Alternate solution details.
    :vartype alternate_solution_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesAlternateSolutionDetails
    :ivar cpu_family: CPU Family.
    :vartype cpu_family: str
    :ivar cpu_model: CPU model.
    :vartype cpu_model: str
    :ivar is_gpu_supported: Flag to indicate if the platform supports GPU.
    :vartype is_gpu_supported: bool
    :ivar sdn_nic_details: SDN NIC details.
    :vartype sdn_nic_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSdnNicDetails
    :ivar features_supported: List of supported features.
    :vartype features_supported: list[str]
    :ivar h_waa_s_details: Hardware as a Service details.
    :vartype h_waa_s_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesHWaaSDetails
    :ivar storage_drives: List of storage drive types.
    :vartype storage_drives: list[str]
    :ivar gpu_mfg_models: List of GPU mfg models.
    :vartype gpu_mfg_models: list[str]
    :ivar configurations: List of configurations.
    :vartype configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationProperties]
    """

    _validation = {
        "platform_id": {"required": True},
        "platform_name": {"required": True},
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "is_archived": {"required": True},
        "server_description": {"readonly": True},
        "system_type": {"required": True},
        "form_factor": {"readonly": True},
        "rack_units": {"readonly": True},
        "minimum_scale": {"readonly": True},
        "maximum_scale": {"readonly": True},
        "is_p_memory_supported": {"required": True},
        "regions": {"readonly": True},
        "technical_use_cases": {"readonly": True},
        "image_details": {"readonly": True},
        "last_tested_version": {"readonly": True},
        "website_url": {"required": True},
        "smbios_details": {"readonly": True},
        "windows_admin_center_details": {"readonly": True},
        "lifecycle_stage": {"readonly": True},
        "unsupported_date": {"readonly": True},
        "alternate_solution_details": {"readonly": True},
        "cpu_family": {"readonly": True},
        "cpu_model": {"readonly": True},
        "is_gpu_supported": {"readonly": True},
        "sdn_nic_details": {"readonly": True},
        "features_supported": {"readonly": True},
        "h_waa_s_details": {"readonly": True},
        "storage_drives": {"readonly": True},
        "gpu_mfg_models": {"readonly": True},
        "configurations": {"readonly": True},
    }

    _attribute_map = {
        "platform_id": {"key": "platformId", "type": "str"},
        "platform_name": {"key": "platformName", "type": "str"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "is_archived": {"key": "isArchived", "type": "bool"},
        "server_description": {"key": "serverDescription", "type": "str"},
        "system_type": {"key": "systemType", "type": "str"},
        "form_factor": {"key": "formFactor", "type": "str"},
        "rack_units": {"key": "rackUnits", "type": "int"},
        "minimum_scale": {"key": "minimumScale", "type": "int"},
        "maximum_scale": {"key": "maximumScale", "type": "int"},
        "is_p_memory_supported": {"key": "isPMemorySupported", "type": "bool"},
        "regions": {"key": "regions", "type": "[str]"},
        "technical_use_cases": {"key": "technicalUseCases", "type": "[str]"},
        "image_details": {"key": "imageDetails", "type": "PlatformPropertiesImageDetails"},
        "last_tested_version": {"key": "lastTestedVersion", "type": "str"},
        "website_url": {"key": "websiteUrl", "type": "str"},
        "smbios_details": {"key": "smbiosDetails", "type": "PlatformPropertiesSmbiosDetails"},
        "windows_admin_center_details": {
            "key": "windowsAdminCenterDetails",
            "type": "PlatformPropertiesWindowsAdminCenterDetails",
        },
        "lifecycle_stage": {"key": "lifecycleStage", "type": "int"},
        "unsupported_date": {"key": "unsupportedDate", "type": "str"},
        "alternate_solution_details": {
            "key": "alternateSolutionDetails",
            "type": "PlatformPropertiesAlternateSolutionDetails",
        },
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "cpu_model": {"key": "cpuModel", "type": "str"},
        "is_gpu_supported": {"key": "isGpuSupported", "type": "bool"},
        "sdn_nic_details": {"key": "sdnNicDetails", "type": "PlatformPropertiesSdnNicDetails"},
        "features_supported": {"key": "featuresSupported", "type": "[str]"},
        "h_waa_s_details": {"key": "hWaaSDetails", "type": "PlatformPropertiesHWaaSDetails"},
        "storage_drives": {"key": "storageDrives", "type": "[str]"},
        "gpu_mfg_models": {"key": "gpuMfgModels", "type": "[str]"},
        "configurations": {"key": "configurations", "type": "[PlatformConfigurationProperties]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        platform_id: str,
        platform_name: str,
        vendor_id: str,
        vendor_name: str,
        is_archived: bool,
        system_type: str,
        is_p_memory_supported: bool,
        website_url: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword platform_id: Unique Id representing the platform. Required.
        :paramtype platform_id: str
        :keyword platform_name: Platform name. Required.
        :paramtype platform_name: str
        :keyword vendor_id: Vendor Id. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Vendor name. Required.
        :paramtype vendor_name: str
        :keyword is_archived: Flag to indicate if the platform is archived. Required.
        :paramtype is_archived: bool
        :keyword system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
         Premium, etc. Required.
        :paramtype system_type: str
        :keyword is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
        :paramtype is_p_memory_supported: bool
        :keyword website_url: Website Url. Required.
        :paramtype website_url: str
        """
        super().__init__(**kwargs)
        self.platform_id = platform_id
        self.platform_name = platform_name
        self.vendor_id = vendor_id
        self.vendor_name = vendor_name
        self.is_archived = is_archived
        self.server_description = None
        self.system_type = system_type
        self.form_factor = None
        self.rack_units = None
        self.minimum_scale = None
        self.maximum_scale = None
        self.is_p_memory_supported = is_p_memory_supported
        self.regions = None
        self.technical_use_cases = None
        self.image_details = None
        self.last_tested_version = None
        self.website_url = website_url
        self.smbios_details = None
        self.windows_admin_center_details = None
        self.lifecycle_stage = None
        self.unsupported_date = None
        self.alternate_solution_details = None
        self.cpu_family = None
        self.cpu_model = None
        self.is_gpu_supported = None
        self.sdn_nic_details = None
        self.features_supported = None
        self.h_waa_s_details = None
        self.storage_drives = None
        self.gpu_mfg_models = None
        self.configurations = None


class PlatformPropertiesAlternateSolutionDetails(AlternateSolutionDetails):
    """Alternate solution details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar alternative_solution_name: Alternate solution name.
    :vartype alternative_solution_name: str
    :ivar alternative_solution_id: Alternate solution id.
    :vartype alternative_solution_id: str
    """

    _validation = {
        "alternative_solution_name": {"readonly": True},
        "alternative_solution_id": {"readonly": True},
    }

    _attribute_map = {
        "alternative_solution_name": {"key": "alternativeSolutionName", "type": "str"},
        "alternative_solution_id": {"key": "alternativeSolutionId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformPropertiesHWaaSDetails(HWaaSDetails):
    """Hardware as a Service details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_h_waa_s_supported: Flag to indicate if the platform supports Hardware as a Service.
    :vartype is_h_waa_s_supported: bool
    :ivar h_waa_s_name: Hardware as a Service name.
    :vartype h_waa_s_name: str
    :ivar h_waa_s_description: Hardware as a Service Description.
    :vartype h_waa_s_description: str
    :ivar h_waa_s_link: Hardware as a Service link.
    :vartype h_waa_s_link: str
    """

    _validation = {
        "is_h_waa_s_supported": {"readonly": True},
        "h_waa_s_name": {"readonly": True},
        "h_waa_s_description": {"readonly": True},
        "h_waa_s_link": {"readonly": True},
    }

    _attribute_map = {
        "is_h_waa_s_supported": {"key": "isHWaaSSupported", "type": "bool"},
        "h_waa_s_name": {"key": "hWaaSName", "type": "str"},
        "h_waa_s_description": {"key": "hWaaSDescription", "type": "str"},
        "h_waa_s_link": {"key": "hWaaSLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformPropertiesImageDetails(PlatformImageDetails):
    """Image details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar thumbnail_image: Thumbnail image.
    :vartype thumbnail_image: str
    :ivar images: List of images.
    :vartype images: list[str]
    """

    _validation = {
        "thumbnail_image": {"readonly": True},
        "images": {"readonly": True},
    }

    _attribute_map = {
        "thumbnail_image": {"key": "thumbnailImage", "type": "str"},
        "images": {"key": "images", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class SdnNicDetails(_serialization.Model):
    """Represents Software defined network NIC details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_sdn_nic_supported: Flag to indicate if the platform supports SDN NIC.
    :vartype is_sdn_nic_supported: bool
    :ivar sdn_nic_vendor_models: List of SDN NIC vendor models.
    :vartype sdn_nic_vendor_models: list[str]
    """

    _validation = {
        "is_sdn_nic_supported": {"readonly": True},
        "sdn_nic_vendor_models": {"readonly": True},
    }

    _attribute_map = {
        "is_sdn_nic_supported": {"key": "isSdnNicSupported", "type": "bool"},
        "sdn_nic_vendor_models": {"key": "sdnNicVendorModels", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.is_sdn_nic_supported = None
        self.sdn_nic_vendor_models = None


class PlatformPropertiesSdnNicDetails(SdnNicDetails):
    """SDN NIC details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar is_sdn_nic_supported: Flag to indicate if the platform supports SDN NIC.
    :vartype is_sdn_nic_supported: bool
    :ivar sdn_nic_vendor_models: List of SDN NIC vendor models.
    :vartype sdn_nic_vendor_models: list[str]
    """

    _validation = {
        "is_sdn_nic_supported": {"readonly": True},
        "sdn_nic_vendor_models": {"readonly": True},
    }

    _attribute_map = {
        "is_sdn_nic_supported": {"key": "isSdnNicSupported", "type": "bool"},
        "sdn_nic_vendor_models": {"key": "sdnNicVendorModels", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class SMBIOSDetails(_serialization.Model):
    """Represents SMBIOS details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar oem_model: OEM model name.
    :vartype oem_model: str
    :ivar oem_sub_model: OEM sub-model name.
    :vartype oem_sub_model: str
    """

    _validation = {
        "oem_model": {"readonly": True},
        "oem_sub_model": {"readonly": True},
    }

    _attribute_map = {
        "oem_model": {"key": "oemModel", "type": "str"},
        "oem_sub_model": {"key": "oemSubModel", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.oem_model = None
        self.oem_sub_model = None


class PlatformPropertiesSmbiosDetails(SMBIOSDetails):
    """SMBIOS details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar oem_model: OEM model name.
    :vartype oem_model: str
    :ivar oem_sub_model: OEM sub-model name.
    :vartype oem_sub_model: str
    """

    _validation = {
        "oem_model": {"readonly": True},
        "oem_sub_model": {"readonly": True},
    }

    _attribute_map = {
        "oem_model": {"key": "oemModel", "type": "str"},
        "oem_sub_model": {"key": "oemSubModel", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class WindowsAdminCenterDetails(_serialization.Model):
    """Represents Windows Admin Center details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Windows Admin Center name.
    :vartype name: str
    :ivar description: Windows Admin Center description.
    :vartype description: str
    :ivar website_link: Windows Admin Center name website link.
    :vartype website_link: str
    """

    _validation = {
        "name": {"readonly": True},
        "description": {"readonly": True},
        "website_link": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "website_link": {"key": "websiteLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.description = None
        self.website_link = None


class PlatformPropertiesWindowsAdminCenterDetails(WindowsAdminCenterDetails):
    """Windows Admin Center (WAC) details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Windows Admin Center name.
    :vartype name: str
    :ivar description: Windows Admin Center description.
    :vartype description: str
    :ivar website_link: Windows Admin Center name website link.
    :vartype website_link: str
    """

    _validation = {
        "name": {"readonly": True},
        "description": {"readonly": True},
        "website_link": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "website_link": {"key": "websiteLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class PlatformResource(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Specifies the properties for Platform in HCI Catalog.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar platform_id: Unique Id representing the platform. Required.
    :vartype platform_id: str
    :ivar platform_name: Platform name. Required.
    :vartype platform_name: str
    :ivar vendor_id: Vendor Id. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Vendor name. Required.
    :vartype vendor_name: str
    :ivar is_archived: Flag to indicate if the platform is archived. Required.
    :vartype is_archived: bool
    :ivar server_description: Server description.
    :vartype server_description: str
    :ivar system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
     Premium, etc. Required.
    :vartype system_type: str
    :ivar form_factor: Form factor.
    :vartype form_factor: str
    :ivar rack_units: Number of rack units.
    :vartype rack_units: int
    :ivar minimum_scale: Minimum scale.
    :vartype minimum_scale: int
    :ivar maximum_scale: Maximum scale.
    :vartype maximum_scale: int
    :ivar is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
    :vartype is_p_memory_supported: bool
    :ivar regions: List of availability regions.
    :vartype regions: list[str]
    :ivar technical_use_cases: List of technical use-cases.
    :vartype technical_use_cases: list[str]
    :ivar image_details: Image details.
    :vartype image_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesImageDetails
    :ivar last_tested_version: Last tested version.
    :vartype last_tested_version: str
    :ivar website_url: Website Url. Required.
    :vartype website_url: str
    :ivar smbios_details: SMBIOS details.
    :vartype smbios_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSmbiosDetails
    :ivar windows_admin_center_details: Windows Admin Center (WAC) details.
    :vartype windows_admin_center_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesWindowsAdminCenterDetails
    :ivar lifecycle_stage: Lifecycle stage.
    :vartype lifecycle_stage: int
    :ivar unsupported_date: Unsupported date.
    :vartype unsupported_date: str
    :ivar alternate_solution_details: Alternate solution details.
    :vartype alternate_solution_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesAlternateSolutionDetails
    :ivar cpu_family: CPU Family.
    :vartype cpu_family: str
    :ivar cpu_model: CPU model.
    :vartype cpu_model: str
    :ivar is_gpu_supported: Flag to indicate if the platform supports GPU.
    :vartype is_gpu_supported: bool
    :ivar sdn_nic_details: SDN NIC details.
    :vartype sdn_nic_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSdnNicDetails
    :ivar features_supported: List of supported features.
    :vartype features_supported: list[str]
    :ivar h_waa_s_details: Hardware as a Service details.
    :vartype h_waa_s_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesHWaaSDetails
    :ivar storage_drives: List of storage drive types.
    :vartype storage_drives: list[str]
    :ivar gpu_mfg_models: List of GPU mfg models.
    :vartype gpu_mfg_models: list[str]
    :ivar configurations: List of configurations.
    :vartype configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationProperties]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "platform_id": {"required": True},
        "platform_name": {"required": True},
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "is_archived": {"required": True},
        "server_description": {"readonly": True},
        "system_type": {"required": True},
        "form_factor": {"readonly": True},
        "rack_units": {"readonly": True},
        "minimum_scale": {"readonly": True},
        "maximum_scale": {"readonly": True},
        "is_p_memory_supported": {"required": True},
        "regions": {"readonly": True},
        "technical_use_cases": {"readonly": True},
        "image_details": {"readonly": True},
        "last_tested_version": {"readonly": True},
        "website_url": {"required": True},
        "smbios_details": {"readonly": True},
        "windows_admin_center_details": {"readonly": True},
        "lifecycle_stage": {"readonly": True},
        "unsupported_date": {"readonly": True},
        "alternate_solution_details": {"readonly": True},
        "cpu_family": {"readonly": True},
        "cpu_model": {"readonly": True},
        "is_gpu_supported": {"readonly": True},
        "sdn_nic_details": {"readonly": True},
        "features_supported": {"readonly": True},
        "h_waa_s_details": {"readonly": True},
        "storage_drives": {"readonly": True},
        "gpu_mfg_models": {"readonly": True},
        "configurations": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "platform_id": {"key": "properties.platformId", "type": "str"},
        "platform_name": {"key": "properties.platformName", "type": "str"},
        "vendor_id": {"key": "properties.vendorId", "type": "str"},
        "vendor_name": {"key": "properties.vendorName", "type": "str"},
        "is_archived": {"key": "properties.isArchived", "type": "bool"},
        "server_description": {"key": "properties.serverDescription", "type": "str"},
        "system_type": {"key": "properties.systemType", "type": "str"},
        "form_factor": {"key": "properties.formFactor", "type": "str"},
        "rack_units": {"key": "properties.rackUnits", "type": "int"},
        "minimum_scale": {"key": "properties.minimumScale", "type": "int"},
        "maximum_scale": {"key": "properties.maximumScale", "type": "int"},
        "is_p_memory_supported": {"key": "properties.isPMemorySupported", "type": "bool"},
        "regions": {"key": "properties.regions", "type": "[str]"},
        "technical_use_cases": {"key": "properties.technicalUseCases", "type": "[str]"},
        "image_details": {"key": "properties.imageDetails", "type": "PlatformPropertiesImageDetails"},
        "last_tested_version": {"key": "properties.lastTestedVersion", "type": "str"},
        "website_url": {"key": "properties.websiteUrl", "type": "str"},
        "smbios_details": {"key": "properties.smbiosDetails", "type": "PlatformPropertiesSmbiosDetails"},
        "windows_admin_center_details": {
            "key": "properties.windowsAdminCenterDetails",
            "type": "PlatformPropertiesWindowsAdminCenterDetails",
        },
        "lifecycle_stage": {"key": "properties.lifecycleStage", "type": "int"},
        "unsupported_date": {"key": "properties.unsupportedDate", "type": "str"},
        "alternate_solution_details": {
            "key": "properties.alternateSolutionDetails",
            "type": "PlatformPropertiesAlternateSolutionDetails",
        },
        "cpu_family": {"key": "properties.cpuFamily", "type": "str"},
        "cpu_model": {"key": "properties.cpuModel", "type": "str"},
        "is_gpu_supported": {"key": "properties.isGpuSupported", "type": "bool"},
        "sdn_nic_details": {"key": "properties.sdnNicDetails", "type": "PlatformPropertiesSdnNicDetails"},
        "features_supported": {"key": "properties.featuresSupported", "type": "[str]"},
        "h_waa_s_details": {"key": "properties.hWaaSDetails", "type": "PlatformPropertiesHWaaSDetails"},
        "storage_drives": {"key": "properties.storageDrives", "type": "[str]"},
        "gpu_mfg_models": {"key": "properties.gpuMfgModels", "type": "[str]"},
        "configurations": {"key": "properties.configurations", "type": "[PlatformConfigurationProperties]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        platform_id: str,
        platform_name: str,
        vendor_id: str,
        vendor_name: str,
        is_archived: bool,
        system_type: str,
        is_p_memory_supported: bool,
        website_url: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword platform_id: Unique Id representing the platform. Required.
        :paramtype platform_id: str
        :keyword platform_name: Platform name. Required.
        :paramtype platform_name: str
        :keyword vendor_id: Vendor Id. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Vendor name. Required.
        :paramtype vendor_name: str
        :keyword is_archived: Flag to indicate if the platform is archived. Required.
        :paramtype is_archived: bool
        :keyword system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
         Premium, etc. Required.
        :paramtype system_type: str
        :keyword is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
        :paramtype is_p_memory_supported: bool
        :keyword website_url: Website Url. Required.
        :paramtype website_url: str
        """
        super().__init__(**kwargs)
        self.platform_id = platform_id
        self.platform_name = platform_name
        self.vendor_id = vendor_id
        self.vendor_name = vendor_name
        self.is_archived = is_archived
        self.server_description = None
        self.system_type = system_type
        self.form_factor = None
        self.rack_units = None
        self.minimum_scale = None
        self.maximum_scale = None
        self.is_p_memory_supported = is_p_memory_supported
        self.regions = None
        self.technical_use_cases = None
        self.image_details = None
        self.last_tested_version = None
        self.website_url = website_url
        self.smbios_details = None
        self.windows_admin_center_details = None
        self.lifecycle_stage = None
        self.unsupported_date = None
        self.alternate_solution_details = None
        self.cpu_family = None
        self.cpu_model = None
        self.is_gpu_supported = None
        self.sdn_nic_details = None
        self.features_supported = None
        self.h_waa_s_details = None
        self.storage_drives = None
        self.gpu_mfg_models = None
        self.configurations = None


class PlatformResourceList(_serialization.Model):
    """List of platforms.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of platform resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformResource]
    :ivar next_link: Link for the next set of platform resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PlatformResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of platform resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class PlatformResourceProperties(PlatformProperties):  # pylint: disable=too-many-instance-attributes
    """Platform properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar platform_id: Unique Id representing the platform. Required.
    :vartype platform_id: str
    :ivar platform_name: Platform name. Required.
    :vartype platform_name: str
    :ivar vendor_id: Vendor Id. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Vendor name. Required.
    :vartype vendor_name: str
    :ivar is_archived: Flag to indicate if the platform is archived. Required.
    :vartype is_archived: bool
    :ivar server_description: Server description.
    :vartype server_description: str
    :ivar system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
     Premium, etc. Required.
    :vartype system_type: str
    :ivar form_factor: Form factor.
    :vartype form_factor: str
    :ivar rack_units: Number of rack units.
    :vartype rack_units: int
    :ivar minimum_scale: Minimum scale.
    :vartype minimum_scale: int
    :ivar maximum_scale: Maximum scale.
    :vartype maximum_scale: int
    :ivar is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
    :vartype is_p_memory_supported: bool
    :ivar regions: List of availability regions.
    :vartype regions: list[str]
    :ivar technical_use_cases: List of technical use-cases.
    :vartype technical_use_cases: list[str]
    :ivar image_details: Image details.
    :vartype image_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesImageDetails
    :ivar last_tested_version: Last tested version.
    :vartype last_tested_version: str
    :ivar website_url: Website Url. Required.
    :vartype website_url: str
    :ivar smbios_details: SMBIOS details.
    :vartype smbios_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSmbiosDetails
    :ivar windows_admin_center_details: Windows Admin Center (WAC) details.
    :vartype windows_admin_center_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesWindowsAdminCenterDetails
    :ivar lifecycle_stage: Lifecycle stage.
    :vartype lifecycle_stage: int
    :ivar unsupported_date: Unsupported date.
    :vartype unsupported_date: str
    :ivar alternate_solution_details: Alternate solution details.
    :vartype alternate_solution_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesAlternateSolutionDetails
    :ivar cpu_family: CPU Family.
    :vartype cpu_family: str
    :ivar cpu_model: CPU model.
    :vartype cpu_model: str
    :ivar is_gpu_supported: Flag to indicate if the platform supports GPU.
    :vartype is_gpu_supported: bool
    :ivar sdn_nic_details: SDN NIC details.
    :vartype sdn_nic_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSdnNicDetails
    :ivar features_supported: List of supported features.
    :vartype features_supported: list[str]
    :ivar h_waa_s_details: Hardware as a Service details.
    :vartype h_waa_s_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesHWaaSDetails
    :ivar storage_drives: List of storage drive types.
    :vartype storage_drives: list[str]
    :ivar gpu_mfg_models: List of GPU mfg models.
    :vartype gpu_mfg_models: list[str]
    :ivar configurations: List of configurations.
    :vartype configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationProperties]
    """

    _validation = {
        "platform_id": {"required": True},
        "platform_name": {"required": True},
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "is_archived": {"required": True},
        "server_description": {"readonly": True},
        "system_type": {"required": True},
        "form_factor": {"readonly": True},
        "rack_units": {"readonly": True},
        "minimum_scale": {"readonly": True},
        "maximum_scale": {"readonly": True},
        "is_p_memory_supported": {"required": True},
        "regions": {"readonly": True},
        "technical_use_cases": {"readonly": True},
        "image_details": {"readonly": True},
        "last_tested_version": {"readonly": True},
        "website_url": {"required": True},
        "smbios_details": {"readonly": True},
        "windows_admin_center_details": {"readonly": True},
        "lifecycle_stage": {"readonly": True},
        "unsupported_date": {"readonly": True},
        "alternate_solution_details": {"readonly": True},
        "cpu_family": {"readonly": True},
        "cpu_model": {"readonly": True},
        "is_gpu_supported": {"readonly": True},
        "sdn_nic_details": {"readonly": True},
        "features_supported": {"readonly": True},
        "h_waa_s_details": {"readonly": True},
        "storage_drives": {"readonly": True},
        "gpu_mfg_models": {"readonly": True},
        "configurations": {"readonly": True},
    }

    _attribute_map = {
        "platform_id": {"key": "platformId", "type": "str"},
        "platform_name": {"key": "platformName", "type": "str"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "is_archived": {"key": "isArchived", "type": "bool"},
        "server_description": {"key": "serverDescription", "type": "str"},
        "system_type": {"key": "systemType", "type": "str"},
        "form_factor": {"key": "formFactor", "type": "str"},
        "rack_units": {"key": "rackUnits", "type": "int"},
        "minimum_scale": {"key": "minimumScale", "type": "int"},
        "maximum_scale": {"key": "maximumScale", "type": "int"},
        "is_p_memory_supported": {"key": "isPMemorySupported", "type": "bool"},
        "regions": {"key": "regions", "type": "[str]"},
        "technical_use_cases": {"key": "technicalUseCases", "type": "[str]"},
        "image_details": {"key": "imageDetails", "type": "PlatformPropertiesImageDetails"},
        "last_tested_version": {"key": "lastTestedVersion", "type": "str"},
        "website_url": {"key": "websiteUrl", "type": "str"},
        "smbios_details": {"key": "smbiosDetails", "type": "PlatformPropertiesSmbiosDetails"},
        "windows_admin_center_details": {
            "key": "windowsAdminCenterDetails",
            "type": "PlatformPropertiesWindowsAdminCenterDetails",
        },
        "lifecycle_stage": {"key": "lifecycleStage", "type": "int"},
        "unsupported_date": {"key": "unsupportedDate", "type": "str"},
        "alternate_solution_details": {
            "key": "alternateSolutionDetails",
            "type": "PlatformPropertiesAlternateSolutionDetails",
        },
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "cpu_model": {"key": "cpuModel", "type": "str"},
        "is_gpu_supported": {"key": "isGpuSupported", "type": "bool"},
        "sdn_nic_details": {"key": "sdnNicDetails", "type": "PlatformPropertiesSdnNicDetails"},
        "features_supported": {"key": "featuresSupported", "type": "[str]"},
        "h_waa_s_details": {"key": "hWaaSDetails", "type": "PlatformPropertiesHWaaSDetails"},
        "storage_drives": {"key": "storageDrives", "type": "[str]"},
        "gpu_mfg_models": {"key": "gpuMfgModels", "type": "[str]"},
        "configurations": {"key": "configurations", "type": "[PlatformConfigurationProperties]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        platform_id: str,
        platform_name: str,
        vendor_id: str,
        vendor_name: str,
        is_archived: bool,
        system_type: str,
        is_p_memory_supported: bool,
        website_url: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword platform_id: Unique Id representing the platform. Required.
        :paramtype platform_id: str
        :keyword platform_name: Platform name. Required.
        :paramtype platform_name: str
        :keyword vendor_id: Vendor Id. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Vendor name. Required.
        :paramtype vendor_name: str
        :keyword is_archived: Flag to indicate if the platform is archived. Required.
        :paramtype is_archived: bool
        :keyword system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
         Premium, etc. Required.
        :paramtype system_type: str
        :keyword is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
        :paramtype is_p_memory_supported: bool
        :keyword website_url: Website Url. Required.
        :paramtype website_url: str
        """
        super().__init__(
            platform_id=platform_id,
            platform_name=platform_name,
            vendor_id=vendor_id,
            vendor_name=vendor_name,
            is_archived=is_archived,
            system_type=system_type,
            is_p_memory_supported=is_p_memory_supported,
            website_url=website_url,
            **kwargs
        )


class PreferenceDetails(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Preference details.

    All required parameters must be populated in order to send to Azure.

    :ivar system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
    :vartype system_type: str
    :ivar cpu_family: Cpu Family, Currently Intel, AMD. Required.
    :vartype cpu_family: str
    :ivar is_two_node_solution: Is 2 node solution.
    :vartype is_two_node_solution: bool
    :ivar growth_percentage: Growth Percentage. Required.
    :vartype growth_percentage: int
    :ivar memory_expandability: If require memory expandability, it reserve DIMM slots for future
     growth (only fill half the DIMM slots in your solution. Required.
    :vartype memory_expandability: bool
    :ivar storage_expandability: If require storage expandability, reserve drive bays for future
     growth (leave half of the drives empty for future growth) . Required.
    :vartype storage_expandability: bool
    :ivar vendor_id: vendor id. Required.
    :vartype vendor_id: str
    :ivar storage_future_growth_bytes: Percentage needed to be reserved for future growth.
     Required.
    :vartype storage_future_growth_bytes: int
    :ivar resiliency_requirements: failure tolerate capabilities.
    :vartype resiliency_requirements:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
    :ivar storage_preference: Storage preferences.
    :vartype storage_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
    :ivar network_preference: Network Preferences.
    :vartype network_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
    :ivar workloads: Details of your on-premises workloads. This information will be used to
     understand and recommend a solution.
    :vartype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
    """

    _validation = {
        "system_type": {"required": True},
        "cpu_family": {"required": True},
        "growth_percentage": {"required": True},
        "memory_expandability": {"required": True},
        "storage_expandability": {"required": True},
        "vendor_id": {"required": True},
        "storage_future_growth_bytes": {"required": True},
    }

    _attribute_map = {
        "system_type": {"key": "systemType", "type": "str"},
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "is_two_node_solution": {"key": "isTwoNodeSolution", "type": "bool"},
        "growth_percentage": {"key": "growthPercentage", "type": "int"},
        "memory_expandability": {"key": "memoryExpandability", "type": "bool"},
        "storage_expandability": {"key": "storageExpandability", "type": "bool"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "storage_future_growth_bytes": {"key": "storageFutureGrowthBytes", "type": "int"},
        "resiliency_requirements": {"key": "resiliencyRequirements", "type": "PreferenceDetailsResiliencyRequirements"},
        "storage_preference": {"key": "storagePreference", "type": "PreferenceDetailsStoragePreference"},
        "network_preference": {"key": "networkPreference", "type": "PreferenceDetailsNetworkPreference"},
        "workloads": {"key": "workloads", "type": "[Workload]"},
    }

    def __init__(
        self,
        *,
        system_type: str,
        cpu_family: str,
        growth_percentage: int,
        memory_expandability: bool,
        storage_expandability: bool,
        vendor_id: str,
        storage_future_growth_bytes: int,
        is_two_node_solution: Optional[bool] = None,
        resiliency_requirements: Optional["_models.PreferenceDetailsResiliencyRequirements"] = None,
        storage_preference: Optional["_models.PreferenceDetailsStoragePreference"] = None,
        network_preference: Optional["_models.PreferenceDetailsNetworkPreference"] = None,
        workloads: Optional[List["_models.Workload"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
        :paramtype system_type: str
        :keyword cpu_family: Cpu Family, Currently Intel, AMD. Required.
        :paramtype cpu_family: str
        :keyword is_two_node_solution: Is 2 node solution.
        :paramtype is_two_node_solution: bool
        :keyword growth_percentage: Growth Percentage. Required.
        :paramtype growth_percentage: int
        :keyword memory_expandability: If require memory expandability, it reserve DIMM slots for
         future growth (only fill half the DIMM slots in your solution. Required.
        :paramtype memory_expandability: bool
        :keyword storage_expandability: If require storage expandability, reserve drive bays for future
         growth (leave half of the drives empty for future growth) . Required.
        :paramtype storage_expandability: bool
        :keyword vendor_id: vendor id. Required.
        :paramtype vendor_id: str
        :keyword storage_future_growth_bytes: Percentage needed to be reserved for future growth.
         Required.
        :paramtype storage_future_growth_bytes: int
        :keyword resiliency_requirements: failure tolerate capabilities.
        :paramtype resiliency_requirements:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
        :keyword storage_preference: Storage preferences.
        :paramtype storage_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
        :keyword network_preference: Network Preferences.
        :paramtype network_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
        :keyword workloads: Details of your on-premises workloads. This information will be used to
         understand and recommend a solution.
        :paramtype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
        """
        super().__init__(**kwargs)
        self.system_type = system_type
        self.cpu_family = cpu_family
        self.is_two_node_solution = is_two_node_solution
        self.growth_percentage = growth_percentage
        self.memory_expandability = memory_expandability
        self.storage_expandability = storage_expandability
        self.vendor_id = vendor_id
        self.storage_future_growth_bytes = storage_future_growth_bytes
        self.resiliency_requirements = resiliency_requirements
        self.storage_preference = storage_preference
        self.network_preference = network_preference
        self.workloads = workloads


class PreferenceDetailsNetworkPreference(NetworkPreference):
    """Network Preferences.

    All required parameters must be populated in order to send to Azure.

    :ivar uses_software_defined_network: Use software defined networking to centrally configure and
     manage networks and network services. Required.
    :vartype uses_software_defined_network: bool
    :ivar network_controller: Number of network controller to manage, configure, monitor, and
     troubleshoot virtual network infrastructure. Required.
    :vartype network_controller: int
    :ivar software_load_balancer: Number of load balancer needed. Required.
    :vartype software_load_balancer: int
    :ivar ras_gateway: Number of Ras gateway needed. Required.
    :vartype ras_gateway: int
    """

    _validation = {
        "uses_software_defined_network": {"required": True},
        "network_controller": {"required": True},
        "software_load_balancer": {"required": True},
        "ras_gateway": {"required": True},
    }

    _attribute_map = {
        "uses_software_defined_network": {"key": "usesSoftwareDefinedNetwork", "type": "bool"},
        "network_controller": {"key": "networkController", "type": "int"},
        "software_load_balancer": {"key": "softwareLoadBalancer", "type": "int"},
        "ras_gateway": {"key": "rasGateway", "type": "int"},
    }

    def __init__(
        self,
        *,
        uses_software_defined_network: bool,
        network_controller: int,
        software_load_balancer: int,
        ras_gateway: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword uses_software_defined_network: Use software defined networking to centrally configure
         and manage networks and network services. Required.
        :paramtype uses_software_defined_network: bool
        :keyword network_controller: Number of network controller to manage, configure, monitor, and
         troubleshoot virtual network infrastructure. Required.
        :paramtype network_controller: int
        :keyword software_load_balancer: Number of load balancer needed. Required.
        :paramtype software_load_balancer: int
        :keyword ras_gateway: Number of Ras gateway needed. Required.
        :paramtype ras_gateway: int
        """
        super().__init__(
            uses_software_defined_network=uses_software_defined_network,
            network_controller=network_controller,
            software_load_balancer=software_load_balancer,
            ras_gateway=ras_gateway,
            **kwargs
        )


class ResiliencyRequirements(_serialization.Model):
    """Resiliency requirements.

    All required parameters must be populated in order to send to Azure.

    :ivar availability: Reserve additional host for emergency scenarios, N+1, N+2. Required.
    :vartype availability: str
    :ivar storage_failures_to_tolerate: Number of failures that can occur simultaneously without
     compromising availability and data. Required.
    :vartype storage_failures_to_tolerate: int
    """

    _validation = {
        "availability": {"required": True},
        "storage_failures_to_tolerate": {"required": True},
    }

    _attribute_map = {
        "availability": {"key": "availability", "type": "str"},
        "storage_failures_to_tolerate": {"key": "storageFailuresToTolerate", "type": "int"},
    }

    def __init__(self, *, availability: str, storage_failures_to_tolerate: int, **kwargs: Any) -> None:
        """
        :keyword availability: Reserve additional host for emergency scenarios, N+1, N+2. Required.
        :paramtype availability: str
        :keyword storage_failures_to_tolerate: Number of failures that can occur simultaneously without
         compromising availability and data. Required.
        :paramtype storage_failures_to_tolerate: int
        """
        super().__init__(**kwargs)
        self.availability = availability
        self.storage_failures_to_tolerate = storage_failures_to_tolerate


class PreferenceDetailsResiliencyRequirements(ResiliencyRequirements):
    """failure tolerate capabilities.

    All required parameters must be populated in order to send to Azure.

    :ivar availability: Reserve additional host for emergency scenarios, N+1, N+2. Required.
    :vartype availability: str
    :ivar storage_failures_to_tolerate: Number of failures that can occur simultaneously without
     compromising availability and data. Required.
    :vartype storage_failures_to_tolerate: int
    """

    _validation = {
        "availability": {"required": True},
        "storage_failures_to_tolerate": {"required": True},
    }

    _attribute_map = {
        "availability": {"key": "availability", "type": "str"},
        "storage_failures_to_tolerate": {"key": "storageFailuresToTolerate", "type": "int"},
    }

    def __init__(self, *, availability: str, storage_failures_to_tolerate: int, **kwargs: Any) -> None:
        """
        :keyword availability: Reserve additional host for emergency scenarios, N+1, N+2. Required.
        :paramtype availability: str
        :keyword storage_failures_to_tolerate: Number of failures that can occur simultaneously without
         compromising availability and data. Required.
        :paramtype storage_failures_to_tolerate: int
        """
        super().__init__(availability=availability, storage_failures_to_tolerate=storage_failures_to_tolerate, **kwargs)


class StoragePreference(_serialization.Model):
    """Storage preferences.

    All required parameters must be populated in order to send to Azure.

    :ivar storage_type: Storage type. Required.
    :vartype storage_type: str
    :ivar persistent_cache: Cache choice. Required.
    :vartype persistent_cache: str
    :ivar resiliency_preference: Resiliency preference, optimized for capacity or performance.
     Required.
    :vartype resiliency_preference: str
    :ivar in_memory_cache_size_in_gb: Resiliency preference, optimized for capacity or performance.
     Required.
    :vartype in_memory_cache_size_in_gb: int
    """

    _validation = {
        "storage_type": {"required": True},
        "persistent_cache": {"required": True},
        "resiliency_preference": {"required": True},
        "in_memory_cache_size_in_gb": {"required": True},
    }

    _attribute_map = {
        "storage_type": {"key": "storageType", "type": "str"},
        "persistent_cache": {"key": "persistentCache", "type": "str"},
        "resiliency_preference": {"key": "resiliencyPreference", "type": "str"},
        "in_memory_cache_size_in_gb": {"key": "inMemoryCacheSizeInGB", "type": "int"},
    }

    def __init__(
        self,
        *,
        storage_type: str,
        persistent_cache: str,
        resiliency_preference: str,
        in_memory_cache_size_in_gb: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword storage_type: Storage type. Required.
        :paramtype storage_type: str
        :keyword persistent_cache: Cache choice. Required.
        :paramtype persistent_cache: str
        :keyword resiliency_preference: Resiliency preference, optimized for capacity or performance.
         Required.
        :paramtype resiliency_preference: str
        :keyword in_memory_cache_size_in_gb: Resiliency preference, optimized for capacity or
         performance. Required.
        :paramtype in_memory_cache_size_in_gb: int
        """
        super().__init__(**kwargs)
        self.storage_type = storage_type
        self.persistent_cache = persistent_cache
        self.resiliency_preference = resiliency_preference
        self.in_memory_cache_size_in_gb = in_memory_cache_size_in_gb


class PreferenceDetailsStoragePreference(StoragePreference):
    """Storage preferences.

    All required parameters must be populated in order to send to Azure.

    :ivar storage_type: Storage type. Required.
    :vartype storage_type: str
    :ivar persistent_cache: Cache choice. Required.
    :vartype persistent_cache: str
    :ivar resiliency_preference: Resiliency preference, optimized for capacity or performance.
     Required.
    :vartype resiliency_preference: str
    :ivar in_memory_cache_size_in_gb: Resiliency preference, optimized for capacity or performance.
     Required.
    :vartype in_memory_cache_size_in_gb: int
    """

    _validation = {
        "storage_type": {"required": True},
        "persistent_cache": {"required": True},
        "resiliency_preference": {"required": True},
        "in_memory_cache_size_in_gb": {"required": True},
    }

    _attribute_map = {
        "storage_type": {"key": "storageType", "type": "str"},
        "persistent_cache": {"key": "persistentCache", "type": "str"},
        "resiliency_preference": {"key": "resiliencyPreference", "type": "str"},
        "in_memory_cache_size_in_gb": {"key": "inMemoryCacheSizeInGB", "type": "int"},
    }

    def __init__(
        self,
        *,
        storage_type: str,
        persistent_cache: str,
        resiliency_preference: str,
        in_memory_cache_size_in_gb: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword storage_type: Storage type. Required.
        :paramtype storage_type: str
        :keyword persistent_cache: Cache choice. Required.
        :paramtype persistent_cache: str
        :keyword resiliency_preference: Resiliency preference, optimized for capacity or performance.
         Required.
        :paramtype resiliency_preference: str
        :keyword in_memory_cache_size_in_gb: Resiliency preference, optimized for capacity or
         performance. Required.
        :paramtype in_memory_cache_size_in_gb: int
        """
        super().__init__(
            storage_type=storage_type,
            persistent_cache=persistent_cache,
            resiliency_preference=resiliency_preference,
            in_memory_cache_size_in_gb=in_memory_cache_size_in_gb,
            **kwargs
        )


class Preferences(_serialization.Model):
    """Preferences related to the order.

    :ivar notification_preferences: Notification preferences.
    :vartype notification_preferences:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.NotificationPreference]
    :ivar transport_preferences: Preferences related to the shipment logistics of the order.
    :vartype transport_preferences:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TransportPreferences
    :ivar encryption_preferences: Preferences related to the Encryption.
    :vartype encryption_preferences:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.EncryptionPreferences
    :ivar management_resource_preferences: Preferences related to the Management resource.
    :vartype management_resource_preferences:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ManagementResourcePreferences
    :ivar term_commitment_preferences: Preferences related to the Term commitment.
    :vartype term_commitment_preferences:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentPreferences
    """

    _attribute_map = {
        "notification_preferences": {"key": "notificationPreferences", "type": "[NotificationPreference]"},
        "transport_preferences": {"key": "transportPreferences", "type": "TransportPreferences"},
        "encryption_preferences": {"key": "encryptionPreferences", "type": "EncryptionPreferences"},
        "management_resource_preferences": {
            "key": "managementResourcePreferences",
            "type": "ManagementResourcePreferences",
        },
        "term_commitment_preferences": {"key": "termCommitmentPreferences", "type": "TermCommitmentPreferences"},
    }

    def __init__(
        self,
        *,
        notification_preferences: Optional[List["_models.NotificationPreference"]] = None,
        transport_preferences: Optional["_models.TransportPreferences"] = None,
        encryption_preferences: Optional["_models.EncryptionPreferences"] = None,
        management_resource_preferences: Optional["_models.ManagementResourcePreferences"] = None,
        term_commitment_preferences: Optional["_models.TermCommitmentPreferences"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword notification_preferences: Notification preferences.
        :paramtype notification_preferences:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.NotificationPreference]
        :keyword transport_preferences: Preferences related to the shipment logistics of the order.
        :paramtype transport_preferences:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TransportPreferences
        :keyword encryption_preferences: Preferences related to the Encryption.
        :paramtype encryption_preferences:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.EncryptionPreferences
        :keyword management_resource_preferences: Preferences related to the Management resource.
        :paramtype management_resource_preferences:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ManagementResourcePreferences
        :keyword term_commitment_preferences: Preferences related to the Term commitment.
        :paramtype term_commitment_preferences:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentPreferences
        """
        super().__init__(**kwargs)
        self.notification_preferences = notification_preferences
        self.transport_preferences = transport_preferences
        self.encryption_preferences = encryption_preferences
        self.management_resource_preferences = management_resource_preferences
        self.term_commitment_preferences = term_commitment_preferences


class Product(_serialization.Model):
    """Represents a product.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar configurations: List of configurations for the product.
    :vartype configurations: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Configuration]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "configurations": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "Description"},
        "image_information": {"key": "properties.imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "properties.costInformation", "type": "CostInformation"},
        "availability_information": {"key": "properties.availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "properties.hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "properties.fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "properties.filterableProperties", "type": "[FilterableProperty]"},
        "configurations": {"key": "properties.configurations", "type": "[Configuration]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None
        self.filterable_properties = None
        self.configurations = None


class ProductDetails(_serialization.Model):
    """Represents product details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar display_info: Display details of the product.
    :vartype display_info: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DisplayInfo
    :ivar hierarchy_information: Hierarchy of the product which uniquely identifies the product.
     Required.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar product_double_encryption_status: Double encryption status of the configuration.
     Read-only field. Known values are: "Disabled" and "Enabled".
    :vartype product_double_encryption_status: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DoubleEncryptionStatus
    :ivar identification_type: Identification type of the configuration. Known values are:
     "NotSupported" and "SerialNumber".
    :vartype identification_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.IdentificationType
    :ivar parent_device_details: Device details of the parent configuration.
    :vartype parent_device_details: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DeviceDetails
    :ivar opt_in_additional_configurations: List of additional configurations customer wants in the
     order item apart from the ones included in the base configuration.
    :vartype opt_in_additional_configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.AdditionalConfiguration]
    :ivar child_configuration_device_details: Details of all child configurations that are part of
     the order item.
    :vartype child_configuration_device_details:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ConfigurationDeviceDetails]
    :ivar term_commitment_information: Term Commitment Information of the Device.
    :vartype term_commitment_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentInformation
    """

    _validation = {
        "hierarchy_information": {"required": True},
        "product_double_encryption_status": {"readonly": True},
        "identification_type": {"readonly": True},
        "parent_device_details": {"readonly": True},
        "child_configuration_device_details": {"readonly": True},
        "term_commitment_information": {"readonly": True},
    }

    _attribute_map = {
        "display_info": {"key": "displayInfo", "type": "DisplayInfo"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "product_double_encryption_status": {"key": "productDoubleEncryptionStatus", "type": "str"},
        "identification_type": {"key": "identificationType", "type": "str"},
        "parent_device_details": {"key": "parentDeviceDetails", "type": "DeviceDetails"},
        "opt_in_additional_configurations": {
            "key": "optInAdditionalConfigurations",
            "type": "[AdditionalConfiguration]",
        },
        "child_configuration_device_details": {
            "key": "childConfigurationDeviceDetails",
            "type": "[ConfigurationDeviceDetails]",
        },
        "term_commitment_information": {"key": "termCommitmentInformation", "type": "TermCommitmentInformation"},
    }

    def __init__(
        self,
        *,
        hierarchy_information: "_models.HierarchyInformation",
        display_info: Optional["_models.DisplayInfo"] = None,
        opt_in_additional_configurations: Optional[List["_models.AdditionalConfiguration"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_info: Display details of the product.
        :paramtype display_info: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.DisplayInfo
        :keyword hierarchy_information: Hierarchy of the product which uniquely identifies the product.
         Required.
        :paramtype hierarchy_information:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
        :keyword opt_in_additional_configurations: List of additional configurations customer wants in
         the order item apart from the ones included in the base configuration.
        :paramtype opt_in_additional_configurations:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.AdditionalConfiguration]
        """
        super().__init__(**kwargs)
        self.display_info = display_info
        self.hierarchy_information = hierarchy_information
        self.product_double_encryption_status = None
        self.identification_type = None
        self.parent_device_details = None
        self.opt_in_additional_configurations = opt_in_additional_configurations
        self.child_configuration_device_details = None
        self.term_commitment_information = None


class ProductFamilies(_serialization.Model):
    """The list of product families.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of product families.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductFamily]
    :ivar next_link: Link for the next set of product families.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ProductFamily]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of product families.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class ProductFamiliesMetadata(_serialization.Model):
    """Holds details about product family metadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of product family metadata details.
    :vartype value:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductFamiliesMetadataDetails]
    :ivar next_link: Link for the next set of product families.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ProductFamiliesMetadataDetails]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class ProductFamiliesMetadataDetails(_serialization.Model):
    """Product families metadata details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar product_lines: List of product lines supported in the product family.
    :vartype product_lines: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductLine]
    :ivar resource_provider_details: Contains details related to resource provider.
    :vartype resource_provider_details:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "product_lines": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "Description"},
        "image_information": {"key": "properties.imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "properties.costInformation", "type": "CostInformation"},
        "availability_information": {"key": "properties.availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "properties.hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "properties.fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "properties.filterableProperties", "type": "[FilterableProperty]"},
        "product_lines": {"key": "properties.productLines", "type": "[ProductLine]"},
        "resource_provider_details": {"key": "properties.resourceProviderDetails", "type": "[ResourceProviderDetails]"},
    }

    def __init__(
        self, *, resource_provider_details: Optional[List["_models.ResourceProviderDetails"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword resource_provider_details: Contains details related to resource provider.
        :paramtype resource_provider_details:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
        """
        super().__init__(**kwargs)
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None
        self.filterable_properties = None
        self.product_lines = None
        self.resource_provider_details = resource_provider_details


class ProductFamiliesRequest(_serialization.Model):
    """The filters for showing the product families.

    All required parameters must be populated in order to send to Azure.

    :ivar filterable_properties: Dictionary of filterable properties on product family. Required.
    :vartype filterable_properties: dict[str,
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]]
    :ivar customer_subscription_details: Customer subscription properties. Clients can display
     available products to unregistered customers by explicitly passing subscription details.
    :vartype customer_subscription_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CustomerSubscriptionDetails
    """

    _validation = {
        "filterable_properties": {"required": True},
    }

    _attribute_map = {
        "filterable_properties": {"key": "filterableProperties", "type": "{[FilterableProperty]}"},
        "customer_subscription_details": {"key": "customerSubscriptionDetails", "type": "CustomerSubscriptionDetails"},
    }

    def __init__(
        self,
        *,
        filterable_properties: Dict[str, List["_models.FilterableProperty"]],
        customer_subscription_details: Optional["_models.CustomerSubscriptionDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword filterable_properties: Dictionary of filterable properties on product family.
         Required.
        :paramtype filterable_properties: dict[str,
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]]
        :keyword customer_subscription_details: Customer subscription properties. Clients can display
         available products to unregistered customers by explicitly passing subscription details.
        :paramtype customer_subscription_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CustomerSubscriptionDetails
        """
        super().__init__(**kwargs)
        self.filterable_properties = filterable_properties
        self.customer_subscription_details = customer_subscription_details


class ProductFamily(_serialization.Model):
    """Product Family.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar product_lines: List of product lines supported in the product family.
    :vartype product_lines: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductLine]
    :ivar resource_provider_details: Contains details related to resource provider.
    :vartype resource_provider_details:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "product_lines": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "Description"},
        "image_information": {"key": "properties.imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "properties.costInformation", "type": "CostInformation"},
        "availability_information": {"key": "properties.availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "properties.hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "properties.fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "properties.filterableProperties", "type": "[FilterableProperty]"},
        "product_lines": {"key": "properties.productLines", "type": "[ProductLine]"},
        "resource_provider_details": {"key": "properties.resourceProviderDetails", "type": "[ResourceProviderDetails]"},
    }

    def __init__(
        self, *, resource_provider_details: Optional[List["_models.ResourceProviderDetails"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword resource_provider_details: Contains details related to resource provider.
        :paramtype resource_provider_details:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
        """
        super().__init__(**kwargs)
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None
        self.filterable_properties = None
        self.product_lines = None
        self.resource_provider_details = resource_provider_details


class ProductFamilyProperties(CommonProperties):
    """Properties of product family.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar product_lines: List of product lines supported in the product family.
    :vartype product_lines: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProductLine]
    :ivar resource_provider_details: Contains details related to resource provider.
    :vartype resource_provider_details:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "product_lines": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "Description"},
        "image_information": {"key": "imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "costInformation", "type": "CostInformation"},
        "availability_information": {"key": "availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "filterableProperties", "type": "[FilterableProperty]"},
        "product_lines": {"key": "productLines", "type": "[ProductLine]"},
        "resource_provider_details": {"key": "resourceProviderDetails", "type": "[ResourceProviderDetails]"},
    }

    def __init__(
        self, *, resource_provider_details: Optional[List["_models.ResourceProviderDetails"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword resource_provider_details: Contains details related to resource provider.
        :paramtype resource_provider_details:
         list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ResourceProviderDetails]
        """
        super().__init__(**kwargs)
        self.product_lines = None
        self.resource_provider_details = resource_provider_details


class ProductLine(_serialization.Model):
    """Product line.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar products: List of products in the product line.
    :vartype products: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Product]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "products": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "Description"},
        "image_information": {"key": "properties.imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "properties.costInformation", "type": "CostInformation"},
        "availability_information": {"key": "properties.availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "properties.hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "properties.fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "properties.filterableProperties", "type": "[FilterableProperty]"},
        "products": {"key": "properties.products", "type": "[Product]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.display_name = None
        self.description = None
        self.image_information = None
        self.cost_information = None
        self.availability_information = None
        self.hierarchy_information = None
        self.fulfilled_by = None
        self.filterable_properties = None
        self.products = None


class ProductLineProperties(CommonProperties):
    """Properties of product line.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar products: List of products in the product line.
    :vartype products: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Product]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "products": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "Description"},
        "image_information": {"key": "imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "costInformation", "type": "CostInformation"},
        "availability_information": {"key": "availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "filterableProperties", "type": "[FilterableProperty]"},
        "products": {"key": "products", "type": "[Product]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.products = None


class ProductProperties(CommonProperties):
    """Properties of product.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: Display Name for the product system.
    :vartype display_name: str
    :ivar description: Description related to the product system.
    :vartype description: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.Description
    :ivar image_information: Image information for the product system.
    :vartype image_information:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ImageInformation]
    :ivar cost_information: Cost information for the product system.
    :vartype cost_information: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CostInformation
    :ivar availability_information: Availability information of the product system.
    :vartype availability_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AvailabilityInformation
    :ivar hierarchy_information: Hierarchy information of a product.
    :vartype hierarchy_information:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.HierarchyInformation
    :ivar fulfilled_by: The entity responsible for fulfillment of the item at the given hierarchy
     level. Known values are: "Microsoft" and "External".
    :vartype fulfilled_by: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.FulfillmentType
    :ivar filterable_properties: List of filters supported for a product.
    :vartype filterable_properties:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.FilterableProperty]
    :ivar configurations: List of configurations for the product.
    :vartype configurations: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Configuration]
    """

    _validation = {
        "display_name": {"readonly": True},
        "description": {"readonly": True},
        "image_information": {"readonly": True},
        "cost_information": {"readonly": True},
        "availability_information": {"readonly": True},
        "hierarchy_information": {"readonly": True},
        "fulfilled_by": {"readonly": True},
        "filterable_properties": {"readonly": True},
        "configurations": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "Description"},
        "image_information": {"key": "imageInformation", "type": "[ImageInformation]"},
        "cost_information": {"key": "costInformation", "type": "CostInformation"},
        "availability_information": {"key": "availabilityInformation", "type": "AvailabilityInformation"},
        "hierarchy_information": {"key": "hierarchyInformation", "type": "HierarchyInformation"},
        "fulfilled_by": {"key": "fulfilledBy", "type": "str"},
        "filterable_properties": {"key": "filterableProperties", "type": "[FilterableProperty]"},
        "configurations": {"key": "configurations", "type": "[Configuration]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.configurations = None


class ProjectProperties(_serialization.Model):
    """Project properties.

    All required parameters must be populated in order to send to Azure.

    :ivar project_notes: Project name.
    :vartype project_notes: str
    :ivar preference_details: Preference details. Required.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectPropertiesPreferenceDetails
    """

    _validation = {
        "preference_details": {"required": True},
    }

    _attribute_map = {
        "project_notes": {"key": "projectNotes", "type": "str"},
        "preference_details": {"key": "preferenceDetails", "type": "ProjectPropertiesPreferenceDetails"},
    }

    def __init__(
        self,
        *,
        preference_details: "_models.ProjectPropertiesPreferenceDetails",
        project_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword project_notes: Project name.
        :paramtype project_notes: str
        :keyword preference_details: Preference details. Required.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectPropertiesPreferenceDetails
        """
        super().__init__(**kwargs)
        self.project_notes = project_notes
        self.preference_details = preference_details


class ProjectPropertiesPreferenceDetails(PreferenceDetails):  # pylint: disable=too-many-instance-attributes
    """Preference details.

    All required parameters must be populated in order to send to Azure.

    :ivar system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
    :vartype system_type: str
    :ivar cpu_family: Cpu Family, Currently Intel, AMD. Required.
    :vartype cpu_family: str
    :ivar is_two_node_solution: Is 2 node solution.
    :vartype is_two_node_solution: bool
    :ivar growth_percentage: Growth Percentage. Required.
    :vartype growth_percentage: int
    :ivar memory_expandability: If require memory expandability, it reserve DIMM slots for future
     growth (only fill half the DIMM slots in your solution. Required.
    :vartype memory_expandability: bool
    :ivar storage_expandability: If require storage expandability, reserve drive bays for future
     growth (leave half of the drives empty for future growth) . Required.
    :vartype storage_expandability: bool
    :ivar vendor_id: vendor id. Required.
    :vartype vendor_id: str
    :ivar storage_future_growth_bytes: Percentage needed to be reserved for future growth.
     Required.
    :vartype storage_future_growth_bytes: int
    :ivar resiliency_requirements: failure tolerate capabilities.
    :vartype resiliency_requirements:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
    :ivar storage_preference: Storage preferences.
    :vartype storage_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
    :ivar network_preference: Network Preferences.
    :vartype network_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
    :ivar workloads: Details of your on-premises workloads. This information will be used to
     understand and recommend a solution.
    :vartype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
    """

    _validation = {
        "system_type": {"required": True},
        "cpu_family": {"required": True},
        "growth_percentage": {"required": True},
        "memory_expandability": {"required": True},
        "storage_expandability": {"required": True},
        "vendor_id": {"required": True},
        "storage_future_growth_bytes": {"required": True},
    }

    _attribute_map = {
        "system_type": {"key": "systemType", "type": "str"},
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "is_two_node_solution": {"key": "isTwoNodeSolution", "type": "bool"},
        "growth_percentage": {"key": "growthPercentage", "type": "int"},
        "memory_expandability": {"key": "memoryExpandability", "type": "bool"},
        "storage_expandability": {"key": "storageExpandability", "type": "bool"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "storage_future_growth_bytes": {"key": "storageFutureGrowthBytes", "type": "int"},
        "resiliency_requirements": {"key": "resiliencyRequirements", "type": "PreferenceDetailsResiliencyRequirements"},
        "storage_preference": {"key": "storagePreference", "type": "PreferenceDetailsStoragePreference"},
        "network_preference": {"key": "networkPreference", "type": "PreferenceDetailsNetworkPreference"},
        "workloads": {"key": "workloads", "type": "[Workload]"},
    }

    def __init__(
        self,
        *,
        system_type: str,
        cpu_family: str,
        growth_percentage: int,
        memory_expandability: bool,
        storage_expandability: bool,
        vendor_id: str,
        storage_future_growth_bytes: int,
        is_two_node_solution: Optional[bool] = None,
        resiliency_requirements: Optional["_models.PreferenceDetailsResiliencyRequirements"] = None,
        storage_preference: Optional["_models.PreferenceDetailsStoragePreference"] = None,
        network_preference: Optional["_models.PreferenceDetailsNetworkPreference"] = None,
        workloads: Optional[List["_models.Workload"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
        :paramtype system_type: str
        :keyword cpu_family: Cpu Family, Currently Intel, AMD. Required.
        :paramtype cpu_family: str
        :keyword is_two_node_solution: Is 2 node solution.
        :paramtype is_two_node_solution: bool
        :keyword growth_percentage: Growth Percentage. Required.
        :paramtype growth_percentage: int
        :keyword memory_expandability: If require memory expandability, it reserve DIMM slots for
         future growth (only fill half the DIMM slots in your solution. Required.
        :paramtype memory_expandability: bool
        :keyword storage_expandability: If require storage expandability, reserve drive bays for future
         growth (leave half of the drives empty for future growth) . Required.
        :paramtype storage_expandability: bool
        :keyword vendor_id: vendor id. Required.
        :paramtype vendor_id: str
        :keyword storage_future_growth_bytes: Percentage needed to be reserved for future growth.
         Required.
        :paramtype storage_future_growth_bytes: int
        :keyword resiliency_requirements: failure tolerate capabilities.
        :paramtype resiliency_requirements:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
        :keyword storage_preference: Storage preferences.
        :paramtype storage_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
        :keyword network_preference: Network Preferences.
        :paramtype network_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
        :keyword workloads: Details of your on-premises workloads. This information will be used to
         understand and recommend a solution.
        :paramtype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
        """
        super().__init__(
            system_type=system_type,
            cpu_family=cpu_family,
            is_two_node_solution=is_two_node_solution,
            growth_percentage=growth_percentage,
            memory_expandability=memory_expandability,
            storage_expandability=storage_expandability,
            vendor_id=vendor_id,
            storage_future_growth_bytes=storage_future_growth_bytes,
            resiliency_requirements=resiliency_requirements,
            storage_preference=storage_preference,
            network_preference=network_preference,
            workloads=workloads,
            **kwargs
        )


class ProjectResource(_serialization.Model):
    """Specifies the properties for Project in HCI Catalog.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Name of the object.
    :vartype name: str
    :ivar id: Id of the object.
    :vartype id: str
    :ivar type: Type of the object.
    :vartype type: str
    :ivar system_data: Represents resource creation and update time.
    :vartype system_data: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SystemData
    :ivar project_notes: Project name.
    :vartype project_notes: str
    :ivar preference_details: Preference details. Required.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectPropertiesPreferenceDetails
    """

    _validation = {
        "name": {"readonly": True},
        "id": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "preference_details": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "project_notes": {"key": "properties.projectNotes", "type": "str"},
        "preference_details": {"key": "properties.preferenceDetails", "type": "ProjectPropertiesPreferenceDetails"},
    }

    def __init__(
        self,
        *,
        preference_details: "_models.ProjectPropertiesPreferenceDetails",
        project_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword project_notes: Project name.
        :paramtype project_notes: str
        :keyword preference_details: Preference details. Required.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectPropertiesPreferenceDetails
        """
        super().__init__(**kwargs)
        self.name = None
        self.id = None
        self.type = None
        self.system_data = None
        self.project_notes = project_notes
        self.preference_details = preference_details


class ProjectResourceList(_serialization.Model):
    """Project resource list.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of project resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectResource]
    :ivar next_link: Link for the next set of project resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ProjectResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of project resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class ProjectResourceProperties(ProjectProperties):
    """Project properties.

    All required parameters must be populated in order to send to Azure.

    :ivar project_notes: Project name.
    :vartype project_notes: str
    :ivar preference_details: Preference details. Required.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectPropertiesPreferenceDetails
    """

    _validation = {
        "preference_details": {"required": True},
    }

    _attribute_map = {
        "project_notes": {"key": "projectNotes", "type": "str"},
        "preference_details": {"key": "preferenceDetails", "type": "ProjectPropertiesPreferenceDetails"},
    }

    def __init__(
        self,
        *,
        preference_details: "_models.ProjectPropertiesPreferenceDetails",
        project_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword project_notes: Project name.
        :paramtype project_notes: str
        :keyword preference_details: Preference details. Required.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectPropertiesPreferenceDetails
        """
        super().__init__(project_notes=project_notes, preference_details=preference_details, **kwargs)


class ProjectUpdateParameter(_serialization.Model):
    """Updates project.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar system_data: Represents resource creation and update time.
    :vartype system_data: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SystemData
    :ivar project_notes: Project notes.
    :vartype project_notes: str
    :ivar preference_details: Preference details.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectUpdatePropertiesPreferenceDetails
    """

    _validation = {
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "system_data": {"key": "systemData", "type": "SystemData"},
        "project_notes": {"key": "properties.projectNotes", "type": "str"},
        "preference_details": {
            "key": "properties.preferenceDetails",
            "type": "ProjectUpdatePropertiesPreferenceDetails",
        },
    }

    def __init__(
        self,
        *,
        project_notes: Optional[str] = None,
        preference_details: Optional["_models.ProjectUpdatePropertiesPreferenceDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword project_notes: Project notes.
        :paramtype project_notes: str
        :keyword preference_details: Preference details.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectUpdatePropertiesPreferenceDetails
        """
        super().__init__(**kwargs)
        self.system_data = None
        self.project_notes = project_notes
        self.preference_details = preference_details


class ProjectUpdateProperties(_serialization.Model):
    """Project update properties.

    All required parameters must be populated in order to send to Azure.

    :ivar project_notes: Project notes.
    :vartype project_notes: str
    :ivar preference_details: Preference details. Required.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectUpdatePropertiesPreferenceDetails
    """

    _validation = {
        "preference_details": {"required": True},
    }

    _attribute_map = {
        "project_notes": {"key": "projectNotes", "type": "str"},
        "preference_details": {"key": "preferenceDetails", "type": "ProjectUpdatePropertiesPreferenceDetails"},
    }

    def __init__(
        self,
        *,
        preference_details: "_models.ProjectUpdatePropertiesPreferenceDetails",
        project_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword project_notes: Project notes.
        :paramtype project_notes: str
        :keyword preference_details: Preference details. Required.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectUpdatePropertiesPreferenceDetails
        """
        super().__init__(**kwargs)
        self.project_notes = project_notes
        self.preference_details = preference_details


class ProjectUpdateParameterProperties(ProjectUpdateProperties):
    """Project update properties.

    All required parameters must be populated in order to send to Azure.

    :ivar project_notes: Project notes.
    :vartype project_notes: str
    :ivar preference_details: Preference details. Required.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectUpdatePropertiesPreferenceDetails
    """

    _validation = {
        "preference_details": {"required": True},
    }

    _attribute_map = {
        "project_notes": {"key": "projectNotes", "type": "str"},
        "preference_details": {"key": "preferenceDetails", "type": "ProjectUpdatePropertiesPreferenceDetails"},
    }

    def __init__(
        self,
        *,
        preference_details: "_models.ProjectUpdatePropertiesPreferenceDetails",
        project_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword project_notes: Project notes.
        :paramtype project_notes: str
        :keyword preference_details: Preference details. Required.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ProjectUpdatePropertiesPreferenceDetails
        """
        super().__init__(project_notes=project_notes, preference_details=preference_details, **kwargs)


class ProjectUpdatePropertiesPreferenceDetails(PreferenceDetails):  # pylint: disable=too-many-instance-attributes
    """Preference details.

    All required parameters must be populated in order to send to Azure.

    :ivar system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
    :vartype system_type: str
    :ivar cpu_family: Cpu Family, Currently Intel, AMD. Required.
    :vartype cpu_family: str
    :ivar is_two_node_solution: Is 2 node solution.
    :vartype is_two_node_solution: bool
    :ivar growth_percentage: Growth Percentage. Required.
    :vartype growth_percentage: int
    :ivar memory_expandability: If require memory expandability, it reserve DIMM slots for future
     growth (only fill half the DIMM slots in your solution. Required.
    :vartype memory_expandability: bool
    :ivar storage_expandability: If require storage expandability, reserve drive bays for future
     growth (leave half of the drives empty for future growth) . Required.
    :vartype storage_expandability: bool
    :ivar vendor_id: vendor id. Required.
    :vartype vendor_id: str
    :ivar storage_future_growth_bytes: Percentage needed to be reserved for future growth.
     Required.
    :vartype storage_future_growth_bytes: int
    :ivar resiliency_requirements: failure tolerate capabilities.
    :vartype resiliency_requirements:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
    :ivar storage_preference: Storage preferences.
    :vartype storage_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
    :ivar network_preference: Network Preferences.
    :vartype network_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
    :ivar workloads: Details of your on-premises workloads. This information will be used to
     understand and recommend a solution.
    :vartype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
    """

    _validation = {
        "system_type": {"required": True},
        "cpu_family": {"required": True},
        "growth_percentage": {"required": True},
        "memory_expandability": {"required": True},
        "storage_expandability": {"required": True},
        "vendor_id": {"required": True},
        "storage_future_growth_bytes": {"required": True},
    }

    _attribute_map = {
        "system_type": {"key": "systemType", "type": "str"},
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "is_two_node_solution": {"key": "isTwoNodeSolution", "type": "bool"},
        "growth_percentage": {"key": "growthPercentage", "type": "int"},
        "memory_expandability": {"key": "memoryExpandability", "type": "bool"},
        "storage_expandability": {"key": "storageExpandability", "type": "bool"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "storage_future_growth_bytes": {"key": "storageFutureGrowthBytes", "type": "int"},
        "resiliency_requirements": {"key": "resiliencyRequirements", "type": "PreferenceDetailsResiliencyRequirements"},
        "storage_preference": {"key": "storagePreference", "type": "PreferenceDetailsStoragePreference"},
        "network_preference": {"key": "networkPreference", "type": "PreferenceDetailsNetworkPreference"},
        "workloads": {"key": "workloads", "type": "[Workload]"},
    }

    def __init__(
        self,
        *,
        system_type: str,
        cpu_family: str,
        growth_percentage: int,
        memory_expandability: bool,
        storage_expandability: bool,
        vendor_id: str,
        storage_future_growth_bytes: int,
        is_two_node_solution: Optional[bool] = None,
        resiliency_requirements: Optional["_models.PreferenceDetailsResiliencyRequirements"] = None,
        storage_preference: Optional["_models.PreferenceDetailsStoragePreference"] = None,
        network_preference: Optional["_models.PreferenceDetailsNetworkPreference"] = None,
        workloads: Optional[List["_models.Workload"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
        :paramtype system_type: str
        :keyword cpu_family: Cpu Family, Currently Intel, AMD. Required.
        :paramtype cpu_family: str
        :keyword is_two_node_solution: Is 2 node solution.
        :paramtype is_two_node_solution: bool
        :keyword growth_percentage: Growth Percentage. Required.
        :paramtype growth_percentage: int
        :keyword memory_expandability: If require memory expandability, it reserve DIMM slots for
         future growth (only fill half the DIMM slots in your solution. Required.
        :paramtype memory_expandability: bool
        :keyword storage_expandability: If require storage expandability, reserve drive bays for future
         growth (leave half of the drives empty for future growth) . Required.
        :paramtype storage_expandability: bool
        :keyword vendor_id: vendor id. Required.
        :paramtype vendor_id: str
        :keyword storage_future_growth_bytes: Percentage needed to be reserved for future growth.
         Required.
        :paramtype storage_future_growth_bytes: int
        :keyword resiliency_requirements: failure tolerate capabilities.
        :paramtype resiliency_requirements:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
        :keyword storage_preference: Storage preferences.
        :paramtype storage_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
        :keyword network_preference: Network Preferences.
        :paramtype network_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
        :keyword workloads: Details of your on-premises workloads. This information will be used to
         understand and recommend a solution.
        :paramtype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
        """
        super().__init__(
            system_type=system_type,
            cpu_family=cpu_family,
            is_two_node_solution=is_two_node_solution,
            growth_percentage=growth_percentage,
            memory_expandability=memory_expandability,
            storage_expandability=storage_expandability,
            vendor_id=vendor_id,
            storage_future_growth_bytes=storage_future_growth_bytes,
            resiliency_requirements=resiliency_requirements,
            storage_preference=storage_preference,
            network_preference=network_preference,
            workloads=workloads,
            **kwargs
        )


class PurchaseMeterDetails(MeterDetails):
    """Billing type Purchase meter details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar billing_type: Represents billing type. Required. Known values are: "Pav2" and "Purchase".
    :vartype billing_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.BillingType
    :ivar multiplier: Billing unit applicable for Pav2 billing.
    :vartype multiplier: float
    :ivar charging_type: Charging type. Known values are: "PerOrder" and "PerDevice".
    :vartype charging_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ChargingType
    :ivar product_id: Product Id.
    :vartype product_id: str
    :ivar sku_id: Sku Id.
    :vartype sku_id: str
    :ivar term_id: Term Id.
    :vartype term_id: str
    """

    _validation = {
        "billing_type": {"required": True},
        "multiplier": {"readonly": True},
        "charging_type": {"readonly": True},
        "product_id": {"readonly": True},
        "sku_id": {"readonly": True},
        "term_id": {"readonly": True},
    }

    _attribute_map = {
        "billing_type": {"key": "billingType", "type": "str"},
        "multiplier": {"key": "multiplier", "type": "float"},
        "charging_type": {"key": "chargingType", "type": "str"},
        "product_id": {"key": "productId", "type": "str"},
        "sku_id": {"key": "skuId", "type": "str"},
        "term_id": {"key": "termId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.billing_type: str = "Purchase"
        self.product_id = None
        self.sku_id = None
        self.term_id = None


class RecommendedSolution(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Recommended Solution.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar platform_id: Platform id. Required.
    :vartype platform_id: str
    :ivar vendor_id: Vendor id. Required.
    :vartype vendor_id: str
    :ivar platform_properties: Platform properties.
    :vartype platform_properties:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionPlatformProperties
    :ivar vendor_properties: Vendor properties.
    :vartype vendor_properties:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionVendorProperties
    :ivar solution_configuration_id: Solution configuration id.
    :vartype solution_configuration_id: int
    :ivar number_of_nodes: Number of nodes.
    :vartype number_of_nodes: int
    :ivar core_count: Core count.
    :vartype core_count: int
    :ivar cores_per_node: Cores per node.
    :vartype cores_per_node: int
    :ivar cpu_family: Cpu family.
    :vartype cpu_family: str
    :ivar sockets_filled: Sockets filled.
    :vartype sockets_filled: int
    :ivar cores_per_socket: Cores per socket.
    :vartype cores_per_socket: int
    :ivar memory_slots: Memory slots.
    :vartype memory_slots: int
    :ivar memory_per_slot: Memory per slot.
    :vartype memory_per_slot: int
    :ivar memory_per_node: Memory per node.
    :vartype memory_per_node: int
    :ivar capacity_storage_drives: Capacity storage drives.
    :vartype capacity_storage_drives: int
    :ivar capacity_storage: Capacity storage.
    :vartype capacity_storage: int
    :ivar capacity_storage_per_drive: Capacity storage per drive.
    :vartype capacity_storage_per_drive: int
    :ivar capacity_storage_per_node: Capacity storage per node.
    :vartype capacity_storage_per_node: int
    :ivar capacity_storage_type: Capacity storage type.
    :vartype capacity_storage_type: str
    :ivar cache_storage_drives: Cache storage drives.
    :vartype cache_storage_drives: int
    :ivar cache_storage: Cache storage.
    :vartype cache_storage: int
    :ivar cache_storage_per_drive: Cache storage per drive.
    :vartype cache_storage_per_drive: int
    :ivar cache_storage_per_node: Cache storage per node.
    :vartype cache_storage_per_node: int
    :ivar cache_storage_type: Cache storage type.
    :vartype cache_storage_type: str
    :ivar cpu_breakdown: Cpu breakdown. Required.
    :vartype cpu_breakdown:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionCpuBreakdown
    :ivar memory_breakdown: Memory breakdown. Required.
    :vartype memory_breakdown:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionMemoryBreakdown
    :ivar storage_breakdown: Storage breakdown. Required.
    :vartype storage_breakdown:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionStorageBreakdown
    """

    _validation = {
        "platform_id": {"required": True},
        "vendor_id": {"required": True},
        "platform_properties": {"readonly": True},
        "vendor_properties": {"readonly": True},
        "solution_configuration_id": {"readonly": True},
        "number_of_nodes": {"readonly": True},
        "core_count": {"readonly": True},
        "cores_per_node": {"readonly": True},
        "cpu_family": {"readonly": True},
        "sockets_filled": {"readonly": True},
        "cores_per_socket": {"readonly": True},
        "memory_slots": {"readonly": True},
        "memory_per_slot": {"readonly": True},
        "memory_per_node": {"readonly": True},
        "capacity_storage_drives": {"readonly": True},
        "capacity_storage": {"readonly": True},
        "capacity_storage_per_drive": {"readonly": True},
        "capacity_storage_per_node": {"readonly": True},
        "capacity_storage_type": {"readonly": True},
        "cache_storage_drives": {"readonly": True},
        "cache_storage": {"readonly": True},
        "cache_storage_per_drive": {"readonly": True},
        "cache_storage_per_node": {"readonly": True},
        "cache_storage_type": {"readonly": True},
        "cpu_breakdown": {"required": True},
        "memory_breakdown": {"required": True},
        "storage_breakdown": {"required": True},
    }

    _attribute_map = {
        "platform_id": {"key": "platformId", "type": "str"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "platform_properties": {"key": "platformProperties", "type": "RecommendedSolutionPlatformProperties"},
        "vendor_properties": {"key": "vendorProperties", "type": "RecommendedSolutionVendorProperties"},
        "solution_configuration_id": {"key": "solutionConfigurationId", "type": "int"},
        "number_of_nodes": {"key": "numberOfNodes", "type": "int"},
        "core_count": {"key": "coreCount", "type": "int"},
        "cores_per_node": {"key": "coresPerNode", "type": "int"},
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "sockets_filled": {"key": "socketsFilled", "type": "int"},
        "cores_per_socket": {"key": "coresPerSocket", "type": "int"},
        "memory_slots": {"key": "memorySlots", "type": "int"},
        "memory_per_slot": {"key": "memoryPerSlot", "type": "int"},
        "memory_per_node": {"key": "memoryPerNode", "type": "int"},
        "capacity_storage_drives": {"key": "capacityStorageDrives", "type": "int"},
        "capacity_storage": {"key": "capacityStorage", "type": "int"},
        "capacity_storage_per_drive": {"key": "capacityStoragePerDrive", "type": "int"},
        "capacity_storage_per_node": {"key": "capacityStoragePerNode", "type": "int"},
        "capacity_storage_type": {"key": "capacityStorageType", "type": "str"},
        "cache_storage_drives": {"key": "cacheStorageDrives", "type": "int"},
        "cache_storage": {"key": "cacheStorage", "type": "int"},
        "cache_storage_per_drive": {"key": "cacheStoragePerDrive", "type": "int"},
        "cache_storage_per_node": {"key": "cacheStoragePerNode", "type": "int"},
        "cache_storage_type": {"key": "cacheStorageType", "type": "str"},
        "cpu_breakdown": {"key": "cpuBreakdown", "type": "RecommendedSolutionCpuBreakdown"},
        "memory_breakdown": {"key": "memoryBreakdown", "type": "RecommendedSolutionMemoryBreakdown"},
        "storage_breakdown": {"key": "storageBreakdown", "type": "RecommendedSolutionStorageBreakdown"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        platform_id: str,
        vendor_id: str,
        cpu_breakdown: "_models.RecommendedSolutionCpuBreakdown",
        memory_breakdown: "_models.RecommendedSolutionMemoryBreakdown",
        storage_breakdown: "_models.RecommendedSolutionStorageBreakdown",
        **kwargs: Any
    ) -> None:
        """
        :keyword platform_id: Platform id. Required.
        :paramtype platform_id: str
        :keyword vendor_id: Vendor id. Required.
        :paramtype vendor_id: str
        :keyword cpu_breakdown: Cpu breakdown. Required.
        :paramtype cpu_breakdown:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionCpuBreakdown
        :keyword memory_breakdown: Memory breakdown. Required.
        :paramtype memory_breakdown:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionMemoryBreakdown
        :keyword storage_breakdown: Storage breakdown. Required.
        :paramtype storage_breakdown:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.RecommendedSolutionStorageBreakdown
        """
        super().__init__(**kwargs)
        self.platform_id = platform_id
        self.vendor_id = vendor_id
        self.platform_properties = None
        self.vendor_properties = None
        self.solution_configuration_id = None
        self.number_of_nodes = None
        self.core_count = None
        self.cores_per_node = None
        self.cpu_family = None
        self.sockets_filled = None
        self.cores_per_socket = None
        self.memory_slots = None
        self.memory_per_slot = None
        self.memory_per_node = None
        self.capacity_storage_drives = None
        self.capacity_storage = None
        self.capacity_storage_per_drive = None
        self.capacity_storage_per_node = None
        self.capacity_storage_type = None
        self.cache_storage_drives = None
        self.cache_storage = None
        self.cache_storage_per_drive = None
        self.cache_storage_per_node = None
        self.cache_storage_type = None
        self.cpu_breakdown = cpu_breakdown
        self.memory_breakdown = memory_breakdown
        self.storage_breakdown = storage_breakdown


class RecommendedSolutionCpuBreakdown(CPUBreakdown):
    """Cpu breakdown.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar used: (Number of VMs x vCPU per VM) / ratio of virtual to physical cores.
    :vartype used: int
    :ivar future_growth: Cores reserved for future growth.
    :vartype future_growth: int
    :ivar high_availability: Hosts reserved for emergency scenarios (e.g. maintenance, one node is
     down etc).
    :vartype high_availability: int
    :ivar total: The total CPU needed to run your workloads.
    :vartype total: int
    :ivar leftover: Cores left on the hardware. This is total - (Used + Future Growth+ High
     availability).
    :vartype leftover: int
    :ivar availability: Host reserved for emergency scenarios.
    :vartype availability: str
    :ivar availability_total: Total host reserved for emergency scenarios.
    :vartype availability_total: int
    """

    _validation = {
        "used": {"readonly": True},
        "future_growth": {"readonly": True},
        "high_availability": {"readonly": True},
        "total": {"readonly": True},
        "leftover": {"readonly": True},
        "availability": {"readonly": True},
        "availability_total": {"readonly": True},
    }

    _attribute_map = {
        "used": {"key": "used", "type": "int"},
        "future_growth": {"key": "futureGrowth", "type": "int"},
        "high_availability": {"key": "highAvailability", "type": "int"},
        "total": {"key": "total", "type": "int"},
        "leftover": {"key": "leftover", "type": "int"},
        "availability": {"key": "availability", "type": "str"},
        "availability_total": {"key": "availabilityTotal", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class RecommendedSolutionMemoryBreakdown(MemoryBreakdown):
    """Memory breakdown.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar csv_sbl: This is memory taken by csv(In-memory cache) and SBL cache.
    :vartype csv_sbl: int
    :ivar hyper_v: Hyper V(4% system overhead is taken by Hyper-V.
    :vartype hyper_v: int
    :ivar workloads: Number of VM * memory per VM.
    :vartype workloads: int
    :ivar future_growth: Future growth.
    :vartype future_growth: int
    :ivar leftover: Left over.
    :vartype leftover: int
    :ivar high_availability: Hosts reserved for emergency scenarios (e.g. maintenance, one node is
     down etc).
    :vartype high_availability: int
    :ivar total: The total memory needed to run your workloads.
    :vartype total: int
    :ivar availability: Host reserved for emergency scenarios.
    :vartype availability: str
    :ivar availability_total: Total host reserved for emergency scenarios.
    :vartype availability_total: int
    """

    _validation = {
        "csv_sbl": {"readonly": True},
        "hyper_v": {"readonly": True},
        "workloads": {"readonly": True},
        "future_growth": {"readonly": True},
        "leftover": {"readonly": True},
        "high_availability": {"readonly": True},
        "total": {"readonly": True},
        "availability": {"readonly": True},
        "availability_total": {"readonly": True},
    }

    _attribute_map = {
        "csv_sbl": {"key": "csvSbl", "type": "int"},
        "hyper_v": {"key": "hyperV", "type": "int"},
        "workloads": {"key": "workloads", "type": "int"},
        "future_growth": {"key": "futureGrowth", "type": "int"},
        "leftover": {"key": "leftover", "type": "int"},
        "high_availability": {"key": "highAvailability", "type": "int"},
        "total": {"key": "total", "type": "int"},
        "availability": {"key": "availability", "type": "str"},
        "availability_total": {"key": "availabilityTotal", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class RecommendedSolutionPlatformProperties(PlatformProperties):  # pylint: disable=too-many-instance-attributes
    """Platform properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar platform_id: Unique Id representing the platform. Required.
    :vartype platform_id: str
    :ivar platform_name: Platform name. Required.
    :vartype platform_name: str
    :ivar vendor_id: Vendor Id. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Vendor name. Required.
    :vartype vendor_name: str
    :ivar is_archived: Flag to indicate if the platform is archived. Required.
    :vartype is_archived: bool
    :ivar server_description: Server description.
    :vartype server_description: str
    :ivar system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
     Premium, etc. Required.
    :vartype system_type: str
    :ivar form_factor: Form factor.
    :vartype form_factor: str
    :ivar rack_units: Number of rack units.
    :vartype rack_units: int
    :ivar minimum_scale: Minimum scale.
    :vartype minimum_scale: int
    :ivar maximum_scale: Maximum scale.
    :vartype maximum_scale: int
    :ivar is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
    :vartype is_p_memory_supported: bool
    :ivar regions: List of availability regions.
    :vartype regions: list[str]
    :ivar technical_use_cases: List of technical use-cases.
    :vartype technical_use_cases: list[str]
    :ivar image_details: Image details.
    :vartype image_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesImageDetails
    :ivar last_tested_version: Last tested version.
    :vartype last_tested_version: str
    :ivar website_url: Website Url. Required.
    :vartype website_url: str
    :ivar smbios_details: SMBIOS details.
    :vartype smbios_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSmbiosDetails
    :ivar windows_admin_center_details: Windows Admin Center (WAC) details.
    :vartype windows_admin_center_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesWindowsAdminCenterDetails
    :ivar lifecycle_stage: Lifecycle stage.
    :vartype lifecycle_stage: int
    :ivar unsupported_date: Unsupported date.
    :vartype unsupported_date: str
    :ivar alternate_solution_details: Alternate solution details.
    :vartype alternate_solution_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesAlternateSolutionDetails
    :ivar cpu_family: CPU Family.
    :vartype cpu_family: str
    :ivar cpu_model: CPU model.
    :vartype cpu_model: str
    :ivar is_gpu_supported: Flag to indicate if the platform supports GPU.
    :vartype is_gpu_supported: bool
    :ivar sdn_nic_details: SDN NIC details.
    :vartype sdn_nic_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesSdnNicDetails
    :ivar features_supported: List of supported features.
    :vartype features_supported: list[str]
    :ivar h_waa_s_details: Hardware as a Service details.
    :vartype h_waa_s_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformPropertiesHWaaSDetails
    :ivar storage_drives: List of storage drive types.
    :vartype storage_drives: list[str]
    :ivar gpu_mfg_models: List of GPU mfg models.
    :vartype gpu_mfg_models: list[str]
    :ivar configurations: List of configurations.
    :vartype configurations:
     list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.PlatformConfigurationProperties]
    """

    _validation = {
        "platform_id": {"required": True},
        "platform_name": {"required": True},
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "is_archived": {"required": True},
        "server_description": {"readonly": True},
        "system_type": {"required": True},
        "form_factor": {"readonly": True},
        "rack_units": {"readonly": True},
        "minimum_scale": {"readonly": True},
        "maximum_scale": {"readonly": True},
        "is_p_memory_supported": {"required": True},
        "regions": {"readonly": True},
        "technical_use_cases": {"readonly": True},
        "image_details": {"readonly": True},
        "last_tested_version": {"readonly": True},
        "website_url": {"required": True},
        "smbios_details": {"readonly": True},
        "windows_admin_center_details": {"readonly": True},
        "lifecycle_stage": {"readonly": True},
        "unsupported_date": {"readonly": True},
        "alternate_solution_details": {"readonly": True},
        "cpu_family": {"readonly": True},
        "cpu_model": {"readonly": True},
        "is_gpu_supported": {"readonly": True},
        "sdn_nic_details": {"readonly": True},
        "features_supported": {"readonly": True},
        "h_waa_s_details": {"readonly": True},
        "storage_drives": {"readonly": True},
        "gpu_mfg_models": {"readonly": True},
        "configurations": {"readonly": True},
    }

    _attribute_map = {
        "platform_id": {"key": "platformId", "type": "str"},
        "platform_name": {"key": "platformName", "type": "str"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "is_archived": {"key": "isArchived", "type": "bool"},
        "server_description": {"key": "serverDescription", "type": "str"},
        "system_type": {"key": "systemType", "type": "str"},
        "form_factor": {"key": "formFactor", "type": "str"},
        "rack_units": {"key": "rackUnits", "type": "int"},
        "minimum_scale": {"key": "minimumScale", "type": "int"},
        "maximum_scale": {"key": "maximumScale", "type": "int"},
        "is_p_memory_supported": {"key": "isPMemorySupported", "type": "bool"},
        "regions": {"key": "regions", "type": "[str]"},
        "technical_use_cases": {"key": "technicalUseCases", "type": "[str]"},
        "image_details": {"key": "imageDetails", "type": "PlatformPropertiesImageDetails"},
        "last_tested_version": {"key": "lastTestedVersion", "type": "str"},
        "website_url": {"key": "websiteUrl", "type": "str"},
        "smbios_details": {"key": "smbiosDetails", "type": "PlatformPropertiesSmbiosDetails"},
        "windows_admin_center_details": {
            "key": "windowsAdminCenterDetails",
            "type": "PlatformPropertiesWindowsAdminCenterDetails",
        },
        "lifecycle_stage": {"key": "lifecycleStage", "type": "int"},
        "unsupported_date": {"key": "unsupportedDate", "type": "str"},
        "alternate_solution_details": {
            "key": "alternateSolutionDetails",
            "type": "PlatformPropertiesAlternateSolutionDetails",
        },
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "cpu_model": {"key": "cpuModel", "type": "str"},
        "is_gpu_supported": {"key": "isGpuSupported", "type": "bool"},
        "sdn_nic_details": {"key": "sdnNicDetails", "type": "PlatformPropertiesSdnNicDetails"},
        "features_supported": {"key": "featuresSupported", "type": "[str]"},
        "h_waa_s_details": {"key": "hWaaSDetails", "type": "PlatformPropertiesHWaaSDetails"},
        "storage_drives": {"key": "storageDrives", "type": "[str]"},
        "gpu_mfg_models": {"key": "gpuMfgModels", "type": "[str]"},
        "configurations": {"key": "configurations", "type": "[PlatformConfigurationProperties]"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        platform_id: str,
        platform_name: str,
        vendor_id: str,
        vendor_name: str,
        is_archived: bool,
        system_type: str,
        is_p_memory_supported: bool,
        website_url: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword platform_id: Unique Id representing the platform. Required.
        :paramtype platform_id: str
        :keyword platform_name: Platform name. Required.
        :paramtype platform_name: str
        :keyword vendor_id: Vendor Id. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Vendor name. Required.
        :paramtype vendor_name: str
        :keyword is_archived: Flag to indicate if the platform is archived. Required.
        :paramtype is_archived: bool
        :keyword system_type: Identifies system configuration, can be integratedSystem, ValidatedNode,
         Premium, etc. Required.
        :paramtype system_type: str
        :keyword is_p_memory_supported: Flag to indicate if the platform supports P-Memory. Required.
        :paramtype is_p_memory_supported: bool
        :keyword website_url: Website Url. Required.
        :paramtype website_url: str
        """
        super().__init__(
            platform_id=platform_id,
            platform_name=platform_name,
            vendor_id=vendor_id,
            vendor_name=vendor_name,
            is_archived=is_archived,
            system_type=system_type,
            is_p_memory_supported=is_p_memory_supported,
            website_url=website_url,
            **kwargs
        )


class StorageBreakdown(_serialization.Model):
    """Storage breakdown.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar used: This is based on user input, storage per VM * total VM.
    :vartype used: int
    :ivar resiliency: This is the storage taken up by resiliency.
     The resiliency types are mirror, mirror accelerated parity and nested mirror.
     Resiliency type is decided by your inputs (optimizing for storage or performance) and your
     chosen number of storage failures to tolerate.
    :vartype resiliency: int
    :ivar future_growth: Future growth.
    :vartype future_growth: int
    :ivar leftover: Left over.
    :vartype leftover: int
    :ivar total: The total storage needed to run your workloads.
    :vartype total: int
    :ivar reserve: 1 capacity drive per node is taken by reserve.
    :vartype reserve: int
    :ivar reserve_total: Reserve total.
    :vartype reserve_total: int
    """

    _validation = {
        "used": {"readonly": True},
        "resiliency": {"readonly": True},
        "future_growth": {"readonly": True},
        "leftover": {"readonly": True},
        "total": {"readonly": True},
        "reserve": {"readonly": True},
        "reserve_total": {"readonly": True},
    }

    _attribute_map = {
        "used": {"key": "used", "type": "int"},
        "resiliency": {"key": "resiliency", "type": "int"},
        "future_growth": {"key": "futureGrowth", "type": "int"},
        "leftover": {"key": "leftover", "type": "int"},
        "total": {"key": "total", "type": "int"},
        "reserve": {"key": "reserve", "type": "int"},
        "reserve_total": {"key": "reserveTotal", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.used = None
        self.resiliency = None
        self.future_growth = None
        self.leftover = None
        self.total = None
        self.reserve = None
        self.reserve_total = None


class RecommendedSolutionStorageBreakdown(StorageBreakdown):
    """Storage breakdown.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar used: This is based on user input, storage per VM * total VM.
    :vartype used: int
    :ivar resiliency: This is the storage taken up by resiliency.
     The resiliency types are mirror, mirror accelerated parity and nested mirror.
     Resiliency type is decided by your inputs (optimizing for storage or performance) and your
     chosen number of storage failures to tolerate.
    :vartype resiliency: int
    :ivar future_growth: Future growth.
    :vartype future_growth: int
    :ivar leftover: Left over.
    :vartype leftover: int
    :ivar total: The total storage needed to run your workloads.
    :vartype total: int
    :ivar reserve: 1 capacity drive per node is taken by reserve.
    :vartype reserve: int
    :ivar reserve_total: Reserve total.
    :vartype reserve_total: int
    """

    _validation = {
        "used": {"readonly": True},
        "resiliency": {"readonly": True},
        "future_growth": {"readonly": True},
        "leftover": {"readonly": True},
        "total": {"readonly": True},
        "reserve": {"readonly": True},
        "reserve_total": {"readonly": True},
    }

    _attribute_map = {
        "used": {"key": "used", "type": "int"},
        "resiliency": {"key": "resiliency", "type": "int"},
        "future_growth": {"key": "futureGrowth", "type": "int"},
        "leftover": {"key": "leftover", "type": "int"},
        "total": {"key": "total", "type": "int"},
        "reserve": {"key": "reserve", "type": "int"},
        "reserve_total": {"key": "reserveTotal", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class VendorProperties(_serialization.Model):
    """Represents Vendor details.

    All required parameters must be populated in order to send to Azure.

    :ivar vendor_id: Unique Id representing the vendor. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Name of the vendor. Required.
    :vartype vendor_name: str
    :ivar company_logo_uri: Company logo Uri of the vendor. Required.
    :vartype company_logo_uri: str
    """

    _validation = {
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "company_logo_uri": {"required": True},
    }

    _attribute_map = {
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "company_logo_uri": {"key": "companyLogoUri", "type": "str"},
    }

    def __init__(self, *, vendor_id: str, vendor_name: str, company_logo_uri: str, **kwargs: Any) -> None:
        """
        :keyword vendor_id: Unique Id representing the vendor. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Name of the vendor. Required.
        :paramtype vendor_name: str
        :keyword company_logo_uri: Company logo Uri of the vendor. Required.
        :paramtype company_logo_uri: str
        """
        super().__init__(**kwargs)
        self.vendor_id = vendor_id
        self.vendor_name = vendor_name
        self.company_logo_uri = company_logo_uri


class RecommendedSolutionVendorProperties(VendorProperties):
    """Vendor properties.

    All required parameters must be populated in order to send to Azure.

    :ivar vendor_id: Unique Id representing the vendor. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Name of the vendor. Required.
    :vartype vendor_name: str
    :ivar company_logo_uri: Company logo Uri of the vendor. Required.
    :vartype company_logo_uri: str
    """

    _validation = {
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "company_logo_uri": {"required": True},
    }

    _attribute_map = {
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "company_logo_uri": {"key": "companyLogoUri", "type": "str"},
    }

    def __init__(self, *, vendor_id: str, vendor_name: str, company_logo_uri: str, **kwargs: Any) -> None:
        """
        :keyword vendor_id: Unique Id representing the vendor. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Name of the vendor. Required.
        :paramtype vendor_name: str
        :keyword company_logo_uri: Company logo Uri of the vendor. Required.
        :paramtype company_logo_uri: str
        """
        super().__init__(vendor_id=vendor_id, vendor_name=vendor_name, company_logo_uri=company_logo_uri, **kwargs)


class ResourceIdentity(_serialization.Model):
    """Msi identity details of the resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: Identity type.
    :vartype type: str
    :ivar principal_id: Service Principal Id backing the Msi.
    :vartype principal_id: str
    :ivar tenant_id: Home Tenant Id.
    :vartype tenant_id: str
    :ivar user_assigned_identities: User Assigned Identities.
    :vartype user_assigned_identities: dict[str,
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.UserAssignedIdentity]
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "user_assigned_identities": {"key": "userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(
        self,
        *,
        type: str = "None",
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Identity type.
        :paramtype type: str
        :keyword user_assigned_identities: User Assigned Identities.
        :paramtype user_assigned_identities: dict[str,
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.UserAssignedIdentity]
        """
        super().__init__(**kwargs)
        self.type = type
        self.principal_id = None
        self.tenant_id = None
        self.user_assigned_identities = user_assigned_identities


class ResourceMoveRequest(_serialization.Model):
    """ResourceMoveRequest.

    :ivar target_resource_group:
    :vartype target_resource_group: str
    :ivar resources:
    :vartype resources: list[str]
    """

    _attribute_map = {
        "target_resource_group": {"key": "targetResourceGroup", "type": "str"},
        "resources": {"key": "resources", "type": "[str]"},
    }

    def __init__(
        self, *, target_resource_group: Optional[str] = None, resources: Optional[List[str]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword target_resource_group:
        :paramtype target_resource_group: str
        :keyword resources:
        :paramtype resources: list[str]
        """
        super().__init__(**kwargs)
        self.target_resource_group = target_resource_group
        self.resources = resources


class ResourceProviderDetails(_serialization.Model):
    """Management RP details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar resource_provider_namespace: Resource provider namespace.
    :vartype resource_provider_namespace: str
    """

    _validation = {
        "resource_provider_namespace": {"readonly": True},
    }

    _attribute_map = {
        "resource_provider_namespace": {"key": "resourceProviderNamespace", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.resource_provider_namespace = None


class ReturnOrderItemDetails(_serialization.Model):
    """Return order item request body.

    All required parameters must be populated in order to send to Azure.

    :ivar return_address: Customer return address.
    :vartype return_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
    :ivar return_reason: Return Reason. Required.
    :vartype return_reason: str
    :ivar service_tag: Service tag (located on the bottom-right corner of the device).
    :vartype service_tag: str
    :ivar shipping_box_required: Shipping Box required.
    :vartype shipping_box_required: bool
    """

    _validation = {
        "return_reason": {"required": True},
    }

    _attribute_map = {
        "return_address": {"key": "returnAddress", "type": "AddressProperties"},
        "return_reason": {"key": "returnReason", "type": "str"},
        "service_tag": {"key": "serviceTag", "type": "str"},
        "shipping_box_required": {"key": "shippingBoxRequired", "type": "bool"},
    }

    def __init__(
        self,
        *,
        return_reason: str,
        return_address: Optional["_models.AddressProperties"] = None,
        service_tag: Optional[str] = None,
        shipping_box_required: bool = False,
        **kwargs: Any
    ) -> None:
        """
        :keyword return_address: Customer return address.
        :paramtype return_address: ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressProperties
        :keyword return_reason: Return Reason. Required.
        :paramtype return_reason: str
        :keyword service_tag: Service tag (located on the bottom-right corner of the device).
        :paramtype service_tag: str
        :keyword shipping_box_required: Shipping Box required.
        :paramtype shipping_box_required: bool
        """
        super().__init__(**kwargs)
        self.return_address = return_address
        self.return_reason = return_reason
        self.service_tag = service_tag
        self.shipping_box_required = shipping_box_required


class ReverseShippingDetails(_serialization.Model):
    """Reverse shipment details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar sas_key_for_label: SAS key to download the reverse shipment label of the package.
    :vartype sas_key_for_label: str
    :ivar carrier_name: Name of the carrier.
    :vartype carrier_name: str
    :ivar carrier_display_name: Carrier Name for display purpose. Not to be used for any
     processing.
    :vartype carrier_display_name: str
    :ivar tracking_id: TrackingId of the package.
    :vartype tracking_id: str
    :ivar tracking_url: TrackingUrl of the package.
    :vartype tracking_url: str
    """

    _validation = {
        "sas_key_for_label": {"readonly": True},
        "carrier_name": {"readonly": True},
        "carrier_display_name": {"readonly": True},
        "tracking_id": {"readonly": True},
        "tracking_url": {"readonly": True},
    }

    _attribute_map = {
        "sas_key_for_label": {"key": "sasKeyForLabel", "type": "str"},
        "carrier_name": {"key": "carrierName", "type": "str"},
        "carrier_display_name": {"key": "carrierDisplayName", "type": "str"},
        "tracking_id": {"key": "trackingId", "type": "str"},
        "tracking_url": {"key": "trackingUrl", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.sas_key_for_label = None
        self.carrier_name = None
        self.carrier_display_name = None
        self.tracking_id = None
        self.tracking_url = None


class SearchFilter(_serialization.Model):
    """Search filter details.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Name of the filter. Required.
    :vartype name: str
    :ivar values: List of filter values. Required.
    :vartype values: list[str]
    """

    _validation = {
        "name": {"required": True, "min_length": 1},
        "values": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "values": {"key": "values", "type": "[str]"},
    }

    def __init__(self, *, name: str, values: List[str], **kwargs: Any) -> None:
        """
        :keyword name: Name of the filter. Required.
        :paramtype name: str
        :keyword values: List of filter values. Required.
        :paramtype values: list[str]
        """
        super().__init__(**kwargs)
        self.name = name
        self.values = values


class ShippingAddress(_serialization.Model):
    """Shipping address where customer wishes to receive the device.

    All required parameters must be populated in order to send to Azure.

    :ivar street_address1: Street Address line 1. Required.
    :vartype street_address1: str
    :ivar street_address2: Street Address line 2.
    :vartype street_address2: str
    :ivar street_address3: Street Address line 3.
    :vartype street_address3: str
    :ivar city: Name of the City.
    :vartype city: str
    :ivar state_or_province: Name of the State or Province.
    :vartype state_or_province: str
    :ivar country: Name of the Country. Required.
    :vartype country: str
    :ivar postal_code: Postal code.
    :vartype postal_code: str
    :ivar zip_extended_code: Extended Zip Code.
    :vartype zip_extended_code: str
    :ivar company_name: Name of the company.
    :vartype company_name: str
    :ivar address_type: Type of address. Known values are: "None", "Residential", and "Commercial".
    :vartype address_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressType
    """

    _validation = {
        "street_address1": {"required": True},
        "country": {"required": True},
    }

    _attribute_map = {
        "street_address1": {"key": "streetAddress1", "type": "str"},
        "street_address2": {"key": "streetAddress2", "type": "str"},
        "street_address3": {"key": "streetAddress3", "type": "str"},
        "city": {"key": "city", "type": "str"},
        "state_or_province": {"key": "stateOrProvince", "type": "str"},
        "country": {"key": "country", "type": "str"},
        "postal_code": {"key": "postalCode", "type": "str"},
        "zip_extended_code": {"key": "zipExtendedCode", "type": "str"},
        "company_name": {"key": "companyName", "type": "str"},
        "address_type": {"key": "addressType", "type": "str"},
    }

    def __init__(
        self,
        *,
        street_address1: str,
        country: str,
        street_address2: Optional[str] = None,
        street_address3: Optional[str] = None,
        city: Optional[str] = None,
        state_or_province: Optional[str] = None,
        postal_code: Optional[str] = None,
        zip_extended_code: Optional[str] = None,
        company_name: Optional[str] = None,
        address_type: Optional[Union[str, "_models.AddressType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword street_address1: Street Address line 1. Required.
        :paramtype street_address1: str
        :keyword street_address2: Street Address line 2.
        :paramtype street_address2: str
        :keyword street_address3: Street Address line 3.
        :paramtype street_address3: str
        :keyword city: Name of the City.
        :paramtype city: str
        :keyword state_or_province: Name of the State or Province.
        :paramtype state_or_province: str
        :keyword country: Name of the Country. Required.
        :paramtype country: str
        :keyword postal_code: Postal code.
        :paramtype postal_code: str
        :keyword zip_extended_code: Extended Zip Code.
        :paramtype zip_extended_code: str
        :keyword company_name: Name of the company.
        :paramtype company_name: str
        :keyword address_type: Type of address. Known values are: "None", "Residential", and
         "Commercial".
        :paramtype address_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.AddressType
        """
        super().__init__(**kwargs)
        self.street_address1 = street_address1
        self.street_address2 = street_address2
        self.street_address3 = street_address3
        self.city = city
        self.state_or_province = state_or_province
        self.country = country
        self.postal_code = postal_code
        self.zip_extended_code = zip_extended_code
        self.company_name = company_name
        self.address_type = address_type


class SolutionRecommendationRequest(_serialization.Model):
    """Solution recommendation request.

    All required parameters must be populated in order to send to Azure.

    :ivar preference_details: Preference details. Required.
    :vartype preference_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SolutionRecommendationRequestPreferenceDetails
    """

    _validation = {
        "preference_details": {"required": True},
    }

    _attribute_map = {
        "preference_details": {"key": "preferenceDetails", "type": "SolutionRecommendationRequestPreferenceDetails"},
    }

    def __init__(
        self, *, preference_details: "_models.SolutionRecommendationRequestPreferenceDetails", **kwargs: Any
    ) -> None:
        """
        :keyword preference_details: Preference details. Required.
        :paramtype preference_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.SolutionRecommendationRequestPreferenceDetails
        """
        super().__init__(**kwargs)
        self.preference_details = preference_details


class SolutionRecommendationRequestPreferenceDetails(PreferenceDetails):  # pylint: disable=too-many-instance-attributes
    """Preference details.

    All required parameters must be populated in order to send to Azure.

    :ivar system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
    :vartype system_type: str
    :ivar cpu_family: Cpu Family, Currently Intel, AMD. Required.
    :vartype cpu_family: str
    :ivar is_two_node_solution: Is 2 node solution.
    :vartype is_two_node_solution: bool
    :ivar growth_percentage: Growth Percentage. Required.
    :vartype growth_percentage: int
    :ivar memory_expandability: If require memory expandability, it reserve DIMM slots for future
     growth (only fill half the DIMM slots in your solution. Required.
    :vartype memory_expandability: bool
    :ivar storage_expandability: If require storage expandability, reserve drive bays for future
     growth (leave half of the drives empty for future growth) . Required.
    :vartype storage_expandability: bool
    :ivar vendor_id: vendor id. Required.
    :vartype vendor_id: str
    :ivar storage_future_growth_bytes: Percentage needed to be reserved for future growth.
     Required.
    :vartype storage_future_growth_bytes: int
    :ivar resiliency_requirements: failure tolerate capabilities.
    :vartype resiliency_requirements:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
    :ivar storage_preference: Storage preferences.
    :vartype storage_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
    :ivar network_preference: Network Preferences.
    :vartype network_preference:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
    :ivar workloads: Details of your on-premises workloads. This information will be used to
     understand and recommend a solution.
    :vartype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
    """

    _validation = {
        "system_type": {"required": True},
        "cpu_family": {"required": True},
        "growth_percentage": {"required": True},
        "memory_expandability": {"required": True},
        "storage_expandability": {"required": True},
        "vendor_id": {"required": True},
        "storage_future_growth_bytes": {"required": True},
    }

    _attribute_map = {
        "system_type": {"key": "systemType", "type": "str"},
        "cpu_family": {"key": "cpuFamily", "type": "str"},
        "is_two_node_solution": {"key": "isTwoNodeSolution", "type": "bool"},
        "growth_percentage": {"key": "growthPercentage", "type": "int"},
        "memory_expandability": {"key": "memoryExpandability", "type": "bool"},
        "storage_expandability": {"key": "storageExpandability", "type": "bool"},
        "vendor_id": {"key": "vendorId", "type": "str"},
        "storage_future_growth_bytes": {"key": "storageFutureGrowthBytes", "type": "int"},
        "resiliency_requirements": {"key": "resiliencyRequirements", "type": "PreferenceDetailsResiliencyRequirements"},
        "storage_preference": {"key": "storagePreference", "type": "PreferenceDetailsStoragePreference"},
        "network_preference": {"key": "networkPreference", "type": "PreferenceDetailsNetworkPreference"},
        "workloads": {"key": "workloads", "type": "[Workload]"},
    }

    def __init__(
        self,
        *,
        system_type: str,
        cpu_family: str,
        growth_percentage: int,
        memory_expandability: bool,
        storage_expandability: bool,
        vendor_id: str,
        storage_future_growth_bytes: int,
        is_two_node_solution: Optional[bool] = None,
        resiliency_requirements: Optional["_models.PreferenceDetailsResiliencyRequirements"] = None,
        storage_preference: Optional["_models.PreferenceDetailsStoragePreference"] = None,
        network_preference: Optional["_models.PreferenceDetailsNetworkPreference"] = None,
        workloads: Optional[List["_models.Workload"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword system_type: SystemType, IntegratedSystem, ValidatedNode, Premium. Required.
        :paramtype system_type: str
        :keyword cpu_family: Cpu Family, Currently Intel, AMD. Required.
        :paramtype cpu_family: str
        :keyword is_two_node_solution: Is 2 node solution.
        :paramtype is_two_node_solution: bool
        :keyword growth_percentage: Growth Percentage. Required.
        :paramtype growth_percentage: int
        :keyword memory_expandability: If require memory expandability, it reserve DIMM slots for
         future growth (only fill half the DIMM slots in your solution. Required.
        :paramtype memory_expandability: bool
        :keyword storage_expandability: If require storage expandability, reserve drive bays for future
         growth (leave half of the drives empty for future growth) . Required.
        :paramtype storage_expandability: bool
        :keyword vendor_id: vendor id. Required.
        :paramtype vendor_id: str
        :keyword storage_future_growth_bytes: Percentage needed to be reserved for future growth.
         Required.
        :paramtype storage_future_growth_bytes: int
        :keyword resiliency_requirements: failure tolerate capabilities.
        :paramtype resiliency_requirements:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsResiliencyRequirements
        :keyword storage_preference: Storage preferences.
        :paramtype storage_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsStoragePreference
        :keyword network_preference: Network Preferences.
        :paramtype network_preference:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.PreferenceDetailsNetworkPreference
        :keyword workloads: Details of your on-premises workloads. This information will be used to
         understand and recommend a solution.
        :paramtype workloads: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.Workload]
        """
        super().__init__(
            system_type=system_type,
            cpu_family=cpu_family,
            is_two_node_solution=is_two_node_solution,
            growth_percentage=growth_percentage,
            memory_expandability=memory_expandability,
            storage_expandability=storage_expandability,
            vendor_id=vendor_id,
            storage_future_growth_bytes=storage_future_growth_bytes,
            resiliency_requirements=resiliency_requirements,
            storage_preference=storage_preference,
            network_preference=network_preference,
            workloads=workloads,
            **kwargs
        )


class Specification(_serialization.Model):
    """Specification of the configurations.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the specification.
    :vartype name: str
    :ivar value: Value of the specification.
    :vartype value: str
    """

    _validation = {
        "name": {"readonly": True},
        "value": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.value = None


class SQLWorkloadDetails(WorkloadDetails):
    """Sql workload details.

    All required parameters must be populated in order to send to Azure.

    :ivar workload_name: Workload name. Required.
    :vartype workload_name: str
    :ivar workload_type: Workload type, general, AVD, etc. Required. Known values are: "General",
     "SQL", and "VDI".
    :vartype workload_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadDetailsWorkloadType
    :ivar number_of_vms: Number of virtual machines. Required.
    :vartype number_of_vms: int
    :ivar virtual_cpu: Virtual cpus. Required.
    :vartype virtual_cpu: int
    :ivar virtual_core_per_physical_core: V:P ratio. Required.
    :vartype virtual_core_per_physical_core: int
    :ivar memory_bytes: Memory bytes requirement. Required.
    :vartype memory_bytes: int
    :ivar storage_bytes: Storage bytes requirement. Required.
    :vartype storage_bytes: int
    """

    _validation = {
        "workload_name": {"required": True},
        "workload_type": {"required": True},
        "number_of_vms": {"required": True},
        "virtual_cpu": {"required": True},
        "virtual_core_per_physical_core": {"required": True},
        "memory_bytes": {"required": True},
        "storage_bytes": {"required": True},
    }

    _attribute_map = {
        "workload_name": {"key": "workloadName", "type": "str"},
        "workload_type": {"key": "workloadType", "type": "str"},
        "number_of_vms": {"key": "numberOfVms", "type": "int"},
        "virtual_cpu": {"key": "virtualCpu", "type": "int"},
        "virtual_core_per_physical_core": {"key": "virtualCorePerPhysicalCore", "type": "int"},
        "memory_bytes": {"key": "memoryBytes", "type": "int"},
        "storage_bytes": {"key": "storageBytes", "type": "int"},
    }

    def __init__(
        self,
        *,
        workload_name: str,
        number_of_vms: int,
        virtual_cpu: int,
        virtual_core_per_physical_core: int,
        memory_bytes: int,
        storage_bytes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword workload_name: Workload name. Required.
        :paramtype workload_name: str
        :keyword number_of_vms: Number of virtual machines. Required.
        :paramtype number_of_vms: int
        :keyword virtual_cpu: Virtual cpus. Required.
        :paramtype virtual_cpu: int
        :keyword virtual_core_per_physical_core: V:P ratio. Required.
        :paramtype virtual_core_per_physical_core: int
        :keyword memory_bytes: Memory bytes requirement. Required.
        :paramtype memory_bytes: int
        :keyword storage_bytes: Storage bytes requirement. Required.
        :paramtype storage_bytes: int
        """
        super().__init__(
            workload_name=workload_name,
            number_of_vms=number_of_vms,
            virtual_cpu=virtual_cpu,
            virtual_core_per_physical_core=virtual_core_per_physical_core,
            memory_bytes=memory_bytes,
            storage_bytes=storage_bytes,
            **kwargs
        )
        self.workload_type: str = "SQL"


class StageDetails(_serialization.Model):
    """Resource stage details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar stage_status: Stage status. Known values are: "None", "InProgress", "Succeeded",
     "Failed", "Cancelled", and "Cancelling".
    :vartype stage_status: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StageStatus
    :ivar stage_name: Stage name. Known values are: "Placed", "InReview", "Confirmed",
     "ReadyToShip", "Shipped", "Delivered", "InUse", "ReturnInitiated", "ReturnPickedUp",
     "ReturnedToMicrosoft", "ReturnCompleted", and "Cancelled".
    :vartype stage_name: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.StageName
    :ivar display_name: Display name of the resource stage.
    :vartype display_name: str
    :ivar start_time: Stage start time.
    :vartype start_time: ~datetime.datetime
    """

    _validation = {
        "stage_status": {"readonly": True},
        "stage_name": {"readonly": True},
        "display_name": {"readonly": True},
        "start_time": {"readonly": True},
    }

    _attribute_map = {
        "stage_status": {"key": "stageStatus", "type": "str"},
        "stage_name": {"key": "stageName", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "start_time": {"key": "startTime", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.stage_status = None
        self.stage_name = None
        self.display_name = None
        self.start_time = None


class StorageDetailsCacheDriveDetails(CacheDriveDetails):
    """Cache drive specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar cache_drive_types: List of cache drive types.
    :vartype cache_drive_types: list[str]
    :ivar minimum_number_of_cache_drives: Minimum number of cache drives.
    :vartype minimum_number_of_cache_drives: int
    :ivar maximum_number_of_cache_drives: Maximum number of cache drives.
    :vartype maximum_number_of_cache_drives: int
    :ivar cache_drive_sizes: List of cache drive sizes.
    :vartype cache_drive_sizes: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSize]
    :ivar cache_drive_sizes_bytes: List of cache drive sizes in bytes.
    :vartype cache_drive_sizes_bytes: list[int]
    """

    _validation = {
        "cache_drive_types": {"readonly": True},
        "minimum_number_of_cache_drives": {"readonly": True},
        "maximum_number_of_cache_drives": {"readonly": True},
        "cache_drive_sizes": {"readonly": True},
        "cache_drive_sizes_bytes": {"readonly": True},
    }

    _attribute_map = {
        "cache_drive_types": {"key": "cacheDriveTypes", "type": "[str]"},
        "minimum_number_of_cache_drives": {"key": "minimumNumberOfCacheDrives", "type": "int"},
        "maximum_number_of_cache_drives": {"key": "maximumNumberOfCacheDrives", "type": "int"},
        "cache_drive_sizes": {"key": "cacheDriveSizes", "type": "[ByteSize]"},
        "cache_drive_sizes_bytes": {"key": "cacheDriveSizesBytes", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class StorageDetailsCapacityDriveDetails(CapacityDriveDetails):
    """Capacity drive specific details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar capacity_storage_drive_types: List of Capacity storage drive types.
    :vartype capacity_storage_drive_types: list[str]
    :ivar minimum_number_of_capacity_drives: Minimum number of Capacity drives.
    :vartype minimum_number_of_capacity_drives: int
    :ivar maximum_number_of_capacity_drives: Maximum number of Capacity drives.
    :vartype maximum_number_of_capacity_drives: int
    :ivar capacity_drive_sizes: List of Capacity drive sizes.
    :vartype capacity_drive_sizes: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSize]
    :ivar capacity_drive_sizes_bytes: List of Capacity drive sizes in bytes.
    :vartype capacity_drive_sizes_bytes: list[int]
    """

    _validation = {
        "capacity_storage_drive_types": {"readonly": True},
        "minimum_number_of_capacity_drives": {"readonly": True},
        "maximum_number_of_capacity_drives": {"readonly": True},
        "capacity_drive_sizes": {"readonly": True},
        "capacity_drive_sizes_bytes": {"readonly": True},
    }

    _attribute_map = {
        "capacity_storage_drive_types": {"key": "capacityStorageDriveTypes", "type": "[str]"},
        "minimum_number_of_capacity_drives": {"key": "minimumNumberOfCapacityDrives", "type": "int"},
        "maximum_number_of_capacity_drives": {"key": "maximumNumberOfCapacityDrives", "type": "int"},
        "capacity_drive_sizes": {"key": "capacityDriveSizes", "type": "[ByteSize]"},
        "capacity_drive_sizes_bytes": {"key": "capacityDriveSizesBytes", "type": "[int]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class StorageDetailsMaximumStorage(ByteSize):
    """Maximum storage.

    All required parameters must be populated in order to send to Azure.

    :ivar amount: Amount of bytes in byte unit. Required.
    :vartype amount: float
    :ivar byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
    :vartype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
    """

    _validation = {
        "amount": {"required": True},
        "byte_unit": {"required": True},
    }

    _attribute_map = {
        "amount": {"key": "amount", "type": "float"},
        "byte_unit": {"key": "byteUnit", "type": "str"},
    }

    def __init__(self, *, amount: float, byte_unit: Union[str, "_models.ByteSizeByteUnit"], **kwargs: Any) -> None:
        """
        :keyword amount: Amount of bytes in byte unit. Required.
        :paramtype amount: float
        :keyword byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
        :paramtype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
        """
        super().__init__(amount=amount, byte_unit=byte_unit, **kwargs)


class StorageDetailsMinimumStorage(ByteSize):
    """Minimum storage.

    All required parameters must be populated in order to send to Azure.

    :ivar amount: Amount of bytes in byte unit. Required.
    :vartype amount: float
    :ivar byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
    :vartype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
    """

    _validation = {
        "amount": {"required": True},
        "byte_unit": {"required": True},
    }

    _attribute_map = {
        "amount": {"key": "amount", "type": "float"},
        "byte_unit": {"key": "byteUnit", "type": "str"},
    }

    def __init__(self, *, amount: float, byte_unit: Union[str, "_models.ByteSizeByteUnit"], **kwargs: Any) -> None:
        """
        :keyword amount: Amount of bytes in byte unit. Required.
        :paramtype amount: float
        :keyword byte_unit: Type of byte unit. Required. Known values are: "GB", "PB", and "TB".
        :paramtype byte_unit: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.ByteSizeByteUnit
        """
        super().__init__(amount=amount, byte_unit=byte_unit, **kwargs)


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TermCommitmentInformation(_serialization.Model):
    """Term Commitment Information.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar term_commitment_type: Term Commitment Type. Required. Known values are: "None", "Trial",
     and "Timed".
    :vartype term_commitment_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentType
    :ivar term_commitment_type_duration: Term Commitment Duration. Currently Supporting P365D,
     P1095D.
    :vartype term_commitment_type_duration: str
    :ivar pending_days_for_term: Number of Days Pending for Term Commitment.
    :vartype pending_days_for_term: int
    """

    _validation = {
        "term_commitment_type": {"required": True},
        "term_commitment_type_duration": {"readonly": True},
        "pending_days_for_term": {"readonly": True},
    }

    _attribute_map = {
        "term_commitment_type": {"key": "termCommitmentType", "type": "str"},
        "term_commitment_type_duration": {"key": "termCommitmentTypeDuration", "type": "str"},
        "pending_days_for_term": {"key": "pendingDaysForTerm", "type": "int"},
    }

    def __init__(self, *, term_commitment_type: Union[str, "_models.TermCommitmentType"], **kwargs: Any) -> None:
        """
        :keyword term_commitment_type: Term Commitment Type. Required. Known values are: "None",
         "Trial", and "Timed".
        :paramtype term_commitment_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentType
        """
        super().__init__(**kwargs)
        self.term_commitment_type = term_commitment_type
        self.term_commitment_type_duration = None
        self.pending_days_for_term = None


class TermCommitmentPreferences(_serialization.Model):
    """Term Commitment preference received from customer.

    All required parameters must be populated in order to send to Azure.

    :ivar preferred_term_commitment_type: Term Commitment Type. Required. Known values are: "None",
     "Trial", and "Timed".
    :vartype preferred_term_commitment_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentType
    :ivar preferred_term_commitment_duration: Customer preferred Term Duration.
    :vartype preferred_term_commitment_duration: str
    """

    _validation = {
        "preferred_term_commitment_type": {"required": True},
    }

    _attribute_map = {
        "preferred_term_commitment_type": {"key": "preferredTermCommitmentType", "type": "str"},
        "preferred_term_commitment_duration": {"key": "preferredTermCommitmentDuration", "type": "str"},
    }

    def __init__(
        self,
        *,
        preferred_term_commitment_type: Union[str, "_models.TermCommitmentType"],
        preferred_term_commitment_duration: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword preferred_term_commitment_type: Term Commitment Type. Required. Known values are:
         "None", "Trial", and "Timed".
        :paramtype preferred_term_commitment_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentType
        :keyword preferred_term_commitment_duration: Customer preferred Term Duration.
        :paramtype preferred_term_commitment_duration: str
        """
        super().__init__(**kwargs)
        self.preferred_term_commitment_type = preferred_term_commitment_type
        self.preferred_term_commitment_duration = preferred_term_commitment_duration


class TermTypeDetails(_serialization.Model):
    """Holds details about term type and duration.

    All required parameters must be populated in order to send to Azure.

    :ivar term_type: Term Commitment Type. Required. Known values are: "None", "Trial", and
     "Timed".
    :vartype term_type: str or ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentType
    :ivar term_type_duration: Duration for the term type. Required.
    :vartype term_type_duration: str
    """

    _validation = {
        "term_type": {"required": True},
        "term_type_duration": {"required": True},
    }

    _attribute_map = {
        "term_type": {"key": "termType", "type": "str"},
        "term_type_duration": {"key": "termTypeDuration", "type": "str"},
    }

    def __init__(
        self, *, term_type: Union[str, "_models.TermCommitmentType"], term_type_duration: str, **kwargs: Any
    ) -> None:
        """
        :keyword term_type: Term Commitment Type. Required. Known values are: "None", "Trial", and
         "Timed".
        :paramtype term_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TermCommitmentType
        :keyword term_type_duration: Duration for the term type. Required.
        :paramtype term_type_duration: str
        """
        super().__init__(**kwargs)
        self.term_type = term_type
        self.term_type_duration = term_type_duration


class TransportPreferences(_serialization.Model):
    """Preferences related to the shipment logistics of the sku.

    All required parameters must be populated in order to send to Azure.

    :ivar preferred_shipment_type: Indicates Shipment Logistics type that the customer preferred.
     Required. Known values are: "CustomerManaged" and "MicrosoftManaged".
    :vartype preferred_shipment_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TransportShipmentTypes
    """

    _validation = {
        "preferred_shipment_type": {"required": True},
    }

    _attribute_map = {
        "preferred_shipment_type": {"key": "preferredShipmentType", "type": "str"},
    }

    def __init__(self, *, preferred_shipment_type: Union[str, "_models.TransportShipmentTypes"], **kwargs: Any) -> None:
        """
        :keyword preferred_shipment_type: Indicates Shipment Logistics type that the customer
         preferred. Required. Known values are: "CustomerManaged" and "MicrosoftManaged".
        :paramtype preferred_shipment_type: str or
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.TransportShipmentTypes
        """
        super().__init__(**kwargs)
        self.preferred_shipment_type = preferred_shipment_type


class UserAssignedIdentity(_serialization.Model):
    """Class defining User assigned identity details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal id of user assigned identity.
    :vartype principal_id: str
    :ivar client_id: The client id of user assigned identity.
    :vartype client_id: str
    """

    _validation = {
        "principal_id": {"readonly": True},
        "client_id": {"readonly": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.principal_id = None
        self.client_id = None


class VDIWorkloadDetails(WorkloadDetails):
    """VDI workload details.

    All required parameters must be populated in order to send to Azure.

    :ivar workload_name: Workload name. Required.
    :vartype workload_name: str
    :ivar workload_type: Workload type, general, AVD, etc. Required. Known values are: "General",
     "SQL", and "VDI".
    :vartype workload_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadDetailsWorkloadType
    :ivar number_of_vms: Number of virtual machines. Required.
    :vartype number_of_vms: int
    :ivar virtual_cpu: Virtual cpus. Required.
    :vartype virtual_cpu: int
    :ivar virtual_core_per_physical_core: V:P ratio. Required.
    :vartype virtual_core_per_physical_core: int
    :ivar memory_bytes: Memory bytes requirement. Required.
    :vartype memory_bytes: int
    :ivar storage_bytes: Storage bytes requirement. Required.
    :vartype storage_bytes: int
    """

    _validation = {
        "workload_name": {"required": True},
        "workload_type": {"required": True},
        "number_of_vms": {"required": True},
        "virtual_cpu": {"required": True},
        "virtual_core_per_physical_core": {"required": True},
        "memory_bytes": {"required": True},
        "storage_bytes": {"required": True},
    }

    _attribute_map = {
        "workload_name": {"key": "workloadName", "type": "str"},
        "workload_type": {"key": "workloadType", "type": "str"},
        "number_of_vms": {"key": "numberOfVms", "type": "int"},
        "virtual_cpu": {"key": "virtualCpu", "type": "int"},
        "virtual_core_per_physical_core": {"key": "virtualCorePerPhysicalCore", "type": "int"},
        "memory_bytes": {"key": "memoryBytes", "type": "int"},
        "storage_bytes": {"key": "storageBytes", "type": "int"},
    }

    def __init__(
        self,
        *,
        workload_name: str,
        number_of_vms: int,
        virtual_cpu: int,
        virtual_core_per_physical_core: int,
        memory_bytes: int,
        storage_bytes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword workload_name: Workload name. Required.
        :paramtype workload_name: str
        :keyword number_of_vms: Number of virtual machines. Required.
        :paramtype number_of_vms: int
        :keyword virtual_cpu: Virtual cpus. Required.
        :paramtype virtual_cpu: int
        :keyword virtual_core_per_physical_core: V:P ratio. Required.
        :paramtype virtual_core_per_physical_core: int
        :keyword memory_bytes: Memory bytes requirement. Required.
        :paramtype memory_bytes: int
        :keyword storage_bytes: Storage bytes requirement. Required.
        :paramtype storage_bytes: int
        """
        super().__init__(
            workload_name=workload_name,
            number_of_vms=number_of_vms,
            virtual_cpu=virtual_cpu,
            virtual_core_per_physical_core=virtual_core_per_physical_core,
            memory_bytes=memory_bytes,
            storage_bytes=storage_bytes,
            **kwargs
        )
        self.workload_type: str = "VDI"


class VendorResource(ProxyResource):
    """Specifies the properties for Vendor in HCI Catalog.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar vendor_id: Unique Id representing the vendor. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Name of the vendor. Required.
    :vartype vendor_name: str
    :ivar company_logo_uri: Company logo Uri of the vendor. Required.
    :vartype company_logo_uri: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "company_logo_uri": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "vendor_id": {"key": "properties.vendorId", "type": "str"},
        "vendor_name": {"key": "properties.vendorName", "type": "str"},
        "company_logo_uri": {"key": "properties.companyLogoUri", "type": "str"},
    }

    def __init__(self, *, vendor_id: str, vendor_name: str, company_logo_uri: str, **kwargs: Any) -> None:
        """
        :keyword vendor_id: Unique Id representing the vendor. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Name of the vendor. Required.
        :paramtype vendor_name: str
        :keyword company_logo_uri: Company logo Uri of the vendor. Required.
        :paramtype company_logo_uri: str
        """
        super().__init__(**kwargs)
        self.vendor_id = vendor_id
        self.vendor_name = vendor_name
        self.company_logo_uri = company_logo_uri


class VendorResourceList(_serialization.Model):
    """List of vendors.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of vendor resources.
    :vartype value: list[~azure.mgmt.edgeorder.v2023_05_01_preview.models.VendorResource]
    :ivar next_link: Link for the next set of vendor resources.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VendorResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword next_link: Link for the next set of vendor resources.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = next_link


class VendorResourceProperties(VendorProperties):
    """Vendor properties.

    All required parameters must be populated in order to send to Azure.

    :ivar vendor_id: Unique Id representing the vendor. Required.
    :vartype vendor_id: str
    :ivar vendor_name: Name of the vendor. Required.
    :vartype vendor_name: str
    :ivar company_logo_uri: Company logo Uri of the vendor. Required.
    :vartype company_logo_uri: str
    """

    _validation = {
        "vendor_id": {"required": True},
        "vendor_name": {"required": True},
        "company_logo_uri": {"required": True},
    }

    _attribute_map = {
        "vendor_id": {"key": "vendorId", "type": "str"},
        "vendor_name": {"key": "vendorName", "type": "str"},
        "company_logo_uri": {"key": "companyLogoUri", "type": "str"},
    }

    def __init__(self, *, vendor_id: str, vendor_name: str, company_logo_uri: str, **kwargs: Any) -> None:
        """
        :keyword vendor_id: Unique Id representing the vendor. Required.
        :paramtype vendor_id: str
        :keyword vendor_name: Name of the vendor. Required.
        :paramtype vendor_name: str
        :keyword company_logo_uri: Company logo Uri of the vendor. Required.
        :paramtype company_logo_uri: str
        """
        super().__init__(vendor_id=vendor_id, vendor_name=vendor_name, company_logo_uri=company_logo_uri, **kwargs)


class Workload(_serialization.Model):
    """Details of your on-premises workloads. This information will be used to understand and
    recommend a solution.

    All required parameters must be populated in order to send to Azure.

    :ivar workload_details: Workload details. Required.
    :vartype workload_details:
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadWorkloadDetails
    """

    _validation = {
        "workload_details": {"required": True},
    }

    _attribute_map = {
        "workload_details": {"key": "workloadDetails", "type": "WorkloadWorkloadDetails"},
    }

    def __init__(self, *, workload_details: "_models.WorkloadWorkloadDetails", **kwargs: Any) -> None:
        """
        :keyword workload_details: Workload details. Required.
        :paramtype workload_details:
         ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadWorkloadDetails
        """
        super().__init__(**kwargs)
        self.workload_details = workload_details


class WorkloadWorkloadDetails(WorkloadDetails):
    """Workload details.

    All required parameters must be populated in order to send to Azure.

    :ivar workload_name: Workload name. Required.
    :vartype workload_name: str
    :ivar workload_type: Workload type, general, AVD, etc. Required. Known values are: "General",
     "SQL", and "VDI".
    :vartype workload_type: str or
     ~azure.mgmt.edgeorder.v2023_05_01_preview.models.WorkloadDetailsWorkloadType
    :ivar number_of_vms: Number of virtual machines. Required.
    :vartype number_of_vms: int
    :ivar virtual_cpu: Virtual cpus. Required.
    :vartype virtual_cpu: int
    :ivar virtual_core_per_physical_core: V:P ratio. Required.
    :vartype virtual_core_per_physical_core: int
    :ivar memory_bytes: Memory bytes requirement. Required.
    :vartype memory_bytes: int
    :ivar storage_bytes: Storage bytes requirement. Required.
    :vartype storage_bytes: int
    """

    _validation = {
        "workload_name": {"required": True},
        "workload_type": {"required": True},
        "number_of_vms": {"required": True},
        "virtual_cpu": {"required": True},
        "virtual_core_per_physical_core": {"required": True},
        "memory_bytes": {"required": True},
        "storage_bytes": {"required": True},
    }

    _attribute_map = {
        "workload_name": {"key": "workloadName", "type": "str"},
        "workload_type": {"key": "workloadType", "type": "str"},
        "number_of_vms": {"key": "numberOfVms", "type": "int"},
        "virtual_cpu": {"key": "virtualCpu", "type": "int"},
        "virtual_core_per_physical_core": {"key": "virtualCorePerPhysicalCore", "type": "int"},
        "memory_bytes": {"key": "memoryBytes", "type": "int"},
        "storage_bytes": {"key": "storageBytes", "type": "int"},
    }

    def __init__(
        self,
        *,
        workload_name: str,
        number_of_vms: int,
        virtual_cpu: int,
        virtual_core_per_physical_core: int,
        memory_bytes: int,
        storage_bytes: int,
        **kwargs: Any
    ) -> None:
        """
        :keyword workload_name: Workload name. Required.
        :paramtype workload_name: str
        :keyword number_of_vms: Number of virtual machines. Required.
        :paramtype number_of_vms: int
        :keyword virtual_cpu: Virtual cpus. Required.
        :paramtype virtual_cpu: int
        :keyword virtual_core_per_physical_core: V:P ratio. Required.
        :paramtype virtual_core_per_physical_core: int
        :keyword memory_bytes: Memory bytes requirement. Required.
        :paramtype memory_bytes: int
        :keyword storage_bytes: Storage bytes requirement. Required.
        :paramtype storage_bytes: int
        """
        super().__init__(
            workload_name=workload_name,
            number_of_vms=number_of_vms,
            virtual_cpu=virtual_cpu,
            virtual_core_per_physical_core=virtual_core_per_physical_core,
            memory_bytes=memory_bytes,
            storage_bytes=storage_bytes,
            **kwargs
        )
        self.workload_type: str = "Workload-workloadDetails"
