# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.edgeorder.aio import EdgeOrderClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestEdgeOrderProductsAndConfigurationsOperationGroupOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(EdgeOrderClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_products_and_configurations_operation_group_list_configurations(self, resource_group):
        response = self.client.products_and_configurations_operation_group.list_configurations(
            configurations_request={
                "configurationFilter": {
                    "hierarchyInformation": {
                        "configurationIdDisplayName": "str",
                        "configurationName": "str",
                        "productFamilyName": "str",
                        "productLineName": "str",
                        "productName": "str",
                    },
                    "childConfigurationFilter": {
                        "childConfigurationTypes": ["str"],
                        "hierarchyInformations": [
                            {
                                "configurationIdDisplayName": "str",
                                "configurationName": "str",
                                "productFamilyName": "str",
                                "productLineName": "str",
                                "productName": "str",
                            }
                        ],
                    },
                    "filterableProperty": [{"supportedValues": ["str"], "type": "str"}],
                },
                "customerSubscriptionDetails": {
                    "quotaId": "str",
                    "locationPlacementId": "str",
                    "registeredFeatures": [{"name": "str", "state": "str"}],
                },
            },
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_products_and_configurations_operation_group_list_product_families(self, resource_group):
        response = self.client.products_and_configurations_operation_group.list_product_families(
            product_families_request={
                "filterableProperties": {"str": [{"supportedValues": ["str"], "type": "str"}]},
                "customerSubscriptionDetails": {
                    "quotaId": "str",
                    "locationPlacementId": "str",
                    "registeredFeatures": [{"name": "str", "state": "str"}],
                },
            },
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_products_and_configurations_operation_group_list_product_families_metadata(self, resource_group):
        response = self.client.products_and_configurations_operation_group.list_product_families_metadata()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...
