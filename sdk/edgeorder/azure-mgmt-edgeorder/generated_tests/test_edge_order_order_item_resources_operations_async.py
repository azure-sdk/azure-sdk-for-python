# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.edgeorder.aio import EdgeOrderClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestEdgeOrderOrderItemResourcesOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(EdgeOrderClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_get(self, resource_group):
        response = await self.client.order_item_resources.get(
            resource_group_name=resource_group.name,
            order_item_name="str",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_begin_create(self, resource_group):
        response = await (
            await self.client.order_item_resources.begin_create(
                resource_group_name=resource_group.name,
                order_item_name="str",
                order_item_resource={
                    "location": "str",
                    "properties": {
                        "orderId": "str",
                        "orderItemDetails": {
                            "orderItemType": "str",
                            "productDetails": {
                                "hierarchyInformation": {
                                    "configurationIdDisplayName": "str",
                                    "configurationName": "str",
                                    "productFamilyName": "str",
                                    "productLineName": "str",
                                    "productName": "str",
                                },
                                "childConfigurationDeviceDetails": [
                                    {
                                        "deviceDetails": [
                                            {
                                                "displaySerialNumber": "str",
                                                "managementResourceId": "str",
                                                "managementResourceTenantId": "str",
                                                "provisioningDetails": {
                                                    "autoProvisioningStatus": "str",
                                                    "devicePresenceVerification": {"message": "str", "status": "str"},
                                                    "managementResourceArmId": "str",
                                                    "provisioningArmId": "str",
                                                    "provisioningEndPoint": "str",
                                                    "quantity": 0,
                                                    "readyToConnectArmId": "str",
                                                    "serialNumber": "str",
                                                    "uniqueDeviceIdentifier": "str",
                                                    "vendorName": "str",
                                                },
                                                "provisioningSupport": "str",
                                                "serialNumber": "str",
                                            }
                                        ],
                                        "displayInfo": {
                                            "configurationDisplayName": "str",
                                            "productFamilyDisplayName": "str",
                                        },
                                        "hierarchyInformation": {
                                            "configurationIdDisplayName": "str",
                                            "configurationName": "str",
                                            "productFamilyName": "str",
                                            "productLineName": "str",
                                            "productName": "str",
                                        },
                                        "identificationType": "str",
                                        "quantity": 0,
                                        "termCommitmentInformation": {
                                            "termCommitmentType": "str",
                                            "pendingDaysForTerm": 0,
                                            "termCommitmentTypeDuration": "1 day, 0:00:00",
                                        },
                                    }
                                ],
                                "displayInfo": {"configurationDisplayName": "str", "productFamilyDisplayName": "str"},
                                "identificationType": "str",
                                "optInAdditionalConfigurations": [
                                    {
                                        "hierarchyInformation": {
                                            "configurationIdDisplayName": "str",
                                            "configurationName": "str",
                                            "productFamilyName": "str",
                                            "productLineName": "str",
                                            "productName": "str",
                                        },
                                        "quantity": 0,
                                        "provisioningDetails": [
                                            {
                                                "autoProvisioningStatus": "str",
                                                "devicePresenceVerification": {"message": "str", "status": "str"},
                                                "managementResourceArmId": "str",
                                                "provisioningArmId": "str",
                                                "provisioningEndPoint": "str",
                                                "quantity": 0,
                                                "readyToConnectArmId": "str",
                                                "serialNumber": "str",
                                                "uniqueDeviceIdentifier": "str",
                                                "vendorName": "str",
                                            }
                                        ],
                                    }
                                ],
                                "parentDeviceDetails": {
                                    "displaySerialNumber": "str",
                                    "managementResourceId": "str",
                                    "managementResourceTenantId": "str",
                                    "provisioningDetails": {
                                        "autoProvisioningStatus": "str",
                                        "devicePresenceVerification": {"message": "str", "status": "str"},
                                        "managementResourceArmId": "str",
                                        "provisioningArmId": "str",
                                        "provisioningEndPoint": "str",
                                        "quantity": 0,
                                        "readyToConnectArmId": "str",
                                        "serialNumber": "str",
                                        "uniqueDeviceIdentifier": "str",
                                        "vendorName": "str",
                                    },
                                    "provisioningSupport": "str",
                                    "serialNumber": "str",
                                },
                                "parentProvisioningDetails": {
                                    "autoProvisioningStatus": "str",
                                    "devicePresenceVerification": {"message": "str", "status": "str"},
                                    "managementResourceArmId": "str",
                                    "provisioningArmId": "str",
                                    "provisioningEndPoint": "str",
                                    "quantity": 0,
                                    "readyToConnectArmId": "str",
                                    "serialNumber": "str",
                                    "uniqueDeviceIdentifier": "str",
                                    "vendorName": "str",
                                },
                                "productDoubleEncryptionStatus": "str",
                                "termCommitmentInformation": {
                                    "termCommitmentType": "str",
                                    "pendingDaysForTerm": 0,
                                    "termCommitmentTypeDuration": "1 day, 0:00:00",
                                },
                            },
                            "cancellationReason": "str",
                            "cancellationStatus": "str",
                            "currentStage": {
                                "displayName": "str",
                                "stageName": "str",
                                "stageStatus": "str",
                                "startTime": "2020-02-20 00:00:00",
                            },
                            "deletionStatus": "str",
                            "error": {
                                "additionalInfo": [{"info": {}, "type": "str"}],
                                "code": "str",
                                "details": [...],
                                "message": "str",
                                "target": "str",
                            },
                            "forwardShippingDetails": {
                                "carrierDisplayName": "str",
                                "carrierName": "str",
                                "trackingId": "str",
                                "trackingUrl": "str",
                            },
                            "managementRpDetailsList": [{"resourceProviderNamespace": "str"}],
                            "notificationEmailList": ["str"],
                            "orderItemMode": "str",
                            "orderItemStageHistory": [
                                {
                                    "displayName": "str",
                                    "stageName": "str",
                                    "stageStatus": "str",
                                    "startTime": "2020-02-20 00:00:00",
                                }
                            ],
                            "preferences": {
                                "encryptionPreferences": {"doubleEncryptionStatus": "str"},
                                "managementResourcePreferences": {"preferredManagementResourceId": "str"},
                                "notificationPreferences": [{"sendNotification": bool, "stageName": "str"}],
                                "termCommitmentPreferences": {
                                    "preferredTermCommitmentType": "str",
                                    "preferredTermCommitmentDuration": "1 day, 0:00:00",
                                },
                                "transportPreferences": {"preferredShipmentType": "str"},
                            },
                            "returnReason": "str",
                            "returnStatus": "str",
                            "reverseShippingDetails": {
                                "carrierDisplayName": "str",
                                "carrierName": "str",
                                "sasKeyForLabel": "str",
                                "trackingId": "str",
                                "trackingUrl": "str",
                            },
                            "siteDetails": {"siteId": "str"},
                        },
                        "addressDetails": {
                            "forwardAddress": {
                                "addressClassification": "str",
                                "addressValidationStatus": "str",
                                "contactDetails": {
                                    "contactName": "str",
                                    "emailList": ["str"],
                                    "mobile": "str",
                                    "phone": "str",
                                    "phoneExtension": "str",
                                },
                                "provisioningState": "str",
                                "shippingAddress": {
                                    "country": "str",
                                    "addressType": "str",
                                    "city": "str",
                                    "companyName": "str",
                                    "postalCode": "str",
                                    "stateOrProvince": "str",
                                    "streetAddress1": "str",
                                    "streetAddress2": "str",
                                    "streetAddress3": "str",
                                    "zipExtendedCode": "str",
                                },
                            },
                            "returnAddress": {
                                "addressClassification": "str",
                                "addressValidationStatus": "str",
                                "contactDetails": {
                                    "contactName": "str",
                                    "emailList": ["str"],
                                    "mobile": "str",
                                    "phone": "str",
                                    "phoneExtension": "str",
                                },
                                "provisioningState": "str",
                                "shippingAddress": {
                                    "country": "str",
                                    "addressType": "str",
                                    "city": "str",
                                    "companyName": "str",
                                    "postalCode": "str",
                                    "stateOrProvince": "str",
                                    "streetAddress1": "str",
                                    "streetAddress2": "str",
                                    "streetAddress3": "str",
                                    "zipExtendedCode": "str",
                                },
                            },
                        },
                        "provisioningState": "str",
                        "startTime": "2020-02-20 00:00:00",
                    },
                    "id": "str",
                    "identity": {
                        "principalId": "str",
                        "tenantId": "str",
                        "type": "str",
                        "userAssignedIdentities": {"str": {"clientId": "str", "principalId": "str"}},
                    },
                    "name": "str",
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",
                        "createdBy": "str",
                        "createdByType": "str",
                        "lastModifiedAt": "2020-02-20 00:00:00",
                        "lastModifiedBy": "str",
                        "lastModifiedByType": "str",
                    },
                    "tags": {"str": "str"},
                    "type": "str",
                },
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_begin_update(self, resource_group):
        response = await (
            await self.client.order_item_resources.begin_update(
                resource_group_name=resource_group.name,
                order_item_name="str",
                order_item_update_parameter={
                    "identity": {
                        "principalId": "str",
                        "tenantId": "str",
                        "type": "str",
                        "userAssignedIdentities": {"str": {"clientId": "str", "principalId": "str"}},
                    },
                    "properties": {
                        "forwardAddress": {
                            "addressClassification": "str",
                            "addressValidationStatus": "str",
                            "contactDetails": {
                                "contactName": "str",
                                "emailList": ["str"],
                                "mobile": "str",
                                "phone": "str",
                                "phoneExtension": "str",
                            },
                            "provisioningState": "str",
                            "shippingAddress": {
                                "country": "str",
                                "addressType": "str",
                                "city": "str",
                                "companyName": "str",
                                "postalCode": "str",
                                "stateOrProvince": "str",
                                "streetAddress1": "str",
                                "streetAddress2": "str",
                                "streetAddress3": "str",
                                "zipExtendedCode": "str",
                            },
                        },
                        "notificationEmailList": ["str"],
                        "orderItemDetails": {
                            "productDetails": {
                                "parentProvisioningDetails": {
                                    "autoProvisioningStatus": "str",
                                    "devicePresenceVerification": {"message": "str", "status": "str"},
                                    "managementResourceArmId": "str",
                                    "provisioningArmId": "str",
                                    "provisioningEndPoint": "str",
                                    "quantity": 0,
                                    "readyToConnectArmId": "str",
                                    "serialNumber": "str",
                                    "uniqueDeviceIdentifier": "str",
                                    "vendorName": "str",
                                }
                            },
                            "siteDetails": {"siteId": "str"},
                        },
                        "preferences": {
                            "encryptionPreferences": {"doubleEncryptionStatus": "str"},
                            "managementResourcePreferences": {"preferredManagementResourceId": "str"},
                            "notificationPreferences": [{"sendNotification": bool, "stageName": "str"}],
                            "termCommitmentPreferences": {
                                "preferredTermCommitmentType": "str",
                                "preferredTermCommitmentDuration": "1 day, 0:00:00",
                            },
                            "transportPreferences": {"preferredShipmentType": "str"},
                        },
                    },
                    "tags": {"str": "str"},
                },
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_begin_delete(self, resource_group):
        response = await (
            await self.client.order_item_resources.begin_delete(
                resource_group_name=resource_group.name,
                order_item_name="str",
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_list_by_resource_group(self, resource_group):
        response = self.client.order_item_resources.list_by_resource_group(
            resource_group_name=resource_group.name,
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_list_by_subscription(self, resource_group):
        response = self.client.order_item_resources.list_by_subscription()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_cancel(self, resource_group):
        response = await self.client.order_item_resources.cancel(
            resource_group_name=resource_group.name,
            order_item_name="str",
            cancellation_reason={"reason": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_order_item_resources_begin_return_order_item(self, resource_group):
        response = await (
            await self.client.order_item_resources.begin_return_order_item(
                resource_group_name=resource_group.name,
                order_item_name="str",
                return_order_item_details={
                    "returnReason": "str",
                    "returnAddress": {
                        "addressClassification": "str",
                        "addressValidationStatus": "str",
                        "contactDetails": {
                            "contactName": "str",
                            "emailList": ["str"],
                            "mobile": "str",
                            "phone": "str",
                            "phoneExtension": "str",
                        },
                        "provisioningState": "str",
                        "shippingAddress": {
                            "country": "str",
                            "addressType": "str",
                            "city": "str",
                            "companyName": "str",
                            "postalCode": "str",
                            "stateOrProvince": "str",
                            "streetAddress1": "str",
                            "streetAddress2": "str",
                            "streetAddress3": "str",
                            "zipExtendedCode": "str",
                        },
                    },
                    "serviceTag": "str",
                    "shippingBoxRequired": bool,
                },
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
