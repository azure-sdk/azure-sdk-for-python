# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import FaceServiceClientTestBase, FaceServicePreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestFaceServiceFaceListOperations(FaceServiceClientTestBase):
    @FaceServicePreparer()
    @recorded_by_proxy
    def test_create(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.create(
            face_list_id="str",
            body={"name": "str", "recognitionModel": "str", "userData": "str"},
            name="str",
        )

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_delete(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.delete(
            face_list_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_get(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.get(
            face_list_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_update(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.update(
            face_list_id="str",
            body={"name": "str", "userData": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_get_face_lists(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.get_face_lists()

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_add_face_from_url(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.add_face_from_url(
            face_list_id="str",
            body={"url": "str"},
            url="str",
        )

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_add_face(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.add_face(
            face_list_id="str",
            image_content=bytes("bytes", encoding="utf-8"),
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @FaceServicePreparer()
    @recorded_by_proxy
    def test_delete_face(self, faceservice_endpoint):
        client = self.create_client(endpoint=faceservice_endpoint)
        response = client.face_list.delete_face(
            face_list_id="str",
            persisted_face_id="str",
        )

        # please add some check logic here by yourself
        # ...
