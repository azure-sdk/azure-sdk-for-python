# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._dev_centers_operations import DevCentersOperations  # type: ignore
from ._encryption_sets_operations import EncryptionSetsOperations  # type: ignore
from ._project_policies_operations import ProjectPoliciesOperations  # type: ignore
from ._projects_operations import ProjectsOperations  # type: ignore
from ._attached_networks_operations import AttachedNetworksOperations  # type: ignore
from ._project_catalogs_operations import ProjectCatalogsOperations  # type: ignore
from ._environment_definitions_operations import EnvironmentDefinitionsOperations  # type: ignore
from ._project_catalog_environment_definitions_operations import ProjectCatalogEnvironmentDefinitionsOperations  # type: ignore
from ._galleries_operations import GalleriesOperations  # type: ignore
from ._images_operations import ImagesOperations  # type: ignore
from ._image_versions_operations import ImageVersionsOperations  # type: ignore
from ._skus_operations import SkusOperations  # type: ignore
from ._catalogs_operations import CatalogsOperations  # type: ignore
from ._environment_types_operations import EnvironmentTypesOperations  # type: ignore
from ._project_allowed_environment_types_operations import ProjectAllowedEnvironmentTypesOperations  # type: ignore
from ._project_environment_types_operations import ProjectEnvironmentTypesOperations  # type: ignore
from ._dev_box_definitions_operations import DevBoxDefinitionsOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._operation_statuses_operations import OperationStatusesOperations  # type: ignore
from ._usages_operations import UsagesOperations  # type: ignore
from ._check_name_availability_operations import CheckNameAvailabilityOperations  # type: ignore
from ._check_scoped_name_availability_operations import CheckScopedNameAvailabilityOperations  # type: ignore
from ._customization_tasks_operations import CustomizationTasksOperations  # type: ignore
from ._dev_center_catalog_image_definitions_operations import DevCenterCatalogImageDefinitionsOperations  # type: ignore
from ._dev_center_catalog_image_definition_builds_operations import DevCenterCatalogImageDefinitionBuildsOperations  # type: ignore
from ._dev_center_catalog_image_definition_build_operations import DevCenterCatalogImageDefinitionBuildOperations  # type: ignore
from ._project_catalog_image_definitions_operations import ProjectCatalogImageDefinitionsOperations  # type: ignore
from ._project_catalog_image_definition_builds_operations import ProjectCatalogImageDefinitionBuildsOperations  # type: ignore
from ._project_catalog_image_definition_build_operations import ProjectCatalogImageDefinitionBuildOperations  # type: ignore
from ._pools_operations import PoolsOperations  # type: ignore
from ._schedules_operations import SchedulesOperations  # type: ignore
from ._network_connections_operations import NetworkConnectionsOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "DevCentersOperations",
    "EncryptionSetsOperations",
    "ProjectPoliciesOperations",
    "ProjectsOperations",
    "AttachedNetworksOperations",
    "ProjectCatalogsOperations",
    "EnvironmentDefinitionsOperations",
    "ProjectCatalogEnvironmentDefinitionsOperations",
    "GalleriesOperations",
    "ImagesOperations",
    "ImageVersionsOperations",
    "SkusOperations",
    "CatalogsOperations",
    "EnvironmentTypesOperations",
    "ProjectAllowedEnvironmentTypesOperations",
    "ProjectEnvironmentTypesOperations",
    "DevBoxDefinitionsOperations",
    "Operations",
    "OperationStatusesOperations",
    "UsagesOperations",
    "CheckNameAvailabilityOperations",
    "CheckScopedNameAvailabilityOperations",
    "CustomizationTasksOperations",
    "DevCenterCatalogImageDefinitionsOperations",
    "DevCenterCatalogImageDefinitionBuildsOperations",
    "DevCenterCatalogImageDefinitionBuildOperations",
    "ProjectCatalogImageDefinitionsOperations",
    "ProjectCatalogImageDefinitionBuildsOperations",
    "ProjectCatalogImageDefinitionBuildOperations",
    "PoolsOperations",
    "SchedulesOperations",
    "NetworkConnectionsOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
