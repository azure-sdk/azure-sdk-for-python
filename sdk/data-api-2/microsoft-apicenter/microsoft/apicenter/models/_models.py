# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Api(_model_base.Model):  # pylint: disable=too-many-instance-attributes
    """API contract.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the API. Required.
    :vartype title: str
    :ivar summary: Short descrption of the API.
    :vartype summary: str
    :ivar description: The description of the API.
    :vartype description: str
    :ivar kind: Kind of API. For example, REST or GraphQL. Required.
    :vartype kind: str
    :ivar lifecycle_stage: Current lifecycle stage of the API. Known values are: "design",
     "development", "testing", "preview", "production", "deprecated", and "retired".
    :vartype lifecycle_stage: str or ~microsoft.apicenter.models.ApiLifecycleStage
    :ivar terms_of_service: Terms of service for the API.
    :vartype terms_of_service: ~microsoft.apicenter.models.ApiTermsOfService
    :ivar license: The license information for the API.
    :vartype license: ~microsoft.apicenter.models.ApiLicenseModel
    :ivar external_documentation: External documentation.
    :vartype external_documentation: list[~microsoft.apicenter.models.ApiExternalDocumentation]
    :ivar contacts: Points of contact for the API.
    :vartype contacts: list[~microsoft.apicenter.models.ApiContact]
    :ivar custom_properties: The custom metadata defined for API entries.
    :vartype custom_properties: dict[str, str]
    :ivar last_updated: Last updated date and time. Required.
    :vartype last_updated: ~datetime.datetime
    """

    name: str = rest_field()
    """The resource name. Required."""
    title: str = rest_field()
    """The name of the API. Required."""
    summary: Optional[str] = rest_field()
    """Short descrption of the API."""
    description: Optional[str] = rest_field()
    """The description of the API."""
    kind: str = rest_field()
    """Kind of API. For example, REST or GraphQL. Required."""
    lifecycle_stage: Optional[Union[str, "_models.ApiLifecycleStage"]] = rest_field(name="lifecycleStage")
    """Current lifecycle stage of the API. Known values are: \"design\", \"development\", \"testing\",
     \"preview\", \"production\", \"deprecated\", and \"retired\"."""
    terms_of_service: Optional["_models.ApiTermsOfService"] = rest_field(name="termsOfService")
    """Terms of service for the API."""
    license: Optional["_models.ApiLicenseModel"] = rest_field()
    """The license information for the API."""
    external_documentation: Optional[List["_models.ApiExternalDocumentation"]] = rest_field(
        name="externalDocumentation"
    )
    """External documentation."""
    contacts: Optional[List["_models.ApiContact"]] = rest_field()
    """Points of contact for the API."""
    custom_properties: Optional[Dict[str, str]] = rest_field(name="customProperties")
    """The custom metadata defined for API entries."""
    last_updated: datetime.datetime = rest_field(name="lastUpdated", format="rfc3339")
    """Last updated date and time. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        kind: str,
        last_updated: datetime.datetime,
        summary: Optional[str] = None,
        description: Optional[str] = None,
        lifecycle_stage: Optional[Union[str, "_models.ApiLifecycleStage"]] = None,
        terms_of_service: Optional["_models.ApiTermsOfService"] = None,
        license: Optional["_models.ApiLicenseModel"] = None,
        external_documentation: Optional[List["_models.ApiExternalDocumentation"]] = None,
        contacts: Optional[List["_models.ApiContact"]] = None,
        custom_properties: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiContact(_model_base.Model):
    """API contact information.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the contact. Required.
    :vartype name: str
    :ivar url: URL for the contact. Required.
    :vartype url: str
    :ivar email: Email address for the contact. Required.
    :vartype email: str
    """

    name: str = rest_field()
    """Name of the contact. Required."""
    url: str = rest_field()
    """URL for the contact. Required."""
    email: str = rest_field()
    """Email address for the contact. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        url: str,
        email: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiDefinition(_model_base.Model):
    """API definition.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the API definition. Required.
    :vartype title: str
    :ivar description: The description of the API definition.
    :vartype description: str
    :ivar specification: The API specification details.
    :vartype specification: ~microsoft.apicenter.models.ApiSpecification
    """

    name: str = rest_field()
    """The resource name. Required."""
    title: str = rest_field()
    """The name of the API definition. Required."""
    description: Optional[str] = rest_field()
    """The description of the API definition."""
    specification: Optional["_models.ApiSpecification"] = rest_field()
    """The API specification details."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        description: Optional[str] = None,
        specification: Optional["_models.ApiSpecification"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiDefinitionResource(ApiDefinition):
    """API Definition resource model.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the API definition. Required.
    :vartype title: str
    :ivar description: The description of the API definition.
    :vartype description: str
    :ivar specification: The API specification details.
    :vartype specification: ~microsoft.apicenter.models.ApiSpecification
    :ivar api_definition_name: Definition identifier. Required.
    :vartype api_definition_name: str
    """

    api_definition_name: str = rest_field(name="apiDefinitionName", visibility=["query"])
    """Definition identifier. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        api_definition_name: str,
        description: Optional[str] = None,
        specification: Optional["_models.ApiSpecification"] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiDeployment(_model_base.Model):
    """API deployment.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the deployment. Required.
    :vartype title: str
    :ivar description: The description of the deployment.
    :vartype description: str
    :ivar environment: The name of the deployment environment. Required.
    :vartype environment: str
    :ivar server: The server information of the API deployment. Required.
    :vartype server: ~microsoft.apicenter.models.ApiDeploymentServer
    :ivar custom_properties: The custom metadata defined for Deployment entries..
    :vartype custom_properties: dict[str, str]
    :ivar recommended: Indicates if this is currently recommended deployment.
    :vartype recommended: bool
    """

    name: str = rest_field()
    """The resource name. Required."""
    title: str = rest_field()
    """The name of the deployment. Required."""
    description: Optional[str] = rest_field()
    """The description of the deployment."""
    environment: str = rest_field()
    """The name of the deployment environment. Required."""
    server: "_models.ApiDeploymentServer" = rest_field()
    """The server information of the API deployment. Required."""
    custom_properties: Optional[Dict[str, str]] = rest_field(name="customProperties")
    """The custom metadata defined for Deployment entries.."""
    recommended: Optional[bool] = rest_field()
    """Indicates if this is currently recommended deployment."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        environment: str,
        server: "_models.ApiDeploymentServer",
        description: Optional[str] = None,
        custom_properties: Optional[Dict[str, str]] = None,
        recommended: Optional[bool] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiDeploymentResource(ApiDeployment):
    """API Deployment resource model.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the deployment. Required.
    :vartype title: str
    :ivar description: The description of the deployment.
    :vartype description: str
    :ivar environment: The name of the deployment environment. Required.
    :vartype environment: str
    :ivar server: The server information of the API deployment. Required.
    :vartype server: ~microsoft.apicenter.models.ApiDeploymentServer
    :ivar custom_properties: The custom metadata defined for Deployment entries..
    :vartype custom_properties: dict[str, str]
    :ivar recommended: Indicates if this is currently recommended deployment.
    :vartype recommended: bool
    :ivar deployment_name: Deployment identifier. Required.
    :vartype deployment_name: str
    """

    deployment_name: str = rest_field(name="deploymentName", visibility=["query"])
    """Deployment identifier. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        environment: str,
        server: "_models.ApiDeploymentServer",
        deployment_name: str,
        description: Optional[str] = None,
        custom_properties: Optional[Dict[str, str]] = None,
        recommended: Optional[bool] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiDeploymentServer(_model_base.Model):
    """Api Deployment Server.

    All required parameters must be populated in order to send to server.

    :ivar runtime_uri: Base runtime URIs for this deployment. Required.
    :vartype runtime_uri: list[str]
    """

    runtime_uri: List[str] = rest_field(name="runtimeUri")
    """Base runtime URIs for this deployment. Required."""

    @overload
    def __init__(
        self,
        *,
        runtime_uri: List[str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiExternalDocumentation(_model_base.Model):
    """Api External Documentation Model.

    All required parameters must be populated in order to send to server.

    :ivar title: Title of the documentation. Required.
    :vartype title: str
    :ivar description: Description of the documentation. Required.
    :vartype description: str
    :ivar url: URL pointing to the documentation. Required.
    :vartype url: str
    """

    title: str = rest_field()
    """Title of the documentation. Required."""
    description: str = rest_field()
    """Description of the documentation. Required."""
    url: str = rest_field()
    """URL pointing to the documentation. Required."""

    @overload
    def __init__(
        self,
        *,
        title: str,
        description: str,
        url: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiLicenseModel(_model_base.Model):
    """API License Model.

    All required parameters must be populated in order to send to server.

    :ivar name: Name of the license. Required.
    :vartype name: str
    :ivar url: URL pointing to the license details. The URL field is mutually exclusive of the
     identifier field. Required.
    :vartype url: str
    :ivar identifier: SPDX license information for the API. The identifier field is mutually
     exclusive of the URL field. Required.
    :vartype identifier: str
    """

    name: str = rest_field()
    """Name of the license. Required."""
    url: str = rest_field()
    """URL pointing to the license details. The URL field is mutually exclusive of the identifier
     field. Required."""
    identifier: str = rest_field()
    """SPDX license information for the API. The identifier field is mutually exclusive of the URL
     field. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        url: str,
        identifier: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiResource(Api):  # pylint: disable=too-many-instance-attributes
    """API resource model.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the API. Required.
    :vartype title: str
    :ivar summary: Short descrption of the API.
    :vartype summary: str
    :ivar description: The description of the API.
    :vartype description: str
    :ivar kind: Kind of API. For example, REST or GraphQL. Required.
    :vartype kind: str
    :ivar lifecycle_stage: Current lifecycle stage of the API. Known values are: "design",
     "development", "testing", "preview", "production", "deprecated", and "retired".
    :vartype lifecycle_stage: str or ~microsoft.apicenter.models.ApiLifecycleStage
    :ivar terms_of_service: Terms of service for the API.
    :vartype terms_of_service: ~microsoft.apicenter.models.ApiTermsOfService
    :ivar license: The license information for the API.
    :vartype license: ~microsoft.apicenter.models.ApiLicenseModel
    :ivar external_documentation: External documentation.
    :vartype external_documentation: list[~microsoft.apicenter.models.ApiExternalDocumentation]
    :ivar contacts: Points of contact for the API.
    :vartype contacts: list[~microsoft.apicenter.models.ApiContact]
    :ivar custom_properties: The custom metadata defined for API entries.
    :vartype custom_properties: dict[str, str]
    :ivar last_updated: Last updated date and time. Required.
    :vartype last_updated: ~datetime.datetime
    :ivar api_name: API identifier. Required.
    :vartype api_name: str
    """

    api_name: str = rest_field(name="apiName", visibility=["query"])
    """API identifier. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        kind: str,
        last_updated: datetime.datetime,
        api_name: str,
        summary: Optional[str] = None,
        description: Optional[str] = None,
        lifecycle_stage: Optional[Union[str, "_models.ApiLifecycleStage"]] = None,
        terms_of_service: Optional["_models.ApiTermsOfService"] = None,
        license: Optional["_models.ApiLicenseModel"] = None,
        external_documentation: Optional[List["_models.ApiExternalDocumentation"]] = None,
        contacts: Optional[List["_models.ApiContact"]] = None,
        custom_properties: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiSpecification(_model_base.Model):
    """API specification.

    All required parameters must be populated in order to send to server.

    :ivar name: API specification name, e.g. 'swagger' or 'openapi'. Required.
    :vartype name: str
    :ivar version: API specification version, e.g. '3.0.1'. Required.
    :vartype version: str
    """

    name: str = rest_field()
    """API specification name, e.g. 'swagger' or 'openapi'. Required."""
    version: str = rest_field()
    """API specification version, e.g. '3.0.1'. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        version: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiTermsOfService(_model_base.Model):
    """API Terms of Service.

    All required parameters must be populated in order to send to server.

    :ivar url: URL pointing to the terms of service. Required.
    :vartype url: str
    """

    url: str = rest_field()
    """URL pointing to the terms of service. Required."""

    @overload
    def __init__(
        self,
        *,
        url: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiVersion(_model_base.Model):
    """API version.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: Version title. Required.
    :vartype title: str
    :ivar lifecycle_stage: Current lifecycle stage of the API version. Required. Known values are:
     "design", "development", "testing", "preview", "production", "deprecated", and "retired".
    :vartype lifecycle_stage: str or ~microsoft.apicenter.models.ApiLifecycleStage
    """

    name: str = rest_field()
    """The resource name. Required."""
    title: str = rest_field()
    """Version title. Required."""
    lifecycle_stage: Union[str, "_models.ApiLifecycleStage"] = rest_field(name="lifecycleStage")
    """Current lifecycle stage of the API version. Required. Known values are: \"design\",
     \"development\", \"testing\", \"preview\", \"production\", \"deprecated\", and \"retired\"."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        lifecycle_stage: Union[str, "_models.ApiLifecycleStage"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ApiVersionResource(ApiVersion):
    """API Version resource model.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: Version title. Required.
    :vartype title: str
    :ivar lifecycle_stage: Current lifecycle stage of the API version. Required. Known values are:
     "design", "development", "testing", "preview", "production", "deprecated", and "retired".
    :vartype lifecycle_stage: str or ~microsoft.apicenter.models.ApiLifecycleStage
    :ivar version_name: Version identifier. Required.
    :vartype version_name: str
    """

    version_name: str = rest_field(name="versionName", visibility=["query"])
    """Version identifier. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        lifecycle_stage: Union[str, "_models.ApiLifecycleStage"],
        version_name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class Environment(_model_base.Model):
    """Environment.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the environment. Required.
    :vartype title: str
    :ivar kind: Kind of deployment environment. Required.
    :vartype kind: str
    :ivar description: Description of the environment.
    :vartype description: str
    :ivar server: Server information of the environment.
    :vartype server: ~microsoft.apicenter.models.EnvironmentServer
    :ivar onboarding: Onboarding information for this environment.
    :vartype onboarding: ~microsoft.apicenter.models.EnvironmentOnboardingModel
    :ivar custom_properties: The custom metadata defined for Environment entries.
    :vartype custom_properties: dict[str, str]
    """

    name: str = rest_field()
    """The resource name. Required."""
    title: str = rest_field()
    """The name of the environment. Required."""
    kind: str = rest_field()
    """Kind of deployment environment. Required."""
    description: Optional[str] = rest_field()
    """Description of the environment."""
    server: Optional["_models.EnvironmentServer"] = rest_field()
    """Server information of the environment."""
    onboarding: Optional["_models.EnvironmentOnboardingModel"] = rest_field()
    """Onboarding information for this environment."""
    custom_properties: Optional[Dict[str, str]] = rest_field(name="customProperties")
    """The custom metadata defined for Environment entries."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        kind: str,
        description: Optional[str] = None,
        server: Optional["_models.EnvironmentServer"] = None,
        onboarding: Optional["_models.EnvironmentOnboardingModel"] = None,
        custom_properties: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class EnvironmentOnboardingModel(_model_base.Model):
    """Environment Onboarding Model.

    All required parameters must be populated in order to send to server.

    :ivar instructions: Instructions how to onboard to the environment. Required.
    :vartype instructions: str
    :ivar developer_portal_uri: Developer portal URIs of the environment. Required.
    :vartype developer_portal_uri: list[str]
    """

    instructions: str = rest_field()
    """Instructions how to onboard to the environment. Required."""
    developer_portal_uri: List[str] = rest_field(name="developerPortalUri")
    """Developer portal URIs of the environment. Required."""

    @overload
    def __init__(
        self,
        *,
        instructions: str,
        developer_portal_uri: List[str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class EnvironmentResource(Environment):
    """Environment resource model.

    All required parameters must be populated in order to send to server.

    :ivar name: The resource name. Required.
    :vartype name: str
    :ivar title: The name of the environment. Required.
    :vartype title: str
    :ivar kind: Kind of deployment environment. Required.
    :vartype kind: str
    :ivar description: Description of the environment.
    :vartype description: str
    :ivar server: Server information of the environment.
    :vartype server: ~microsoft.apicenter.models.EnvironmentServer
    :ivar onboarding: Onboarding information for this environment.
    :vartype onboarding: ~microsoft.apicenter.models.EnvironmentOnboardingModel
    :ivar custom_properties: The custom metadata defined for Environment entries.
    :vartype custom_properties: dict[str, str]
    :ivar environment_name: Environment identifier. Required.
    :vartype environment_name: str
    """

    environment_name: str = rest_field(name="environmentName", visibility=["query"])
    """Environment identifier. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        title: str,
        kind: str,
        environment_name: str,
        description: Optional[str] = None,
        server: Optional["_models.EnvironmentServer"] = None,
        onboarding: Optional["_models.EnvironmentOnboardingModel"] = None,
        custom_properties: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class EnvironmentServer(_model_base.Model):
    """Environment Server.

    All required parameters must be populated in order to send to server.

    :ivar type: Type of the server that represents the environment. Required.
    :vartype type: str
    :ivar management_portal_uri: URIs of the server's management portal. Required.
    :vartype management_portal_uri: list[str]
    """

    type: str = rest_field()
    """Type of the server that represents the environment. Required."""
    management_portal_uri: List[str] = rest_field(name="managementPortalUri")
    """URIs of the server's management portal. Required."""

    @overload
    def __init__(
        self,
        *,
        type: str,
        management_portal_uri: List[str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ExportSpecification(_model_base.Model):
    """Export specification.

    All required parameters must be populated in order to send to server.

    :ivar value: The result of the specification export. Required.
    :vartype value: str
    :ivar format: The result format of the specification export. Required.
    :vartype format: str
    """

    value: str = rest_field()
    """The result of the specification export. Required."""
    format: str = rest_field()
    """The result format of the specification export. Required."""

    @overload
    def __init__(
        self,
        *,
        value: str,
        format: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ExportSpecificationResource(ExportSpecification):
    """Export specification resource model.

    All required parameters must be populated in order to send to server.

    :ivar value: The result of the specification export. Required.
    :vartype value: str
    :ivar format: The result format of the specification export. Required.
    :vartype format: str
    :ivar api_definition_name: Definition identifier. Required.
    :vartype api_definition_name: str
    """

    api_definition_name: str = rest_field(name="apiDefinitionName", visibility=["query"])
    """Definition identifier. Required."""

    @overload
    def __init__(
        self,
        *,
        value: str,
        format: str,
        api_definition_name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
