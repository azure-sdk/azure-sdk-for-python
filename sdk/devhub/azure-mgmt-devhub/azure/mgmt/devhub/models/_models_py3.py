# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    from .. import models as _models


class ACR(_serialization.Model):
    """Information on the azure container registry.

    :ivar acr_subscription_id: ACR subscription id.
    :vartype acr_subscription_id: str
    :ivar acr_resource_group: ACR resource group.
    :vartype acr_resource_group: str
    :ivar acr_registry_name: ACR registry.
    :vartype acr_registry_name: str
    :ivar acr_repository_name: ACR repository.
    :vartype acr_repository_name: str
    """

    _attribute_map = {
        "acr_subscription_id": {"key": "acrSubscriptionId", "type": "str"},
        "acr_resource_group": {"key": "acrResourceGroup", "type": "str"},
        "acr_registry_name": {"key": "acrRegistryName", "type": "str"},
        "acr_repository_name": {"key": "acrRepositoryName", "type": "str"},
    }

    def __init__(
        self,
        *,
        acr_subscription_id: Optional[str] = None,
        acr_resource_group: Optional[str] = None,
        acr_registry_name: Optional[str] = None,
        acr_repository_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword acr_subscription_id: ACR subscription id.
        :paramtype acr_subscription_id: str
        :keyword acr_resource_group: ACR resource group.
        :paramtype acr_resource_group: str
        :keyword acr_registry_name: ACR registry.
        :paramtype acr_registry_name: str
        :keyword acr_repository_name: ACR repository.
        :paramtype acr_repository_name: str
        """
        super().__init__(**kwargs)
        self.acr_subscription_id = acr_subscription_id
        self.acr_resource_group = acr_resource_group
        self.acr_registry_name = acr_registry_name
        self.acr_repository_name = acr_repository_name


class ADOOAuth(_serialization.Model):
    """The properties of ADO OAuth.

    :ivar username: user making request.
    :vartype username: str
    """

    _attribute_map = {
        "username": {"key": "username", "type": "str"},
    }

    def __init__(self, *, username: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword username: user making request.
        :paramtype username: str
        """
        super().__init__(**kwargs)
        self.username = username


class ADOOAuthCallRequest(_serialization.Model):
    """ADOOAuth request object.

    :ivar redirect_url: The URL the client will redirect to on successful authentication. If empty,
     no redirect will occur.
    :vartype redirect_url: str
    """

    _attribute_map = {
        "redirect_url": {"key": "redirectUrl", "type": "str"},
    }

    def __init__(self, *, redirect_url: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword redirect_url: The URL the client will redirect to on successful authentication. If
         empty, no redirect will occur.
        :paramtype redirect_url: str
        """
        super().__init__(**kwargs)
        self.redirect_url = redirect_url


class ADOOAuthInfoResponse(_serialization.Model):
    """Response containing ADO OAuth information.

    :ivar auth_url: URL used to authorize ADO app using Entra ID.
    :vartype auth_url: str
    :ivar token: OAuth token used to make calls to ADO APIs.
    :vartype token: str
    """

    _attribute_map = {
        "auth_url": {"key": "authURL", "type": "str"},
        "token": {"key": "token", "type": "str"},
    }

    def __init__(self, *, auth_url: Optional[str] = None, token: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword auth_url: URL used to authorize ADO app using Entra ID.
        :paramtype auth_url: str
        :keyword token: OAuth token used to make calls to ADO APIs.
        :paramtype token: str
        """
        super().__init__(**kwargs)
        self.auth_url = auth_url
        self.token = token


class ADOOAuthListResponse(_serialization.Model):
    """The response from List ADOOAuth operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Singleton list response containing one ADOOAuthResponse.
    :vartype value: list[~azure.mgmt.devhub.models.ADOOAuthResponse]
    :ivar next_link: The URL to the next set of ADO OAuth results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ADOOAuthResponse]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.ADOOAuthResponse"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Singleton list response containing one ADOOAuthResponse.
        :paramtype value: list[~azure.mgmt.devhub.models.ADOOAuthResponse]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    """


class ADOOAuthResponse(ProxyResource):
    """Singleton response of ADO OAuth.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar properties: Details of ADO OAuth.
    :vartype properties: ~azure.mgmt.devhub.models.ADOOAuth
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ADOOAuth"},
    }

    def __init__(self, *, properties: Optional["_models.ADOOAuth"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Details of ADO OAuth.
        :paramtype properties: ~azure.mgmt.devhub.models.ADOOAuth
        """
        super().__init__(**kwargs)
        self.properties = properties


class ADOProviderProfile(_serialization.Model):
    """Details of the GitHub repository associated with the workflow.

    :ivar repository: Details of the ADO repository associated with the workflow.
    :vartype repository: ~azure.mgmt.devhub.models.ADORepository
    :ivar arm_service_connection: The name of the ARM Service Connection the pipeline is associated
     with.
    :vartype arm_service_connection: str
    """

    _attribute_map = {
        "repository": {"key": "repository", "type": "ADORepository"},
        "arm_service_connection": {"key": "armServiceConnection", "type": "str"},
    }

    def __init__(
        self,
        *,
        repository: Optional["_models.ADORepository"] = None,
        arm_service_connection: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository: Details of the ADO repository associated with the workflow.
        :paramtype repository: ~azure.mgmt.devhub.models.ADORepository
        :keyword arm_service_connection: The name of the ARM Service Connection the pipeline is
         associated with.
        :paramtype arm_service_connection: str
        """
        super().__init__(**kwargs)
        self.repository = repository
        self.arm_service_connection = arm_service_connection


class ADORepository(_serialization.Model):
    """Details of the ADO repository associated with the workflow.

    :ivar repository_owner: The owner of the repository the workflow is associated with.
    :vartype repository_owner: str
    :ivar repository_name: The name of the repository the workflow is associated with.
    :vartype repository_name: str
    :ivar branch_name: The name of the branch the workflow is associated with.
    :vartype branch_name: str
    :ivar ado_organization: The name of the Azure DevOps organization the pipeline is associated
     with.
    :vartype ado_organization: str
    :ivar project_name: The name of the project the pipeline is associated with.
    :vartype project_name: str
    """

    _attribute_map = {
        "repository_owner": {"key": "repositoryOwner", "type": "str"},
        "repository_name": {"key": "repositoryName", "type": "str"},
        "branch_name": {"key": "branchName", "type": "str"},
        "ado_organization": {"key": "adoOrganization", "type": "str"},
        "project_name": {"key": "projectName", "type": "str"},
    }

    def __init__(
        self,
        *,
        repository_owner: Optional[str] = None,
        repository_name: Optional[str] = None,
        branch_name: Optional[str] = None,
        ado_organization: Optional[str] = None,
        project_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository_owner: The owner of the repository the workflow is associated with.
        :paramtype repository_owner: str
        :keyword repository_name: The name of the repository the workflow is associated with.
        :paramtype repository_name: str
        :keyword branch_name: The name of the branch the workflow is associated with.
        :paramtype branch_name: str
        :keyword ado_organization: The name of the Azure DevOps organization the pipeline is associated
         with.
        :paramtype ado_organization: str
        :keyword project_name: The name of the project the pipeline is associated with.
        :paramtype project_name: str
        """
        super().__init__(**kwargs)
        self.repository_owner = repository_owner
        self.repository_name = repository_name
        self.branch_name = branch_name
        self.ado_organization = ado_organization
        self.project_name = project_name


class ArtifactGenerationProperties(_serialization.Model):
    """Properties used for generating artifacts such as Dockerfiles and manifests.

    :ivar generation_language: The programming language used. Known values are: "clojure",
     "csharp", "erlang", "go", "gomodule", "gradle", "java", "javascript", "php", "python", "ruby",
     "rust", and "swift".
    :vartype generation_language: str or ~azure.mgmt.devhub.models.GenerationLanguage
    :ivar language_version: The version of the language image used for execution in the generated
     dockerfile.
    :vartype language_version: str
    :ivar builder_version: The version of the language image used for building the code in the
     generated dockerfile.
    :vartype builder_version: str
    :ivar port: The port the application is exposed on.
    :vartype port: str
    :ivar app_name: The name of the app.
    :vartype app_name: str
    :ivar dockerfile_output_directory: The directory to output the generated Dockerfile to.
    :vartype dockerfile_output_directory: str
    :ivar manifest_output_directory: The directory to output the generated manifests to.
    :vartype manifest_output_directory: str
    :ivar dockerfile_generation_mode: The mode of generation to be used for generating Dockerfiles.
     Known values are: "enabled" and "disabled".
    :vartype dockerfile_generation_mode: str or ~azure.mgmt.devhub.models.DockerfileGenerationMode
    :ivar manifest_generation_mode: The mode of generation to be used for generating Manifest.
     Known values are: "enabled" and "disabled".
    :vartype manifest_generation_mode: str or ~azure.mgmt.devhub.models.ManifestGenerationMode
    :ivar manifest_type: Determines the type of manifests to be generated. Known values are: "helm"
     and "kube".
    :vartype manifest_type: str or ~azure.mgmt.devhub.models.GenerationManifestType
    :ivar image_name: The name of the image to be generated.
    :vartype image_name: str
    :ivar namespace: The namespace to deploy the application to.
    :vartype namespace: str
    :ivar image_tag: The tag to apply to the generated image.
    :vartype image_tag: str
    """

    _attribute_map = {
        "generation_language": {"key": "generationLanguage", "type": "str"},
        "language_version": {"key": "languageVersion", "type": "str"},
        "builder_version": {"key": "builderVersion", "type": "str"},
        "port": {"key": "port", "type": "str"},
        "app_name": {"key": "appName", "type": "str"},
        "dockerfile_output_directory": {"key": "dockerfileOutputDirectory", "type": "str"},
        "manifest_output_directory": {"key": "manifestOutputDirectory", "type": "str"},
        "dockerfile_generation_mode": {"key": "dockerfileGenerationMode", "type": "str"},
        "manifest_generation_mode": {"key": "manifestGenerationMode", "type": "str"},
        "manifest_type": {"key": "manifestType", "type": "str"},
        "image_name": {"key": "imageName", "type": "str"},
        "namespace": {"key": "namespace", "type": "str"},
        "image_tag": {"key": "imageTag", "type": "str"},
    }

    def __init__(
        self,
        *,
        generation_language: Optional[Union[str, "_models.GenerationLanguage"]] = None,
        language_version: Optional[str] = None,
        builder_version: Optional[str] = None,
        port: Optional[str] = None,
        app_name: Optional[str] = None,
        dockerfile_output_directory: Optional[str] = None,
        manifest_output_directory: Optional[str] = None,
        dockerfile_generation_mode: Optional[Union[str, "_models.DockerfileGenerationMode"]] = None,
        manifest_generation_mode: Optional[Union[str, "_models.ManifestGenerationMode"]] = None,
        manifest_type: Optional[Union[str, "_models.GenerationManifestType"]] = None,
        image_name: Optional[str] = None,
        namespace: Optional[str] = None,
        image_tag: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword generation_language: The programming language used. Known values are: "clojure",
         "csharp", "erlang", "go", "gomodule", "gradle", "java", "javascript", "php", "python", "ruby",
         "rust", and "swift".
        :paramtype generation_language: str or ~azure.mgmt.devhub.models.GenerationLanguage
        :keyword language_version: The version of the language image used for execution in the
         generated dockerfile.
        :paramtype language_version: str
        :keyword builder_version: The version of the language image used for building the code in the
         generated dockerfile.
        :paramtype builder_version: str
        :keyword port: The port the application is exposed on.
        :paramtype port: str
        :keyword app_name: The name of the app.
        :paramtype app_name: str
        :keyword dockerfile_output_directory: The directory to output the generated Dockerfile to.
        :paramtype dockerfile_output_directory: str
        :keyword manifest_output_directory: The directory to output the generated manifests to.
        :paramtype manifest_output_directory: str
        :keyword dockerfile_generation_mode: The mode of generation to be used for generating
         Dockerfiles. Known values are: "enabled" and "disabled".
        :paramtype dockerfile_generation_mode: str or
         ~azure.mgmt.devhub.models.DockerfileGenerationMode
        :keyword manifest_generation_mode: The mode of generation to be used for generating Manifest.
         Known values are: "enabled" and "disabled".
        :paramtype manifest_generation_mode: str or ~azure.mgmt.devhub.models.ManifestGenerationMode
        :keyword manifest_type: Determines the type of manifests to be generated. Known values are:
         "helm" and "kube".
        :paramtype manifest_type: str or ~azure.mgmt.devhub.models.GenerationManifestType
        :keyword image_name: The name of the image to be generated.
        :paramtype image_name: str
        :keyword namespace: The namespace to deploy the application to.
        :paramtype namespace: str
        :keyword image_tag: The tag to apply to the generated image.
        :paramtype image_tag: str
        """
        super().__init__(**kwargs)
        self.generation_language = generation_language
        self.language_version = language_version
        self.builder_version = builder_version
        self.port = port
        self.app_name = app_name
        self.dockerfile_output_directory = dockerfile_output_directory
        self.manifest_output_directory = manifest_output_directory
        self.dockerfile_generation_mode = dockerfile_generation_mode
        self.manifest_generation_mode = manifest_generation_mode
        self.manifest_type = manifest_type
        self.image_name = image_name
        self.namespace = namespace
        self.image_tag = image_tag


class AzurePipelineProfile(_serialization.Model):
    """Azure Pipeline Profile.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar repository: Details of the ADO repository associated with the workflow.
    :vartype repository: ~azure.mgmt.devhub.models.ADORepository
    :ivar arm_service_connection: The name of the ARM Service Connection the pipeline is associated
     with.
    :vartype arm_service_connection: str
    :ivar build: Build details of the repository associated with the workflow.
    :vartype build: ~azure.mgmt.devhub.models.Build
    :ivar deployment: Deployment details of the repository associated with the workflow.
    :vartype deployment: ~azure.mgmt.devhub.models.Deployment
    :ivar namespace: Kubernetes namespace the application is deployed to.
    :vartype namespace: str
    :ivar acr: Resource identifier for azure container registry repository associated with the
     workflow.
    :vartype acr: str
    :ivar cluster_id: The Azure Kubernetes Cluster Resource the application will be deployed to.
    :vartype cluster_id: str
    :ivar pull_request: Details of the pull request containing the workflow.
    :vartype pull_request: ~azure.mgmt.devhub.models.PullRequest
    :ivar last_workflow_run:
    :vartype last_workflow_run: ~azure.mgmt.devhub.models.WorkflowRun
    :ivar auth_status: Determines the authorization status of requests. Known values are:
     "Authorized", "NotFound", and "Error".
    :vartype auth_status: str or ~azure.mgmt.devhub.models.AuthorizationStatus
    """

    _validation = {
        "auth_status": {"readonly": True},
    }

    _attribute_map = {
        "repository": {"key": "repository", "type": "ADORepository"},
        "arm_service_connection": {"key": "armServiceConnection", "type": "str"},
        "build": {"key": "build", "type": "Build"},
        "deployment": {"key": "deployment", "type": "Deployment"},
        "namespace": {"key": "namespace", "type": "str"},
        "acr": {"key": "acr", "type": "str"},
        "cluster_id": {"key": "clusterId", "type": "str"},
        "pull_request": {"key": "pullRequest", "type": "PullRequest"},
        "last_workflow_run": {"key": "lastWorkflowRun", "type": "WorkflowRun"},
        "auth_status": {"key": "authStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        repository: Optional["_models.ADORepository"] = None,
        arm_service_connection: Optional[str] = None,
        build: Optional["_models.Build"] = None,
        deployment: Optional["_models.Deployment"] = None,
        namespace: Optional[str] = None,
        acr: Optional[str] = None,
        cluster_id: Optional[str] = None,
        pull_request: Optional["_models.PullRequest"] = None,
        last_workflow_run: Optional["_models.WorkflowRun"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository: Details of the ADO repository associated with the workflow.
        :paramtype repository: ~azure.mgmt.devhub.models.ADORepository
        :keyword arm_service_connection: The name of the ARM Service Connection the pipeline is
         associated with.
        :paramtype arm_service_connection: str
        :keyword build: Build details of the repository associated with the workflow.
        :paramtype build: ~azure.mgmt.devhub.models.Build
        :keyword deployment: Deployment details of the repository associated with the workflow.
        :paramtype deployment: ~azure.mgmt.devhub.models.Deployment
        :keyword namespace: Kubernetes namespace the application is deployed to.
        :paramtype namespace: str
        :keyword acr: Resource identifier for azure container registry repository associated with the
         workflow.
        :paramtype acr: str
        :keyword cluster_id: The Azure Kubernetes Cluster Resource the application will be deployed to.
        :paramtype cluster_id: str
        :keyword pull_request: Details of the pull request containing the workflow.
        :paramtype pull_request: ~azure.mgmt.devhub.models.PullRequest
        :keyword last_workflow_run:
        :paramtype last_workflow_run: ~azure.mgmt.devhub.models.WorkflowRun
        """
        super().__init__(**kwargs)
        self.repository = repository
        self.arm_service_connection = arm_service_connection
        self.build = build
        self.deployment = deployment
        self.namespace = namespace
        self.acr = acr
        self.cluster_id = cluster_id
        self.pull_request = pull_request
        self.last_workflow_run = last_workflow_run
        self.auth_status = None


class Build(_serialization.Model):
    """Build details of the repository associated with the workflow.

    :ivar dockerfile: Path to the Dockerfile within the repository.
    :vartype dockerfile: str
    :ivar docker_build_context: Path to Dockerfile Build Context within the repository.
    :vartype docker_build_context: str
    """

    _attribute_map = {
        "dockerfile": {"key": "dockerfile", "type": "str"},
        "docker_build_context": {"key": "dockerBuildContext", "type": "str"},
    }

    def __init__(
        self, *, dockerfile: Optional[str] = None, docker_build_context: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword dockerfile: Path to the Dockerfile within the repository.
        :paramtype dockerfile: str
        :keyword docker_build_context: Path to Dockerfile Build Context within the repository.
        :paramtype docker_build_context: str
        """
        super().__init__(**kwargs)
        self.dockerfile = dockerfile
        self.docker_build_context = docker_build_context


class DeleteWorkflowResponse(_serialization.Model):
    """delete response if content must be provided on delete operation.

    :ivar status: delete status message.
    :vartype status: str
    """

    _attribute_map = {
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, status: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword status: delete status message.
        :paramtype status: str
        """
        super().__init__(**kwargs)
        self.status = status


class Deployment(_serialization.Model):
    """Deployment details of the repository associated with the workflow.

    :ivar manifest_type: Determines the type of manifests within the repository. Known values are:
     "helm" and "kube".
    :vartype manifest_type: str or ~azure.mgmt.devhub.models.ManifestType
    :ivar kube_manifest_locations:
    :vartype kube_manifest_locations: list[str]
    :ivar helm_chart_path: Helm chart directory path in repository.
    :vartype helm_chart_path: str
    :ivar helm_values: Helm Values.yaml file location in repository.
    :vartype helm_values: str
    :ivar overrides: Manifest override values.
    :vartype overrides: dict[str, str]
    """

    _attribute_map = {
        "manifest_type": {"key": "manifestType", "type": "str"},
        "kube_manifest_locations": {"key": "kubeManifestLocations", "type": "[str]"},
        "helm_chart_path": {"key": "helmChartPath", "type": "str"},
        "helm_values": {"key": "helmValues", "type": "str"},
        "overrides": {"key": "overrides", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        manifest_type: Optional[Union[str, "_models.ManifestType"]] = None,
        kube_manifest_locations: Optional[List[str]] = None,
        helm_chart_path: Optional[str] = None,
        helm_values: Optional[str] = None,
        overrides: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword manifest_type: Determines the type of manifests within the repository. Known values
         are: "helm" and "kube".
        :paramtype manifest_type: str or ~azure.mgmt.devhub.models.ManifestType
        :keyword kube_manifest_locations:
        :paramtype kube_manifest_locations: list[str]
        :keyword helm_chart_path: Helm chart directory path in repository.
        :paramtype helm_chart_path: str
        :keyword helm_values: Helm Values.yaml file location in repository.
        :paramtype helm_values: str
        :keyword overrides: Manifest override values.
        :paramtype overrides: dict[str, str]
        """
        super().__init__(**kwargs)
        self.manifest_type = manifest_type
        self.kube_manifest_locations = kube_manifest_locations
        self.helm_chart_path = helm_chart_path
        self.helm_values = helm_values
        self.overrides = overrides


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.devhub.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.devhub.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.devhub.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.devhub.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class ExportTemplateRequest(_serialization.Model):
    """ExportTemplateRequest.

    :ivar template_name: Template Name.
    :vartype template_name: str
    :ivar resource_group_ids:
    :vartype resource_group_ids: list[str]
    :ivar site_id:
    :vartype site_id: str
    :ivar instance_name:
    :vartype instance_name: str
    :ivar instance_stage:
    :vartype instance_stage: str
    """

    _attribute_map = {
        "template_name": {"key": "templateName", "type": "str"},
        "resource_group_ids": {"key": "resourceGroupIds", "type": "[str]"},
        "site_id": {"key": "siteId", "type": "str"},
        "instance_name": {"key": "instanceName", "type": "str"},
        "instance_stage": {"key": "instanceStage", "type": "str"},
    }

    def __init__(
        self,
        *,
        template_name: Optional[str] = None,
        resource_group_ids: Optional[List[str]] = None,
        site_id: Optional[str] = None,
        instance_name: Optional[str] = None,
        instance_stage: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword template_name: Template Name.
        :paramtype template_name: str
        :keyword resource_group_ids:
        :paramtype resource_group_ids: list[str]
        :keyword site_id:
        :paramtype site_id: str
        :keyword instance_name:
        :paramtype instance_name: str
        :keyword instance_stage:
        :paramtype instance_stage: str
        """
        super().__init__(**kwargs)
        self.template_name = template_name
        self.resource_group_ids = resource_group_ids
        self.site_id = site_id
        self.instance_name = instance_name
        self.instance_stage = instance_stage


class GenerateVersionedTemplateResponse(_serialization.Model):
    """Generated template files returned as a map<path string,content string>.

    :ivar generated_files: files returned as a map<path string,content string>.
    :vartype generated_files: dict[str, str]
    """

    _attribute_map = {
        "generated_files": {"key": "generatedFiles", "type": "{str}"},
    }

    def __init__(self, *, generated_files: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword generated_files: files returned as a map<path string,content string>.
        :paramtype generated_files: dict[str, str]
        """
        super().__init__(**kwargs)
        self.generated_files = generated_files


class GitHubOAuthCallRequest(_serialization.Model):
    """GitHubOAuth request object.

    :ivar redirect_url: The URL the client will redirect to on successful authentication. If empty,
     no redirect will occur.
    :vartype redirect_url: str
    """

    _attribute_map = {
        "redirect_url": {"key": "redirectUrl", "type": "str"},
    }

    def __init__(self, *, redirect_url: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword redirect_url: The URL the client will redirect to on successful authentication. If
         empty, no redirect will occur.
        :paramtype redirect_url: str
        """
        super().__init__(**kwargs)
        self.redirect_url = redirect_url


class GitHubOAuthInfoResponse(_serialization.Model):
    """URL used to authorize the Developer Hub GitHub App.

    :ivar auth_url: URL for authorizing the Developer Hub GitHub App.
    :vartype auth_url: str
    :ivar token: OAuth token used to make calls to GitHub.
    :vartype token: str
    """

    _attribute_map = {
        "auth_url": {"key": "authURL", "type": "str"},
        "token": {"key": "token", "type": "str"},
    }

    def __init__(self, *, auth_url: Optional[str] = None, token: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword auth_url: URL for authorizing the Developer Hub GitHub App.
        :paramtype auth_url: str
        :keyword token: OAuth token used to make calls to GitHub.
        :paramtype token: str
        """
        super().__init__(**kwargs)
        self.auth_url = auth_url
        self.token = token


class GitHubOAuthListResponse(_serialization.Model):
    """The response from List GitHubOAuth operation.

    :ivar value: Singleton list response containing one GitHubOAuthResponse response.
    :vartype value: list[~azure.mgmt.devhub.models.GitHubOAuthResponse]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[GitHubOAuthResponse]"},
    }

    def __init__(self, *, value: Optional[List["_models.GitHubOAuthResponse"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: Singleton list response containing one GitHubOAuthResponse response.
        :paramtype value: list[~azure.mgmt.devhub.models.GitHubOAuthResponse]
        """
        super().__init__(**kwargs)
        self.value = value


class GitHubOAuthProperties(_serialization.Model):
    """The response from List GitHubOAuth operation.

    :ivar username: user making request.
    :vartype username: str
    """

    _attribute_map = {
        "username": {"key": "username", "type": "str"},
    }

    def __init__(self, *, username: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword username: user making request.
        :paramtype username: str
        """
        super().__init__(**kwargs)
        self.username = username


class GitHubOAuthResponse(ProxyResource):
    """Singleton response of GitHubOAuth containing.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar properties: Properties of a workflow.
    :vartype properties: ~azure.mgmt.devhub.models.GitHubOAuthProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "GitHubOAuthProperties"},
    }

    def __init__(self, *, properties: Optional["_models.GitHubOAuthProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Properties of a workflow.
        :paramtype properties: ~azure.mgmt.devhub.models.GitHubOAuthProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class GitHubProviderProfile(_serialization.Model):
    """Details of the GitHub repository and credentials associated with the workflow.

    :ivar repository: Details of the GitHub repository associated with the workflow.
    :vartype repository: ~azure.mgmt.devhub.models.GitHubRepository
    :ivar oidc_credentials: The fields needed for OIDC with GitHub.
    :vartype oidc_credentials: ~azure.mgmt.devhub.models.OidcCredentials
    """

    _attribute_map = {
        "repository": {"key": "repository", "type": "GitHubRepository"},
        "oidc_credentials": {"key": "oidcCredentials", "type": "OidcCredentials"},
    }

    def __init__(
        self,
        *,
        repository: Optional["_models.GitHubRepository"] = None,
        oidc_credentials: Optional["_models.OidcCredentials"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository: Details of the GitHub repository associated with the workflow.
        :paramtype repository: ~azure.mgmt.devhub.models.GitHubRepository
        :keyword oidc_credentials: The fields needed for OIDC with GitHub.
        :paramtype oidc_credentials: ~azure.mgmt.devhub.models.OidcCredentials
        """
        super().__init__(**kwargs)
        self.repository = repository
        self.oidc_credentials = oidc_credentials


class GitHubRepository(_serialization.Model):
    """Details of the GitHub repository associated with the workflow.

    :ivar repository_owner: The owner of the repository the workflow is associated with.
    :vartype repository_owner: str
    :ivar repository_name: The name of the repository the workflow is associated with.
    :vartype repository_name: str
    :ivar branch_name: The name of the branch the workflow is associated with.
    :vartype branch_name: str
    """

    _attribute_map = {
        "repository_owner": {"key": "repositoryOwner", "type": "str"},
        "repository_name": {"key": "repositoryName", "type": "str"},
        "branch_name": {"key": "branchName", "type": "str"},
    }

    def __init__(
        self,
        *,
        repository_owner: Optional[str] = None,
        repository_name: Optional[str] = None,
        branch_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository_owner: The owner of the repository the workflow is associated with.
        :paramtype repository_owner: str
        :keyword repository_name: The name of the repository the workflow is associated with.
        :paramtype repository_name: str
        :keyword branch_name: The name of the branch the workflow is associated with.
        :paramtype branch_name: str
        """
        super().__init__(**kwargs)
        self.repository_owner = repository_owner
        self.repository_name = repository_name
        self.branch_name = branch_name


class GitHubWorkflowProfile(_serialization.Model):
    """GitHub Workflow Profile.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar repository_owner: Repository Owner.
    :vartype repository_owner: str
    :ivar repository_name: Repository Name.
    :vartype repository_name: str
    :ivar branch_name: Repository Branch Name.
    :vartype branch_name: str
    :ivar dockerfile: Path to the Dockerfile within the repository.
    :vartype dockerfile: str
    :ivar docker_build_context: Path to Dockerfile Build Context within the repository.
    :vartype docker_build_context: str
    :ivar deployment_properties: Deployment details of the repository associated with the workflow.
    :vartype deployment_properties: ~azure.mgmt.devhub.models.Deployment
    :ivar namespace: Kubernetes namespace the application is deployed to.
    :vartype namespace: str
    :ivar acr: Information on the azure container registry.
    :vartype acr: ~azure.mgmt.devhub.models.ACR
    :ivar oidc_credentials: The fields needed for OIDC with GitHub.
    :vartype oidc_credentials: ~azure.mgmt.devhub.models.GitHubWorkflowProfileOidcCredentials
    :ivar aks_resource_id: The Azure Kubernetes Cluster Resource the application will be deployed
     to.
    :vartype aks_resource_id: str
    :ivar pr_url: The URL to the Pull Request submitted against the users repository.
    :vartype pr_url: str
    :ivar pull_number: The number associated with the submitted pull request.
    :vartype pull_number: int
    :ivar pr_status: The status of the Pull Request submitted against the users repository. Known
     values are: "unknown", "submitted", "merged", and "removed".
    :vartype pr_status: str or ~azure.mgmt.devhub.models.PullRequestStatus
    :ivar last_workflow_run:
    :vartype last_workflow_run: ~azure.mgmt.devhub.models.WorkflowRun
    :ivar auth_status: Determines the authorization status of requests. Known values are:
     "Authorized", "NotFound", and "Error".
    :vartype auth_status: str or ~azure.mgmt.devhub.models.AuthorizationStatus
    """

    _validation = {
        "pr_url": {"readonly": True},
        "pull_number": {"readonly": True},
        "pr_status": {"readonly": True},
        "auth_status": {"readonly": True},
    }

    _attribute_map = {
        "repository_owner": {"key": "repositoryOwner", "type": "str"},
        "repository_name": {"key": "repositoryName", "type": "str"},
        "branch_name": {"key": "branchName", "type": "str"},
        "dockerfile": {"key": "dockerfile", "type": "str"},
        "docker_build_context": {"key": "dockerBuildContext", "type": "str"},
        "deployment_properties": {"key": "deploymentProperties", "type": "Deployment"},
        "namespace": {"key": "namespace", "type": "str"},
        "acr": {"key": "acr", "type": "ACR"},
        "oidc_credentials": {"key": "oidcCredentials", "type": "GitHubWorkflowProfileOidcCredentials"},
        "aks_resource_id": {"key": "aksResourceId", "type": "str"},
        "pr_url": {"key": "prURL", "type": "str"},
        "pull_number": {"key": "pullNumber", "type": "int"},
        "pr_status": {"key": "prStatus", "type": "str"},
        "last_workflow_run": {"key": "lastWorkflowRun", "type": "WorkflowRun"},
        "auth_status": {"key": "authStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        repository_owner: Optional[str] = None,
        repository_name: Optional[str] = None,
        branch_name: Optional[str] = None,
        dockerfile: Optional[str] = None,
        docker_build_context: Optional[str] = None,
        deployment_properties: Optional["_models.Deployment"] = None,
        namespace: Optional[str] = None,
        acr: Optional["_models.ACR"] = None,
        oidc_credentials: Optional["_models.GitHubWorkflowProfileOidcCredentials"] = None,
        aks_resource_id: Optional[str] = None,
        last_workflow_run: Optional["_models.WorkflowRun"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository_owner: Repository Owner.
        :paramtype repository_owner: str
        :keyword repository_name: Repository Name.
        :paramtype repository_name: str
        :keyword branch_name: Repository Branch Name.
        :paramtype branch_name: str
        :keyword dockerfile: Path to the Dockerfile within the repository.
        :paramtype dockerfile: str
        :keyword docker_build_context: Path to Dockerfile Build Context within the repository.
        :paramtype docker_build_context: str
        :keyword deployment_properties: Deployment details of the repository associated with the
         workflow.
        :paramtype deployment_properties: ~azure.mgmt.devhub.models.Deployment
        :keyword namespace: Kubernetes namespace the application is deployed to.
        :paramtype namespace: str
        :keyword acr: Information on the azure container registry.
        :paramtype acr: ~azure.mgmt.devhub.models.ACR
        :keyword oidc_credentials: The fields needed for OIDC with GitHub.
        :paramtype oidc_credentials: ~azure.mgmt.devhub.models.GitHubWorkflowProfileOidcCredentials
        :keyword aks_resource_id: The Azure Kubernetes Cluster Resource the application will be
         deployed to.
        :paramtype aks_resource_id: str
        :keyword last_workflow_run:
        :paramtype last_workflow_run: ~azure.mgmt.devhub.models.WorkflowRun
        """
        super().__init__(**kwargs)
        self.repository_owner = repository_owner
        self.repository_name = repository_name
        self.branch_name = branch_name
        self.dockerfile = dockerfile
        self.docker_build_context = docker_build_context
        self.deployment_properties = deployment_properties
        self.namespace = namespace
        self.acr = acr
        self.oidc_credentials = oidc_credentials
        self.aks_resource_id = aks_resource_id
        self.pr_url = None
        self.pull_number = None
        self.pr_status = None
        self.last_workflow_run = last_workflow_run
        self.auth_status = None


class GitHubWorkflowProfileOidcCredentials(_serialization.Model):
    """The fields needed for OIDC with GitHub.

    :ivar azure_client_id: Azure Application Client ID.
    :vartype azure_client_id: str
    :ivar azure_tenant_id: Azure Directory (tenant) ID.
    :vartype azure_tenant_id: str
    """

    _attribute_map = {
        "azure_client_id": {"key": "azureClientId", "type": "str"},
        "azure_tenant_id": {"key": "azureTenantId", "type": "str"},
    }

    def __init__(
        self, *, azure_client_id: Optional[str] = None, azure_tenant_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword azure_client_id: Azure Application Client ID.
        :paramtype azure_client_id: str
        :keyword azure_tenant_id: Azure Directory (tenant) ID.
        :paramtype azure_tenant_id: str
        """
        super().__init__(**kwargs)
        self.azure_client_id = azure_client_id
        self.azure_tenant_id = azure_tenant_id


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class IacProfile(TrackedResource):
    """Resource representation of a IacProfile.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar etag: A unique read-only string that changes whenever the resource is updated.
    :vartype etag: str
    :ivar stages:
    :vartype stages: list[~azure.mgmt.devhub.models.StageProperties]
    :ivar templates:
    :vartype templates: list[~azure.mgmt.devhub.models.IacTemplateProperties]
    :ivar storage_account_subscription: Terraform Storage Account Subscription.
    :vartype storage_account_subscription: str
    :ivar storage_account_resource_group: Terraform Storage Account Resource Group.
    :vartype storage_account_resource_group: str
    :ivar storage_account_name: Terraform Storage Account Name.
    :vartype storage_account_name: str
    :ivar storage_container_name: Terraform Container Name.
    :vartype storage_container_name: str
    :ivar repository_name: Repository Name.
    :vartype repository_name: str
    :ivar repository_main_branch: Repository Main Branch.
    :vartype repository_main_branch: str
    :ivar repository_owner: Repository Owner.
    :vartype repository_owner: str
    :ivar auth_status: Determines the authorization status of requests. Known values are:
     "Authorized", "NotFound", and "Error".
    :vartype auth_status: str or ~azure.mgmt.devhub.models.AuthorizationStatus
    :ivar pull_number: The number associated with the submitted pull request.
    :vartype pull_number: int
    :ivar pr_status: The status of the Pull Request submitted against the users repository. Known
     values are: "unknown", "submitted", "merged", and "removed".
    :vartype pr_status: str or ~azure.mgmt.devhub.models.PullRequestStatus
    :ivar branch_name: Repository Branch Name.
    :vartype branch_name: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "etag": {"readonly": True},
        "auth_status": {"readonly": True},
        "pull_number": {"readonly": True},
        "pr_status": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "etag": {"key": "etag", "type": "str"},
        "stages": {"key": "properties.stages", "type": "[StageProperties]"},
        "templates": {"key": "properties.templates", "type": "[IacTemplateProperties]"},
        "storage_account_subscription": {
            "key": "properties.terraformProfile.storageAccountSubscription",
            "type": "str",
        },
        "storage_account_resource_group": {
            "key": "properties.terraformProfile.storageAccountResourceGroup",
            "type": "str",
        },
        "storage_account_name": {"key": "properties.terraformProfile.storageAccountName", "type": "str"},
        "storage_container_name": {"key": "properties.terraformProfile.storageContainerName", "type": "str"},
        "repository_name": {"key": "properties.githubProfile.repositoryName", "type": "str"},
        "repository_main_branch": {"key": "properties.githubProfile.repositoryMainBranch", "type": "str"},
        "repository_owner": {"key": "properties.githubProfile.repositoryOwner", "type": "str"},
        "auth_status": {"key": "properties.githubProfile.authStatus", "type": "str"},
        "pull_number": {"key": "properties.githubProfile.pullNumber", "type": "int"},
        "pr_status": {"key": "properties.githubProfile.prStatus", "type": "str"},
        "branch_name": {"key": "properties.githubProfile.branchName", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        stages: Optional[List["_models.StageProperties"]] = None,
        templates: Optional[List["_models.IacTemplateProperties"]] = None,
        storage_account_subscription: Optional[str] = None,
        storage_account_resource_group: Optional[str] = None,
        storage_account_name: Optional[str] = None,
        storage_container_name: Optional[str] = None,
        repository_name: Optional[str] = None,
        repository_main_branch: Optional[str] = None,
        repository_owner: Optional[str] = None,
        branch_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword stages:
        :paramtype stages: list[~azure.mgmt.devhub.models.StageProperties]
        :keyword templates:
        :paramtype templates: list[~azure.mgmt.devhub.models.IacTemplateProperties]
        :keyword storage_account_subscription: Terraform Storage Account Subscription.
        :paramtype storage_account_subscription: str
        :keyword storage_account_resource_group: Terraform Storage Account Resource Group.
        :paramtype storage_account_resource_group: str
        :keyword storage_account_name: Terraform Storage Account Name.
        :paramtype storage_account_name: str
        :keyword storage_container_name: Terraform Container Name.
        :paramtype storage_container_name: str
        :keyword repository_name: Repository Name.
        :paramtype repository_name: str
        :keyword repository_main_branch: Repository Main Branch.
        :paramtype repository_main_branch: str
        :keyword repository_owner: Repository Owner.
        :paramtype repository_owner: str
        :keyword branch_name: Repository Branch Name.
        :paramtype branch_name: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.etag = None
        self.stages = stages
        self.templates = templates
        self.storage_account_subscription = storage_account_subscription
        self.storage_account_resource_group = storage_account_resource_group
        self.storage_account_name = storage_account_name
        self.storage_container_name = storage_container_name
        self.repository_name = repository_name
        self.repository_main_branch = repository_main_branch
        self.repository_owner = repository_owner
        self.auth_status = None
        self.pull_number = None
        self.pr_status = None
        self.branch_name = branch_name


class IacProfileListResult(_serialization.Model):
    """IacProfileListResult.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of IacProfiles.
    :vartype value: list[~azure.mgmt.devhub.models.IacProfile]
    :ivar next_link: The URL to the next set of IacProfile results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[IacProfile]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.IacProfile"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: The list of IacProfiles.
        :paramtype value: list[~azure.mgmt.devhub.models.IacProfile]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class IacTemplateDetails(_serialization.Model):
    """IacTemplateDetails.

    :ivar product_name: The name of the products.
    :vartype product_name: str
    :ivar count: Count of the product.
    :vartype count: int
    :ivar naming_convention: Naming convention of this product.
    :vartype naming_convention: str
    """

    _attribute_map = {
        "product_name": {"key": "productName", "type": "str"},
        "count": {"key": "count", "type": "int"},
        "naming_convention": {"key": "namingConvention", "type": "str"},
    }

    def __init__(
        self,
        *,
        product_name: Optional[str] = None,
        count: Optional[int] = None,
        naming_convention: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword product_name: The name of the products.
        :paramtype product_name: str
        :keyword count: Count of the product.
        :paramtype count: int
        :keyword naming_convention: Naming convention of this product.
        :paramtype naming_convention: str
        """
        super().__init__(**kwargs)
        self.product_name = product_name
        self.count = count
        self.naming_convention = naming_convention


class IacTemplateProperties(_serialization.Model):
    """Properties of a IacTemplate.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar template_name: Template Name.
    :vartype template_name: str
    :ivar source_resource_id: the source store of the template.
    :vartype source_resource_id: str
    :ivar instance_stage: the source stage of the template.
    :vartype instance_stage: str
    :ivar instance_name: the sample instance name of the template.
    :vartype instance_name: str
    :ivar template_details:
    :vartype template_details: list[~azure.mgmt.devhub.models.IacTemplateDetails]
    :ivar quick_start_template_type: Determines the authorization status of requests. Known values
     are: "None", "HCI", "HCIAKS", and "HCIARCVM".
    :vartype quick_start_template_type: str or ~azure.mgmt.devhub.models.QuickStartTemplateType
    """

    _validation = {
        "quick_start_template_type": {"readonly": True},
    }

    _attribute_map = {
        "template_name": {"key": "templateName", "type": "str"},
        "source_resource_id": {"key": "sourceResourceId", "type": "str"},
        "instance_stage": {"key": "instanceStage", "type": "str"},
        "instance_name": {"key": "instanceName", "type": "str"},
        "template_details": {"key": "templateDetails", "type": "[IacTemplateDetails]"},
        "quick_start_template_type": {"key": "quickStartTemplateType", "type": "str"},
    }

    def __init__(
        self,
        *,
        template_name: Optional[str] = None,
        source_resource_id: Optional[str] = None,
        instance_stage: Optional[str] = None,
        instance_name: Optional[str] = None,
        template_details: Optional[List["_models.IacTemplateDetails"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword template_name: Template Name.
        :paramtype template_name: str
        :keyword source_resource_id: the source store of the template.
        :paramtype source_resource_id: str
        :keyword instance_stage: the source stage of the template.
        :paramtype instance_stage: str
        :keyword instance_name: the sample instance name of the template.
        :paramtype instance_name: str
        :keyword template_details:
        :paramtype template_details: list[~azure.mgmt.devhub.models.IacTemplateDetails]
        """
        super().__init__(**kwargs)
        self.template_name = template_name
        self.source_resource_id = source_resource_id
        self.instance_stage = instance_stage
        self.instance_name = instance_name
        self.template_details = template_details
        self.quick_start_template_type = None


class OidcCredentials(_serialization.Model):
    """The fields needed for OIDC with GitHub.

    :ivar azure_client_id: Azure Application Client ID.
    :vartype azure_client_id: str
    :ivar azure_tenant_id: Azure Directory (tenant) ID.
    :vartype azure_tenant_id: str
    """

    _attribute_map = {
        "azure_client_id": {"key": "azureClientId", "type": "str"},
        "azure_tenant_id": {"key": "azureTenantId", "type": "str"},
    }

    def __init__(
        self, *, azure_client_id: Optional[str] = None, azure_tenant_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword azure_client_id: Azure Application Client ID.
        :paramtype azure_client_id: str
        :keyword azure_tenant_id: Azure Directory (tenant) ID.
        :paramtype azure_tenant_id: str
        """
        super().__init__(**kwargs)
        self.azure_client_id = azure_client_id
        self.azure_tenant_id = azure_tenant_id


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.devhub.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.devhub.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.devhub.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.devhub.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.devhub.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Parameter(_serialization.Model):
    """Parameter for the template.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The paramater name.
    :vartype name: str
    :ivar description: Description of what the paramater is used for.
    :vartype description: str
    :ivar parameter_type: The type of the template parameter. Known values are: "string", "bool",
     "int", "float", "object", and "int".
    :vartype parameter_type: str or ~azure.mgmt.devhub.models.ParameterType
    :ivar parameter_kind: The type of the template parameter. Known values are:
     "azureContainerRegistry", "azureKeyvaultUri", "azureManagedCluster", "azureResourceGroup",
     "azureServiceConnection", "containerImageName", "containerImageVersion", "clusterResourceType",
     "dirPath", "dockerFileName", "envVarMap", "filePath", "flag", "helmChartOverrides",
     "imagePullPolicy", "ingressHostName", "kubernetesNamespace", "kubernetesProbeHttpPath",
     "kubernetesProbePeriod", "kubernetesProbeTimeout", "kubernetesProbeThreshold",
     "kubernetesProbeType", "kubernetesProbeDelay", "kubernetesResourceLimit",
     "kubernetesResourceName", "kubernetesResourceRequest", "label", "port", "repositoryBranch",
     "workflowName", "replicaCount", "scalingResourceType", "scalingResourceUtilization",
     "resourceLimit", and "workflowAuthType".
    :vartype parameter_kind: str or ~azure.mgmt.devhub.models.ParameterKind
    :ivar required: Whether the parameter is required.
    :vartype required: bool
    :ivar default: A reference to a default parameter value or a reference parameter to take the
     value from.
    :vartype default: ~azure.mgmt.devhub.models.ParameterDefault
    """

    _validation = {
        "parameter_type": {"readonly": True},
        "parameter_kind": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "parameter_type": {"key": "parameterType", "type": "str"},
        "parameter_kind": {"key": "parameterKind", "type": "str"},
        "required": {"key": "required", "type": "bool"},
        "default": {"key": "default", "type": "ParameterDefault"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        description: Optional[str] = None,
        required: Optional[bool] = None,
        default: Optional["_models.ParameterDefault"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The paramater name.
        :paramtype name: str
        :keyword description: Description of what the paramater is used for.
        :paramtype description: str
        :keyword required: Whether the parameter is required.
        :paramtype required: bool
        :keyword default: A reference to a default parameter value or a reference parameter to take the
         value from.
        :paramtype default: ~azure.mgmt.devhub.models.ParameterDefault
        """
        super().__init__(**kwargs)
        self.name = name
        self.description = description
        self.parameter_type = None
        self.parameter_kind = None
        self.required = required
        self.default = default


class ParameterDefault(_serialization.Model):
    """A reference to a default parameter value or a reference parameter to take the value from.

    :ivar value: The default value for this parameter.
    :vartype value: str
    :ivar reference_parameter: The Parameter to reference a value from.
    :vartype reference_parameter: str
    """

    _attribute_map = {
        "value": {"key": "value", "type": "str"},
        "reference_parameter": {"key": "referenceParameter", "type": "str"},
    }

    def __init__(
        self, *, value: Optional[str] = None, reference_parameter: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The default value for this parameter.
        :paramtype value: str
        :keyword reference_parameter: The Parameter to reference a value from.
        :paramtype reference_parameter: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.reference_parameter = reference_parameter


class PrLinkResponse(_serialization.Model):
    """PrLinkResponse.

    :ivar pr_link: The link of the pull request.
    :vartype pr_link: str
    """

    _attribute_map = {
        "pr_link": {"key": "prLink", "type": "str"},
    }

    def __init__(self, *, pr_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword pr_link: The link of the pull request.
        :paramtype pr_link: str
        """
        super().__init__(**kwargs)
        self.pr_link = pr_link


class PullRequest(_serialization.Model):
    """Details of the pull request containing the workflow.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar pr_url: The URL to the Pull Request submitted against the users repository.
    :vartype pr_url: str
    :ivar pull_number: The number associated with the submitted pull request.
    :vartype pull_number: int
    :ivar pr_status: The status of the Pull Request submitted against the users repository. Known
     values are: "unknown", "submitted", "merged", and "removed".
    :vartype pr_status: str or ~azure.mgmt.devhub.models.PullRequestStatus
    """

    _validation = {
        "pr_url": {"readonly": True},
        "pull_number": {"readonly": True},
        "pr_status": {"readonly": True},
    }

    _attribute_map = {
        "pr_url": {"key": "prURL", "type": "str"},
        "pull_number": {"key": "pullNumber", "type": "int"},
        "pr_status": {"key": "prStatus", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.pr_url = None
        self.pull_number = None
        self.pr_status = None


class ScaleProperty(_serialization.Model):
    """ScaleProperty.

    :ivar region: The region of the store.
    :vartype region: str
    :ivar stage: The stage of the store.
    :vartype stage: str
    :ivar number_of_store: Number of the store.
    :vartype number_of_store: int
    """

    _attribute_map = {
        "region": {"key": "region", "type": "str"},
        "stage": {"key": "stage", "type": "str"},
        "number_of_store": {"key": "numberOfStore", "type": "int"},
    }

    def __init__(
        self,
        *,
        region: Optional[str] = None,
        stage: Optional[str] = None,
        number_of_store: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword region: The region of the store.
        :paramtype region: str
        :keyword stage: The stage of the store.
        :paramtype stage: str
        :keyword number_of_store: Number of the store.
        :paramtype number_of_store: int
        """
        super().__init__(**kwargs)
        self.region = region
        self.stage = stage
        self.number_of_store = number_of_store


class ScaleTemplateRequest(_serialization.Model):
    """ScaleTemplateRequest.

    :ivar template_name: Template Name.
    :vartype template_name: str
    :ivar scale_requirement:
    :vartype scale_requirement: list[~azure.mgmt.devhub.models.ScaleProperty]
    """

    _attribute_map = {
        "template_name": {"key": "templateName", "type": "str"},
        "scale_requirement": {"key": "scaleRequirement", "type": "[ScaleProperty]"},
    }

    def __init__(
        self,
        *,
        template_name: Optional[str] = None,
        scale_requirement: Optional[List["_models.ScaleProperty"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword template_name: Template Name.
        :paramtype template_name: str
        :keyword scale_requirement:
        :paramtype scale_requirement: list[~azure.mgmt.devhub.models.ScaleProperty]
        """
        super().__init__(**kwargs)
        self.template_name = template_name
        self.scale_requirement = scale_requirement


class StageProperties(_serialization.Model):
    """Properties of a Stage.

    :ivar stage_name: Stage Name.
    :vartype stage_name: str
    :ivar dependencies:
    :vartype dependencies: list[str]
    :ivar git_environment:
    :vartype git_environment: str
    """

    _attribute_map = {
        "stage_name": {"key": "stageName", "type": "str"},
        "dependencies": {"key": "dependencies", "type": "[str]"},
        "git_environment": {"key": "gitEnvironment", "type": "str"},
    }

    def __init__(
        self,
        *,
        stage_name: Optional[str] = None,
        dependencies: Optional[List[str]] = None,
        git_environment: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword stage_name: Stage Name.
        :paramtype stage_name: str
        :keyword dependencies:
        :paramtype dependencies: list[str]
        :keyword git_environment:
        :paramtype git_environment: str
        """
        super().__init__(**kwargs)
        self.stage_name = stage_name
        self.dependencies = dependencies
        self.git_environment = git_environment


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.devhub.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.devhub.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.devhub.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.devhub.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TagsObject(_serialization.Model):
    """Resource tags.

    :ivar tags: Dictionary of :code:`<string>`.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Dictionary of :code:`<string>`.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class Template(ProxyResource):
    """Resource representation of a Template.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar properties: Properties of a Template.
    :vartype properties: ~azure.mgmt.devhub.models.TemplateProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "TemplateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.TemplateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Properties of a Template.
        :paramtype properties: ~azure.mgmt.devhub.models.TemplateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class TemplateListResult(_serialization.Model):
    """TemplateListResult.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of Template.
    :vartype value: list[~azure.mgmt.devhub.models.Template]
    :ivar next_link: The URL to the next set of Template results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Template]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Template"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: The list of Template.
        :paramtype value: list[~azure.mgmt.devhub.models.Template]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class TemplateProperties(_serialization.Model):
    """Template properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar template_name: The name of the template.
    :vartype template_name: str
    :ivar default_version: The default version of the template.
    :vartype default_version: str
    :ivar versions: The valid versions of the template.
    :vartype versions: list[str]
    :ivar description: Description of the template.
    :vartype description: str
    :ivar template_type: The type of the template. Known values are: "deployment", "manifest",
     "workflow", and "dockerfile".
    :vartype template_type: str or ~azure.mgmt.devhub.models.TemplateType
    """

    _validation = {
        "template_type": {"readonly": True},
    }

    _attribute_map = {
        "template_name": {"key": "templateName", "type": "str"},
        "default_version": {"key": "defaultVersion", "type": "str"},
        "versions": {"key": "versions", "type": "[str]"},
        "description": {"key": "description", "type": "str"},
        "template_type": {"key": "templateType", "type": "str"},
    }

    def __init__(
        self,
        *,
        template_name: Optional[str] = None,
        default_version: Optional[str] = None,
        versions: Optional[List[str]] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword template_name: The name of the template.
        :paramtype template_name: str
        :keyword default_version: The default version of the template.
        :paramtype default_version: str
        :keyword versions: The valid versions of the template.
        :paramtype versions: list[str]
        :keyword description: Description of the template.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.template_name = template_name
        self.default_version = default_version
        self.versions = versions
        self.description = description
        self.template_type = None


class TemplateReference(_serialization.Model):
    """The properties of ADO OAuth.

    :ivar template_id: The versioned template arm resource id.
    :vartype template_id: str
    :ivar destination: destination for template creation.
    :vartype destination: str
    :ivar parameters: parameters for template creation.
    :vartype parameters: dict[str, str]
    """

    _attribute_map = {
        "template_id": {"key": "templateId", "type": "str"},
        "destination": {"key": "destination", "type": "str"},
        "parameters": {"key": "parameters", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        template_id: Optional[str] = None,
        destination: Optional[str] = None,
        parameters: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword template_id: The versioned template arm resource id.
        :paramtype template_id: str
        :keyword destination: destination for template creation.
        :paramtype destination: str
        :keyword parameters: parameters for template creation.
        :paramtype parameters: dict[str, str]
        """
        super().__init__(**kwargs)
        self.template_id = template_id
        self.destination = destination
        self.parameters = parameters


class TemplateWorkflowProfile(_serialization.Model):
    """Template Workflow Profile.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar repository_provider: The status of the Pull Request submitted against the users
     repository. Known values are: "github" and "ado".
    :vartype repository_provider: str or ~azure.mgmt.devhub.models.RepositoryProviderType
    :ivar workflow_template: The properties of ADO OAuth.
    :vartype workflow_template: ~azure.mgmt.devhub.models.TemplateReference
    :ivar deployment_template: The properties of ADO OAuth.
    :vartype deployment_template: ~azure.mgmt.devhub.models.TemplateReference
    :ivar dockerfile_template: The properties of ADO OAuth.
    :vartype dockerfile_template: ~azure.mgmt.devhub.models.TemplateReference
    :ivar manifest_templates:
    :vartype manifest_templates: list[~azure.mgmt.devhub.models.TemplateReference]
    :ivar git_hub_provider_profile: Details of the GitHub repository and credentials associated
     with the workflow.
    :vartype git_hub_provider_profile: ~azure.mgmt.devhub.models.GitHubProviderProfile
    :ivar ado_provider_profile: Details of the GitHub repository associated with the workflow.
    :vartype ado_provider_profile: ~azure.mgmt.devhub.models.ADOProviderProfile
    :ivar pull_request: Details of the pull request containing the workflow.
    :vartype pull_request: ~azure.mgmt.devhub.models.PullRequest
    :ivar last_workflow_run:
    :vartype last_workflow_run: ~azure.mgmt.devhub.models.WorkflowRun
    :ivar auth_status: Determines the authorization status of requests. Known values are:
     "Authorized", "NotFound", and "Error".
    :vartype auth_status: str or ~azure.mgmt.devhub.models.AuthorizationStatus
    """

    _validation = {
        "auth_status": {"readonly": True},
    }

    _attribute_map = {
        "repository_provider": {"key": "repositoryProvider", "type": "str"},
        "workflow_template": {"key": "workflowTemplate", "type": "TemplateReference"},
        "deployment_template": {"key": "deploymentTemplate", "type": "TemplateReference"},
        "dockerfile_template": {"key": "dockerfileTemplate", "type": "TemplateReference"},
        "manifest_templates": {"key": "manifestTemplates", "type": "[TemplateReference]"},
        "git_hub_provider_profile": {"key": "gitHubProviderProfile", "type": "GitHubProviderProfile"},
        "ado_provider_profile": {"key": "adoProviderProfile", "type": "ADOProviderProfile"},
        "pull_request": {"key": "pullRequest", "type": "PullRequest"},
        "last_workflow_run": {"key": "lastWorkflowRun", "type": "WorkflowRun"},
        "auth_status": {"key": "authStatus", "type": "str"},
    }

    def __init__(
        self,
        *,
        repository_provider: Optional[Union[str, "_models.RepositoryProviderType"]] = None,
        workflow_template: Optional["_models.TemplateReference"] = None,
        deployment_template: Optional["_models.TemplateReference"] = None,
        dockerfile_template: Optional["_models.TemplateReference"] = None,
        manifest_templates: Optional[List["_models.TemplateReference"]] = None,
        git_hub_provider_profile: Optional["_models.GitHubProviderProfile"] = None,
        ado_provider_profile: Optional["_models.ADOProviderProfile"] = None,
        pull_request: Optional["_models.PullRequest"] = None,
        last_workflow_run: Optional["_models.WorkflowRun"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword repository_provider: The status of the Pull Request submitted against the users
         repository. Known values are: "github" and "ado".
        :paramtype repository_provider: str or ~azure.mgmt.devhub.models.RepositoryProviderType
        :keyword workflow_template: The properties of ADO OAuth.
        :paramtype workflow_template: ~azure.mgmt.devhub.models.TemplateReference
        :keyword deployment_template: The properties of ADO OAuth.
        :paramtype deployment_template: ~azure.mgmt.devhub.models.TemplateReference
        :keyword dockerfile_template: The properties of ADO OAuth.
        :paramtype dockerfile_template: ~azure.mgmt.devhub.models.TemplateReference
        :keyword manifest_templates:
        :paramtype manifest_templates: list[~azure.mgmt.devhub.models.TemplateReference]
        :keyword git_hub_provider_profile: Details of the GitHub repository and credentials associated
         with the workflow.
        :paramtype git_hub_provider_profile: ~azure.mgmt.devhub.models.GitHubProviderProfile
        :keyword ado_provider_profile: Details of the GitHub repository associated with the workflow.
        :paramtype ado_provider_profile: ~azure.mgmt.devhub.models.ADOProviderProfile
        :keyword pull_request: Details of the pull request containing the workflow.
        :paramtype pull_request: ~azure.mgmt.devhub.models.PullRequest
        :keyword last_workflow_run:
        :paramtype last_workflow_run: ~azure.mgmt.devhub.models.WorkflowRun
        """
        super().__init__(**kwargs)
        self.repository_provider = repository_provider
        self.workflow_template = workflow_template
        self.deployment_template = deployment_template
        self.dockerfile_template = dockerfile_template
        self.manifest_templates = manifest_templates
        self.git_hub_provider_profile = git_hub_provider_profile
        self.ado_provider_profile = ado_provider_profile
        self.pull_request = pull_request
        self.last_workflow_run = last_workflow_run
        self.auth_status = None


class VersionedTemplate(ProxyResource):
    """Resource representation of a VersionedTemplate.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar properties: Properties of a VersionedTemplate.
    :vartype properties: ~azure.mgmt.devhub.models.VersionedTemplateProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "VersionedTemplateProperties"},
    }

    def __init__(self, *, properties: Optional["_models.VersionedTemplateProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Properties of a VersionedTemplate.
        :paramtype properties: ~azure.mgmt.devhub.models.VersionedTemplateProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class VersionedTemplateListResult(_serialization.Model):
    """VersionedTemplateListResult.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of VersionedTemplates.
    :vartype value: list[~azure.mgmt.devhub.models.VersionedTemplate]
    :ivar next_link: The URL to the next set of VersionedTemplate results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VersionedTemplate]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.VersionedTemplate"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: The list of VersionedTemplates.
        :paramtype value: list[~azure.mgmt.devhub.models.VersionedTemplate]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class VersionedTemplateProperties(_serialization.Model):
    """VersionedTemplate properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar version: The version of the template.
    :vartype version: str
    :ivar template_type: The type of the template. Known values are: "deployment", "manifest",
     "workflow", and "dockerfile".
    :vartype template_type: str or ~azure.mgmt.devhub.models.TemplateType
    :ivar parameters: The template parameters.
    :vartype parameters: list[~azure.mgmt.devhub.models.Parameter]
    """

    _validation = {
        "template_type": {"readonly": True},
    }

    _attribute_map = {
        "version": {"key": "version", "type": "str"},
        "template_type": {"key": "templateType", "type": "str"},
        "parameters": {"key": "parameters", "type": "[Parameter]"},
    }

    def __init__(
        self, *, version: Optional[str] = None, parameters: Optional[List["_models.Parameter"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword version: The version of the template.
        :paramtype version: str
        :keyword parameters: The template parameters.
        :paramtype parameters: list[~azure.mgmt.devhub.models.Parameter]
        """
        super().__init__(**kwargs)
        self.version = version
        self.template_type = None
        self.parameters = parameters


class Workflow(TrackedResource):
    """Resource representation of a workflow.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.devhub.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: Properties of a workflow.
    :vartype properties: ~azure.mgmt.devhub.models.WorkflowProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "WorkflowProperties"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.WorkflowProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: Properties of a workflow.
        :paramtype properties: ~azure.mgmt.devhub.models.WorkflowProperties
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class WorkflowListResult(_serialization.Model):
    """The response from List Workflows operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of workflows.
    :vartype value: list[~azure.mgmt.devhub.models.Workflow]
    :ivar next_link: The URL to the next set of workflow results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Workflow]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Workflow"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: The list of workflows.
        :paramtype value: list[~azure.mgmt.devhub.models.Workflow]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class WorkflowProperties(_serialization.Model):
    """Workflow properties.

    :ivar github_workflow_profile: Profile of a github workflow.
    :vartype github_workflow_profile: ~azure.mgmt.devhub.models.GitHubWorkflowProfile
    :ivar artifact_generation_properties: Properties for generating artifacts like dockerfile and
     manifests.
    :vartype artifact_generation_properties: ~azure.mgmt.devhub.models.ArtifactGenerationProperties
    :ivar azure_pipeline_profile: Profile of an azure pipeline.
    :vartype azure_pipeline_profile: ~azure.mgmt.devhub.models.AzurePipelineProfile
    :ivar template_workflow_profile: Profile of an template workflow.
    :vartype template_workflow_profile: ~azure.mgmt.devhub.models.TemplateWorkflowProfile
    """

    _attribute_map = {
        "github_workflow_profile": {"key": "githubWorkflowProfile", "type": "GitHubWorkflowProfile"},
        "artifact_generation_properties": {
            "key": "artifactGenerationProperties",
            "type": "ArtifactGenerationProperties",
        },
        "azure_pipeline_profile": {"key": "azurePipelineProfile", "type": "AzurePipelineProfile"},
        "template_workflow_profile": {"key": "templateWorkflowProfile", "type": "TemplateWorkflowProfile"},
    }

    def __init__(
        self,
        *,
        github_workflow_profile: Optional["_models.GitHubWorkflowProfile"] = None,
        artifact_generation_properties: Optional["_models.ArtifactGenerationProperties"] = None,
        azure_pipeline_profile: Optional["_models.AzurePipelineProfile"] = None,
        template_workflow_profile: Optional["_models.TemplateWorkflowProfile"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword github_workflow_profile: Profile of a github workflow.
        :paramtype github_workflow_profile: ~azure.mgmt.devhub.models.GitHubWorkflowProfile
        :keyword artifact_generation_properties: Properties for generating artifacts like dockerfile
         and manifests.
        :paramtype artifact_generation_properties:
         ~azure.mgmt.devhub.models.ArtifactGenerationProperties
        :keyword azure_pipeline_profile: Profile of an azure pipeline.
        :paramtype azure_pipeline_profile: ~azure.mgmt.devhub.models.AzurePipelineProfile
        :keyword template_workflow_profile: Profile of an template workflow.
        :paramtype template_workflow_profile: ~azure.mgmt.devhub.models.TemplateWorkflowProfile
        """
        super().__init__(**kwargs)
        self.github_workflow_profile = github_workflow_profile
        self.artifact_generation_properties = artifact_generation_properties
        self.azure_pipeline_profile = azure_pipeline_profile
        self.template_workflow_profile = template_workflow_profile


class WorkflowRun(_serialization.Model):
    """WorkflowRun.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar succeeded: Describes if the workflow run succeeded.
    :vartype succeeded: bool
    :ivar workflow_run_url: URL to the run of the workflow.
    :vartype workflow_run_url: str
    :ivar last_run_at: The timestamp of the last workflow run.
    :vartype last_run_at: ~datetime.datetime
    :ivar workflow_run_status: Describes the status of the workflow run. Known values are:
     "queued", "inprogress", and "completed".
    :vartype workflow_run_status: str or ~azure.mgmt.devhub.models.WorkflowRunStatus
    """

    _validation = {
        "succeeded": {"readonly": True},
        "workflow_run_url": {"readonly": True},
        "last_run_at": {"readonly": True},
        "workflow_run_status": {"readonly": True},
    }

    _attribute_map = {
        "succeeded": {"key": "succeeded", "type": "bool"},
        "workflow_run_url": {"key": "workflowRunURL", "type": "str"},
        "last_run_at": {"key": "lastRunAt", "type": "iso-8601"},
        "workflow_run_status": {"key": "workflowRunStatus", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.succeeded = None
        self.workflow_run_url = None
        self.last_run_at = None
        self.workflow_run_status = None
