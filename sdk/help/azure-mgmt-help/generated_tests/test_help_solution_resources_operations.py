# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.help import HelpClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestHelpSolutionResourcesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(HelpClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_solution_resources_get(self, resource_group):
        response = self.client.solution_resources.get(
            scope="str",
            solution_resource_name="str",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_solution_resources_begin_create(self, resource_group):
        response = self.client.solution_resources.begin_create(
            scope="str",
            solution_resource_name="str",
            solution_request_body={
                "id": "str",
                "name": "str",
                "properties": {
                    "content": "str",
                    "parameters": {"str": "str"},
                    "provisioningState": "str",
                    "replacementMaps": {
                        "diagnostics": [
                            {
                                "estimatedCompletionTime": "str",
                                "insights": [{"id": "str", "importanceLevel": "str", "results": "str", "title": "str"}],
                                "replacementKey": "str",
                                "requiredParameters": ["str"],
                                "solutionId": "str",
                                "status": "str",
                                "statusDetails": "str",
                            }
                        ],
                        "metricsBasedCharts": [
                            {
                                "aggregationType": "str",
                                "filterGroup": {"filter": [{"name": "str", "operator": "str", "values": "str"}]},
                                "name": "str",
                                "replacementKey": "str",
                                "timeSpanDuration": "str",
                                "title": "str",
                            }
                        ],
                        "troubleshooters": [{"solutionId": "str", "summary": "str", "title": "str"}],
                        "videoGroups": [{"replacementKey": "str", "videos": [{"src": "str", "title": "str"}]}],
                        "videos": [{"replacementKey": "str", "src": "str", "title": "str"}],
                        "webResults": [
                            {
                                "replacementKey": "str",
                                "searchResults": [
                                    {
                                        "confidence": "str",
                                        "content": "str",
                                        "link": "str",
                                        "rank": 0,
                                        "resultType": "str",
                                        "solutionId": "str",
                                        "source": "str",
                                        "title": "str",
                                    }
                                ],
                            }
                        ],
                    },
                    "sections": [
                        {
                            "content": "str",
                            "replacementMaps": {
                                "diagnostics": [
                                    {
                                        "estimatedCompletionTime": "str",
                                        "insights": [
                                            {"id": "str", "importanceLevel": "str", "results": "str", "title": "str"}
                                        ],
                                        "replacementKey": "str",
                                        "requiredParameters": ["str"],
                                        "solutionId": "str",
                                        "status": "str",
                                        "statusDetails": "str",
                                    }
                                ],
                                "metricsBasedCharts": [
                                    {
                                        "aggregationType": "str",
                                        "filterGroup": {
                                            "filter": [{"name": "str", "operator": "str", "values": "str"}]
                                        },
                                        "name": "str",
                                        "replacementKey": "str",
                                        "timeSpanDuration": "str",
                                        "title": "str",
                                    }
                                ],
                                "troubleshooters": [{"solutionId": "str", "summary": "str", "title": "str"}],
                                "videoGroups": [{"replacementKey": "str", "videos": [{"src": "str", "title": "str"}]}],
                                "videos": [{"replacementKey": "str", "src": "str", "title": "str"}],
                                "webResults": [
                                    {
                                        "replacementKey": "str",
                                        "searchResults": [
                                            {
                                                "confidence": "str",
                                                "content": "str",
                                                "link": "str",
                                                "rank": 0,
                                                "resultType": "str",
                                                "solutionId": "str",
                                                "source": "str",
                                                "title": "str",
                                            }
                                        ],
                                    }
                                ],
                            },
                            "title": "str",
                        }
                    ],
                    "solutionId": "str",
                    "title": "str",
                    "triggerCriteria": [{"name": "str", "value": "str"}],
                },
                "systemData": {
                    "createdAt": "2020-02-20 00:00:00",
                    "createdBy": "str",
                    "createdByType": "str",
                    "lastModifiedAt": "2020-02-20 00:00:00",
                    "lastModifiedBy": "str",
                    "lastModifiedByType": "str",
                },
                "type": "str",
            },
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_solution_resources_begin_update(self, resource_group):
        response = self.client.solution_resources.begin_update(
            scope="str",
            solution_resource_name="str",
            solution_patch_request_body={
                "properties": {
                    "content": "str",
                    "parameters": {"str": "str"},
                    "provisioningState": "str",
                    "replacementMaps": {
                        "diagnostics": [
                            {
                                "estimatedCompletionTime": "str",
                                "insights": [{"id": "str", "importanceLevel": "str", "results": "str", "title": "str"}],
                                "replacementKey": "str",
                                "requiredParameters": ["str"],
                                "solutionId": "str",
                                "status": "str",
                                "statusDetails": "str",
                            }
                        ],
                        "metricsBasedCharts": [
                            {
                                "aggregationType": "str",
                                "filterGroup": {"filter": [{"name": "str", "operator": "str", "values": "str"}]},
                                "name": "str",
                                "replacementKey": "str",
                                "timeSpanDuration": "str",
                                "title": "str",
                            }
                        ],
                        "troubleshooters": [{"solutionId": "str", "summary": "str", "title": "str"}],
                        "videoGroups": [{"replacementKey": "str", "videos": [{"src": "str", "title": "str"}]}],
                        "videos": [{"replacementKey": "str", "src": "str", "title": "str"}],
                        "webResults": [
                            {
                                "replacementKey": "str",
                                "searchResults": [
                                    {
                                        "confidence": "str",
                                        "content": "str",
                                        "link": "str",
                                        "rank": 0,
                                        "resultType": "str",
                                        "solutionId": "str",
                                        "source": "str",
                                        "title": "str",
                                    }
                                ],
                            }
                        ],
                    },
                    "sections": [
                        {
                            "content": "str",
                            "replacementMaps": {
                                "diagnostics": [
                                    {
                                        "estimatedCompletionTime": "str",
                                        "insights": [
                                            {"id": "str", "importanceLevel": "str", "results": "str", "title": "str"}
                                        ],
                                        "replacementKey": "str",
                                        "requiredParameters": ["str"],
                                        "solutionId": "str",
                                        "status": "str",
                                        "statusDetails": "str",
                                    }
                                ],
                                "metricsBasedCharts": [
                                    {
                                        "aggregationType": "str",
                                        "filterGroup": {
                                            "filter": [{"name": "str", "operator": "str", "values": "str"}]
                                        },
                                        "name": "str",
                                        "replacementKey": "str",
                                        "timeSpanDuration": "str",
                                        "title": "str",
                                    }
                                ],
                                "troubleshooters": [{"solutionId": "str", "summary": "str", "title": "str"}],
                                "videoGroups": [{"replacementKey": "str", "videos": [{"src": "str", "title": "str"}]}],
                                "videos": [{"replacementKey": "str", "src": "str", "title": "str"}],
                                "webResults": [
                                    {
                                        "replacementKey": "str",
                                        "searchResults": [
                                            {
                                                "confidence": "str",
                                                "content": "str",
                                                "link": "str",
                                                "rank": 0,
                                                "resultType": "str",
                                                "solutionId": "str",
                                                "source": "str",
                                                "title": "str",
                                            }
                                        ],
                                    }
                                ],
                            },
                            "title": "str",
                        }
                    ],
                    "solutionId": "str",
                    "title": "str",
                    "triggerCriteria": [{"name": "str", "value": "str"}],
                }
            },
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_solution_resources_warm_up(self, resource_group):
        response = self.client.solution_resources.warm_up(
            scope="str",
            solution_resource_name="str",
        )

        # please add some check logic here by yourself
        # ...
